### 路由组

```go
func init(){
    ns := beego.NewNamespace("/user/v1",
                             beego.NSNamespace("app",
                                               beego.NISinclude(
                                                   &v1.AppController{},
                                               ),    
                                              ),
}
```

+ NewNamespace get new Namespace
+ NSNamespace add sub Namespace
+ NSInclude Namespace include ControllerInterface

### Namespace结构体







### 可用的 HTTP Method：

- *: 包含以下所有的函数
- get: GET 请求
- post: POST 请求
- put: PUT 请求
- delete: DELETE 请求
- patch: PATCH 请求
- options: OPTIONS 请求
- head: HEAD 请求

如果同时存在 * 和对应的 HTTP Method，那么优先执行 HTTP Method 的方法，例如同时注册了如下所示的路由：

```
beego.Router("/simple",&SimpleController{},"*:AllFunc;post:PostFunc")
```

那么执行 `POST` 请求的时候，执行 `PostFunc` 而不执行 `AllFunc`。

##### route自定义视图函数

```go
beego.Route("/login",&controllers.MainController{},"get:ShowLogin;post:HandleLogin")
```

当写了具体方法后,视图函数中的原get和post方法失效,找对应的视图函数

# 注释路由

beego注解路由的注释，我们可以把我们的注释分为以下类别：

- @Title

  接口的标题，用来标示唯一性，唯一，可选

  格式：之后跟一个描述字符串

- @Description

  接口的作用，用来描述接口的用途，唯一，可选

  格式：之后跟一个描述字符串

- [@Param](https://link.juejin.im/?target=http%3A%2F%2Fmy.oschina.net%2Fparam)

  请求的参数，用来描述接受的参数，多个，可选

  格式：变量名 传输类型 类型 是否必须 描述

  传输类型：paht or body

  类型：

  变量名和描述是一个字符串

  是否必须：true 或者false

- - string
  - int
  - int64
  - 对象，这个地方大家写的时候需要注意，需要是相对于当前项目的路径.对象，例如`models.Object`表示`models`目录下的Object对象，这样bee在生成文档的时候会去扫描改对象并显示给用户改对象。
  - query 表示带在url串里面?aa=bb&cc=dd
  - form 表示使用表单递交数据
  - path 表示URL串中得字符，例如/user/{uid} 那么uid就是一个path类型的参数
  - body 表示使用raw body进行数据的传输
  - header 表示通过header进行数据的传输

- [@Success](https://link.juejin.im/?target=http%3A%2F%2Fmy.oschina.net%2Fu%2F660711)

  成功返回的code和对象或者信息

  格式：code 对象类型 信息或者对象路径

  code：表示HTTP的标准status code，200 201等

  对象类型：{object}表示对象，其他默认都认为是字符类型，会显示第三个参数给用户，如果是{object}类型，那么就会去扫描改对象，并显示给用户

  对象路径和上面Param中的对象类型一样，使用路径.对象的方式来描述

- [@Failure](https://link.juejin.im/?target=http%3A%2F%2Fmy.oschina.net%2FFailure)

  错误返回的信息，

  格式： code 信息

  code:同上Success

  错误信息：字符串描述信息

- [@router](https://link.juejin.im/?target=http%3A%2F%2Fmy.oschina.net%2FRouter)

  上面已经描述过支持两个参数，第一个是路由，第二个表示支持的HTTP方法

- 举个栗子

```go
// @Title /bills
// @Description 返回全量费用数据
// @Param      beginTime    query   string     false  "beginTime"
// @Param      endTime      query   string    false   "endTime"
// @Param       limit        query  int    false   "限制一次返回的数据条目"
// @Param       offset       query  int      false "偏移量"
// @Success 200 {object} models.AllBillInfo
// @Failure 404 wrong params
// @router / [get]
复制代码
```

