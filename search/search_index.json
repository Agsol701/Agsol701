{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"WHO'S YOUR DADDY BABY \u00b6 \u4f18\u79c0\u8f6f\u4ef6\u5206\u4eab \u00b6 \u590d\u5236\u7c98\u8d34\u795e\u5668:Ditto https://ditto-cp.sourceforge.io/ markdown\u7f16\u8f91\u5668: Typora https://www.typora.io/ \u53cb\u60c5\u94fe\u63a5 \u00b6 \u793e\u4f1a\u6211\u5fe0\u54e5 https://setcreed.github.io/django-dev/","title":"Home"},{"location":"#whos-your-daddy-baby","text":"","title":"WHO'S YOUR DADDY BABY"},{"location":"#_1","text":"\u590d\u5236\u7c98\u8d34\u795e\u5668:Ditto https://ditto-cp.sourceforge.io/ markdown\u7f16\u8f91\u5668: Typora https://www.typora.io/","title":"\u4f18\u79c0\u8f6f\u4ef6\u5206\u4eab"},{"location":"#_2","text":"\u793e\u4f1a\u6211\u5fe0\u54e5 https://setcreed.github.io/django-dev/","title":"\u53cb\u60c5\u94fe\u63a5"},{"location":"Django/MTV%E4%B8%8EMVC%E6%A8%A1%E5%9E%8B/","text":"MTV\u4e0eMVC\u6a21\u578b \u00b6 MVC\u7b80\u4ecb \u00b6 MVC\u7684\u5168\u62fc\u4e3aModel-View-Controller\uff0c\u6700\u65e9\u7531TrygveReenskaug\u57281978\u5e74\u63d0\u51fa\uff0c\u662f\u65bd\u4e50\u5e15\u7f57\u5965\u591a\u7814\u7a76\u4e2d\u5fc3(Xerox PARC)\u572820\u4e16\u7eaa80\u5e74\u4ee3\u4e3a\u7a0b\u5e8f\u8bed\u8a00Smalltalk\u53d1\u660e\u7684\u4e00\u79cd\u8f6f\u4ef6\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u662f\u4e3a\u4e86\u5c06\u4f20\u7edf\u7684\u8f93\u5165\uff08input\uff09\u3001\u5904\u7406\uff08processing\uff09\u3001\u8f93\u51fa\uff08output\uff09\u4efb\u52a1\u8fd0\u7528\u5230\u56fe\u5f62\u5316\u7528\u6237\u4ea4\u4e92\u6a21\u578b\u4e2d\u800c\u8bbe\u8ba1\u7684\u3002\u968f\u7740\u6807\u51c6\u8f93\u5165\u8f93\u51fa\u8bbe\u5907\u7684\u51fa\u73b0\uff0c\u5f00\u53d1\u4eba\u5458\u53ea\u9700\u8981\u5c06\u7cbe\u529b\u96c6\u4e2d\u5728\u4e1a\u52a1\u903b\u8f91\u7684\u5206\u6790\u4e0e\u5b9e\u73b0\u4e0a\u3002\u540e\u6765\u88ab\u63a8\u8350\u4e3aOracle\u65d7\u4e0bSun\u516c\u53f8Java EE\u5e73\u53f0\u7684\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u5e76\u4e14\u53d7\u5230\u8d8a\u6765\u8d8a\u591a\u7684\u4f7f\u7528ColdFusion\u548cPHP\u7684\u5f00\u53d1\u8005\u7684\u6b22\u8fce\u3002\u73b0\u5728\u867d\u7136\u4e0d\u518d\u4f7f\u7528\u539f\u6765\u7684\u5206\u5de5\u65b9\u5f0f\uff0c\u4f46\u662f\u8fd9\u79cd\u5206\u5de5\u7684\u601d\u60f3\u88ab\u6cbf\u7528\u4e0b\u6765\uff0c\u5e7f\u6cdb\u5e94\u7528\u4e8e\u8f6f\u4ef6\u5de5\u7a0b\u4e2d\uff0c\u662f\u4e00\u79cd\u5178\u578b\u5e76\u4e14\u5e94\u7528\u5e7f\u6cdb\u7684\u8f6f\u4ef6\u67b6\u6784\u6a21\u5f0f\u3002\u540e\u6765\uff0cMVC\u7684\u601d\u60f3\u88ab\u5e94\u7528\u5728\u4e86\uff37eb\u5f00\u53d1\u65b9\u9762\uff0c\u88ab\u79f0\u4e3a\uff37eb MVC\u6846\u67b6\u3002 MVC\u6846\u67b6\u7684\u6838\u5fc3\u601d\u60f3\u662f\uff1a\u89e3\u8026\uff0c\u8ba9\u4e0d\u540c\u7684\u4ee3\u7801\u5757\u4e4b\u95f4\u964d\u4f4e\u8026\u5408\uff0c\u589e\u5f3a\u4ee3\u7801\u7684\u53ef\u6269\u5c55\u6027\u548c\u53ef\u79fb\u690d\u6027\uff0c\u5b9e\u73b0\u5411\u540e\u517c\u5bb9\u3002 \u5f53\u524d\u4e3b\u6d41\u7684\u5f00\u53d1\u8bed\u8a00\u5982Java\u3001PHP\u3001Python\u4e2d\u90fd\u6709MVC\u6846\u67b6\u3002 \uff37eb MVC\u5404\u90e8\u5206\u7684\u529f\u80fd\uff1a \u00b6 M\u5168\u62fc\u4e3aModel\uff0c\u4e3b\u8981\u5c01\u88c5\u5bf9\u6570\u636e\u5e93\u5c42\u7684\u8bbf\u95ee\uff0c\u5bf9\u6570\u636e\u5e93\u4e2d\u7684\u6570\u636e\u8fdb\u884c\u589e\u3001\u5220\u3001\u6539\u3001\u67e5\u64cd\u4f5c\u3002 V\u5168\u62fc\u4e3aView\uff0c\u7528\u4e8e\u5c01\u88c5\u7ed3\u679c\uff0c\u751f\u6210\u9875\u9762\u5c55\u793a\u7684html\u5185\u5bb9\u3002 C\u5168\u62fc\u4e3aController\uff0c\u7528\u4e8e\u63a5\u6536\u8bf7\u6c42\uff0c\u5904\u7406\u4e1a\u52a1\u903b\u8f91\uff0c\u4e0eModel\u548cView\u4ea4\u4e92\uff0c\u8fd4\u56de\u7ed3\u679c\u3002 MTV\u6a21\u578b \u00b6 Django\uff0c\u53d1\u97f3\u4e3a[`d\u0292\u00e6\u014b\u0261\u0259\u028a]\uff0c\u662f\u7528python\u8bed\u8a00\u5199\u7684\u5f00\u6e90web\u5f00\u53d1\u6846\u67b6\uff0c\u5e76\u9075\u5faaMVC\u8bbe\u8ba1\u3002\u52b3\u4f26\u65af\u51fa\u7248\u96c6\u56e2\u4e3a\u4e86\u5f00\u53d1\u4ee5\u65b0\u95fb\u5185\u5bb9\u4e3a\u4e3b\u7684\u7f51\u7ad9\uff0c\u800c\u5f00\u53d1\u51fa\u6765\u4e86\u8fd9\u4e2a\u6846\u67b6\uff0c\u4e8e2005\u5e747\u6708\u5728BSD\u8bb8\u53ef\u8bc1\u4e0b\u53d1\u5e03\u3002\u8fd9\u4e2a\u540d\u79f0\u6765\u6e90\u4e8e\u6bd4\u5229\u65f6\u7684\u7235\u58eb\u97f3\u4e50\u5bb6DjangoReinhardt\uff0c\u4ed6\u662f\u4e00\u4e2a\u5409\u666e\u8d5b\u4eba\uff0c\u4e3b\u8981\u4ee5\u6f14\u594f\u5409\u5b83\u4e3a\u4e3b\uff0c\u8fd8\u6f14\u594f\u8fc7\u5c0f\u63d0\u7434\u7b49\u3002\u7531\u4e8eDjango\u5728\u8fd1\u5e74\u6765\u7684\u8fc5\u901f\u53d1\u5c55\uff0c\u5e94\u7528\u8d8a\u6765\u8d8a\u5e7f\u6cdb\uff0c\u88ab\u8457\u540dIT\u5f00\u53d1\u6742\u5fd7SDTimes\u8bc4\u9009\u4e3a2013SDTimes100\uff0c\u4f4d\u5217\"API\u3001\u5e93\u548c\u6846\u67b6\"\u5206\u7c7b\u7b2c6\u4f4d\uff0c\u88ab\u8ba4\u4e3a\u662f\u8be5\u9886\u57df\u7684\u4f7c\u4f7c\u8005\u3002Django\u7684\u4e3b\u8981\u76ee\u7684\u662f\u7b80\u4fbf\u3001\u5feb\u901f\u7684\u5f00\u53d1\u6570\u636e\u5e93\u9a71\u52a8\u7684\u7f51\u7ad9\u3002\u5b83\u5f3a\u8c03\u4ee3\u7801\u590d\u7528\uff0c\u591a\u4e2a\u7ec4\u4ef6\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u4ee5\"\u63d2\u4ef6\"\u5f62\u5f0f\u670d\u52a1\u4e8e\u6574\u4e2a\u6846\u67b6\uff0cDjango\u6709\u8bb8\u591a\u529f\u80fd\u5f3a\u5927\u7684\u7b2c\u4e09\u65b9\u63d2\u4ef6\uff0c\u4f60\u751a\u81f3\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u5f00\u53d1\u51fa\u81ea\u5df1\u7684\u5de5\u5177\u5305\u3002\u8fd9\u4f7f\u5f97Django\u5177\u6709\u5f88\u5f3a\u7684\u53ef\u6269\u5c55\u6027\u3002\u5b83\u8fd8\u5f3a\u8c03\u5feb\u901f\u5f00\u53d1\u548cDRY(DoNotRepeatYourself)\u539f\u5219\u3002 Django\u6846\u67b6\u9075\u5faaMVC\u8bbe\u8ba1\uff0c\u5e76\u4e14\u6709\u4e00\u4e2a\u4e13\u6709\u540d\u8bcd\uff1aMVT MVT\u5404\u90e8\u5206\u7684\u529f\u80fd \u00b6 M\u5168\u62fc\u4e3aModel\uff0c\u4e0eMVC\u4e2d\u7684M\u529f\u80fd\u76f8\u540c\uff0c\u8d1f\u8d23\u548c\u6570\u636e\u5e93\u4ea4\u4e92\uff0c\u8fdb\u884c\u6570\u636e\u5904\u7406\u3002 V\u5168\u62fc\u4e3aView\uff0c\u4e0eMVC\u4e2d\u7684C\u529f\u80fd\u76f8\u540c\uff0c\u63a5\u6536\u8bf7\u6c42\uff0c\u8fdb\u884c\u4e1a\u52a1\u5904\u7406\uff0c\u8fd4\u56de\u5e94\u7b54\u3002 T\u5168\u62fc\u4e3aTemplate\uff0c\u4e0eMVC\u4e2d\u7684V\u529f\u80fd\u76f8\u540c\uff0c\u8d1f\u8d23\u5c01\u88c5\u6784\u9020\u8981\u8fd4\u56de\u7684html\u3002 \u5dee\u5f02\u5c31\u5728\u4e8e\u9ed1\u7ebf\u9ed1\u7bad\u5934\u6807\u8bc6\u51fa\u6765\u7684\u90e8\u5206","title":"MTV\u4e0eMVC\u6a21\u578b"},{"location":"Django/MTV%E4%B8%8EMVC%E6%A8%A1%E5%9E%8B/#mtvmvc","text":"","title":"MTV\u4e0eMVC\u6a21\u578b"},{"location":"Django/MTV%E4%B8%8EMVC%E6%A8%A1%E5%9E%8B/#mvc","text":"MVC\u7684\u5168\u62fc\u4e3aModel-View-Controller\uff0c\u6700\u65e9\u7531TrygveReenskaug\u57281978\u5e74\u63d0\u51fa\uff0c\u662f\u65bd\u4e50\u5e15\u7f57\u5965\u591a\u7814\u7a76\u4e2d\u5fc3(Xerox PARC)\u572820\u4e16\u7eaa80\u5e74\u4ee3\u4e3a\u7a0b\u5e8f\u8bed\u8a00Smalltalk\u53d1\u660e\u7684\u4e00\u79cd\u8f6f\u4ef6\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u662f\u4e3a\u4e86\u5c06\u4f20\u7edf\u7684\u8f93\u5165\uff08input\uff09\u3001\u5904\u7406\uff08processing\uff09\u3001\u8f93\u51fa\uff08output\uff09\u4efb\u52a1\u8fd0\u7528\u5230\u56fe\u5f62\u5316\u7528\u6237\u4ea4\u4e92\u6a21\u578b\u4e2d\u800c\u8bbe\u8ba1\u7684\u3002\u968f\u7740\u6807\u51c6\u8f93\u5165\u8f93\u51fa\u8bbe\u5907\u7684\u51fa\u73b0\uff0c\u5f00\u53d1\u4eba\u5458\u53ea\u9700\u8981\u5c06\u7cbe\u529b\u96c6\u4e2d\u5728\u4e1a\u52a1\u903b\u8f91\u7684\u5206\u6790\u4e0e\u5b9e\u73b0\u4e0a\u3002\u540e\u6765\u88ab\u63a8\u8350\u4e3aOracle\u65d7\u4e0bSun\u516c\u53f8Java EE\u5e73\u53f0\u7684\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u5e76\u4e14\u53d7\u5230\u8d8a\u6765\u8d8a\u591a\u7684\u4f7f\u7528ColdFusion\u548cPHP\u7684\u5f00\u53d1\u8005\u7684\u6b22\u8fce\u3002\u73b0\u5728\u867d\u7136\u4e0d\u518d\u4f7f\u7528\u539f\u6765\u7684\u5206\u5de5\u65b9\u5f0f\uff0c\u4f46\u662f\u8fd9\u79cd\u5206\u5de5\u7684\u601d\u60f3\u88ab\u6cbf\u7528\u4e0b\u6765\uff0c\u5e7f\u6cdb\u5e94\u7528\u4e8e\u8f6f\u4ef6\u5de5\u7a0b\u4e2d\uff0c\u662f\u4e00\u79cd\u5178\u578b\u5e76\u4e14\u5e94\u7528\u5e7f\u6cdb\u7684\u8f6f\u4ef6\u67b6\u6784\u6a21\u5f0f\u3002\u540e\u6765\uff0cMVC\u7684\u601d\u60f3\u88ab\u5e94\u7528\u5728\u4e86\uff37eb\u5f00\u53d1\u65b9\u9762\uff0c\u88ab\u79f0\u4e3a\uff37eb MVC\u6846\u67b6\u3002 MVC\u6846\u67b6\u7684\u6838\u5fc3\u601d\u60f3\u662f\uff1a\u89e3\u8026\uff0c\u8ba9\u4e0d\u540c\u7684\u4ee3\u7801\u5757\u4e4b\u95f4\u964d\u4f4e\u8026\u5408\uff0c\u589e\u5f3a\u4ee3\u7801\u7684\u53ef\u6269\u5c55\u6027\u548c\u53ef\u79fb\u690d\u6027\uff0c\u5b9e\u73b0\u5411\u540e\u517c\u5bb9\u3002 \u5f53\u524d\u4e3b\u6d41\u7684\u5f00\u53d1\u8bed\u8a00\u5982Java\u3001PHP\u3001Python\u4e2d\u90fd\u6709MVC\u6846\u67b6\u3002","title":"MVC\u7b80\u4ecb"},{"location":"Django/MTV%E4%B8%8EMVC%E6%A8%A1%E5%9E%8B/#web-mvc","text":"M\u5168\u62fc\u4e3aModel\uff0c\u4e3b\u8981\u5c01\u88c5\u5bf9\u6570\u636e\u5e93\u5c42\u7684\u8bbf\u95ee\uff0c\u5bf9\u6570\u636e\u5e93\u4e2d\u7684\u6570\u636e\u8fdb\u884c\u589e\u3001\u5220\u3001\u6539\u3001\u67e5\u64cd\u4f5c\u3002 V\u5168\u62fc\u4e3aView\uff0c\u7528\u4e8e\u5c01\u88c5\u7ed3\u679c\uff0c\u751f\u6210\u9875\u9762\u5c55\u793a\u7684html\u5185\u5bb9\u3002 C\u5168\u62fc\u4e3aController\uff0c\u7528\u4e8e\u63a5\u6536\u8bf7\u6c42\uff0c\u5904\u7406\u4e1a\u52a1\u903b\u8f91\uff0c\u4e0eModel\u548cView\u4ea4\u4e92\uff0c\u8fd4\u56de\u7ed3\u679c\u3002","title":"\uff37eb MVC\u5404\u90e8\u5206\u7684\u529f\u80fd\uff1a"},{"location":"Django/MTV%E4%B8%8EMVC%E6%A8%A1%E5%9E%8B/#mtv","text":"Django\uff0c\u53d1\u97f3\u4e3a[`d\u0292\u00e6\u014b\u0261\u0259\u028a]\uff0c\u662f\u7528python\u8bed\u8a00\u5199\u7684\u5f00\u6e90web\u5f00\u53d1\u6846\u67b6\uff0c\u5e76\u9075\u5faaMVC\u8bbe\u8ba1\u3002\u52b3\u4f26\u65af\u51fa\u7248\u96c6\u56e2\u4e3a\u4e86\u5f00\u53d1\u4ee5\u65b0\u95fb\u5185\u5bb9\u4e3a\u4e3b\u7684\u7f51\u7ad9\uff0c\u800c\u5f00\u53d1\u51fa\u6765\u4e86\u8fd9\u4e2a\u6846\u67b6\uff0c\u4e8e2005\u5e747\u6708\u5728BSD\u8bb8\u53ef\u8bc1\u4e0b\u53d1\u5e03\u3002\u8fd9\u4e2a\u540d\u79f0\u6765\u6e90\u4e8e\u6bd4\u5229\u65f6\u7684\u7235\u58eb\u97f3\u4e50\u5bb6DjangoReinhardt\uff0c\u4ed6\u662f\u4e00\u4e2a\u5409\u666e\u8d5b\u4eba\uff0c\u4e3b\u8981\u4ee5\u6f14\u594f\u5409\u5b83\u4e3a\u4e3b\uff0c\u8fd8\u6f14\u594f\u8fc7\u5c0f\u63d0\u7434\u7b49\u3002\u7531\u4e8eDjango\u5728\u8fd1\u5e74\u6765\u7684\u8fc5\u901f\u53d1\u5c55\uff0c\u5e94\u7528\u8d8a\u6765\u8d8a\u5e7f\u6cdb\uff0c\u88ab\u8457\u540dIT\u5f00\u53d1\u6742\u5fd7SDTimes\u8bc4\u9009\u4e3a2013SDTimes100\uff0c\u4f4d\u5217\"API\u3001\u5e93\u548c\u6846\u67b6\"\u5206\u7c7b\u7b2c6\u4f4d\uff0c\u88ab\u8ba4\u4e3a\u662f\u8be5\u9886\u57df\u7684\u4f7c\u4f7c\u8005\u3002Django\u7684\u4e3b\u8981\u76ee\u7684\u662f\u7b80\u4fbf\u3001\u5feb\u901f\u7684\u5f00\u53d1\u6570\u636e\u5e93\u9a71\u52a8\u7684\u7f51\u7ad9\u3002\u5b83\u5f3a\u8c03\u4ee3\u7801\u590d\u7528\uff0c\u591a\u4e2a\u7ec4\u4ef6\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u4ee5\"\u63d2\u4ef6\"\u5f62\u5f0f\u670d\u52a1\u4e8e\u6574\u4e2a\u6846\u67b6\uff0cDjango\u6709\u8bb8\u591a\u529f\u80fd\u5f3a\u5927\u7684\u7b2c\u4e09\u65b9\u63d2\u4ef6\uff0c\u4f60\u751a\u81f3\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u5f00\u53d1\u51fa\u81ea\u5df1\u7684\u5de5\u5177\u5305\u3002\u8fd9\u4f7f\u5f97Django\u5177\u6709\u5f88\u5f3a\u7684\u53ef\u6269\u5c55\u6027\u3002\u5b83\u8fd8\u5f3a\u8c03\u5feb\u901f\u5f00\u53d1\u548cDRY(DoNotRepeatYourself)\u539f\u5219\u3002 Django\u6846\u67b6\u9075\u5faaMVC\u8bbe\u8ba1\uff0c\u5e76\u4e14\u6709\u4e00\u4e2a\u4e13\u6709\u540d\u8bcd\uff1aMVT","title":"MTV\u6a21\u578b"},{"location":"Django/MTV%E4%B8%8EMVC%E6%A8%A1%E5%9E%8B/#mvt","text":"M\u5168\u62fc\u4e3aModel\uff0c\u4e0eMVC\u4e2d\u7684M\u529f\u80fd\u76f8\u540c\uff0c\u8d1f\u8d23\u548c\u6570\u636e\u5e93\u4ea4\u4e92\uff0c\u8fdb\u884c\u6570\u636e\u5904\u7406\u3002 V\u5168\u62fc\u4e3aView\uff0c\u4e0eMVC\u4e2d\u7684C\u529f\u80fd\u76f8\u540c\uff0c\u63a5\u6536\u8bf7\u6c42\uff0c\u8fdb\u884c\u4e1a\u52a1\u5904\u7406\uff0c\u8fd4\u56de\u5e94\u7b54\u3002 T\u5168\u62fc\u4e3aTemplate\uff0c\u4e0eMVC\u4e2d\u7684V\u529f\u80fd\u76f8\u540c\uff0c\u8d1f\u8d23\u5c01\u88c5\u6784\u9020\u8981\u8fd4\u56de\u7684html\u3002 \u5dee\u5f02\u5c31\u5728\u4e8e\u9ed1\u7ebf\u9ed1\u7bad\u5934\u6807\u8bc6\u51fa\u6765\u7684\u90e8\u5206","title":"MVT\u5404\u90e8\u5206\u7684\u529f\u80fd"},{"location":"Django/django%E4%B9%8B%E8%B7%AF%E7%94%B1%E5%B1%82/","text":"django\u4e4b\u8def\u7531\u5c42 django\u8bf7\u6c42\u751f\u547d\u5468\u671f\u6d41\u7a0b\u56fe url.py\u8def\u7531\u5c42 \u8def\u7531\u5339\u914d django\u5339\u914d\u8def\u7531\u89c4\u5f8b \u53d6\u6d88django\u81ea\u52a8\u8ba9\u6d4f\u89c8\u5668\u52a0\u659c\u6760\u7684\u529f\u80fd \u9650\u5236\u6307\u5b9a\u8f93\u5165\u7684url \u65e0\u540d\u5206\u7ec4 \u53cd\u5411\u89e3\u6790 \u5b9a\u4e49 \u8def\u7531\u4e2d\u6ca1\u6709\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u76f4\u63a5\u5c31\u662f\u5199\u6b7b\u7684 \u524d\u7aef\u53cd\u5411\u89e3\u6790 \u540e\u7aef\u53cd\u5411\u89e3\u6790 \u65e0\u540d\u5206\u7ec4\u7684\u53cd\u5411\u89e3\u6790 \u524d\u7aef\u53cd\u5411\u89e3\u6790 \u540e\u7aef\u53cd\u5411\u89e3\u6790 \u6709\u540d\u5206\u7ec4\u7684\u53cd\u5411\u89e3\u6790 \u524d\u7aef\u53cd\u5411\u89e3\u6790 \u540e\u7aef\u53cd\u5411\u89e3\u6790 \u4ee5\u7f16\u8f91\u529f\u80fd\u4e3a\u4f8b\uff0c\u53cd\u5411\u89e3\u6790\u7684\u5e94\u7528 \u8def\u7531\u5206\u53d1 \u603b\u8def\u7531 (include) \u5b50\u8def\u7531 \u540d\u79f0\u7a7a\u95f4 (namespace) django\u540e\u7aef\u83b7\u53d6\u6587\u4ef6\u5bf9\u8c61 django\u4e4b\u8def\u7531\u5c42 \u00b6 django\u8bf7\u6c42\u751f\u547d\u5468\u671f\u6d41\u7a0b\u56fe \u00b6 wsgi\u2014\u4e2d\u95f4\u4ef6\u2014\u8def\u7531----\u89c6\u56fe\u2014\u4e2d\u95f4\u4ef6\u2014wsgi url.py\u8def\u7531\u5c42 \u00b6 urlpatterns = [ url ( r '^admin/' , admin . site . urls ), url ( r 'test/' , views . test ), url ( r 'testadd/' , views . testadd ) ] \u5982\u679curl.py\u8fd9\u6837\u5199\uff0c test \u548c testadd \u540e\u7f00\u7684\u8bbf\u95ee\u8def\u5f84\uff0c\u8fd4\u56de\u7684\u5185\u5bb9\u662f\u4e00\u6837\u7684\uff0c\u539f\u56e0\u5982\u4e0b\uff1a url\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f \u4e00\u65e6\u6b63\u7acb\u523b\u7ed3\u675f\u5219\u8868\u8fbe\u5f0f\u80fd\u591f\u5339\u914d\u5230\u5185\u5bb9\uff0c\u4f1a\u7acb\u523b\u7ed3\u675f\u5339\u914d\u5173\u7cfb\uff0c\u76f4\u63a5\u6267\u884c\u540e\u9762\u5bf9\u5e94\u7684\u51fd\u6570 \u8def\u7531\u5339\u914d \u00b6 \u542f\u52a8django\uff0c\u5728\u6d4f\u89c8\u5668\u8f93\u5165 127.0.0.1:8000/test \uff0cdjango\u4f1a\u81ea\u52a8\u52a0\u659c\u6760\u3002 django\u5339\u914d\u8def\u7531\u89c4\u5f8b \u00b6 \u4e0d\u52a0\u659c\u6760( 127.0.0.1:8000/test )\uff0c\u5148\u5339\u914d\u4e00\u6b21\u8bd5\u8bd5\uff0c\u5982\u679c\u5339\u914d\u4e0d\u4e0a\uff0c\u4f1a\u8ba9\u6d4f\u89c8\u5668\u91cd\u5b9a\u5411\uff0c\u52a0\u4e00\u4e2a\u659c\u6760( 127.0.0.1:8000/test/ )\u518d\u6765\u4e00\u6b21\u5339\u914d\uff0c\u5982\u679c\u8fd8\u5339\u914d\u4e0d\u4e0a\uff0c\u624d\u4f1a\u62a5\u9519\u3002 \u53d6\u6d88django\u81ea\u52a8\u8ba9\u6d4f\u89c8\u5668\u52a0\u659c\u6760\u7684\u529f\u80fd \u00b6 \u5728\u914d\u7f6e\u6587\u4ef6\u4e2dsettings.py\u4e2d\u6dfb\u52a0: APPEND_SLASH = False # \u8be5\u53c2\u6570\u9ed8\u8ba4\u4e3aTrue \u9650\u5236\u6307\u5b9a\u8f93\u5165\u7684url \u00b6 urlpatterns = [ url ( r '^admin/' , admin . site . urls ), # url\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f url ( r '^test/$' , views . test ), # \u4e00\u65e6\u6b63\u7acb\u523b\u7ed3\u675f\u5219\u8868\u8fbe\u5f0f\u80fd\u591f\u5339\u914d\u5230\u5185\u5bb9\uff0c\u4f1a\u7acb\u523b\u7ed3\u675f\u5339\u914d\u5173\u7cfb\uff0c\u76f4\u63a5\u6267\u884c\u540e\u9762\u5bf9\u5e94\u7684\u51fd\u6570 url ( r '^testadd/$' , views . testadd ) ] \u8fd9\u6837\u8bbe\u7f6e\uff0c\u53ea\u80fd\u8f93\u5165 127.0.0.1:8000/test/ \u6216 127.0.0.1:8000/testadd/ \u6ce8\u610f\uff1a\u8def\u7531\u5339\u914d\u53ea\u662f\u5339\u914dURL\u90e8\u5206\uff0c\u4e0d\u5339\u914dget\u643a\u5e26\u7684\u53c2\u6570 ?\u540e\u9762\u7684\u53c2\u6570 \u65e0\u540d\u5206\u7ec4 \u00b6 \u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u65e0\u540d\u5206\u7ec4 urlpatterns = [ url ( r '^admin/' , admin . site . urls ), url ( r '^test/([0-9]{4})' , views . test ), # \u8868\u793atest\u540e\u9762\u8ddf4\u4e2a\u6570\u5b57 url ( r '^testadd/' , views . testadd ) ] \u5f53\u4f60\u7684\u8def\u7531\u4e2d\u6709\u5206\u7ec4\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u90a3\u4e48\u5728\u5339\u914d\u5230\u5185\u5bb9\u6267\u884c\u89c6\u56fe\u51fd\u6570\u7684\u65f6\u5019\uff0c\u4f1a\u5c06\u5206\u7ec4\u5185\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u5230\u7684\u5185\u5bb9\u5f53\u4f5c**\u4f4d\u7f6e\u53c2\u6570**\u4f20\u9012\u7ed9\u89c6\u56fe\u51fd\u6570\u3002 # \u5728\u89c6\u56fe\u51fd\u6570 def test ( request , xxx ): print ( '\u591a\u4f59\u7684\u53c2\u6570:' , xxx ) return HttpResponse ( 'test view' ) \u5f53\u4f60\u7684\u8def\u7531\u4e2d\u6709\u5206\u7ec4\u5e76\u4e14\u7ed9\u5206\u7ec4\u8d77\u4e86\u522b\u540d\uff0c\u90a3\u4e48\u5728\u5339\u914d\u5185\u5bb9\u7684\u65f6\u5019\uff0c\u4f1a\u5c06\u5206\u7ec4\u5185\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u5230\u7684\u5185\u5bb9\u5f53\u4f5c**\u5173\u952e\u5b57\u53c2\u6570**\u4f20\u9012\u7ed9\u89c6\u56fe\u51fd\u6570 # \u5728\u89c6\u56fe\u51fd\u6570 def test ( request , year ): print ( '\u591a\u4f59\u7684\u53c2\u6570:' , year ) return HttpResponse ( 'test view' ) \u8fd9\u6837\u5c31\u53ef\u4ee5\u5229\u7528\u6709\u540d\u548c\u65e0\u540d\u5206\u7ec4\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u8c03\u7528\u89c6\u56fe\u51fd\u6570\u4e4b\u524d\u7ed9\u51fd\u6570\u4f20\u9012\u989d\u5916\u7684\u53c2\u6570 \u6ce8\u610f\uff1a\u6709\u540d\u5206\u7ec4\u548c\u65e0\u540d\u5206\u7ec4\u4e0d\u80fd\u6df7\u5408\u4f7f\u7528\uff0c\u4f46\u662f\u540c\u4e00\u60c5\u51b5\u4e0b\uff0c\u65e0\u540d\u5206\u7ec4\u53ef\u4ee5\u4f7f\u7528\u591a\u6b21\uff0c\u6709\u540d\u5206\u7ec4\u4e5f\u53ef\u4ee5\u4f7f\u7528\u591a\u6b21 \u53cd\u5411\u89e3\u6790 \u00b6 \u4e3e\u4e2a\u4f8b\u5b50\uff1a # urls.py urlpatterns = [ url ( r '^admin/' , admin . site . urls ), url ( r '^test/(\\d+)/' , views . test ), url ( r '^testadd/(?P<year>\\d+)/' , views . testadd ), url ( r '^index/' , views . index ), url ( r '^home/' , views . home ), ] # views.py def index ( request ): return render ( request , 'index.html' ) def home ( request ): return HttpResponse ( 'home' ) \u5728\u4e0a\u8ff0\u4ee3\u7801\u4e2d\uff0c index.html \u9875\u9762\u4e2d\u6709\u5f88\u591a\u8df3\u8f6c\u7684\u94fe\u63a5\uff0c\u90fd\u6307\u5411 home \u8def\u7531\u3002\u5982\u679c\u50cf\u6539\u53d8 home \u7684url\u5730\u5740\uff0c\u90a3\u4e48 index.html \u9875\u9762\u4e2d\u7684\u5f88\u591a\u8df3\u8f6c home \u7684\u94fe\u63a5\u90fd\u6709\u6539\u53d8\uff0c\u6709\u6ca1\u6709\u52a8\u6001\u7ed1\u5b9aurl\u5730\u5740\u7684\u65b9\u6cd5\u5462\uff1f\u53cd\u5411\u89e3\u6790\u5c31\u662f\u3002 \u5b9a\u4e49 \u00b6 \u53cd\u5411\u89e3\u6790\uff1a\u6839\u636e\u4e00\u4e2a\u522b\u540d\uff0c\u52a8\u6001\u89e3\u6790\u51fa\u4e00\u4e2a\u7ed3\u679c\uff0c\u8be5\u7ed3\u679c\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u5bf9\u5e94\u7684url \u8def\u7531\u4e2d\u6ca1\u6709\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u76f4\u63a5\u5c31\u662f\u5199\u6b7b\u7684 \u00b6 url ( r '^home/' , views . home , name = 'xxx' ), # \u7ed9\u8def\u7531\u4e0e\u89c6\u56fe\u51fd\u6570\u5bf9\u5e94\u5173\u7cfb\u8d77\u522b\u540d \u524d\u7aef\u53cd\u5411\u89e3\u6790 \u00b6 < p >< a href = \"{% url 'xxx'%}\" > 111 </ a ></ p > \u540e\u7aef\u53cd\u5411\u89e3\u6790 \u00b6 from django.shortcuts import render , HttpResponse , redirect , reverse def get_url ( request ): url = reverse ( 'xxx' ) print ( url ) return HttpResponse ( 'get_url' ) \u65e0\u540d\u5206\u7ec4\u7684\u53cd\u5411\u89e3\u6790 \u00b6 \u5728\u89e3\u6790\u7684\u65f6\u5019\uff0c\u4f60\u9700\u8981\u624b\u52a8\u6307\u5b9a\u6b63\u5219\u5339\u914d\u5185\u5bb9\u7684\u662f\u4ec0\u4e48 url ( r '^home/(\\d+)/' , views . home , name = 'xxx' ), \u524d\u7aef\u53cd\u5411\u89e3\u6790 \u00b6 < p >< a href = \"{% url 'xxx' 12 %}\" > 111 </ a ></ p > \u540e\u7aef\u53cd\u5411\u89e3\u6790 \u00b6 def get_url ( request ): url = reverse ( 'xxx' , args = ( 1 ,)) url2 = reverse ( 'xxx' , args = ( 1231 ,)) print ( url ) print ( url2 ) return HttpResponse ( 'get_url' ) \u624b\u52a8\u4f20\u5165\u7684\u53c2\u6570 \u53ea\u9700\u8981\u6ee1\u8db3 \u80fd\u591f\u88ab\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u5373\u53ef \u6709\u540d\u5206\u7ec4\u7684\u53cd\u5411\u89e3\u6790 \u00b6 url ( r '^home/(?P<year>\\d+)/' , views . home , name = 'xxx' ), \u524d\u7aef\u53cd\u5411\u89e3\u6790 \u00b6 \u53ef\u4ee5\u76f4\u63a5\u7528\u65e0\u540d\u5206\u7ec4\u7684\u60c5\u51b5 < p >< a href = \"{% url 'xxx' 12 %}\" > 111 </ a ></ p > \u89c4\u8303\u7684\u5199\u6cd5\uff1a < p >< a href = \"{% url 'xxx' year=121 %}\" > 111 </ a ></ p > \u540e\u7aef\u53cd\u5411\u89e3\u6790 \u00b6 \u53ef\u4ee5\u76f4\u63a5\u7528\u65e0\u540d\u5206\u7ec4\u7684\u60c5\u51b5 \u4e5f\u53ef\u4ee5\u89c4\u8303\u5199\uff1a def get_url ( request ): url = reverse ( 'xxx' , kwargs = { 'year' : 13123 }) print ( url ) return HttpResponse ( 'get_url' ) \u4ee5\u7f16\u8f91\u529f\u80fd\u4e3a\u4f8b\uff0c\u53cd\u5411\u89e3\u6790\u7684\u5e94\u7528 \u00b6 # urls.py url = (r'^edit_user/(\\d+)/', views.edit_user, name='edit') # views.py def edit_user(request, edit_id): # edit_id\u5c31\u662f\u7528\u6237\u60f3\u8981\u7f16\u8f91\u6570\u636e\u4e3b\u952e\u503c pass <!--\u9875\u9762--> {% for user_obj in user_list %} < a href = '/edit_user/{{user_obj.id}}/' > \u7f16\u8f91 </ a > < a href = '{% url ' edit ' user_obj . id %}' > \u7f16\u8f91 </ a > {% endfor %} \u8def\u7531\u5206\u53d1 \u00b6 \u524d\u63d0\uff1a ''' \u5728django\u4e2d\u6240\u6709\u7684app\u90fd\u53ef\u4ee5\u6709\u81ea\u5df1\u72ec\u7acb\u7684urls.py \\ templates \\ static. \u6b63\u662f\u7531\u4e8e\u4e0a\u9762\u7684\u7279\u70b9 \u4f60\u7528django\u5f00\u53d1\u9879\u76ee\u5c31\u80fd\u591f\u5b8c\u5168\u505a\u5230\u591a\u4eba\u5206\u7ec4\u5f00\u53d1 \u4e92\u76f8\u4e0d\u5e72\u6270,\u6bcf\u4e2a\u4eba\u53ea\u5f00\u53d1\u81ea\u5df1\u7684app. \u5c0f\u7ec4\u957f\u53ea\u9700\u8981\u5c06\u6240\u6709\u4eba\u5f00\u53d1\u7684app\u6574\u5408\u5230\u4e00\u4e2a\u7a7a\u7684django\u9879\u76ee\u91cc\u9762, \u7136\u540e\u5728settings\u914d\u7f6e\u6587\u4ef6\u6ce8\u518c \u518d\u5229\u7528\u8def\u7531\u5206\u53d1\u5c06\u591a\u4e2aapp\u6574\u5408\u5230\u4e00\u8d77\u5373\u53ef\u5b8c\u6210\u5927\u9879\u76ee\u7684\u62fc\u63a5 ''' \u8def\u7531\u5206\u53d1\u89e3\u51b3\u7684\u5c31\u662f \u9879\u76ee\u7684\u603b\u8def\u7531 \u5339\u914d\u5173\u7cfb\u8fc7\u591a\u7684\u60c5\u51b5\u3002\u4f7f\u7528\u8def\u7531\u5206\u53d1\uff0c \u4f1a\u51fa\u73b0\uff1a \u603b\u8def\u7531\u4e0d\u518d\u505a\u5339\u914d\u7684\u6d3b \u800c\u4ec5\u4ec5\u662f\u505a\u4efb\u52a1\u5206\u53d1 \u8bf7\u6c42\u6765\u4e86\u4e4b\u540e \u603b\u8def\u7531\u4e0d\u505a\u5bf9\u5e94\u5173\u7cfb\uff0c\u53ea\u8be2\u95ee\u4f60\u8981\u8bbf\u95ee\u54ea\u4e2aapp\u7684\u529f\u80fd \u7136\u540e\u5c06\u8bf7\u6c42\u8f6c\u53d1\u7ed9\u5bf9\u5e94\u7684app\u53bb\u5904\u7406 \u603b\u8def\u7531 (include) \u00b6 \u53ea\u9700\u8981\u5c06\u6240\u6709\u7684app\u7684urls.py\u5bfc\u5165\u5373\u53ef from django.conf.urls import url , include from app01 import urls as app01_urls from app02 import urls as app02_urls urlpatterns = [ url ( r '^app01/' , include ( app01_urls )), url ( r '^app02/' , include ( app02_urls )), ] # \u8def\u7531\u5206\u53d1 \u5b50\u8def\u7531 \u00b6 # app01 urls.py from django.conf.urls import url from app01 import views urlpatterns = [ url ( r '^reg/' , views . reg ), ] # app02 urls.py from django.conf.urls import url from app02 import views urlpatterns = [ url ( r '^reg/' , views . reg ), ] \u6700\u7701\u4e8b\u7684\u5199\u6cd5\uff1a # \u8fde\u5bfc\u5165\u90fd\u4e0d\u9700\u8981 url ( r '^app01/' , include ( 'app01.urls' )), url ( r '^app02/' , include ( 'app02.urls' )) \u540d\u79f0\u7a7a\u95f4 (namespace) \u00b6 \u5f53\u591a\u4e2aapp\u4e2d\u51fa\u73b0\u4e86\u8d77\u522b\u540d\u51b2\u7a81\u7684\u60c5\u51b5 \u4f60\u5728\u505a\u8def\u7531\u5206\u53d1\u7684\u65f6\u5019 \u53ef\u4ee5\u7ed9\u6bcf\u4e00\u4e2aapp\u521b\u5efa\u4e00\u4e2a\u540d\u79f0\u7a7a\u95f4\u3002 \u7136\u540e\u5728\u53cd\u5411\u89e3\u6790\u7684\u65f6\u5019 \u53ef\u4ee5\u9009\u62e9\u5230\u5e95\u53bb\u54ea\u4e2a\u540d\u79f0\u7a7a\u95f4\u4e2d\u67e5\u627e\u522b\u540d \u5728\u603b\u8def\u7531\u4e2d\uff1a url ( r '^app01/' , include ( 'app01.urls' , namespace = 'app01' )), url ( r '^app02/' , include ( 'app02.urls' , namespace = 'app02' )) \u524d\u7aef\uff1a < a href = \"{% url 'app01:reg' %}\" ></ a > < a href = \"{% url 'app02:reg' %}\" ></ a > \u540e\u7aef\uff1a print ( reverse ( 'app01:reg' )) print ( reverse ( 'app02:reg' )) \u4f46\u662f\u4e5f\u53ef\u4ee5\u4e0d\u7528\uff0c\u4f60\u53ea\u8981 \u4fdd\u8bc1\u8d77\u522b\u540d\u7684\u65f6\u5019\uff0c\u5728\u6574\u4e2adjango\u9879\u76ee\u4e2d\u4e0d\u51b2\u7a81\u5373\u53ef django\u540e\u7aef\u83b7\u53d6\u6587\u4ef6\u5bf9\u8c61 \u00b6 form\u8868\u8fbe\u4f20\u6587\u4ef6\u9700\u8981\u6ce8\u610f\u7684\u4e8b\u9879 method\u5fc5\u987b\u6539\u6210post enctype\u6539\u4e3aformdata\u683c\u5f0f # urls.py from django.conf.urls import url from app02 import views urlpatterns = [ url ( r '^upload/' , views . upload ) ] # views.py def upload ( request ): if request . method == 'POST' : print ( request . FILES ) # django\u4f1a\u5c06\u6587\u4ef6\u7c7b\u578b\u7684\u6570\u636e\u81ea\u52a8\u653e\u5165request.FILES file_obj = request . FILES . get ( 'myfile' ) # \u6587\u4ef6\u5bf9\u8c61 # print(file_obj) # print(file_obj.name) with open ( file_obj . name , 'wb' ) as f : for line in file_obj : f . write ( line ) return render ( request , 'upload.html' )","title":"django\u4e4b\u8def\u7531\u5c42"},{"location":"Django/django%E4%B9%8B%E8%B7%AF%E7%94%B1%E5%B1%82/#django","text":"","title":"django\u4e4b\u8def\u7531\u5c42"},{"location":"Django/django%E4%B9%8B%E8%B7%AF%E7%94%B1%E5%B1%82/#django_1","text":"wsgi\u2014\u4e2d\u95f4\u4ef6\u2014\u8def\u7531----\u89c6\u56fe\u2014\u4e2d\u95f4\u4ef6\u2014wsgi","title":"django\u8bf7\u6c42\u751f\u547d\u5468\u671f\u6d41\u7a0b\u56fe"},{"location":"Django/django%E4%B9%8B%E8%B7%AF%E7%94%B1%E5%B1%82/#urlpy","text":"urlpatterns = [ url ( r '^admin/' , admin . site . urls ), url ( r 'test/' , views . test ), url ( r 'testadd/' , views . testadd ) ] \u5982\u679curl.py\u8fd9\u6837\u5199\uff0c test \u548c testadd \u540e\u7f00\u7684\u8bbf\u95ee\u8def\u5f84\uff0c\u8fd4\u56de\u7684\u5185\u5bb9\u662f\u4e00\u6837\u7684\uff0c\u539f\u56e0\u5982\u4e0b\uff1a url\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f \u4e00\u65e6\u6b63\u7acb\u523b\u7ed3\u675f\u5219\u8868\u8fbe\u5f0f\u80fd\u591f\u5339\u914d\u5230\u5185\u5bb9\uff0c\u4f1a\u7acb\u523b\u7ed3\u675f\u5339\u914d\u5173\u7cfb\uff0c\u76f4\u63a5\u6267\u884c\u540e\u9762\u5bf9\u5e94\u7684\u51fd\u6570","title":"url.py\u8def\u7531\u5c42"},{"location":"Django/django%E4%B9%8B%E8%B7%AF%E7%94%B1%E5%B1%82/#_1","text":"\u542f\u52a8django\uff0c\u5728\u6d4f\u89c8\u5668\u8f93\u5165 127.0.0.1:8000/test \uff0cdjango\u4f1a\u81ea\u52a8\u52a0\u659c\u6760\u3002","title":"\u8def\u7531\u5339\u914d"},{"location":"Django/django%E4%B9%8B%E8%B7%AF%E7%94%B1%E5%B1%82/#django_2","text":"\u4e0d\u52a0\u659c\u6760( 127.0.0.1:8000/test )\uff0c\u5148\u5339\u914d\u4e00\u6b21\u8bd5\u8bd5\uff0c\u5982\u679c\u5339\u914d\u4e0d\u4e0a\uff0c\u4f1a\u8ba9\u6d4f\u89c8\u5668\u91cd\u5b9a\u5411\uff0c\u52a0\u4e00\u4e2a\u659c\u6760( 127.0.0.1:8000/test/ )\u518d\u6765\u4e00\u6b21\u5339\u914d\uff0c\u5982\u679c\u8fd8\u5339\u914d\u4e0d\u4e0a\uff0c\u624d\u4f1a\u62a5\u9519\u3002","title":"django\u5339\u914d\u8def\u7531\u89c4\u5f8b"},{"location":"Django/django%E4%B9%8B%E8%B7%AF%E7%94%B1%E5%B1%82/#django_3","text":"\u5728\u914d\u7f6e\u6587\u4ef6\u4e2dsettings.py\u4e2d\u6dfb\u52a0: APPEND_SLASH = False # \u8be5\u53c2\u6570\u9ed8\u8ba4\u4e3aTrue","title":"\u53d6\u6d88django\u81ea\u52a8\u8ba9\u6d4f\u89c8\u5668\u52a0\u659c\u6760\u7684\u529f\u80fd"},{"location":"Django/django%E4%B9%8B%E8%B7%AF%E7%94%B1%E5%B1%82/#url","text":"urlpatterns = [ url ( r '^admin/' , admin . site . urls ), # url\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f url ( r '^test/$' , views . test ), # \u4e00\u65e6\u6b63\u7acb\u523b\u7ed3\u675f\u5219\u8868\u8fbe\u5f0f\u80fd\u591f\u5339\u914d\u5230\u5185\u5bb9\uff0c\u4f1a\u7acb\u523b\u7ed3\u675f\u5339\u914d\u5173\u7cfb\uff0c\u76f4\u63a5\u6267\u884c\u540e\u9762\u5bf9\u5e94\u7684\u51fd\u6570 url ( r '^testadd/$' , views . testadd ) ] \u8fd9\u6837\u8bbe\u7f6e\uff0c\u53ea\u80fd\u8f93\u5165 127.0.0.1:8000/test/ \u6216 127.0.0.1:8000/testadd/ \u6ce8\u610f\uff1a\u8def\u7531\u5339\u914d\u53ea\u662f\u5339\u914dURL\u90e8\u5206\uff0c\u4e0d\u5339\u914dget\u643a\u5e26\u7684\u53c2\u6570 ?\u540e\u9762\u7684\u53c2\u6570","title":"\u9650\u5236\u6307\u5b9a\u8f93\u5165\u7684url"},{"location":"Django/django%E4%B9%8B%E8%B7%AF%E7%94%B1%E5%B1%82/#_2","text":"\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u65e0\u540d\u5206\u7ec4 urlpatterns = [ url ( r '^admin/' , admin . site . urls ), url ( r '^test/([0-9]{4})' , views . test ), # \u8868\u793atest\u540e\u9762\u8ddf4\u4e2a\u6570\u5b57 url ( r '^testadd/' , views . testadd ) ] \u5f53\u4f60\u7684\u8def\u7531\u4e2d\u6709\u5206\u7ec4\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u90a3\u4e48\u5728\u5339\u914d\u5230\u5185\u5bb9\u6267\u884c\u89c6\u56fe\u51fd\u6570\u7684\u65f6\u5019\uff0c\u4f1a\u5c06\u5206\u7ec4\u5185\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u5230\u7684\u5185\u5bb9\u5f53\u4f5c**\u4f4d\u7f6e\u53c2\u6570**\u4f20\u9012\u7ed9\u89c6\u56fe\u51fd\u6570\u3002 # \u5728\u89c6\u56fe\u51fd\u6570 def test ( request , xxx ): print ( '\u591a\u4f59\u7684\u53c2\u6570:' , xxx ) return HttpResponse ( 'test view' ) \u5f53\u4f60\u7684\u8def\u7531\u4e2d\u6709\u5206\u7ec4\u5e76\u4e14\u7ed9\u5206\u7ec4\u8d77\u4e86\u522b\u540d\uff0c\u90a3\u4e48\u5728\u5339\u914d\u5185\u5bb9\u7684\u65f6\u5019\uff0c\u4f1a\u5c06\u5206\u7ec4\u5185\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u5230\u7684\u5185\u5bb9\u5f53\u4f5c**\u5173\u952e\u5b57\u53c2\u6570**\u4f20\u9012\u7ed9\u89c6\u56fe\u51fd\u6570 # \u5728\u89c6\u56fe\u51fd\u6570 def test ( request , year ): print ( '\u591a\u4f59\u7684\u53c2\u6570:' , year ) return HttpResponse ( 'test view' ) \u8fd9\u6837\u5c31\u53ef\u4ee5\u5229\u7528\u6709\u540d\u548c\u65e0\u540d\u5206\u7ec4\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u8c03\u7528\u89c6\u56fe\u51fd\u6570\u4e4b\u524d\u7ed9\u51fd\u6570\u4f20\u9012\u989d\u5916\u7684\u53c2\u6570 \u6ce8\u610f\uff1a\u6709\u540d\u5206\u7ec4\u548c\u65e0\u540d\u5206\u7ec4\u4e0d\u80fd\u6df7\u5408\u4f7f\u7528\uff0c\u4f46\u662f\u540c\u4e00\u60c5\u51b5\u4e0b\uff0c\u65e0\u540d\u5206\u7ec4\u53ef\u4ee5\u4f7f\u7528\u591a\u6b21\uff0c\u6709\u540d\u5206\u7ec4\u4e5f\u53ef\u4ee5\u4f7f\u7528\u591a\u6b21","title":"\u65e0\u540d\u5206\u7ec4"},{"location":"Django/django%E4%B9%8B%E8%B7%AF%E7%94%B1%E5%B1%82/#_3","text":"\u4e3e\u4e2a\u4f8b\u5b50\uff1a # urls.py urlpatterns = [ url ( r '^admin/' , admin . site . urls ), url ( r '^test/(\\d+)/' , views . test ), url ( r '^testadd/(?P<year>\\d+)/' , views . testadd ), url ( r '^index/' , views . index ), url ( r '^home/' , views . home ), ] # views.py def index ( request ): return render ( request , 'index.html' ) def home ( request ): return HttpResponse ( 'home' ) \u5728\u4e0a\u8ff0\u4ee3\u7801\u4e2d\uff0c index.html \u9875\u9762\u4e2d\u6709\u5f88\u591a\u8df3\u8f6c\u7684\u94fe\u63a5\uff0c\u90fd\u6307\u5411 home \u8def\u7531\u3002\u5982\u679c\u50cf\u6539\u53d8 home \u7684url\u5730\u5740\uff0c\u90a3\u4e48 index.html \u9875\u9762\u4e2d\u7684\u5f88\u591a\u8df3\u8f6c home \u7684\u94fe\u63a5\u90fd\u6709\u6539\u53d8\uff0c\u6709\u6ca1\u6709\u52a8\u6001\u7ed1\u5b9aurl\u5730\u5740\u7684\u65b9\u6cd5\u5462\uff1f\u53cd\u5411\u89e3\u6790\u5c31\u662f\u3002","title":"\u53cd\u5411\u89e3\u6790"},{"location":"Django/django%E4%B9%8B%E8%B7%AF%E7%94%B1%E5%B1%82/#_4","text":"\u53cd\u5411\u89e3\u6790\uff1a\u6839\u636e\u4e00\u4e2a\u522b\u540d\uff0c\u52a8\u6001\u89e3\u6790\u51fa\u4e00\u4e2a\u7ed3\u679c\uff0c\u8be5\u7ed3\u679c\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u5bf9\u5e94\u7684url","title":"\u5b9a\u4e49"},{"location":"Django/django%E4%B9%8B%E8%B7%AF%E7%94%B1%E5%B1%82/#_5","text":"url ( r '^home/' , views . home , name = 'xxx' ), # \u7ed9\u8def\u7531\u4e0e\u89c6\u56fe\u51fd\u6570\u5bf9\u5e94\u5173\u7cfb\u8d77\u522b\u540d","title":"\u8def\u7531\u4e2d\u6ca1\u6709\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u76f4\u63a5\u5c31\u662f\u5199\u6b7b\u7684"},{"location":"Django/django%E4%B9%8B%E8%B7%AF%E7%94%B1%E5%B1%82/#_6","text":"< p >< a href = \"{% url 'xxx'%}\" > 111 </ a ></ p >","title":"\u524d\u7aef\u53cd\u5411\u89e3\u6790"},{"location":"Django/django%E4%B9%8B%E8%B7%AF%E7%94%B1%E5%B1%82/#_7","text":"from django.shortcuts import render , HttpResponse , redirect , reverse def get_url ( request ): url = reverse ( 'xxx' ) print ( url ) return HttpResponse ( 'get_url' )","title":"\u540e\u7aef\u53cd\u5411\u89e3\u6790"},{"location":"Django/django%E4%B9%8B%E8%B7%AF%E7%94%B1%E5%B1%82/#_8","text":"\u5728\u89e3\u6790\u7684\u65f6\u5019\uff0c\u4f60\u9700\u8981\u624b\u52a8\u6307\u5b9a\u6b63\u5219\u5339\u914d\u5185\u5bb9\u7684\u662f\u4ec0\u4e48 url ( r '^home/(\\d+)/' , views . home , name = 'xxx' ),","title":"\u65e0\u540d\u5206\u7ec4\u7684\u53cd\u5411\u89e3\u6790"},{"location":"Django/django%E4%B9%8B%E8%B7%AF%E7%94%B1%E5%B1%82/#_9","text":"< p >< a href = \"{% url 'xxx' 12 %}\" > 111 </ a ></ p >","title":"\u524d\u7aef\u53cd\u5411\u89e3\u6790"},{"location":"Django/django%E4%B9%8B%E8%B7%AF%E7%94%B1%E5%B1%82/#_10","text":"def get_url ( request ): url = reverse ( 'xxx' , args = ( 1 ,)) url2 = reverse ( 'xxx' , args = ( 1231 ,)) print ( url ) print ( url2 ) return HttpResponse ( 'get_url' ) \u624b\u52a8\u4f20\u5165\u7684\u53c2\u6570 \u53ea\u9700\u8981\u6ee1\u8db3 \u80fd\u591f\u88ab\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u5373\u53ef","title":"\u540e\u7aef\u53cd\u5411\u89e3\u6790"},{"location":"Django/django%E4%B9%8B%E8%B7%AF%E7%94%B1%E5%B1%82/#_11","text":"url ( r '^home/(?P<year>\\d+)/' , views . home , name = 'xxx' ),","title":"\u6709\u540d\u5206\u7ec4\u7684\u53cd\u5411\u89e3\u6790"},{"location":"Django/django%E4%B9%8B%E8%B7%AF%E7%94%B1%E5%B1%82/#_12","text":"\u53ef\u4ee5\u76f4\u63a5\u7528\u65e0\u540d\u5206\u7ec4\u7684\u60c5\u51b5 < p >< a href = \"{% url 'xxx' 12 %}\" > 111 </ a ></ p > \u89c4\u8303\u7684\u5199\u6cd5\uff1a < p >< a href = \"{% url 'xxx' year=121 %}\" > 111 </ a ></ p >","title":"\u524d\u7aef\u53cd\u5411\u89e3\u6790"},{"location":"Django/django%E4%B9%8B%E8%B7%AF%E7%94%B1%E5%B1%82/#_13","text":"\u53ef\u4ee5\u76f4\u63a5\u7528\u65e0\u540d\u5206\u7ec4\u7684\u60c5\u51b5 \u4e5f\u53ef\u4ee5\u89c4\u8303\u5199\uff1a def get_url ( request ): url = reverse ( 'xxx' , kwargs = { 'year' : 13123 }) print ( url ) return HttpResponse ( 'get_url' )","title":"\u540e\u7aef\u53cd\u5411\u89e3\u6790"},{"location":"Django/django%E4%B9%8B%E8%B7%AF%E7%94%B1%E5%B1%82/#_14","text":"# urls.py url = (r'^edit_user/(\\d+)/', views.edit_user, name='edit') # views.py def edit_user(request, edit_id): # edit_id\u5c31\u662f\u7528\u6237\u60f3\u8981\u7f16\u8f91\u6570\u636e\u4e3b\u952e\u503c pass <!--\u9875\u9762--> {% for user_obj in user_list %} < a href = '/edit_user/{{user_obj.id}}/' > \u7f16\u8f91 </ a > < a href = '{% url ' edit ' user_obj . id %}' > \u7f16\u8f91 </ a > {% endfor %}","title":"\u4ee5\u7f16\u8f91\u529f\u80fd\u4e3a\u4f8b\uff0c\u53cd\u5411\u89e3\u6790\u7684\u5e94\u7528"},{"location":"Django/django%E4%B9%8B%E8%B7%AF%E7%94%B1%E5%B1%82/#_15","text":"\u524d\u63d0\uff1a ''' \u5728django\u4e2d\u6240\u6709\u7684app\u90fd\u53ef\u4ee5\u6709\u81ea\u5df1\u72ec\u7acb\u7684urls.py \\ templates \\ static. \u6b63\u662f\u7531\u4e8e\u4e0a\u9762\u7684\u7279\u70b9 \u4f60\u7528django\u5f00\u53d1\u9879\u76ee\u5c31\u80fd\u591f\u5b8c\u5168\u505a\u5230\u591a\u4eba\u5206\u7ec4\u5f00\u53d1 \u4e92\u76f8\u4e0d\u5e72\u6270,\u6bcf\u4e2a\u4eba\u53ea\u5f00\u53d1\u81ea\u5df1\u7684app. \u5c0f\u7ec4\u957f\u53ea\u9700\u8981\u5c06\u6240\u6709\u4eba\u5f00\u53d1\u7684app\u6574\u5408\u5230\u4e00\u4e2a\u7a7a\u7684django\u9879\u76ee\u91cc\u9762, \u7136\u540e\u5728settings\u914d\u7f6e\u6587\u4ef6\u6ce8\u518c \u518d\u5229\u7528\u8def\u7531\u5206\u53d1\u5c06\u591a\u4e2aapp\u6574\u5408\u5230\u4e00\u8d77\u5373\u53ef\u5b8c\u6210\u5927\u9879\u76ee\u7684\u62fc\u63a5 ''' \u8def\u7531\u5206\u53d1\u89e3\u51b3\u7684\u5c31\u662f \u9879\u76ee\u7684\u603b\u8def\u7531 \u5339\u914d\u5173\u7cfb\u8fc7\u591a\u7684\u60c5\u51b5\u3002\u4f7f\u7528\u8def\u7531\u5206\u53d1\uff0c \u4f1a\u51fa\u73b0\uff1a \u603b\u8def\u7531\u4e0d\u518d\u505a\u5339\u914d\u7684\u6d3b \u800c\u4ec5\u4ec5\u662f\u505a\u4efb\u52a1\u5206\u53d1 \u8bf7\u6c42\u6765\u4e86\u4e4b\u540e \u603b\u8def\u7531\u4e0d\u505a\u5bf9\u5e94\u5173\u7cfb\uff0c\u53ea\u8be2\u95ee\u4f60\u8981\u8bbf\u95ee\u54ea\u4e2aapp\u7684\u529f\u80fd \u7136\u540e\u5c06\u8bf7\u6c42\u8f6c\u53d1\u7ed9\u5bf9\u5e94\u7684app\u53bb\u5904\u7406","title":"\u8def\u7531\u5206\u53d1"},{"location":"Django/django%E4%B9%8B%E8%B7%AF%E7%94%B1%E5%B1%82/#include","text":"\u53ea\u9700\u8981\u5c06\u6240\u6709\u7684app\u7684urls.py\u5bfc\u5165\u5373\u53ef from django.conf.urls import url , include from app01 import urls as app01_urls from app02 import urls as app02_urls urlpatterns = [ url ( r '^app01/' , include ( app01_urls )), url ( r '^app02/' , include ( app02_urls )), ] # \u8def\u7531\u5206\u53d1","title":"\u603b\u8def\u7531 (include)"},{"location":"Django/django%E4%B9%8B%E8%B7%AF%E7%94%B1%E5%B1%82/#_16","text":"# app01 urls.py from django.conf.urls import url from app01 import views urlpatterns = [ url ( r '^reg/' , views . reg ), ] # app02 urls.py from django.conf.urls import url from app02 import views urlpatterns = [ url ( r '^reg/' , views . reg ), ] \u6700\u7701\u4e8b\u7684\u5199\u6cd5\uff1a # \u8fde\u5bfc\u5165\u90fd\u4e0d\u9700\u8981 url ( r '^app01/' , include ( 'app01.urls' )), url ( r '^app02/' , include ( 'app02.urls' ))","title":"\u5b50\u8def\u7531"},{"location":"Django/django%E4%B9%8B%E8%B7%AF%E7%94%B1%E5%B1%82/#namespace","text":"\u5f53\u591a\u4e2aapp\u4e2d\u51fa\u73b0\u4e86\u8d77\u522b\u540d\u51b2\u7a81\u7684\u60c5\u51b5 \u4f60\u5728\u505a\u8def\u7531\u5206\u53d1\u7684\u65f6\u5019 \u53ef\u4ee5\u7ed9\u6bcf\u4e00\u4e2aapp\u521b\u5efa\u4e00\u4e2a\u540d\u79f0\u7a7a\u95f4\u3002 \u7136\u540e\u5728\u53cd\u5411\u89e3\u6790\u7684\u65f6\u5019 \u53ef\u4ee5\u9009\u62e9\u5230\u5e95\u53bb\u54ea\u4e2a\u540d\u79f0\u7a7a\u95f4\u4e2d\u67e5\u627e\u522b\u540d \u5728\u603b\u8def\u7531\u4e2d\uff1a url ( r '^app01/' , include ( 'app01.urls' , namespace = 'app01' )), url ( r '^app02/' , include ( 'app02.urls' , namespace = 'app02' )) \u524d\u7aef\uff1a < a href = \"{% url 'app01:reg' %}\" ></ a > < a href = \"{% url 'app02:reg' %}\" ></ a > \u540e\u7aef\uff1a print ( reverse ( 'app01:reg' )) print ( reverse ( 'app02:reg' )) \u4f46\u662f\u4e5f\u53ef\u4ee5\u4e0d\u7528\uff0c\u4f60\u53ea\u8981 \u4fdd\u8bc1\u8d77\u522b\u540d\u7684\u65f6\u5019\uff0c\u5728\u6574\u4e2adjango\u9879\u76ee\u4e2d\u4e0d\u51b2\u7a81\u5373\u53ef","title":"\u540d\u79f0\u7a7a\u95f4 (namespace)"},{"location":"Django/django%E4%B9%8B%E8%B7%AF%E7%94%B1%E5%B1%82/#django_4","text":"form\u8868\u8fbe\u4f20\u6587\u4ef6\u9700\u8981\u6ce8\u610f\u7684\u4e8b\u9879 method\u5fc5\u987b\u6539\u6210post enctype\u6539\u4e3aformdata\u683c\u5f0f # urls.py from django.conf.urls import url from app02 import views urlpatterns = [ url ( r '^upload/' , views . upload ) ] # views.py def upload ( request ): if request . method == 'POST' : print ( request . FILES ) # django\u4f1a\u5c06\u6587\u4ef6\u7c7b\u578b\u7684\u6570\u636e\u81ea\u52a8\u653e\u5165request.FILES file_obj = request . FILES . get ( 'myfile' ) # \u6587\u4ef6\u5bf9\u8c61 # print(file_obj) # print(file_obj.name) with open ( file_obj . name , 'wb' ) as f : for line in file_obj : f . write ( line ) return render ( request , 'upload.html' )","title":"django\u540e\u7aef\u83b7\u53d6\u6587\u4ef6\u5bf9\u8c61"},{"location":"Django/django%E5%89%8D%E8%A8%80/","text":"django\u57fa\u672c\u6982\u5ff5 \u524d\u8a00 web\u6846\u67b6\u672c\u8d28 \u670d\u52a1\u5668\u7a0b\u5e8f\u548c\u5e94\u7528\u7a0b\u5e8f WSGI python\u4e09\u5927\u4e3b\u6d41web\u6846\u67b6 django flask tornado Django\u5b89\u88c5\u914d\u7f6e \u6ce8\u610f\u4e8b\u9879 \u547d\u4ee4\u884c\u521b\u5efa\u9879\u76ee app\u7684\u6982\u5ff5 pycharm\u521b\u5efa\u9879\u76ee \u76ee\u5f55\u7ed3\u6784 django\u57fa\u672c\u6982\u5ff5 \u00b6 \u524d\u8a00 \u00b6 web\u6846\u67b6\u672c\u8d28 \u00b6 \u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u7406\u89e3\uff1a\u6240\u6709\u7684Web\u5e94\u7528\u672c\u8d28\u4e0a\u5c31\u662f\u4e00\u4e2asocket\u670d\u52a1\u7aef\uff0c\u800c\u7528\u6237\u7684\u6d4f\u89c8\u5668\u5c31\u662f\u4e00\u4e2asocket\u5ba2\u6237\u7aef\u3002 \u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u81ea\u5df1\u5b9e\u73b0Web\u6846\u67b6\u4e86\u3002 \u670d\u52a1\u5668\u7a0b\u5e8f\u548c\u5e94\u7528\u7a0b\u5e8f \u00b6 \u5bf9\u4e8e\u771f\u5b9e\u5f00\u53d1\u4e2d\u7684python web\u7a0b\u5e8f\u6765\u8bf4\uff0c\u4e00\u822c\u4f1a\u5206\u4e3a\u4e24\u90e8\u5206\uff1a\u670d\u52a1\u5668\u7a0b\u5e8f\u548c\u5e94\u7528\u7a0b\u5e8f\u3002 \u670d\u52a1\u5668\u7a0b\u5e8f\u8d1f\u8d23\u5bf9socket\u670d\u52a1\u5668\u8fdb\u884c\u5c01\u88c5\uff0c\u5e76\u5728\u8bf7\u6c42\u5230\u6765\u65f6\uff0c\u5bf9\u8bf7\u6c42\u7684\u5404\u79cd\u6570\u636e\u8fdb\u884c\u6574\u7406\u3002 \u5e94\u7528\u7a0b\u5e8f\u5219\u8d1f\u8d23\u5177\u4f53\u7684\u903b\u8f91\u5904\u7406\u3002\u4e3a\u4e86\u65b9\u4fbf\u5e94\u7528\u7a0b\u5e8f\u7684\u5f00\u53d1\uff0c\u5c31\u51fa\u73b0\u4e86\u4f17\u591a\u7684Web\u6846\u67b6\uff0c\u4f8b\u5982\uff1aDjango\u3001Flask\u3001web.py \u7b49\u3002\u4e0d\u540c\u7684\u6846\u67b6\u6709\u4e0d\u540c\u7684\u5f00\u53d1\u65b9\u5f0f\uff0c\u4f46\u662f\u65e0\u8bba\u5982\u4f55\uff0c\u5f00\u53d1\u51fa\u7684\u5e94\u7528\u7a0b\u5e8f\u90fd\u8981\u548c\u670d\u52a1\u5668\u7a0b\u5e8f\u914d\u5408\uff0c\u624d\u80fd\u4e3a\u7528\u6237\u63d0\u4f9b\u670d\u52a1\u3002 \u8fd9\u6837\uff0c\u670d\u52a1\u5668\u7a0b\u5e8f\u5c31\u9700\u8981\u4e3a\u4e0d\u540c\u7684\u6846\u67b6\u63d0\u4f9b\u4e0d\u540c\u7684\u652f\u6301\u3002\u8fd9\u6837\u6df7\u4e71\u7684\u5c40\u9762\u65e0\u8bba\u5bf9\u4e8e\u670d\u52a1\u5668\u8fd8\u662f\u6846\u67b6\uff0c\u90fd\u662f\u4e0d\u597d\u7684\u3002\u5bf9\u670d\u52a1\u5668\u6765\u8bf4\uff0c\u9700\u8981\u652f\u6301\u5404\u79cd\u4e0d\u540c\u6846\u67b6\uff0c\u5bf9\u6846\u67b6\u6765\u8bf4\uff0c\u53ea\u6709\u652f\u6301\u5b83\u7684\u670d\u52a1\u5668\u624d\u80fd\u88ab\u5f00\u53d1\u51fa\u7684\u5e94\u7528\u4f7f\u7528\u3002 \u8fd9\u65f6\u5019\uff0c\u6807\u51c6\u5316\u5c31\u53d8\u5f97\u5c24\u4e3a\u91cd\u8981\u3002\u6211\u4eec\u53ef\u4ee5\u8bbe\u7acb\u4e00\u4e2a\u6807\u51c6\uff0c\u53ea\u8981\u670d\u52a1\u5668\u7a0b\u5e8f\u652f\u6301\u8fd9\u4e2a\u6807\u51c6\uff0c\u6846\u67b6\u4e5f\u652f\u6301\u8fd9\u4e2a\u6807\u51c6\uff0c\u90a3\u4e48\u4ed6\u4eec\u5c31\u53ef\u4ee5\u914d\u5408\u4f7f\u7528\u3002\u4e00\u65e6\u6807\u51c6\u786e\u5b9a\uff0c\u53cc\u65b9\u5404\u81ea\u5b9e\u73b0\u3002\u8fd9\u6837\uff0c\u670d\u52a1\u5668\u53ef\u4ee5\u652f\u6301\u66f4\u591a\u652f\u6301\u6807\u51c6\u7684\u6846\u67b6\uff0c\u6846\u67b6\u4e5f\u53ef\u4ee5\u4f7f\u7528\u66f4\u591a\u652f\u6301\u6807\u51c6\u7684\u670d\u52a1\u5668\u3002 WSGI \uff08Web Server Gateway Interface\uff09\u5c31\u662f\u4e00\u79cd\u89c4\u8303\uff0c\u5b83\u5b9a\u4e49\u4e86\u4f7f\u7528Python\u7f16\u5199\u7684web\u5e94\u7528\u7a0b\u5e8f\u4e0eweb\u670d\u52a1\u5668\u7a0b\u5e8f\u4e4b\u95f4\u7684\u63a5\u53e3\u683c\u5f0f\uff0c\u5b9e\u73b0web\u5e94\u7528\u7a0b\u5e8f\u4e0eweb\u670d\u52a1\u5668\u7a0b\u5e8f\u95f4\u7684\u89e3\u8026\u3002 \u5e38\u7528\u7684WSGI\u670d\u52a1\u5668\u6709uwsgi\u3001Gunicorn\u3002\u800cPython\u6807\u51c6\u5e93\u63d0\u4f9b\u7684\u72ec\u7acbWSGI\u670d\u52a1\u5668\u53ebwsgiref\uff0cDjango\u5f00\u53d1\u73af\u5883\u7528\u7684\u5c31\u662f\u8fd9\u4e2a\u6a21\u5757\u6765\u505a\u670d\u52a1\u5668\u3002 WSGI \u00b6 wsgi server (\u6bd4\u5982uWSGI) \u8981\u548c wsgi application(\u6bd4\u5982django )\u4ea4\u4e92,uwsgi\u9700\u8981\u5c06\u8fc7\u6765\u7684\u8bf7\u6c42\u8f6c\u7ed9django \u5904\u7406,\u90a3\u4e48uWSGI \u548c django\u7684\u4ea4\u4e92\u548c\u8c03\u7528\u5c31\u9700\u8981\u4e00\u4e2a\u7edf\u4e00\u7684\u89c4\u8303,\u8fd9\u4e2a\u89c4\u8303\u5c31\u662fWSGI WSGI(Web Server GatewayInterface)\u3002 WSGI,\u5168\u79f0 Web Server Gateway Interface,\u6216\u8005 Python Web Server Gateway Interface ,\u662f\u4e3aPython \u8bed\u8a00\u5b9a\u4e49\u7684 Web \u670d\u52a1\u5668\u548c Web \u5e94\u7528\u7a0b\u5e8f\u6216\u6846\u67b6\u4e4b\u95f4\u7684\u4e00\u79cd\u7b80\u5355\u800c\u901a\u7528\u7684\u63a5\u53e3\u3002 WSGI \u7684\u5b98\u65b9\u5b9a\u4e49\u662f,the Python Web Server Gateway Interface\u3002\u4ece\u540d\u5b57\u5c31\u53ef\u4ee5\u770b\u51fa\u6765,\u8fd9\u4e1c\u897f\u662f\u4e00\u4e2aGateway,\u4e5f\u5c31\u662f\u7f51\u5173\u3002\u7f51\u5173\u7684\u4f5c\u7528\u5c31\u662f\u5728\u534f\u8bae\u4e4b\u95f4\u8fdb\u884c\u8f6c\u6362\u3002 WSGI \u662f\u4f5c\u4e3a Web \u670d\u52a1\u5668\u4e0e Web \u5e94\u7528\u7a0b\u5e8f\u6216\u5e94\u7528\u6846\u67b6\u4e4b\u95f4\u7684\u4e00\u79cd\u4f4e\u7ea7\u522b\u7684\u63a5\u53e3 python\u4e09\u5927\u4e3b\u6d41web\u6846\u67b6 \u00b6 django \u00b6 \u5927\u578b\u6846\u67b6\uff0c\u81ea\u5e26\u7684\u7ec4\u4ef6\u548c\u529f\u80fd\u975e\u5e38\u591a\uff1b\u4e0d\u8db3\u4e4b\u5904\u5c31\u662f\u5199\u5c0f\u9879\u76ee\u65f6\uff0c\u53ef\u80fd\u4f1a\u5f88\u7b28\u91cd \u5e76\u53d1\u4e0d\u884c,1000\u5de6\u53f3 socket\u90e8\u5206\u7528\u7684\u522b\u4eba\u7684wsgiref\uff08django\u9ed8\u8ba4\u7684\uff09 \u8def\u7531\u5339\u914d\u81ea\u5df1\u5199\u7684 \u6a21\u677f\u8bed\u6cd5\u662f\u81ea\u5df1\u5199\u7684 flask \u00b6 \u5c0f\u800c\u7cbe \u77ed\u5c0f\u7cbe\u608d \u81ea\u5e26\u7684\u7ec4\u4ef6\u548c\u529f\u80fd\u7279\u522b\u7279\u522b\u5c11 \uff0c\u57fa\u672c\u5168\u90e8\u4f9d\u8d56\u4e8e\u7b2c\u4e09\u65b9\u7ec4\u4ef6 \u4e0d\u8db3\u4e4b\u5904: \u53d7\u9650\u4e8e\u7b2c\u4e09\u65b9\u6a21\u5757\u7684\u5f71\u54cd\u6bd4\u8f83\u5927 \u5982\u679c\u5c06flask\u6240\u6709\u7b2c\u4e09\u65b9\u6a21\u5757\u52a0\u8d77\u6765 \u80fd\u591f\u76f4\u63a5\u76d6\u8fc7django socket\u90e8\u5206\u7528\u7684\u522b\u4eba\u7684werkzeug \u8def\u7531\u5339\u914d\u81ea\u5df1\u5199\u7684 \u6a21\u677f\u8bed\u6cd5\u7528\u7684\u522b\u4eba\u7684jinja2 tornado \u00b6 \u7279\u70b9\uff1a\u5f02\u6b65\u975e\u963b\u585e \u8fd9\u4e2a\u6846\u67b6\u751a\u81f3\u53ef\u4ee5\u7528\u6765\u5f00\u53d1\u6e38\u620f\u670d\u52a1\u5668 socket\u3001\u8def\u7531\u5339\u914d\u3001\u6a21\u677f\u8bed\u6cd5\u90fd\u662f\u81ea\u5df1\u5199\u7684 Django\u5b89\u88c5\u914d\u7f6e \u00b6 \u6ce8\u610f\u4e8b\u9879 \u00b6 \u8ba1\u7b97\u673a\u540d\u79f0\u4e0d\u80fd\u6709\u4e2d\u6587 python\u89e3\u91ca\u5668\u4e0d\u8981\u4f7f\u75283.7\u7248\u672c\uff0c\u63a8\u8350\u4f7f\u75283.4-3.6\u7248\u672c \u4e00\u4e2apycharm\u7a97\u53e3 \u53ea\u80fd\u8dd1\u4e00\u4e2a\u9879\u76ee django\u7248\u672c\u4f7f\u75281.11 \u5b89\u88c5django\u6307\u5b9a\u7248\u672c \u4e24\u79cd\u65b9\u6cd5 pip\u5b89\u88c5\uff1a pip install django==1.11.11 pycharm\u5b89\u88c5\u6307\u5b9a\u7248\u672c \u68c0\u9a8cdjango\u662f\u5426\u5b89\u88c5\u6210\u529f\uff1a \u547d\u4ee4\u884c\u6267\u884c\uff1a django-admin \uff0c\u6709\u8fd4\u56de\u7ed3\u679c\u8bf4\u660e\u5b89\u88c5\u6210\u529f \u547d\u4ee4\u884c\u521b\u5efa\u9879\u76ee \u00b6 \u521b\u5efadjango\u9879\u76ee \uff1a django-admin startproject \u9879\u76ee\u540d(\u5982mysite) \u542f\u52a8django\u9879\u76ee\uff1a python manager.py runserver \uff0c\u6216\u8005\u6307\u5b9aip\u548c\u7aef\u53e3\uff1a python manager . py runserver 127.0 . 0.1 : 8000 # \u9ed8\u8ba4\u542f\u52a8\u5728\u672c\u57308000\u7aef\u53e3 \u521b\u5efaapp\u5e94\u7528\uff08django\u652f\u6301\u591aapp\u5f00\u53d1\uff09\uff1a python manager.py startapp app01 app\u7684\u6982\u5ff5 \u00b6 django\u662f\u4e00\u4e2a\u4ee5\u5f00\u53d1app\u4e3a\u53ea\u8981\u529f\u80fd\u7684web\u6846\u67b6\uff0capp\u5c31\u662fapplication\u5e94\u7528\u7684\u610f\u601d \u4e00\u4e2adjango\u9879\u76ee\u5c31\u76f8\u5f53\u4e8e\u4e00\u6240\u5927\u5b66\uff0c\u800c\u4e00\u4e2a\u4e2aapp\u76f8\u5f53\u4e8e\u5927\u5b66\u91cc\u7684\u5b66\u9662\u3002 \u800c \u4e00\u4e2a\u7a7a\u7684django\u9879\u76ee\u672c\u8eab\u6ca1\u6709\u4efb\u4f55\u4f5c\u7528\uff0c\u4ec5\u4ec5\u4e3aapp\u63d0\u4f9b\u524d\u671f\u7684\u73af\u5883\u914d\u7f6e\uff0capp\u624d\u662f\u4e00\u4e2a\u4e2a\u5177\u4f53\u7684\u529f\u80fd\uff0c\u6bcf\u4e2aapp\u90fd\u6709\u81ea\u5df1\u72ec\u7acb\u7684\u529f\u80fd\u3002 \u6ce8\u610f\uff1a\u521b\u5efa\u597d\u7684app\u9700\u8981\u5728django\u914d\u7f6e\u6587\u4ef6\u4e2d\u6ce8\u518c\u65b9\u53ef\u751f\u6548\uff1a # \u5728\u914d\u7f6e\u6587\u4ef6settings.py\u4e2d\u914d\u7f6e INSTALLED_APPS = [ 'django.contrib.admin' , 'django.contrib.auth' , 'django.contrib.contenttypes' , 'django.contrib.sessions' , 'django.contrib.messages' , 'django.contrib.staticfiles' , 'app01' , # \u7b80\u6613\u5199\u6cd5 'app01.apps.App01Config' # \u5b8c\u6574\u5199\u6cd5 ] \u547d\u4ee4\u884c\u4f20\u521b\u5efa\u9879\u76ee\u6ce8\u610f\uff1a \u4e0d\u4f1a\u81ea\u52a8\u521b\u5efatemplates\u6587\u4ef6\u5939\uff0c\u9700\u8981\u624b\u52a8\u521b\u5efa templates\u8def\u5f84\u9700\u8981\u624b\u52a8\u6dfb\u52a0\u5230\u914d\u7f6e\u6587\u4ef6\u4e2d'DIRS': [os.path.join(BASE_DIR, 'templates')] pycharm\u521b\u5efa\u9879\u76ee \u00b6 \u6ce8\u610f\uff1a \u4e00\u5b9a\u8981\u786e\u4fdd\u540c\u4e00\u4e2a\u7aef\u53e3 \u540c\u4e00\u65f6\u95f4\u53ea\u80fd\u542f\u4e00\u4e2adjango\u9879\u76ee templates\u8def\u5f84\u5982\u679c\u6ca1\u6709\uff0c\u9700\u8981\u624b\u52a8\u6dfb\u52a0\u5230\u914d\u7f6e\u6587\u4ef6\u4e2d 'DIRS': [os.path.join(BASE_DIR, 'templates')] \u76ee\u5f55\u7ed3\u6784 \u00b6 mysite / \u251c\u2500\u2500 manage . py # django\u7684\u5165\u53e3\u6587\u4ef6 \u251c\u2500\u2500 templates # \u6a21\u677f\u6587\u4ef6\u5939\uff0c\u5b58\u653ehtml\u6587\u4ef6 \u251c\u2500\u2500 db . splite3 # django\u81ea\u5e26\u7684\u6570\u636e\u5e93\u6587\u4ef6 \u2514\u2500\u2500 mysite # \u9879\u76ee\u76ee\u5f55 \u251c\u2500\u2500 __init__ . py \u251c\u2500\u2500 settings . py # \u66b4\u9732\u7ed9\u7528\u6237\u53ef\u4ee5\u914d\u7f6e\u7684\u914d\u7f6e\u6587\u4ef6 \u251c\u2500\u2500 urls . py # \u8def\u7531 --> URL\u548c\u51fd\u6570\u7684\u5bf9\u5e94\u5173\u7cfb \u2514\u2500\u2500 wsgi . py # runserver\u547d\u4ee4\u5c31\u4f7f\u7528wsgiref\u6a21\u5757\u505a\u7b80\u5355\u7684web server \u251c\u2500\u2500 app01 # \u5e94\u7528\u6587\u4ef6\u5939\u540d \u251c\u2500\u2500 migrations\u6587\u4ef6\u5939 # \u6240\u6709\u6570\u636e\u5e93\u76f8\u5173\u7684\u64cd\u4f5c\u8bb0\u5f55 \u251c\u2500\u2500 __init__ . py \u251c\u2500\u2500 admin . py # django admin\u540e\u53f0\u7ba1\u7406 \u251c\u2500\u2500 apps . py # \u6ce8\u518cqpp\u4f7f\u7528 \u251c\u2500\u2500 models . py # \u653e\u6570\u636e\u5e93\u76f8\u5173\u7684\u6a21\u578b\u7c7b \u251c\u2500\u2500 tests . py # \u6d4b\u8bd5\u6587\u4ef6 \u251c\u2500\u2500 views . py # \u5904\u7406\u4e1a\u52a1\u903b\u8f91\u7684\u89c6\u56fe\u51fd\u6570","title":"django\u524d\u8a00"},{"location":"Django/django%E5%89%8D%E8%A8%80/#django","text":"","title":"django\u57fa\u672c\u6982\u5ff5"},{"location":"Django/django%E5%89%8D%E8%A8%80/#_1","text":"","title":"\u524d\u8a00"},{"location":"Django/django%E5%89%8D%E8%A8%80/#web","text":"\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u7406\u89e3\uff1a\u6240\u6709\u7684Web\u5e94\u7528\u672c\u8d28\u4e0a\u5c31\u662f\u4e00\u4e2asocket\u670d\u52a1\u7aef\uff0c\u800c\u7528\u6237\u7684\u6d4f\u89c8\u5668\u5c31\u662f\u4e00\u4e2asocket\u5ba2\u6237\u7aef\u3002 \u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u81ea\u5df1\u5b9e\u73b0Web\u6846\u67b6\u4e86\u3002","title":"web\u6846\u67b6\u672c\u8d28"},{"location":"Django/django%E5%89%8D%E8%A8%80/#_2","text":"\u5bf9\u4e8e\u771f\u5b9e\u5f00\u53d1\u4e2d\u7684python web\u7a0b\u5e8f\u6765\u8bf4\uff0c\u4e00\u822c\u4f1a\u5206\u4e3a\u4e24\u90e8\u5206\uff1a\u670d\u52a1\u5668\u7a0b\u5e8f\u548c\u5e94\u7528\u7a0b\u5e8f\u3002 \u670d\u52a1\u5668\u7a0b\u5e8f\u8d1f\u8d23\u5bf9socket\u670d\u52a1\u5668\u8fdb\u884c\u5c01\u88c5\uff0c\u5e76\u5728\u8bf7\u6c42\u5230\u6765\u65f6\uff0c\u5bf9\u8bf7\u6c42\u7684\u5404\u79cd\u6570\u636e\u8fdb\u884c\u6574\u7406\u3002 \u5e94\u7528\u7a0b\u5e8f\u5219\u8d1f\u8d23\u5177\u4f53\u7684\u903b\u8f91\u5904\u7406\u3002\u4e3a\u4e86\u65b9\u4fbf\u5e94\u7528\u7a0b\u5e8f\u7684\u5f00\u53d1\uff0c\u5c31\u51fa\u73b0\u4e86\u4f17\u591a\u7684Web\u6846\u67b6\uff0c\u4f8b\u5982\uff1aDjango\u3001Flask\u3001web.py \u7b49\u3002\u4e0d\u540c\u7684\u6846\u67b6\u6709\u4e0d\u540c\u7684\u5f00\u53d1\u65b9\u5f0f\uff0c\u4f46\u662f\u65e0\u8bba\u5982\u4f55\uff0c\u5f00\u53d1\u51fa\u7684\u5e94\u7528\u7a0b\u5e8f\u90fd\u8981\u548c\u670d\u52a1\u5668\u7a0b\u5e8f\u914d\u5408\uff0c\u624d\u80fd\u4e3a\u7528\u6237\u63d0\u4f9b\u670d\u52a1\u3002 \u8fd9\u6837\uff0c\u670d\u52a1\u5668\u7a0b\u5e8f\u5c31\u9700\u8981\u4e3a\u4e0d\u540c\u7684\u6846\u67b6\u63d0\u4f9b\u4e0d\u540c\u7684\u652f\u6301\u3002\u8fd9\u6837\u6df7\u4e71\u7684\u5c40\u9762\u65e0\u8bba\u5bf9\u4e8e\u670d\u52a1\u5668\u8fd8\u662f\u6846\u67b6\uff0c\u90fd\u662f\u4e0d\u597d\u7684\u3002\u5bf9\u670d\u52a1\u5668\u6765\u8bf4\uff0c\u9700\u8981\u652f\u6301\u5404\u79cd\u4e0d\u540c\u6846\u67b6\uff0c\u5bf9\u6846\u67b6\u6765\u8bf4\uff0c\u53ea\u6709\u652f\u6301\u5b83\u7684\u670d\u52a1\u5668\u624d\u80fd\u88ab\u5f00\u53d1\u51fa\u7684\u5e94\u7528\u4f7f\u7528\u3002 \u8fd9\u65f6\u5019\uff0c\u6807\u51c6\u5316\u5c31\u53d8\u5f97\u5c24\u4e3a\u91cd\u8981\u3002\u6211\u4eec\u53ef\u4ee5\u8bbe\u7acb\u4e00\u4e2a\u6807\u51c6\uff0c\u53ea\u8981\u670d\u52a1\u5668\u7a0b\u5e8f\u652f\u6301\u8fd9\u4e2a\u6807\u51c6\uff0c\u6846\u67b6\u4e5f\u652f\u6301\u8fd9\u4e2a\u6807\u51c6\uff0c\u90a3\u4e48\u4ed6\u4eec\u5c31\u53ef\u4ee5\u914d\u5408\u4f7f\u7528\u3002\u4e00\u65e6\u6807\u51c6\u786e\u5b9a\uff0c\u53cc\u65b9\u5404\u81ea\u5b9e\u73b0\u3002\u8fd9\u6837\uff0c\u670d\u52a1\u5668\u53ef\u4ee5\u652f\u6301\u66f4\u591a\u652f\u6301\u6807\u51c6\u7684\u6846\u67b6\uff0c\u6846\u67b6\u4e5f\u53ef\u4ee5\u4f7f\u7528\u66f4\u591a\u652f\u6301\u6807\u51c6\u7684\u670d\u52a1\u5668\u3002 WSGI \uff08Web Server Gateway Interface\uff09\u5c31\u662f\u4e00\u79cd\u89c4\u8303\uff0c\u5b83\u5b9a\u4e49\u4e86\u4f7f\u7528Python\u7f16\u5199\u7684web\u5e94\u7528\u7a0b\u5e8f\u4e0eweb\u670d\u52a1\u5668\u7a0b\u5e8f\u4e4b\u95f4\u7684\u63a5\u53e3\u683c\u5f0f\uff0c\u5b9e\u73b0web\u5e94\u7528\u7a0b\u5e8f\u4e0eweb\u670d\u52a1\u5668\u7a0b\u5e8f\u95f4\u7684\u89e3\u8026\u3002 \u5e38\u7528\u7684WSGI\u670d\u52a1\u5668\u6709uwsgi\u3001Gunicorn\u3002\u800cPython\u6807\u51c6\u5e93\u63d0\u4f9b\u7684\u72ec\u7acbWSGI\u670d\u52a1\u5668\u53ebwsgiref\uff0cDjango\u5f00\u53d1\u73af\u5883\u7528\u7684\u5c31\u662f\u8fd9\u4e2a\u6a21\u5757\u6765\u505a\u670d\u52a1\u5668\u3002","title":"\u670d\u52a1\u5668\u7a0b\u5e8f\u548c\u5e94\u7528\u7a0b\u5e8f"},{"location":"Django/django%E5%89%8D%E8%A8%80/#wsgi","text":"wsgi server (\u6bd4\u5982uWSGI) \u8981\u548c wsgi application(\u6bd4\u5982django )\u4ea4\u4e92,uwsgi\u9700\u8981\u5c06\u8fc7\u6765\u7684\u8bf7\u6c42\u8f6c\u7ed9django \u5904\u7406,\u90a3\u4e48uWSGI \u548c django\u7684\u4ea4\u4e92\u548c\u8c03\u7528\u5c31\u9700\u8981\u4e00\u4e2a\u7edf\u4e00\u7684\u89c4\u8303,\u8fd9\u4e2a\u89c4\u8303\u5c31\u662fWSGI WSGI(Web Server GatewayInterface)\u3002 WSGI,\u5168\u79f0 Web Server Gateway Interface,\u6216\u8005 Python Web Server Gateway Interface ,\u662f\u4e3aPython \u8bed\u8a00\u5b9a\u4e49\u7684 Web \u670d\u52a1\u5668\u548c Web \u5e94\u7528\u7a0b\u5e8f\u6216\u6846\u67b6\u4e4b\u95f4\u7684\u4e00\u79cd\u7b80\u5355\u800c\u901a\u7528\u7684\u63a5\u53e3\u3002 WSGI \u7684\u5b98\u65b9\u5b9a\u4e49\u662f,the Python Web Server Gateway Interface\u3002\u4ece\u540d\u5b57\u5c31\u53ef\u4ee5\u770b\u51fa\u6765,\u8fd9\u4e1c\u897f\u662f\u4e00\u4e2aGateway,\u4e5f\u5c31\u662f\u7f51\u5173\u3002\u7f51\u5173\u7684\u4f5c\u7528\u5c31\u662f\u5728\u534f\u8bae\u4e4b\u95f4\u8fdb\u884c\u8f6c\u6362\u3002 WSGI \u662f\u4f5c\u4e3a Web \u670d\u52a1\u5668\u4e0e Web \u5e94\u7528\u7a0b\u5e8f\u6216\u5e94\u7528\u6846\u67b6\u4e4b\u95f4\u7684\u4e00\u79cd\u4f4e\u7ea7\u522b\u7684\u63a5\u53e3","title":"WSGI"},{"location":"Django/django%E5%89%8D%E8%A8%80/#pythonweb","text":"","title":"python\u4e09\u5927\u4e3b\u6d41web\u6846\u67b6"},{"location":"Django/django%E5%89%8D%E8%A8%80/#django_1","text":"\u5927\u578b\u6846\u67b6\uff0c\u81ea\u5e26\u7684\u7ec4\u4ef6\u548c\u529f\u80fd\u975e\u5e38\u591a\uff1b\u4e0d\u8db3\u4e4b\u5904\u5c31\u662f\u5199\u5c0f\u9879\u76ee\u65f6\uff0c\u53ef\u80fd\u4f1a\u5f88\u7b28\u91cd \u5e76\u53d1\u4e0d\u884c,1000\u5de6\u53f3 socket\u90e8\u5206\u7528\u7684\u522b\u4eba\u7684wsgiref\uff08django\u9ed8\u8ba4\u7684\uff09 \u8def\u7531\u5339\u914d\u81ea\u5df1\u5199\u7684 \u6a21\u677f\u8bed\u6cd5\u662f\u81ea\u5df1\u5199\u7684","title":"django"},{"location":"Django/django%E5%89%8D%E8%A8%80/#flask","text":"\u5c0f\u800c\u7cbe \u77ed\u5c0f\u7cbe\u608d \u81ea\u5e26\u7684\u7ec4\u4ef6\u548c\u529f\u80fd\u7279\u522b\u7279\u522b\u5c11 \uff0c\u57fa\u672c\u5168\u90e8\u4f9d\u8d56\u4e8e\u7b2c\u4e09\u65b9\u7ec4\u4ef6 \u4e0d\u8db3\u4e4b\u5904: \u53d7\u9650\u4e8e\u7b2c\u4e09\u65b9\u6a21\u5757\u7684\u5f71\u54cd\u6bd4\u8f83\u5927 \u5982\u679c\u5c06flask\u6240\u6709\u7b2c\u4e09\u65b9\u6a21\u5757\u52a0\u8d77\u6765 \u80fd\u591f\u76f4\u63a5\u76d6\u8fc7django socket\u90e8\u5206\u7528\u7684\u522b\u4eba\u7684werkzeug \u8def\u7531\u5339\u914d\u81ea\u5df1\u5199\u7684 \u6a21\u677f\u8bed\u6cd5\u7528\u7684\u522b\u4eba\u7684jinja2","title":"flask"},{"location":"Django/django%E5%89%8D%E8%A8%80/#tornado","text":"\u7279\u70b9\uff1a\u5f02\u6b65\u975e\u963b\u585e \u8fd9\u4e2a\u6846\u67b6\u751a\u81f3\u53ef\u4ee5\u7528\u6765\u5f00\u53d1\u6e38\u620f\u670d\u52a1\u5668 socket\u3001\u8def\u7531\u5339\u914d\u3001\u6a21\u677f\u8bed\u6cd5\u90fd\u662f\u81ea\u5df1\u5199\u7684","title":"tornado"},{"location":"Django/django%E5%89%8D%E8%A8%80/#django_2","text":"","title":"Django\u5b89\u88c5\u914d\u7f6e"},{"location":"Django/django%E5%89%8D%E8%A8%80/#_3","text":"\u8ba1\u7b97\u673a\u540d\u79f0\u4e0d\u80fd\u6709\u4e2d\u6587 python\u89e3\u91ca\u5668\u4e0d\u8981\u4f7f\u75283.7\u7248\u672c\uff0c\u63a8\u8350\u4f7f\u75283.4-3.6\u7248\u672c \u4e00\u4e2apycharm\u7a97\u53e3 \u53ea\u80fd\u8dd1\u4e00\u4e2a\u9879\u76ee django\u7248\u672c\u4f7f\u75281.11 \u5b89\u88c5django\u6307\u5b9a\u7248\u672c \u4e24\u79cd\u65b9\u6cd5 pip\u5b89\u88c5\uff1a pip install django==1.11.11 pycharm\u5b89\u88c5\u6307\u5b9a\u7248\u672c \u68c0\u9a8cdjango\u662f\u5426\u5b89\u88c5\u6210\u529f\uff1a \u547d\u4ee4\u884c\u6267\u884c\uff1a django-admin \uff0c\u6709\u8fd4\u56de\u7ed3\u679c\u8bf4\u660e\u5b89\u88c5\u6210\u529f","title":"\u6ce8\u610f\u4e8b\u9879"},{"location":"Django/django%E5%89%8D%E8%A8%80/#_4","text":"\u521b\u5efadjango\u9879\u76ee \uff1a django-admin startproject \u9879\u76ee\u540d(\u5982mysite) \u542f\u52a8django\u9879\u76ee\uff1a python manager.py runserver \uff0c\u6216\u8005\u6307\u5b9aip\u548c\u7aef\u53e3\uff1a python manager . py runserver 127.0 . 0.1 : 8000 # \u9ed8\u8ba4\u542f\u52a8\u5728\u672c\u57308000\u7aef\u53e3 \u521b\u5efaapp\u5e94\u7528\uff08django\u652f\u6301\u591aapp\u5f00\u53d1\uff09\uff1a python manager.py startapp app01","title":"\u547d\u4ee4\u884c\u521b\u5efa\u9879\u76ee"},{"location":"Django/django%E5%89%8D%E8%A8%80/#app","text":"django\u662f\u4e00\u4e2a\u4ee5\u5f00\u53d1app\u4e3a\u53ea\u8981\u529f\u80fd\u7684web\u6846\u67b6\uff0capp\u5c31\u662fapplication\u5e94\u7528\u7684\u610f\u601d \u4e00\u4e2adjango\u9879\u76ee\u5c31\u76f8\u5f53\u4e8e\u4e00\u6240\u5927\u5b66\uff0c\u800c\u4e00\u4e2a\u4e2aapp\u76f8\u5f53\u4e8e\u5927\u5b66\u91cc\u7684\u5b66\u9662\u3002 \u800c \u4e00\u4e2a\u7a7a\u7684django\u9879\u76ee\u672c\u8eab\u6ca1\u6709\u4efb\u4f55\u4f5c\u7528\uff0c\u4ec5\u4ec5\u4e3aapp\u63d0\u4f9b\u524d\u671f\u7684\u73af\u5883\u914d\u7f6e\uff0capp\u624d\u662f\u4e00\u4e2a\u4e2a\u5177\u4f53\u7684\u529f\u80fd\uff0c\u6bcf\u4e2aapp\u90fd\u6709\u81ea\u5df1\u72ec\u7acb\u7684\u529f\u80fd\u3002 \u6ce8\u610f\uff1a\u521b\u5efa\u597d\u7684app\u9700\u8981\u5728django\u914d\u7f6e\u6587\u4ef6\u4e2d\u6ce8\u518c\u65b9\u53ef\u751f\u6548\uff1a # \u5728\u914d\u7f6e\u6587\u4ef6settings.py\u4e2d\u914d\u7f6e INSTALLED_APPS = [ 'django.contrib.admin' , 'django.contrib.auth' , 'django.contrib.contenttypes' , 'django.contrib.sessions' , 'django.contrib.messages' , 'django.contrib.staticfiles' , 'app01' , # \u7b80\u6613\u5199\u6cd5 'app01.apps.App01Config' # \u5b8c\u6574\u5199\u6cd5 ] \u547d\u4ee4\u884c\u4f20\u521b\u5efa\u9879\u76ee\u6ce8\u610f\uff1a \u4e0d\u4f1a\u81ea\u52a8\u521b\u5efatemplates\u6587\u4ef6\u5939\uff0c\u9700\u8981\u624b\u52a8\u521b\u5efa templates\u8def\u5f84\u9700\u8981\u624b\u52a8\u6dfb\u52a0\u5230\u914d\u7f6e\u6587\u4ef6\u4e2d'DIRS': [os.path.join(BASE_DIR, 'templates')]","title":"app\u7684\u6982\u5ff5"},{"location":"Django/django%E5%89%8D%E8%A8%80/#pycharm","text":"\u6ce8\u610f\uff1a \u4e00\u5b9a\u8981\u786e\u4fdd\u540c\u4e00\u4e2a\u7aef\u53e3 \u540c\u4e00\u65f6\u95f4\u53ea\u80fd\u542f\u4e00\u4e2adjango\u9879\u76ee templates\u8def\u5f84\u5982\u679c\u6ca1\u6709\uff0c\u9700\u8981\u624b\u52a8\u6dfb\u52a0\u5230\u914d\u7f6e\u6587\u4ef6\u4e2d 'DIRS': [os.path.join(BASE_DIR, 'templates')]","title":"pycharm\u521b\u5efa\u9879\u76ee"},{"location":"Django/django%E5%89%8D%E8%A8%80/#_5","text":"mysite / \u251c\u2500\u2500 manage . py # django\u7684\u5165\u53e3\u6587\u4ef6 \u251c\u2500\u2500 templates # \u6a21\u677f\u6587\u4ef6\u5939\uff0c\u5b58\u653ehtml\u6587\u4ef6 \u251c\u2500\u2500 db . splite3 # django\u81ea\u5e26\u7684\u6570\u636e\u5e93\u6587\u4ef6 \u2514\u2500\u2500 mysite # \u9879\u76ee\u76ee\u5f55 \u251c\u2500\u2500 __init__ . py \u251c\u2500\u2500 settings . py # \u66b4\u9732\u7ed9\u7528\u6237\u53ef\u4ee5\u914d\u7f6e\u7684\u914d\u7f6e\u6587\u4ef6 \u251c\u2500\u2500 urls . py # \u8def\u7531 --> URL\u548c\u51fd\u6570\u7684\u5bf9\u5e94\u5173\u7cfb \u2514\u2500\u2500 wsgi . py # runserver\u547d\u4ee4\u5c31\u4f7f\u7528wsgiref\u6a21\u5757\u505a\u7b80\u5355\u7684web server \u251c\u2500\u2500 app01 # \u5e94\u7528\u6587\u4ef6\u5939\u540d \u251c\u2500\u2500 migrations\u6587\u4ef6\u5939 # \u6240\u6709\u6570\u636e\u5e93\u76f8\u5173\u7684\u64cd\u4f5c\u8bb0\u5f55 \u251c\u2500\u2500 __init__ . py \u251c\u2500\u2500 admin . py # django admin\u540e\u53f0\u7ba1\u7406 \u251c\u2500\u2500 apps . py # \u6ce8\u518cqpp\u4f7f\u7528 \u251c\u2500\u2500 models . py # \u653e\u6570\u636e\u5e93\u76f8\u5173\u7684\u6a21\u578b\u7c7b \u251c\u2500\u2500 tests . py # \u6d4b\u8bd5\u6587\u4ef6 \u251c\u2500\u2500 views . py # \u5904\u7406\u4e1a\u52a1\u903b\u8f91\u7684\u89c6\u56fe\u51fd\u6570","title":"\u76ee\u5f55\u7ed3\u6784"},{"location":"Django/django%E5%9F%BA%E7%A1%80%E4%B8%89%E6%9D%BF%E6%96%A7/","text":"django\u57fa\u7840\u5fc5\u5907\u4e09\u677f\u65a7 \u00b6 \u4e3b\u8981\u64cd\u4f5cviews.py\u548curls.py HttpResponse \u00b6 \u5185\u90e8\u4f20\u5165\u4e00\u4e2a\u5b57\u7b26\u4e32\u53c2\u6570\uff0c\u8fd4\u56de\u7ed9\u6d4f\u89c8\u5668 from django.shortcuts import render , HttpResponse , redirect def index ( request ): return HttpResponse ( '\u6709\u70b9\u610f\u601d' ) render \u00b6 render\u53ef\u4ee5\u8fd4\u56dehtml\u6587\u4ef6\uff0c\u53ef\u4ee5\u7ed9html\u9875\u9762\u4f20\u503c def login ( request ): user_dic = { 'username' : 'neo' , 'password' : '123' } return render ( request , 'login.html' , { 'user_dic' : user_dic }) redirect \u00b6 \u91cd\u5b9a\u5411\uff0c\u63a5\u53d7\u4e00\u4e2aURL\u53c2\u6570\uff0c\u8868\u793a\u8df3\u8f6c\u6307\u5b9a\u7684URL\u3002 \u53ef\u4ee5\u662f\u540e\u7f00\u540d\uff0c\u4e5f\u53ef\u4ee5\u662f\u5168\u8def\u5f84 def home ( request ): return redirect ( '/index' ) # return redirect('https://coding.net/') \u8fd9\u4e09\u4e2a\u5bf9\u8c61\u7236\u7c7b\u90fd\u662fHttpResponse\u5bf9\u8c61","title":"django\u57fa\u7840\u4e09\u677f\u65a7"},{"location":"Django/django%E5%9F%BA%E7%A1%80%E4%B8%89%E6%9D%BF%E6%96%A7/#django","text":"\u4e3b\u8981\u64cd\u4f5cviews.py\u548curls.py","title":"django\u57fa\u7840\u5fc5\u5907\u4e09\u677f\u65a7"},{"location":"Django/django%E5%9F%BA%E7%A1%80%E4%B8%89%E6%9D%BF%E6%96%A7/#httpresponse","text":"\u5185\u90e8\u4f20\u5165\u4e00\u4e2a\u5b57\u7b26\u4e32\u53c2\u6570\uff0c\u8fd4\u56de\u7ed9\u6d4f\u89c8\u5668 from django.shortcuts import render , HttpResponse , redirect def index ( request ): return HttpResponse ( '\u6709\u70b9\u610f\u601d' )","title":"HttpResponse"},{"location":"Django/django%E5%9F%BA%E7%A1%80%E4%B8%89%E6%9D%BF%E6%96%A7/#render","text":"render\u53ef\u4ee5\u8fd4\u56dehtml\u6587\u4ef6\uff0c\u53ef\u4ee5\u7ed9html\u9875\u9762\u4f20\u503c def login ( request ): user_dic = { 'username' : 'neo' , 'password' : '123' } return render ( request , 'login.html' , { 'user_dic' : user_dic })","title":"render"},{"location":"Django/django%E5%9F%BA%E7%A1%80%E4%B8%89%E6%9D%BF%E6%96%A7/#redirect","text":"\u91cd\u5b9a\u5411\uff0c\u63a5\u53d7\u4e00\u4e2aURL\u53c2\u6570\uff0c\u8868\u793a\u8df3\u8f6c\u6307\u5b9a\u7684URL\u3002 \u53ef\u4ee5\u662f\u540e\u7f00\u540d\uff0c\u4e5f\u53ef\u4ee5\u662f\u5168\u8def\u5f84 def home ( request ): return redirect ( '/index' ) # return redirect('https://coding.net/') \u8fd9\u4e09\u4e2a\u5bf9\u8c61\u7236\u7c7b\u90fd\u662fHttpResponse\u5bf9\u8c61","title":"redirect"},{"location":"Django/django%E8%BF%9E%E6%8E%A5MySQL/","text":"django\u8fde\u63a5MySQL\u64cd\u4f5c\u6a21\u578b\u8868 \u00b6 pycharm\u4e5f\u53ef\u4ee5\u5145\u5f53MySQL\u7684\u5ba2\u6237\u7aef django\u8fde\u63a5MySQL \u00b6 django\u9ed8\u8ba4\u7684\u6570\u636e\u5e93\u662fsqlite3\uff0c\u6211\u4eec\u6539\u4e3aMySQL\uff0c\u9700\u8981\u4e24\u6b65\u64cd\u4f5c \u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u6539\u6570\u636e\u5e93\u7684\u914d\u7f6e\uff1a DATABASES = { 'default' : { 'ENGINE' : 'django.db.backends.mysql' , # \u6307\u5b9a\u6570\u636e\u5e93 'NAME' : 'test' , # \u6307\u5b9a\u5e93\u7684\u540d\u5b57 'HOST' : '127.0.0.1' , # \u8981\u6ce8\u610f\u952e\u5fc5\u987b\u5927\u5199 'PORT' : 3306 , 'USER' : 'root' , 'PASSWORD' : '123' , 'CHARSET' : 'utf8' } } \u4e3b\u52a8\u544a\u8bc9django \u4e0d\u8981\u7528\u9ed8\u8ba4\u7684mysqldb\u8fde\u63a5 \u800c\u662f\u7528pymysql # \u4f60\u53ef\u4ee5\u5728\u9879\u76ee\u540d\u4e0b\u7684__init__.py\u4e2d\u4e66\u5199 # \u4e5f\u53ef\u4ee5\u5728\u5e94\u7528\u540d\u4e0b\u7684__init__.py\u4e2d\u4e66\u5199 import pymysql pymysql . install_as_MySQLdb () django ORM\u7b80\u4ecb \u00b6 ORM \u5bf9\u8c61\u5173\u7cfb\u6620\u5c04 \u00b6 \u7c7b \u8868 \u5bf9\u8c61 \u6570\u636e \u5bf9\u8c61.\u5c5e\u6027 \u5b57\u6bb5\u5bf9\u5e94\u7684\u503c \u4e3a\u4ec0\u4e48\u4f7f\u7528ORM \u80fd\u591f\u8ba9\u4e0d\u4f1a\u6570\u636e\u5e93\u64cd\u4f5c\u7684\u4eba\u4e5f\u80fd\u591f\u7b80\u5355\u65b9\u4fbf\u53bb\u64cd\u4f5c\u6570\u636e\u5e93 \u7f3a\u70b9\uff1a \u5c01\u88c5\u7a0b\u5ea6\u592a\u9ad8 \u6709\u65f6\u5019\u4f1a\u51fa\u73b0\u67e5\u8be2\u6548\u7387\u504f\u4f4e\u7684\u95ee\u9898 django\u4e2d\u64cd\u4f5cORM \u00b6 \u53bb\u5e94\u7528\u4e0b\u7684models.py\u4e2d\u5199\u6570\u636e\u6a21\u578b\u7c7b class User ( models . Model ): # id = models.AutoField(primary_key=True) # django\u5f53\u4f60\u4e0d\u6307\u5b9a\u4e3b\u952e\u7684\u65f6\u5019\uff0c\u4f1a\u81ea\u52a8\u5e2e\u4f60\u521b\u5efa\u4e00\u4e2a\u540d\u4e3aid\u5b57\u6bb5\uff0c\u5e76\u4f5c\u4e3a\u4e3b\u952e # \u5982\u679c\u4f60\u81ea\u5df1\u6307\u5b9a\u4e86\u4e3b\u952e django\u5c31\u4e0d\u4f1a\u518d\u5e2e\u4f60\u521b\u5efa # \u5bf9\u5e94\u7684\u662fvarchar(32) django\u4e2d\u9ed8\u8ba4\u6ca1\u6709char\u5b57\u6bb5\uff0c\u4f46\u652f\u6301\u7528\u6237\u81ea\u5b9a\u4e49 username = models . CharField ( max_length = 32 ) password = models . IntegerField () \u6570\u636e\u5e93\u8fc1\u79fb\u547d\u540d\uff08\u540c\u6b65\uff09 \u00b6 python manage . py makemigrations # \u5c06\u6570\u636e\u5e93\u7684\u4fee\u6539 \u8bb0\u5f55\u5230\u5c0f\u672c\u672c\u4e0a\uff08migrations\u6587\u4ef6\u5939\u5185\uff09 python manage . py migrate # \u5c06\u4fee\u6539\u64cd\u4f5c\u771f\u6b63\u7684\u540c\u6b65\u5230\u6570\u636e\u5e93\u4e2d \u6ce8\u610f\uff1a \u4e0a\u9762\u4e24\u6761\u547d\u4ee4\u5fc5\u987b\u662f\u6210\u53cc\u6210\u5bf9\u51fa\u73b0 \u53ea\u8981\u4fee\u6539\u4e86models\u91cc\u9762\u8ddf\u6570\u636e\u5e93\u76f8\u5173\u7684\u4ee3\u7801 \u4f60\u5c31\u5fc5\u987b\u91cd\u65b0\u6267\u884c\u4e0a\u9762\u4e24\u6761\u547d\u4ee4 \u6a21\u578b\u8868\u5b57\u6bb5\u7684\u589e\u5220\u6539\u67e5 \u00b6 \u5b57\u6bb5\u7684\u4fee\u6539 \u00b6 \u76f4\u63a5\u4fee\u6539\u4ee3\u7801 \u7136\u540e\u6267\u884c\u6570\u636e\u5e93\u8fc1\u79fb\u547d\u4ee4\u5373\u53ef \u65b0\u589e\u5b57\u6bb5 \u65b9\u5f0f1 \u8bbe\u7f6e\u9ed8\u8ba4\u503c email = models . EmailField ( default = '123@qq.com' ) \u65b9\u5f0f2 \u5141\u8bb8\u5b57\u6bb5\u4e3a\u7a7a phone = models . BigIntegerField ( null = True ) \u65b9\u5f0f3 \u76f4\u63a5\u5728\u63d0\u793a\u4e2d\u7ed9\u9ed8\u8ba4\u503c \u5b57\u6bb5\u7684\u5220\u9664 \u00b6 \u76f4\u63a5\u6ce8\u91ca\u6389\u5bf9\u5e94\u7684\u5b57\u6bb5\uff0c\u7136\u540e\u6267\u884c\u6570\u636e\u5e93\u8fc1\u79fb\u547d\u4ee4\uff08\u8c28\u614e\u4f7f\u7528\uff09 \u6a21\u578b\u8868\u6570\u636e\u7684\u589e\u5220\u6539\u67e5 \u00b6 \u67e5 \u00b6 data = models . User . objects . filter ( username = username ) # <QuerySet [<User: User object>]> # \u76f8\u5f53\u4e8e select * from user where username='neo' \"\"\" filter\u8fd4\u56de\u7684\u7ed3\u679c\u662f\u4e00\u4e2a\"\u5217\u8868\",\u91cc\u9762\u624d\u662f\u771f\u6b63\u6570\u636e\u5bf9\u8c61 filer\u62ec\u53f7\u5185\u53ef\u4ee5\u653e\u591a\u4e2a\u5173\u952e\u5b57\u53c2\u6570 \u8fd9\u591a\u4e2a\u5173\u952e\u5b57\u53c2\u6570\u5728\u67e5\u8be2\u7684\u65f6\u5019 \u662fand\u5173\u7cfb \"\"\" user_list = models . User . objects . all () \"\"\" \u7ed3\u679c\u662f\u4e00\u4e2a\"\u5217\u8868\"\uff0c\u91cc\u9762\u662f\u4e00\u4e2a\u4e2a\u7684\u6570\u636e\u5bf9\u8c61 \"\"\" \u589e \u00b6 user_obj = models . User . objects . create ( username = username , password = password ) print ( user_obj , user_obj . username , user_obj . password ) # create\u65b9\u6cd5\u4f1a\u6709\u4e00\u4e2a\u8fd4\u56de\u503c \u8fd4\u56de\u503c\u5c31\u662f\u5f53\u524d\u88ab\u521b\u5efa\u7684\u5bf9\u8c61\u672c\u8eab \u6539 \u00b6 models . User . objects . filter ( id = edit_id ) . update ( username = username , password = password ) \"\"\" \u6279\u91cf\u64cd\u4f5c \u4f1a\u5c06filter\u67e5\u8be2\u51fa\u6765\u7684\u5217\u8868\u4e2d\u6240\u6709\u7684\u5bf9\u8c61\u5168\u90e8\u66f4\u65b0 \"\"\" \u5220 \u00b6 models . User . objects . filter ( id = delete_id ) . delete () \"\"\" \u6279\u91cf\u64cd\u4f5c \u4f1a\u5c06filter\u67e5\u8be2\u51fa\u6765\u7684\u5217\u8868\u4e2d\u6240\u6709\u7684\u5bf9\u8c61\u5168\u90e8\u5220\u9664 \"\"\" orm\u8868\u5173\u7cfb\u5982\u4f55\u5efa\u7acb \u00b6 \u4e00\u5bf9\u4e00 \u00b6 \u4e00\u5f20\u8868\u7684\u5b57\u6bb5\u4fe1\u606f\u592a\u591a\uff0c\u53ef\u4ee5\u4eba\u4e3a\u5206\u51fa\u4e00\u5f20\u8868 \u4e00\u5bf9\u591a \u00b6 \u5916\u952e\u5b57\u6bb5\u5efa\u5728 \u591a\u7684\u90a3\u4e00\u65b9 \u591a\u5bf9\u591a \u00b6 \u591a\u5bf9\u591a\u7684\u5916\u952e\u5173\u7cfb\u9700\u8981\u5efa\u7acb\u7b2c\u4e09\u5f20\u8868\u6765\u4e13\u95e8\u5904\u7406 \u4ee5\u56fe\u4e66\u9986\u91cc\u7cfb\u7edf\u4e3a\u4f8b\uff0c\u521b\u5efa\u56fe\u4e66\u8868\uff0c\u4f5c\u8005\u8868\uff0c\u51fa\u7248\u793e\u8868 \u4ee5\u56fe\u4e66\u7ba1\u7406\u7cfb\u7edf\u4e3a\u4f8b\uff0c\u5728django orm \u5efa\u7acb\u8868\u5173\u7cfb\uff1a \u4e00\u5bf9\u4e00\u7684\u8868\u5173\u7cfb\uff0c\u5916\u952e\u5b57\u6bb5\u5efa\u5728\u4efb\u610f\u4e00\u65b9\u90fd\u53ef\u4ee5\uff0c\u4f46\u662f\u5efa\u8bae\u5efa\u5728\u67e5\u8be2\u9891\u7387\u8f83\u9ad8\u7684\u4e00\u65b9 \u4e66\u4e0e\u51fa\u7248\u793e\u662f\u4e00\u5bf9\u591a\u5173\u7cfb\uff0c\u5e76\u4e14\u4e66\u662f\u591a\u7684\u4e00\u65b9\uff0c\u6240\u4ee5\u5916\u952e\u5b57\u6bb5\u5efa\u5728\u4e66\u8868\u4e2d \u4e66\u4e0e\u4f5c\u8005\u662f\u591a\u5bf9\u591a\u7684\u5173\u7cfb\uff0c \u5916\u952e\u5b57\u6bb5\u5efa\u5728\u4efb\u610f\u4e00\u65b9\u90fd\u53ef\u4ee5\uff0c\u5efa\u8bae\u5efa\u5728\u67e5\u8be2\u9891\u7387\u8f83\u9ad8\u7684\u4e00\u65b9 class Book ( models . Model ): title = models . CharField ( max_length = 32 ) # \u5c0f\u6570\u603b\u5171\u516b\u4f4d\uff0c\u5c0f\u6570\u5360\u4e24\u4f4d price = models . DecimalField ( max_digits = 8 , decimal_places = 2 ) # \u4e66\u4e0e\u51fa\u7248\u793e\u662f\u4e00\u5bf9\u591a\u5173\u7cfb\uff0c\u5e76\u4e14\u4e66\u662f\u591a\u7684\u4e00\u65b9\uff0c\u6240\u4ee5\u5916\u952e\u5b57\u6bb5\u5efa\u5728\u4e66\u8868\u4e2d publish = models . ForeignKey ( to = 'Publish' ) # to\u7528\u6765\u6307\u4ee3\u548c\u54ea\u5f20\u8868\u6709\u5173\u7cfb\uff0c\u9ed8\u8ba4\u5173\u8054\u7684\u5c31\u662f\u4e3b\u952e\u5b57\u6bb5 # \u4e66\u4e0e\u4f5c\u8005\u662f\u591a\u5bf9\u591a\u7684\u5173\u7cfb\uff0c \u5916\u952e\u5b57\u6bb5\u5efa\u5728\u4efb\u610f\u4e00\u65b9\u90fd\u53ef\u4ee5\uff0c\u5efa\u8bae\u5efa\u5728\u67e5\u8be2\u9891\u7387\u8f83\u9ad8\u7684\u4e00\u65b9 author = models . ManyToManyField ( to = 'Author' ) # django orm\u4f1a\u81ea\u52a8\u5e2e\u4f60\u521b\u5efa\u4e66\u548c\u4f5c\u8005\u7684\u7b2c\u4e09\u5f20\u5173\u7cfb\u8868 # author\u8fd9\u4e2a\u5b57\u6bb5\u662f\u4e00\u4e2a\u865a\u62df\u5b57\u6bb5 \u4e0d\u80fd\u5728\u8868\u4e2d\u5c55\u793a\u51fa\u6765\uff0c\u4ec5\u4ec5\u53ea\u662f\u544a\u8bc9orm\uff0c\u5efa\u7acb\u7b2c\u4e09\u5f20\u8868\u5173\u7cfb\u7684\u4f5c\u7528 class Publish ( models . Model ): title = models . CharField ( max_length = 32 ) email = models . EmailField () class Author ( models . Model ): name = models . CharField ( max_length = 32 ) age = models . IntegerField () # \u4e00\u5bf9\u4e00\u7684\u8868\u5173\u7cfb\uff0c\u5916\u952e\u5b57\u6bb5\u5efa\u5728\u4efb\u610f\u4e00\u65b9\u90fd\u53ef\u4ee5\uff0c\u4f46\u662f\u5efa\u8bae\u5efa\u5728\u67e5\u8be2\u9891\u7387\u8f83\u9ad8\u7684\u4e00\u65b9 author_detail = models . OneToOneField ( to = 'Author_detail' ) class Author_detail ( models . Model ): phone = models . BigIntegerField () addr = models . CharField ( max_length = 32 ) \u6ce8\u610f\u70b9\uff1a ''' \u4e00\u5bf9\u591a\u5916\u952e\u5b57\u6bb5 \u521b\u5efa\u7684\u65f6\u5019 \uff0c\u540c\u6b65\u5230\u6570\u636e\u5e93\u4e2d\uff0c\u8868\u5b57\u6bb5\u4f1a\u81ea\u52a8\u52a0_id\u540e\u7f00\uff1b\u5982\u679c\u81ea\u5df1\u52a0\u4e86_id\uff0c\u4f1a\u5728\u540e\u9762\u518d\u52a0\u4e00\u4e2a_id publish = models.ForeignKey(to='Publish')\u9ed8\u8ba4\u5173\u8054\u7684\u662f\u4e3b\u952eid\uff0c\u5982\u679c\u4e3b\u952e\u4e0d\u662fid\uff0c\u8981\u81ea\u5df1\u5173\u8054\uff0c \u53ef\u4ee5\u52a0to_field= \u4e0e\u6307\u5b9a\u5b57\u6bb5\u505a\u5173\u8054 '''","title":"django\u8fde\u63a5MySQL"},{"location":"Django/django%E8%BF%9E%E6%8E%A5MySQL/#djangomysql","text":"pycharm\u4e5f\u53ef\u4ee5\u5145\u5f53MySQL\u7684\u5ba2\u6237\u7aef","title":"django\u8fde\u63a5MySQL\u64cd\u4f5c\u6a21\u578b\u8868"},{"location":"Django/django%E8%BF%9E%E6%8E%A5MySQL/#djangomysql_1","text":"django\u9ed8\u8ba4\u7684\u6570\u636e\u5e93\u662fsqlite3\uff0c\u6211\u4eec\u6539\u4e3aMySQL\uff0c\u9700\u8981\u4e24\u6b65\u64cd\u4f5c \u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u6539\u6570\u636e\u5e93\u7684\u914d\u7f6e\uff1a DATABASES = { 'default' : { 'ENGINE' : 'django.db.backends.mysql' , # \u6307\u5b9a\u6570\u636e\u5e93 'NAME' : 'test' , # \u6307\u5b9a\u5e93\u7684\u540d\u5b57 'HOST' : '127.0.0.1' , # \u8981\u6ce8\u610f\u952e\u5fc5\u987b\u5927\u5199 'PORT' : 3306 , 'USER' : 'root' , 'PASSWORD' : '123' , 'CHARSET' : 'utf8' } } \u4e3b\u52a8\u544a\u8bc9django \u4e0d\u8981\u7528\u9ed8\u8ba4\u7684mysqldb\u8fde\u63a5 \u800c\u662f\u7528pymysql # \u4f60\u53ef\u4ee5\u5728\u9879\u76ee\u540d\u4e0b\u7684__init__.py\u4e2d\u4e66\u5199 # \u4e5f\u53ef\u4ee5\u5728\u5e94\u7528\u540d\u4e0b\u7684__init__.py\u4e2d\u4e66\u5199 import pymysql pymysql . install_as_MySQLdb ()","title":"django\u8fde\u63a5MySQL"},{"location":"Django/django%E8%BF%9E%E6%8E%A5MySQL/#django-orm","text":"","title":"django ORM\u7b80\u4ecb"},{"location":"Django/django%E8%BF%9E%E6%8E%A5MySQL/#orm","text":"\u7c7b \u8868 \u5bf9\u8c61 \u6570\u636e \u5bf9\u8c61.\u5c5e\u6027 \u5b57\u6bb5\u5bf9\u5e94\u7684\u503c \u4e3a\u4ec0\u4e48\u4f7f\u7528ORM \u80fd\u591f\u8ba9\u4e0d\u4f1a\u6570\u636e\u5e93\u64cd\u4f5c\u7684\u4eba\u4e5f\u80fd\u591f\u7b80\u5355\u65b9\u4fbf\u53bb\u64cd\u4f5c\u6570\u636e\u5e93 \u7f3a\u70b9\uff1a \u5c01\u88c5\u7a0b\u5ea6\u592a\u9ad8 \u6709\u65f6\u5019\u4f1a\u51fa\u73b0\u67e5\u8be2\u6548\u7387\u504f\u4f4e\u7684\u95ee\u9898","title":"ORM \u5bf9\u8c61\u5173\u7cfb\u6620\u5c04"},{"location":"Django/django%E8%BF%9E%E6%8E%A5MySQL/#djangoorm","text":"\u53bb\u5e94\u7528\u4e0b\u7684models.py\u4e2d\u5199\u6570\u636e\u6a21\u578b\u7c7b class User ( models . Model ): # id = models.AutoField(primary_key=True) # django\u5f53\u4f60\u4e0d\u6307\u5b9a\u4e3b\u952e\u7684\u65f6\u5019\uff0c\u4f1a\u81ea\u52a8\u5e2e\u4f60\u521b\u5efa\u4e00\u4e2a\u540d\u4e3aid\u5b57\u6bb5\uff0c\u5e76\u4f5c\u4e3a\u4e3b\u952e # \u5982\u679c\u4f60\u81ea\u5df1\u6307\u5b9a\u4e86\u4e3b\u952e django\u5c31\u4e0d\u4f1a\u518d\u5e2e\u4f60\u521b\u5efa # \u5bf9\u5e94\u7684\u662fvarchar(32) django\u4e2d\u9ed8\u8ba4\u6ca1\u6709char\u5b57\u6bb5\uff0c\u4f46\u652f\u6301\u7528\u6237\u81ea\u5b9a\u4e49 username = models . CharField ( max_length = 32 ) password = models . IntegerField ()","title":"django\u4e2d\u64cd\u4f5cORM"},{"location":"Django/django%E8%BF%9E%E6%8E%A5MySQL/#_1","text":"python manage . py makemigrations # \u5c06\u6570\u636e\u5e93\u7684\u4fee\u6539 \u8bb0\u5f55\u5230\u5c0f\u672c\u672c\u4e0a\uff08migrations\u6587\u4ef6\u5939\u5185\uff09 python manage . py migrate # \u5c06\u4fee\u6539\u64cd\u4f5c\u771f\u6b63\u7684\u540c\u6b65\u5230\u6570\u636e\u5e93\u4e2d \u6ce8\u610f\uff1a \u4e0a\u9762\u4e24\u6761\u547d\u4ee4\u5fc5\u987b\u662f\u6210\u53cc\u6210\u5bf9\u51fa\u73b0 \u53ea\u8981\u4fee\u6539\u4e86models\u91cc\u9762\u8ddf\u6570\u636e\u5e93\u76f8\u5173\u7684\u4ee3\u7801 \u4f60\u5c31\u5fc5\u987b\u91cd\u65b0\u6267\u884c\u4e0a\u9762\u4e24\u6761\u547d\u4ee4","title":"\u6570\u636e\u5e93\u8fc1\u79fb\u547d\u540d\uff08\u540c\u6b65\uff09"},{"location":"Django/django%E8%BF%9E%E6%8E%A5MySQL/#_2","text":"","title":"\u6a21\u578b\u8868\u5b57\u6bb5\u7684\u589e\u5220\u6539\u67e5"},{"location":"Django/django%E8%BF%9E%E6%8E%A5MySQL/#_3","text":"\u76f4\u63a5\u4fee\u6539\u4ee3\u7801 \u7136\u540e\u6267\u884c\u6570\u636e\u5e93\u8fc1\u79fb\u547d\u4ee4\u5373\u53ef \u65b0\u589e\u5b57\u6bb5 \u65b9\u5f0f1 \u8bbe\u7f6e\u9ed8\u8ba4\u503c email = models . EmailField ( default = '123@qq.com' ) \u65b9\u5f0f2 \u5141\u8bb8\u5b57\u6bb5\u4e3a\u7a7a phone = models . BigIntegerField ( null = True ) \u65b9\u5f0f3 \u76f4\u63a5\u5728\u63d0\u793a\u4e2d\u7ed9\u9ed8\u8ba4\u503c","title":"\u5b57\u6bb5\u7684\u4fee\u6539"},{"location":"Django/django%E8%BF%9E%E6%8E%A5MySQL/#_4","text":"\u76f4\u63a5\u6ce8\u91ca\u6389\u5bf9\u5e94\u7684\u5b57\u6bb5\uff0c\u7136\u540e\u6267\u884c\u6570\u636e\u5e93\u8fc1\u79fb\u547d\u4ee4\uff08\u8c28\u614e\u4f7f\u7528\uff09","title":"\u5b57\u6bb5\u7684\u5220\u9664"},{"location":"Django/django%E8%BF%9E%E6%8E%A5MySQL/#_5","text":"","title":"\u6a21\u578b\u8868\u6570\u636e\u7684\u589e\u5220\u6539\u67e5"},{"location":"Django/django%E8%BF%9E%E6%8E%A5MySQL/#_6","text":"data = models . User . objects . filter ( username = username ) # <QuerySet [<User: User object>]> # \u76f8\u5f53\u4e8e select * from user where username='neo' \"\"\" filter\u8fd4\u56de\u7684\u7ed3\u679c\u662f\u4e00\u4e2a\"\u5217\u8868\",\u91cc\u9762\u624d\u662f\u771f\u6b63\u6570\u636e\u5bf9\u8c61 filer\u62ec\u53f7\u5185\u53ef\u4ee5\u653e\u591a\u4e2a\u5173\u952e\u5b57\u53c2\u6570 \u8fd9\u591a\u4e2a\u5173\u952e\u5b57\u53c2\u6570\u5728\u67e5\u8be2\u7684\u65f6\u5019 \u662fand\u5173\u7cfb \"\"\" user_list = models . User . objects . all () \"\"\" \u7ed3\u679c\u662f\u4e00\u4e2a\"\u5217\u8868\"\uff0c\u91cc\u9762\u662f\u4e00\u4e2a\u4e2a\u7684\u6570\u636e\u5bf9\u8c61 \"\"\"","title":"\u67e5"},{"location":"Django/django%E8%BF%9E%E6%8E%A5MySQL/#_7","text":"user_obj = models . User . objects . create ( username = username , password = password ) print ( user_obj , user_obj . username , user_obj . password ) # create\u65b9\u6cd5\u4f1a\u6709\u4e00\u4e2a\u8fd4\u56de\u503c \u8fd4\u56de\u503c\u5c31\u662f\u5f53\u524d\u88ab\u521b\u5efa\u7684\u5bf9\u8c61\u672c\u8eab","title":"\u589e"},{"location":"Django/django%E8%BF%9E%E6%8E%A5MySQL/#_8","text":"models . User . objects . filter ( id = edit_id ) . update ( username = username , password = password ) \"\"\" \u6279\u91cf\u64cd\u4f5c \u4f1a\u5c06filter\u67e5\u8be2\u51fa\u6765\u7684\u5217\u8868\u4e2d\u6240\u6709\u7684\u5bf9\u8c61\u5168\u90e8\u66f4\u65b0 \"\"\"","title":"\u6539"},{"location":"Django/django%E8%BF%9E%E6%8E%A5MySQL/#_9","text":"models . User . objects . filter ( id = delete_id ) . delete () \"\"\" \u6279\u91cf\u64cd\u4f5c \u4f1a\u5c06filter\u67e5\u8be2\u51fa\u6765\u7684\u5217\u8868\u4e2d\u6240\u6709\u7684\u5bf9\u8c61\u5168\u90e8\u5220\u9664 \"\"\"","title":"\u5220"},{"location":"Django/django%E8%BF%9E%E6%8E%A5MySQL/#orm_1","text":"","title":"orm\u8868\u5173\u7cfb\u5982\u4f55\u5efa\u7acb"},{"location":"Django/django%E8%BF%9E%E6%8E%A5MySQL/#_10","text":"\u4e00\u5f20\u8868\u7684\u5b57\u6bb5\u4fe1\u606f\u592a\u591a\uff0c\u53ef\u4ee5\u4eba\u4e3a\u5206\u51fa\u4e00\u5f20\u8868","title":"\u4e00\u5bf9\u4e00"},{"location":"Django/django%E8%BF%9E%E6%8E%A5MySQL/#_11","text":"\u5916\u952e\u5b57\u6bb5\u5efa\u5728 \u591a\u7684\u90a3\u4e00\u65b9","title":"\u4e00\u5bf9\u591a"},{"location":"Django/django%E8%BF%9E%E6%8E%A5MySQL/#_12","text":"\u591a\u5bf9\u591a\u7684\u5916\u952e\u5173\u7cfb\u9700\u8981\u5efa\u7acb\u7b2c\u4e09\u5f20\u8868\u6765\u4e13\u95e8\u5904\u7406 \u4ee5\u56fe\u4e66\u9986\u91cc\u7cfb\u7edf\u4e3a\u4f8b\uff0c\u521b\u5efa\u56fe\u4e66\u8868\uff0c\u4f5c\u8005\u8868\uff0c\u51fa\u7248\u793e\u8868 \u4ee5\u56fe\u4e66\u7ba1\u7406\u7cfb\u7edf\u4e3a\u4f8b\uff0c\u5728django orm \u5efa\u7acb\u8868\u5173\u7cfb\uff1a \u4e00\u5bf9\u4e00\u7684\u8868\u5173\u7cfb\uff0c\u5916\u952e\u5b57\u6bb5\u5efa\u5728\u4efb\u610f\u4e00\u65b9\u90fd\u53ef\u4ee5\uff0c\u4f46\u662f\u5efa\u8bae\u5efa\u5728\u67e5\u8be2\u9891\u7387\u8f83\u9ad8\u7684\u4e00\u65b9 \u4e66\u4e0e\u51fa\u7248\u793e\u662f\u4e00\u5bf9\u591a\u5173\u7cfb\uff0c\u5e76\u4e14\u4e66\u662f\u591a\u7684\u4e00\u65b9\uff0c\u6240\u4ee5\u5916\u952e\u5b57\u6bb5\u5efa\u5728\u4e66\u8868\u4e2d \u4e66\u4e0e\u4f5c\u8005\u662f\u591a\u5bf9\u591a\u7684\u5173\u7cfb\uff0c \u5916\u952e\u5b57\u6bb5\u5efa\u5728\u4efb\u610f\u4e00\u65b9\u90fd\u53ef\u4ee5\uff0c\u5efa\u8bae\u5efa\u5728\u67e5\u8be2\u9891\u7387\u8f83\u9ad8\u7684\u4e00\u65b9 class Book ( models . Model ): title = models . CharField ( max_length = 32 ) # \u5c0f\u6570\u603b\u5171\u516b\u4f4d\uff0c\u5c0f\u6570\u5360\u4e24\u4f4d price = models . DecimalField ( max_digits = 8 , decimal_places = 2 ) # \u4e66\u4e0e\u51fa\u7248\u793e\u662f\u4e00\u5bf9\u591a\u5173\u7cfb\uff0c\u5e76\u4e14\u4e66\u662f\u591a\u7684\u4e00\u65b9\uff0c\u6240\u4ee5\u5916\u952e\u5b57\u6bb5\u5efa\u5728\u4e66\u8868\u4e2d publish = models . ForeignKey ( to = 'Publish' ) # to\u7528\u6765\u6307\u4ee3\u548c\u54ea\u5f20\u8868\u6709\u5173\u7cfb\uff0c\u9ed8\u8ba4\u5173\u8054\u7684\u5c31\u662f\u4e3b\u952e\u5b57\u6bb5 # \u4e66\u4e0e\u4f5c\u8005\u662f\u591a\u5bf9\u591a\u7684\u5173\u7cfb\uff0c \u5916\u952e\u5b57\u6bb5\u5efa\u5728\u4efb\u610f\u4e00\u65b9\u90fd\u53ef\u4ee5\uff0c\u5efa\u8bae\u5efa\u5728\u67e5\u8be2\u9891\u7387\u8f83\u9ad8\u7684\u4e00\u65b9 author = models . ManyToManyField ( to = 'Author' ) # django orm\u4f1a\u81ea\u52a8\u5e2e\u4f60\u521b\u5efa\u4e66\u548c\u4f5c\u8005\u7684\u7b2c\u4e09\u5f20\u5173\u7cfb\u8868 # author\u8fd9\u4e2a\u5b57\u6bb5\u662f\u4e00\u4e2a\u865a\u62df\u5b57\u6bb5 \u4e0d\u80fd\u5728\u8868\u4e2d\u5c55\u793a\u51fa\u6765\uff0c\u4ec5\u4ec5\u53ea\u662f\u544a\u8bc9orm\uff0c\u5efa\u7acb\u7b2c\u4e09\u5f20\u8868\u5173\u7cfb\u7684\u4f5c\u7528 class Publish ( models . Model ): title = models . CharField ( max_length = 32 ) email = models . EmailField () class Author ( models . Model ): name = models . CharField ( max_length = 32 ) age = models . IntegerField () # \u4e00\u5bf9\u4e00\u7684\u8868\u5173\u7cfb\uff0c\u5916\u952e\u5b57\u6bb5\u5efa\u5728\u4efb\u610f\u4e00\u65b9\u90fd\u53ef\u4ee5\uff0c\u4f46\u662f\u5efa\u8bae\u5efa\u5728\u67e5\u8be2\u9891\u7387\u8f83\u9ad8\u7684\u4e00\u65b9 author_detail = models . OneToOneField ( to = 'Author_detail' ) class Author_detail ( models . Model ): phone = models . BigIntegerField () addr = models . CharField ( max_length = 32 ) \u6ce8\u610f\u70b9\uff1a ''' \u4e00\u5bf9\u591a\u5916\u952e\u5b57\u6bb5 \u521b\u5efa\u7684\u65f6\u5019 \uff0c\u540c\u6b65\u5230\u6570\u636e\u5e93\u4e2d\uff0c\u8868\u5b57\u6bb5\u4f1a\u81ea\u52a8\u52a0_id\u540e\u7f00\uff1b\u5982\u679c\u81ea\u5df1\u52a0\u4e86_id\uff0c\u4f1a\u5728\u540e\u9762\u518d\u52a0\u4e00\u4e2a_id publish = models.ForeignKey(to='Publish')\u9ed8\u8ba4\u5173\u8054\u7684\u662f\u4e3b\u952eid\uff0c\u5982\u679c\u4e3b\u952e\u4e0d\u662fid\uff0c\u8981\u81ea\u5df1\u5173\u8054\uff0c \u53ef\u4ee5\u52a0to_field= \u4e0e\u6307\u5b9a\u5b57\u6bb5\u505a\u5173\u8054 '''","title":"\u591a\u5bf9\u591a"},{"location":"Django/django%E9%9D%99%E6%80%81%E6%96%87%E4%BB%B6/","text":"django\u9759\u6001\u6587\u4ef6 \u9759\u6001\u6587\u4ef6 \u4ec0\u4e48\u662f\u9759\u6001\u6587\u4ef6 \u9759\u6001\u6587\u4ef6\u914d\u7f6e \u9759\u6001\u6587\u4ef6\u52a8\u6001\u7ed1\u5b9a \u6ce8\u610f\u4e8b\u9879 request\u65b9\u6cd5 \u643a\u5e26\u6570\u636e\u7684\u65b9\u5f0f request.method request.POST request.GET request\u643a\u5e26\u6587\u4ef6 \u52a8\u9759\u6001\u7f51\u9875 \u9759\u6001\u7f51\u9875 \u52a8\u6001\u7f51\u9875 django\u9759\u6001\u6587\u4ef6 \u00b6 \u9759\u6001\u6587\u4ef6 \u00b6 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\u6240\u6709\u7684html\u6587\u4ef6\u90fd\u662f\u653e\u5728templates\u6587\u4ef6\u5939\u5185 \u4ec0\u4e48\u662f\u9759\u6001\u6587\u4ef6 \u00b6 \u7f51\u7ad9\u6240\u4f7f\u7528\u7684\u63d0\u524d\u5199\u7684css\u3001js \u7b2c\u4e09\u65b9\u7684\u524d\u7aef\u6a21\u5757\u3001\u56fe\u7247\u90fd\u53eb\u505a\u9759\u6001\u8d44\u6e90 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\u7f51\u7ad9\u4f7f\u7528\u7684\u9759\u6001\u8d44\u6e90\u5168\u90e8\u4f1a\u653e\u5230static\u6587\u4ef6\u5939\u4e0b \u901a\u5e38\u60c5\u51b5\u4e0b \u5728static\u6587\u4ef6\u5939\u5185\u90e8\u8fd8\u4f1a\u518d\u5efa\u5176\u4ed6\u6587\u4ef6\u5939 \u8fd9\u662f\u4e3a\u4e86\u66f4\u52a0\u65b9\u4fbf\u5730\u7ba1\u7406\u6587\u4ef6\uff0c\u5728django\u4e2d \u9700\u8981\u4f60\u81ea\u5df1\u624b\u52a8\u521b\u5efa\u9759\u6001\u6587\u4ef6\u5b58\u653e\u7684\u6587\u4ef6\u5939 css \u6587\u4ef6\u5939 js \u6587\u4ef6\u5939 font \u6587\u4ef6\u5939 img \u6587\u4ef6\u5939 Bootstrap \u6ce8\u610f\u70b9\uff1a\u89c6\u56fe\u51fd\u6570\u90fd\u5fc5\u987b\u6709\u8fd4\u56de\u503c\uff0c\u5e76\u4e14\u8fd4\u56de\u503c\u90fd\u662fHttpResponse\u5bf9\u8c61 \u9759\u6001\u6587\u4ef6\u914d\u7f6e \u00b6 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\u6240\u6709\u7684html\u6587\u4ef6\u90fd\u662f\u653e\u5728templates\u6587\u4ef6\u5939\u5185 \u5565\u662f\u9759\u6001\u6587\u4ef6 \u7f51\u9875\u6240\u4f7f\u7528\u5230\u7684\u63d0\u524d\u5199\u7684css,js,\u7b2c\u4e09\u65b9\u524d\u7aef\u6a21\u5757,\u56fe\u7247,\u90fd\u53eb\u9759\u6001\u8d44\u6e90. \u9ed8\u8ba4\u60c5\u51b5\u4e0b,\u7f51\u7ad9\u662f\u7528\u5230\u7684\u9759\u6001\u6587\u4ef6\u8d44\u6e90\u5168\u90e8\u90fd\u4f1a\u653e\u5728static\u6587\u4ef6\u5939\u4e0b \u4e3a\u4e86\u65b9\u4fbf\u7ba1\u7406 static\u6587\u4ef6\u5939\u4e0b\u8fd8\u4f1a\u518d\u5409\u5b89\u5176\u4ed6\u6587\u4ef6\u5939 css js font img Boot/strap fontawesome \u800cdjango\u4e2d\u9700\u8981\u624b\u52a8\u521b\u5efa\u9759\u6001\u6587\u4ef6\u5b58\u653e\u7684\u6587\u4ef6\u5939,\u4e0eapp01\u5e73\u7ea7,\u4e14\u518dsettings\u4e2d\u914d\u7f6e\u5982\u4e0b\u6587\u4ef6 \u5176\u4e2d,STATICLISTS_DIRS\u4e3a\u5217\u8868,\u53ef\u4ee5\u5b9a\u4e49\u591a\u4e2a\u6587\u4ef6\u5939 #\u8fd9\u662f\u8bbf\u95ee\u9759\u6001\u6587\u4ef6\u8d44\u6e90\u7ed3\u6784\u524d\u7f00,\u901a\u5e38\u4e3astatic STATIC_URL = '/static/' #\u5f53static_url\u7684\u53c2\u6570\u548c\u52a8\u6001html\u7684\u53c2\u6570\u4e00\u81f4\u65f6,\u53ef\u4ee5\u8bbf\u95ee\u9759\u6001\u5e93, #\u9759\u6001\u8d44\u6e90\u6240\u5728\u6587\u4ef6\u5939\u8def\u5f84 STATICFILES_DIRS = [ # \u9759\u6001\u8d44\u6e90\u6240\u5728\u7684\u6587\u4ef6\u5939\u8def\u5f84 os . path . join ( BASE_DIR , 'static' ), # \u5c06static\u6587\u4ef6\u91cc\u9762\u6240\u6709\u7684\u8d44\u6e90\u66b4\u9732\u7ed9\u7528\u6237 os . path . join ( BASE_DIR , 'static1' ), # \u5c06static\u6587\u4ef6\u91cc\u9762\u6240\u6709\u7684\u8d44\u6e90\u66b4\u9732\u7ed9\u7528\u6237 # os.path.join(BASE_DIR,'static2'), # \u5c06static\u6587\u4ef6\u91cc\u9762\u6240\u6709\u7684\u8d44\u6e90\u66b4\u9732\u7ed9\u7528\u6237 ] \u9759\u6001\u6587\u4ef6\u52a8\u6001\u7ed1\u5b9a {% load static %} < link rel = \"stylesheet\" href = \"{% static 'bootstrap-3.3.7-dist/css/bootstrap.min.css' %}\" > < script src = \"{% static 'bootstrap-3.3.7-dist/js/bootstrap.min.js' %}\" ></ script > \u9759\u6001\u6587\u4ef6\u52a8\u6001\u7ed1\u5b9a \u00b6 {% load static %} < link rel = \"stylesheet\" href = \"{% static 'bootstrap-3.3.7-dist/css/bootstrap.min.css' %}\" > < script src = \"{% static 'bootstrap-3.3.7-dist/js/bootstrap.min.js' %}\" ></ script > \u6ce8\u610f\u4e8b\u9879 \u00b6 form\u8868\u5355\u9ed8\u8ba4\u662fget\u8bf7\u6c42\uff0cget\u8bf7\u6c42\u4e5f\u80fd\u591f\u643a\u5e26\u53c2\u6570 \u683c\u5f0f\uff1a http://127.0.0.1:8000/login/?username=cwz&password=123 \u7279\u70b9\uff1a \u643a\u5e26\u7684\u6570\u636e\u4e0d\u5b89\u5168 \u643a\u5e26\u7684\u6570\u636e\u5927\u5c0f\u6709\u9650\u5236 \u901a\u5e38\u53ea\u4f1a\u643a\u5e26\u4e00\u4e9b\u4e0d\u662f\u5f88\u91cd\u8981\u7684\u6570\u636e \u524d\u671f\u5728\u671d\u540e\u7aef\u63d0\u4ea4post\u8bf7\u6c42\u51fa\u73b0403\u7684\u60c5\u51b5\uff0c\u9700\u8981\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u6ce8\u91ca\u6389\u4e00\u884c\u5185\u5bb9\uff1a MIDDLEWARE = [ 'django.middleware.security.SecurityMiddleware' , 'django.contrib.sessions.middleware.SessionMiddleware' , 'django.middleware.common.CommonMiddleware' , # 'django.middleware.csrf.CsrfViewMiddleware', 'django.contrib.auth.middleware.AuthenticationMiddleware' , 'django.contrib.messages.middleware.MessageMiddleware' , 'django.middleware.clickjacking.XFrameOptionsMiddleware' , ] request\u65b9\u6cd5 \u00b6 \u643a\u5e26\u6570\u636e\u7684\u65b9\u5f0f \u00b6 GET\u8bf7\u6c42\u643a\u5e26\u6570\u636e\u7684\u65b9\u5f0f url?username=jason&password=123 \u6ce8\u610f:\u53ea\u8981url\u540e\u9762\u7b26\u53f7get\u8bf7\u6c42\u643a\u5e26\u53c2\u6570\u7684\u7279\u70b9\u6ee1\u8db3,\u65e0\u8bba\u53d1\u4ec0\u4e48\u8bf7\u6c42,\u90fd\u53ef\u4ee5\u4f7f\u7528request.GET\u83b7\u53d6\u6570\u636e POST\u8bf7\u6c42\u643a\u5e26\u6570\u636e\u7684\u65b9\u5f0f \u5728\u8bf7\u6c42\u4f53\u4e4b\u4e2d request.method \u00b6 \u83b7\u53d6\u8bf7\u6c42\u65b9\u5f0f \u7eaf\u5927\u5199\u7684\u5b57\u7b26\u4e32(GET \u6216 POST) request.POST \u00b6 \u83b7\u53d6\u7528\u6237\u63d0\u4ea4post\u8bf7\u6c42\u6570\u636e \u83b7\u53d6\u65b9\u6cd5 request . POST . get () # \u9ed8\u8ba4\u53ea\u4f1a\u83b7\u53d6\u5217\u8868\u6700\u540e\u4e00\u4e2a\u5143\u7d20 request . POST . getlist () # \u5982\u679c\u4f60\u60f3\u83b7\u53d6\u5217\u8868 \u7528getlist() \u5f97\u5230\u7684\u662f\u8bf7\u6c42\u5934\u4e2d\u7684xxx=yyy\u7684\u5f62\u5f0f,\u952e\u503c\u5bf9 request.GET \u00b6 \u83b7\u53d6\u7528\u6237\u63d0\u4ea4GET\u8bf7\u6c42\u6570\u636e \u83b7\u53d6\u65b9\u6cd5 request . POST . get () # \u9ed8\u8ba4\u53ea\u4f1a\u83b7\u53d6\u5217\u8868\u6700\u540e\u4e00\u4e2a\u5143\u7d20 request . POST . getlist () # \u5982\u679c\u4f60\u60f3\u83b7\u53d6\u5217\u8868 \u7528getlist() \u5f97\u5230\u7684\u662furl\u4e2d\u7684xxx=yyy\u7684\u5f62\u5f0f,\u952e\u503c\u5bf9 request\u643a\u5e26\u6587\u4ef6 \u00b6 form\u8868\u5355\u4e0a\u4f20\u6587\u4ef6 \u540e\u7aef\u5982\u4f55\u83b7\u53d6\u6587\u4ef6 form\u8868\u8fbe\u4f20\u6587\u4ef6\u9700\u8981\u6ce8\u610f\u7684\u4e8b\u9879 1. method\u5fc5\u987b\u6539\u6210post 2. enctype\u8be5\u6210formdata\u683c\u5f0f \u524d\u671f\u4f60\u5728\u4f7f\u7528 post\u671d\u540e\u7aef\u53d1\u8bf7\u6c42\u7684\u65f6\u5019 \u9700\u8981\u53bb settings\u914d\u7f6e\u6587\u4ef6\u4e2d\u6ce8\u91ca\u6389\u4e00\u4e2a\u4e2d\u95f4\u4ef6csrf \u52a8\u9759\u6001\u7f51\u9875 \u00b6 \u9759\u6001\u7f51\u9875 \u00b6 html\u4e0a\u7684\u6570\u636e\u662f\u5199\u6b7b\u7684 \u4e07\u5e74\u4e0d\u53d8 \u52a8\u6001\u7f51\u9875 \u00b6 \u6570\u636e\u662f\u5b9e\u65f6\u66f4\u65b0\u7684 \u540e\u7aef\u4ee3\u7801\u662f\u52a8\u6001\u83b7\u53d6,\u6bd4\u5982\u5f53\u524d\u65f6\u95f4 \u6570\u636e\u662f\u4ece\u6570\u636e\u5e93\u67e5\u8be2\u51fa\u6765\u7684","title":"django\u9759\u6001\u6587\u4ef6"},{"location":"Django/django%E9%9D%99%E6%80%81%E6%96%87%E4%BB%B6/#django","text":"","title":"django\u9759\u6001\u6587\u4ef6"},{"location":"Django/django%E9%9D%99%E6%80%81%E6%96%87%E4%BB%B6/#_1","text":"\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u6240\u6709\u7684html\u6587\u4ef6\u90fd\u662f\u653e\u5728templates\u6587\u4ef6\u5939\u5185","title":"\u9759\u6001\u6587\u4ef6"},{"location":"Django/django%E9%9D%99%E6%80%81%E6%96%87%E4%BB%B6/#_2","text":"\u7f51\u7ad9\u6240\u4f7f\u7528\u7684\u63d0\u524d\u5199\u7684css\u3001js \u7b2c\u4e09\u65b9\u7684\u524d\u7aef\u6a21\u5757\u3001\u56fe\u7247\u90fd\u53eb\u505a\u9759\u6001\u8d44\u6e90 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\u7f51\u7ad9\u4f7f\u7528\u7684\u9759\u6001\u8d44\u6e90\u5168\u90e8\u4f1a\u653e\u5230static\u6587\u4ef6\u5939\u4e0b \u901a\u5e38\u60c5\u51b5\u4e0b \u5728static\u6587\u4ef6\u5939\u5185\u90e8\u8fd8\u4f1a\u518d\u5efa\u5176\u4ed6\u6587\u4ef6\u5939 \u8fd9\u662f\u4e3a\u4e86\u66f4\u52a0\u65b9\u4fbf\u5730\u7ba1\u7406\u6587\u4ef6\uff0c\u5728django\u4e2d \u9700\u8981\u4f60\u81ea\u5df1\u624b\u52a8\u521b\u5efa\u9759\u6001\u6587\u4ef6\u5b58\u653e\u7684\u6587\u4ef6\u5939 css \u6587\u4ef6\u5939 js \u6587\u4ef6\u5939 font \u6587\u4ef6\u5939 img \u6587\u4ef6\u5939 Bootstrap \u6ce8\u610f\u70b9\uff1a\u89c6\u56fe\u51fd\u6570\u90fd\u5fc5\u987b\u6709\u8fd4\u56de\u503c\uff0c\u5e76\u4e14\u8fd4\u56de\u503c\u90fd\u662fHttpResponse\u5bf9\u8c61","title":"\u4ec0\u4e48\u662f\u9759\u6001\u6587\u4ef6"},{"location":"Django/django%E9%9D%99%E6%80%81%E6%96%87%E4%BB%B6/#_3","text":"\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u6240\u6709\u7684html\u6587\u4ef6\u90fd\u662f\u653e\u5728templates\u6587\u4ef6\u5939\u5185 \u5565\u662f\u9759\u6001\u6587\u4ef6 \u7f51\u9875\u6240\u4f7f\u7528\u5230\u7684\u63d0\u524d\u5199\u7684css,js,\u7b2c\u4e09\u65b9\u524d\u7aef\u6a21\u5757,\u56fe\u7247,\u90fd\u53eb\u9759\u6001\u8d44\u6e90. \u9ed8\u8ba4\u60c5\u51b5\u4e0b,\u7f51\u7ad9\u662f\u7528\u5230\u7684\u9759\u6001\u6587\u4ef6\u8d44\u6e90\u5168\u90e8\u90fd\u4f1a\u653e\u5728static\u6587\u4ef6\u5939\u4e0b \u4e3a\u4e86\u65b9\u4fbf\u7ba1\u7406 static\u6587\u4ef6\u5939\u4e0b\u8fd8\u4f1a\u518d\u5409\u5b89\u5176\u4ed6\u6587\u4ef6\u5939 css js font img Boot/strap fontawesome \u800cdjango\u4e2d\u9700\u8981\u624b\u52a8\u521b\u5efa\u9759\u6001\u6587\u4ef6\u5b58\u653e\u7684\u6587\u4ef6\u5939,\u4e0eapp01\u5e73\u7ea7,\u4e14\u518dsettings\u4e2d\u914d\u7f6e\u5982\u4e0b\u6587\u4ef6 \u5176\u4e2d,STATICLISTS_DIRS\u4e3a\u5217\u8868,\u53ef\u4ee5\u5b9a\u4e49\u591a\u4e2a\u6587\u4ef6\u5939 #\u8fd9\u662f\u8bbf\u95ee\u9759\u6001\u6587\u4ef6\u8d44\u6e90\u7ed3\u6784\u524d\u7f00,\u901a\u5e38\u4e3astatic STATIC_URL = '/static/' #\u5f53static_url\u7684\u53c2\u6570\u548c\u52a8\u6001html\u7684\u53c2\u6570\u4e00\u81f4\u65f6,\u53ef\u4ee5\u8bbf\u95ee\u9759\u6001\u5e93, #\u9759\u6001\u8d44\u6e90\u6240\u5728\u6587\u4ef6\u5939\u8def\u5f84 STATICFILES_DIRS = [ # \u9759\u6001\u8d44\u6e90\u6240\u5728\u7684\u6587\u4ef6\u5939\u8def\u5f84 os . path . join ( BASE_DIR , 'static' ), # \u5c06static\u6587\u4ef6\u91cc\u9762\u6240\u6709\u7684\u8d44\u6e90\u66b4\u9732\u7ed9\u7528\u6237 os . path . join ( BASE_DIR , 'static1' ), # \u5c06static\u6587\u4ef6\u91cc\u9762\u6240\u6709\u7684\u8d44\u6e90\u66b4\u9732\u7ed9\u7528\u6237 # os.path.join(BASE_DIR,'static2'), # \u5c06static\u6587\u4ef6\u91cc\u9762\u6240\u6709\u7684\u8d44\u6e90\u66b4\u9732\u7ed9\u7528\u6237 ] \u9759\u6001\u6587\u4ef6\u52a8\u6001\u7ed1\u5b9a {% load static %} < link rel = \"stylesheet\" href = \"{% static 'bootstrap-3.3.7-dist/css/bootstrap.min.css' %}\" > < script src = \"{% static 'bootstrap-3.3.7-dist/js/bootstrap.min.js' %}\" ></ script >","title":"\u9759\u6001\u6587\u4ef6\u914d\u7f6e"},{"location":"Django/django%E9%9D%99%E6%80%81%E6%96%87%E4%BB%B6/#_4","text":"{% load static %} < link rel = \"stylesheet\" href = \"{% static 'bootstrap-3.3.7-dist/css/bootstrap.min.css' %}\" > < script src = \"{% static 'bootstrap-3.3.7-dist/js/bootstrap.min.js' %}\" ></ script >","title":"\u9759\u6001\u6587\u4ef6\u52a8\u6001\u7ed1\u5b9a"},{"location":"Django/django%E9%9D%99%E6%80%81%E6%96%87%E4%BB%B6/#_5","text":"form\u8868\u5355\u9ed8\u8ba4\u662fget\u8bf7\u6c42\uff0cget\u8bf7\u6c42\u4e5f\u80fd\u591f\u643a\u5e26\u53c2\u6570 \u683c\u5f0f\uff1a http://127.0.0.1:8000/login/?username=cwz&password=123 \u7279\u70b9\uff1a \u643a\u5e26\u7684\u6570\u636e\u4e0d\u5b89\u5168 \u643a\u5e26\u7684\u6570\u636e\u5927\u5c0f\u6709\u9650\u5236 \u901a\u5e38\u53ea\u4f1a\u643a\u5e26\u4e00\u4e9b\u4e0d\u662f\u5f88\u91cd\u8981\u7684\u6570\u636e \u524d\u671f\u5728\u671d\u540e\u7aef\u63d0\u4ea4post\u8bf7\u6c42\u51fa\u73b0403\u7684\u60c5\u51b5\uff0c\u9700\u8981\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u6ce8\u91ca\u6389\u4e00\u884c\u5185\u5bb9\uff1a MIDDLEWARE = [ 'django.middleware.security.SecurityMiddleware' , 'django.contrib.sessions.middleware.SessionMiddleware' , 'django.middleware.common.CommonMiddleware' , # 'django.middleware.csrf.CsrfViewMiddleware', 'django.contrib.auth.middleware.AuthenticationMiddleware' , 'django.contrib.messages.middleware.MessageMiddleware' , 'django.middleware.clickjacking.XFrameOptionsMiddleware' , ]","title":"\u6ce8\u610f\u4e8b\u9879"},{"location":"Django/django%E9%9D%99%E6%80%81%E6%96%87%E4%BB%B6/#request","text":"","title":"request\u65b9\u6cd5"},{"location":"Django/django%E9%9D%99%E6%80%81%E6%96%87%E4%BB%B6/#_6","text":"GET\u8bf7\u6c42\u643a\u5e26\u6570\u636e\u7684\u65b9\u5f0f url?username=jason&password=123 \u6ce8\u610f:\u53ea\u8981url\u540e\u9762\u7b26\u53f7get\u8bf7\u6c42\u643a\u5e26\u53c2\u6570\u7684\u7279\u70b9\u6ee1\u8db3,\u65e0\u8bba\u53d1\u4ec0\u4e48\u8bf7\u6c42,\u90fd\u53ef\u4ee5\u4f7f\u7528request.GET\u83b7\u53d6\u6570\u636e POST\u8bf7\u6c42\u643a\u5e26\u6570\u636e\u7684\u65b9\u5f0f \u5728\u8bf7\u6c42\u4f53\u4e4b\u4e2d","title":"\u643a\u5e26\u6570\u636e\u7684\u65b9\u5f0f"},{"location":"Django/django%E9%9D%99%E6%80%81%E6%96%87%E4%BB%B6/#requestmethod","text":"\u83b7\u53d6\u8bf7\u6c42\u65b9\u5f0f \u7eaf\u5927\u5199\u7684\u5b57\u7b26\u4e32(GET \u6216 POST)","title":"request.method"},{"location":"Django/django%E9%9D%99%E6%80%81%E6%96%87%E4%BB%B6/#requestpost","text":"\u83b7\u53d6\u7528\u6237\u63d0\u4ea4post\u8bf7\u6c42\u6570\u636e \u83b7\u53d6\u65b9\u6cd5 request . POST . get () # \u9ed8\u8ba4\u53ea\u4f1a\u83b7\u53d6\u5217\u8868\u6700\u540e\u4e00\u4e2a\u5143\u7d20 request . POST . getlist () # \u5982\u679c\u4f60\u60f3\u83b7\u53d6\u5217\u8868 \u7528getlist() \u5f97\u5230\u7684\u662f\u8bf7\u6c42\u5934\u4e2d\u7684xxx=yyy\u7684\u5f62\u5f0f,\u952e\u503c\u5bf9","title":"request.POST"},{"location":"Django/django%E9%9D%99%E6%80%81%E6%96%87%E4%BB%B6/#requestget","text":"\u83b7\u53d6\u7528\u6237\u63d0\u4ea4GET\u8bf7\u6c42\u6570\u636e \u83b7\u53d6\u65b9\u6cd5 request . POST . get () # \u9ed8\u8ba4\u53ea\u4f1a\u83b7\u53d6\u5217\u8868\u6700\u540e\u4e00\u4e2a\u5143\u7d20 request . POST . getlist () # \u5982\u679c\u4f60\u60f3\u83b7\u53d6\u5217\u8868 \u7528getlist() \u5f97\u5230\u7684\u662furl\u4e2d\u7684xxx=yyy\u7684\u5f62\u5f0f,\u952e\u503c\u5bf9","title":"request.GET"},{"location":"Django/django%E9%9D%99%E6%80%81%E6%96%87%E4%BB%B6/#request_1","text":"form\u8868\u5355\u4e0a\u4f20\u6587\u4ef6 \u540e\u7aef\u5982\u4f55\u83b7\u53d6\u6587\u4ef6 form\u8868\u8fbe\u4f20\u6587\u4ef6\u9700\u8981\u6ce8\u610f\u7684\u4e8b\u9879 1. method\u5fc5\u987b\u6539\u6210post 2. enctype\u8be5\u6210formdata\u683c\u5f0f \u524d\u671f\u4f60\u5728\u4f7f\u7528 post\u671d\u540e\u7aef\u53d1\u8bf7\u6c42\u7684\u65f6\u5019 \u9700\u8981\u53bb settings\u914d\u7f6e\u6587\u4ef6\u4e2d\u6ce8\u91ca\u6389\u4e00\u4e2a\u4e2d\u95f4\u4ef6csrf","title":"request\u643a\u5e26\u6587\u4ef6"},{"location":"Django/django%E9%9D%99%E6%80%81%E6%96%87%E4%BB%B6/#_7","text":"","title":"\u52a8\u9759\u6001\u7f51\u9875"},{"location":"Django/django%E9%9D%99%E6%80%81%E6%96%87%E4%BB%B6/#_8","text":"html\u4e0a\u7684\u6570\u636e\u662f\u5199\u6b7b\u7684 \u4e07\u5e74\u4e0d\u53d8","title":"\u9759\u6001\u7f51\u9875"},{"location":"Django/django%E9%9D%99%E6%80%81%E6%96%87%E4%BB%B6/#_9","text":"\u6570\u636e\u662f\u5b9e\u65f6\u66f4\u65b0\u7684 \u540e\u7aef\u4ee3\u7801\u662f\u52a8\u6001\u83b7\u53d6,\u6bd4\u5982\u5f53\u524d\u65f6\u95f4 \u6570\u636e\u662f\u4ece\u6570\u636e\u5e93\u67e5\u8be2\u51fa\u6765\u7684","title":"\u52a8\u6001\u7f51\u9875"},{"location":"Golang/golang%E7%AE%80%E4%BB%8B%E5%8F%8A%E5%AE%89%E8%A3%85/","text":"[toc] Golang \u00b6 \u7b80\u4ecb \u00b6 golang\u4e8e2009\u5e74,\u7531\u4e09\u4f4d\u8c37\u6b4c\u5de5\u7a0b\u5e08 Robert Griesemer, Rob Pike, and Ken Thompson\u4e09\u4eba\u521b\u5efa\u7684\u4e00\u95e8\u9759\u6001\u5f3a\u7c7b\u578b\u7f16\u8bd1\u578b\u9ad8\u7ea7\u8bed\u8a00. \u52a8\u6001\u9759\u6001\u8bed\u8a00 \u00b6 \u52a8\u6001:\u4e5f\u53eb\u52a8\u6001\u7c7b\u578b\u5b9a\u4e49\u8bed\u8a00,\u7a0b\u5e8f\u6267\u884c\u65f6,\u53ef\u4ee5\u6539\u53d8\u5176\u53d8\u91cf\u7684\u6570\u636e\u7c7b\u578b. \u9759\u6001:\u4e5f\u53eb\u9759\u6001\u96f7\u4e01\u5b9a\u4e49\u8bed\u8a00,\u5728\u7f16\u8bd1\u65f6,\u6570\u636e\u7c7b\u578b\u65f6\u56fa\u5b9a\u7684\u8bed\u8a00. \u5f3a\u5f31\u7c7b\u578b \u00b6 \u5224\u65ad:\u662f\u5426\u652f\u6301\u6570\u5b57\u52a0\u5b57\u7b26\u4e32 \u662f\u5426\u652f\u6301\u53ef\u4ee5\u9690\u5f0f\u7c7b\u578b\u8f6c\u6362. Python\u548cgolang\u4e2d, 1+\"2\" \u62a5\u9519,\u662f\u5f3a\u7c7b\u578b\u8bed\u8a00 js\u4e2d \u652f\u6301 1+\"2\" ,\u662f\u5f31\u7c7b\u578b\u8bed\u8a00 \u7f16\u8bd1\u578b\u89e3\u91ca\u578b \u00b6 \u7f16\u8bd1\u578b\u8bed\u8a00\u5728\u6267\u884c\u524d\u9700\u8981\u5c06\u4ee3\u7801\u7f16\u8bd1,\u5f62\u6210\u673a\u5668\u7801\u6587\u4ef6 \u89e3\u91ca\u6027\u8bed\u8a00,\u4e0d\u9700\u8981\u7f16\u8bd1\u5c31\u53ef\u4ee5\u76f4\u63a5\u5728\u89e3\u91ca\u5668\u4e0a\u6267\u884c. java,\u9700\u8981\u7f16\u8bd1,\u4f46\u662f\u7f16\u8bd1\u4e4b\u540e\u4e0d\u662f\u673a\u5668\u7801,\u800c\u662f\u5b57\u8282\u7801,\u4e24\u63ba. \u4f18\u52bf \u00b6 \u8bed\u6cd5\u7b80\u6d01,\u4ee3\u7801\u98ce\u683c\u540c\u4e00,\u5f00\u53d1\u6548\u7387\u9ad8(\u5e76\u80a9python),\u6267\u884c\u6548\u7387\u9ad8(\u89e3\u91ca\u6027\u8bed\u8a00),\u5e76\u53d1\u80fd\u529b\u5f3a. \u5b89\u88c5 \u00b6 \u5b98\u7f51\u4e0b\u8f7d\u5b89\u88c5 go module \u00b6 \u53ef\u4ee5\u5728gopath\u4e4b\u5916\u7684\u5730\u65b9\u5199\u4ee3\u7801. go module \u662fGo1.11\u7248\u672c\u4e4b\u540e\u5b98\u65b9\u63a8\u51fa\u7684\u7248\u672c\u7ba1\u7406\u5de5\u5177\uff0c\u5e76\u4e14\u4eceGo1.13\u7248\u672c\u5f00\u59cb\uff0c go module \u5c06\u662fGo\u8bed\u8a00\u9ed8\u8ba4\u7684\u4f9d\u8d56\u7ba1\u7406\u5de5\u5177\u3002 GO111MODULE \u00b6 \u8981\u542f\u7528 go module \u652f\u6301\u9996\u5148\u8981\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf GO111MODULE \uff0c\u901a\u8fc7\u5b83\u53ef\u4ee5\u5f00\u542f\u6216\u5173\u95ed\u6a21\u5757\u652f\u6301\uff0c\u5b83\u6709\u4e09\u4e2a\u53ef\u9009\u503c\uff1a off \u3001 on \u3001 auto \uff0c\u9ed8\u8ba4\u503c\u662f auto \u3002 GO111MODULE=off \u7981\u7528\u6a21\u5757\u652f\u6301\uff0c\u7f16\u8bd1\u65f6\u4f1a\u4ece GOPATH \u548c vendor \u6587\u4ef6\u5939\u4e2d\u67e5\u627e\u5305\u3002 GO111MODULE=on \u542f\u7528\u6a21\u5757\u652f\u6301\uff0c\u7f16\u8bd1\u65f6\u4f1a\u5ffd\u7565 GOPATH \u548c vendor \u6587\u4ef6\u5939\uff0c\u53ea\u6839\u636e go.mod \u4e0b\u8f7d\u4f9d\u8d56\u3002 GO111MODULE=auto \uff0c\u5f53\u9879\u76ee\u5728 $GOPATH/src \u5916\u4e14\u9879\u76ee\u6839\u76ee\u5f55\u6709 go.mod \u6587\u4ef6\u65f6\uff0c\u5f00\u542f\u6a21\u5757\u652f\u6301\u3002 \u7b80\u5355\u6765\u8bf4\uff0c\u8bbe\u7f6e GO111MODULE=on \u4e4b\u540e\u5c31\u53ef\u4ee5\u4f7f\u7528 go module \u4e86\uff0c\u4ee5\u540e\u5c31\u6ca1\u6709\u5fc5\u8981\u5728GOPATH\u4e2d\u521b\u5efa\u9879\u76ee\u4e86\uff0c\u5e76\u4e14\u8fd8\u80fd\u591f\u5f88\u597d\u7684\u7ba1\u7406\u9879\u76ee\u4f9d\u8d56\u7684\u7b2c\u4e09\u65b9\u5305\u4fe1\u606f\u3002 \u4f7f\u7528 go module \u7ba1\u7406\u4f9d\u8d56\u540e\u4f1a\u5728\u9879\u76ee\u6839\u76ee\u5f55\u4e0b\u751f\u6210\u4e24\u4e2a\u6587\u4ef6 go.mod \u548c go.sum \u3002 GOPROXY \u00b6 Go1.11\u4e4b\u540e\u8bbe\u7f6eGOPROXY\u547d\u4ee4\u4e3a\uff1a export GOPROXY = https : //goproxy.cn Go1.13\u4e4b\u540e GOPROXY \u9ed8\u8ba4\u503c\u4e3a https://proxy.golang.org \uff0c\u5728\u56fd\u5185\u662f\u65e0\u6cd5\u76f4\u63a5\u8bbf\u95ee\uff0c\u6240\u4ee5\u5341\u5206\u5efa\u8bae\u5927\u5bb6\u8bbe\u7f6eGOPROXY\uff0c\u63a8\u8350\u4f7f\u7528 goproxy.cn \u3002 go env - w GOPROXY = https : //goproxy.cn,direct \u9879\u76ee\u4e2d\u4f7f\u7528go module \u00b6 \u65e2\u6709\u9879\u76ee \u00b6 \u5982\u679c\u9700\u8981\u5bf9\u4e00\u4e2a\u5df2\u7ecf\u5b58\u5728\u7684\u9879\u76ee\u542f\u7528 go module \uff0c\u53ef\u4ee5\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u64cd\u4f5c\uff1a \u5728\u9879\u76ee\u76ee\u5f55\u4e0b\u6267\u884c go mod init \uff0c\u751f\u6210\u4e00\u4e2a go.mod \u6587\u4ef6\u3002 \u6267\u884c go get \uff0c\u67e5\u627e\u5e76\u8bb0\u5f55\u5f53\u524d\u9879\u76ee\u7684\u4f9d\u8d56\uff0c\u540c\u65f6\u751f\u6210\u4e00\u4e2a go.sum \u8bb0\u5f55\u6bcf\u4e2a\u4f9d\u8d56\u5e93\u7684\u7248\u672c\u548c\u54c8\u5e0c\u503c\u3002 \u65b0\u9879\u76ee \u00b6 \u5bf9\u4e8e\u4e00\u4e2a\u65b0\u521b\u5efa\u7684\u9879\u76ee\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u9879\u76ee\u6587\u4ef6\u5939\u4e0b\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u64cd\u4f5c\uff1a \u6267\u884c go mod init \u9879\u76ee\u540d \u547d\u4ee4\uff0c\u5728\u5f53\u524d\u9879\u76ee\u6587\u4ef6\u5939\u4e0b\u521b\u5efa\u4e00\u4e2a go.mod \u6587\u4ef6\u3002 \u624b\u52a8\u7f16\u8f91 go.mod \u4e2d\u7684require\u4f9d\u8d56\u9879\u6216\u6267\u884c go get \u81ea\u52a8\u53d1\u73b0\u3001\u7ef4\u62a4\u4f9d\u8d56\u3002 \u6ce8\u91ca \u00b6 \u5355\u884c\u6ce8\u91ca //aaa \u591a\u884c\u6ce8\u91ca /* a b */","title":"golang\u7b80\u4ecb\u53ca\u5b89\u88c5"},{"location":"Golang/golang%E7%AE%80%E4%BB%8B%E5%8F%8A%E5%AE%89%E8%A3%85/#golang","text":"","title":"Golang"},{"location":"Golang/golang%E7%AE%80%E4%BB%8B%E5%8F%8A%E5%AE%89%E8%A3%85/#_1","text":"golang\u4e8e2009\u5e74,\u7531\u4e09\u4f4d\u8c37\u6b4c\u5de5\u7a0b\u5e08 Robert Griesemer, Rob Pike, and Ken Thompson\u4e09\u4eba\u521b\u5efa\u7684\u4e00\u95e8\u9759\u6001\u5f3a\u7c7b\u578b\u7f16\u8bd1\u578b\u9ad8\u7ea7\u8bed\u8a00.","title":"\u7b80\u4ecb"},{"location":"Golang/golang%E7%AE%80%E4%BB%8B%E5%8F%8A%E5%AE%89%E8%A3%85/#_2","text":"\u52a8\u6001:\u4e5f\u53eb\u52a8\u6001\u7c7b\u578b\u5b9a\u4e49\u8bed\u8a00,\u7a0b\u5e8f\u6267\u884c\u65f6,\u53ef\u4ee5\u6539\u53d8\u5176\u53d8\u91cf\u7684\u6570\u636e\u7c7b\u578b. \u9759\u6001:\u4e5f\u53eb\u9759\u6001\u96f7\u4e01\u5b9a\u4e49\u8bed\u8a00,\u5728\u7f16\u8bd1\u65f6,\u6570\u636e\u7c7b\u578b\u65f6\u56fa\u5b9a\u7684\u8bed\u8a00.","title":"\u52a8\u6001\u9759\u6001\u8bed\u8a00"},{"location":"Golang/golang%E7%AE%80%E4%BB%8B%E5%8F%8A%E5%AE%89%E8%A3%85/#_3","text":"\u5224\u65ad:\u662f\u5426\u652f\u6301\u6570\u5b57\u52a0\u5b57\u7b26\u4e32 \u662f\u5426\u652f\u6301\u53ef\u4ee5\u9690\u5f0f\u7c7b\u578b\u8f6c\u6362. Python\u548cgolang\u4e2d, 1+\"2\" \u62a5\u9519,\u662f\u5f3a\u7c7b\u578b\u8bed\u8a00 js\u4e2d \u652f\u6301 1+\"2\" ,\u662f\u5f31\u7c7b\u578b\u8bed\u8a00","title":"\u5f3a\u5f31\u7c7b\u578b"},{"location":"Golang/golang%E7%AE%80%E4%BB%8B%E5%8F%8A%E5%AE%89%E8%A3%85/#_4","text":"\u7f16\u8bd1\u578b\u8bed\u8a00\u5728\u6267\u884c\u524d\u9700\u8981\u5c06\u4ee3\u7801\u7f16\u8bd1,\u5f62\u6210\u673a\u5668\u7801\u6587\u4ef6 \u89e3\u91ca\u6027\u8bed\u8a00,\u4e0d\u9700\u8981\u7f16\u8bd1\u5c31\u53ef\u4ee5\u76f4\u63a5\u5728\u89e3\u91ca\u5668\u4e0a\u6267\u884c. java,\u9700\u8981\u7f16\u8bd1,\u4f46\u662f\u7f16\u8bd1\u4e4b\u540e\u4e0d\u662f\u673a\u5668\u7801,\u800c\u662f\u5b57\u8282\u7801,\u4e24\u63ba.","title":"\u7f16\u8bd1\u578b\u89e3\u91ca\u578b"},{"location":"Golang/golang%E7%AE%80%E4%BB%8B%E5%8F%8A%E5%AE%89%E8%A3%85/#_5","text":"\u8bed\u6cd5\u7b80\u6d01,\u4ee3\u7801\u98ce\u683c\u540c\u4e00,\u5f00\u53d1\u6548\u7387\u9ad8(\u5e76\u80a9python),\u6267\u884c\u6548\u7387\u9ad8(\u89e3\u91ca\u6027\u8bed\u8a00),\u5e76\u53d1\u80fd\u529b\u5f3a.","title":"\u4f18\u52bf"},{"location":"Golang/golang%E7%AE%80%E4%BB%8B%E5%8F%8A%E5%AE%89%E8%A3%85/#_6","text":"\u5b98\u7f51\u4e0b\u8f7d\u5b89\u88c5","title":"\u5b89\u88c5"},{"location":"Golang/golang%E7%AE%80%E4%BB%8B%E5%8F%8A%E5%AE%89%E8%A3%85/#go-module","text":"\u53ef\u4ee5\u5728gopath\u4e4b\u5916\u7684\u5730\u65b9\u5199\u4ee3\u7801. go module \u662fGo1.11\u7248\u672c\u4e4b\u540e\u5b98\u65b9\u63a8\u51fa\u7684\u7248\u672c\u7ba1\u7406\u5de5\u5177\uff0c\u5e76\u4e14\u4eceGo1.13\u7248\u672c\u5f00\u59cb\uff0c go module \u5c06\u662fGo\u8bed\u8a00\u9ed8\u8ba4\u7684\u4f9d\u8d56\u7ba1\u7406\u5de5\u5177\u3002","title":"go module"},{"location":"Golang/golang%E7%AE%80%E4%BB%8B%E5%8F%8A%E5%AE%89%E8%A3%85/#go111module","text":"\u8981\u542f\u7528 go module \u652f\u6301\u9996\u5148\u8981\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf GO111MODULE \uff0c\u901a\u8fc7\u5b83\u53ef\u4ee5\u5f00\u542f\u6216\u5173\u95ed\u6a21\u5757\u652f\u6301\uff0c\u5b83\u6709\u4e09\u4e2a\u53ef\u9009\u503c\uff1a off \u3001 on \u3001 auto \uff0c\u9ed8\u8ba4\u503c\u662f auto \u3002 GO111MODULE=off \u7981\u7528\u6a21\u5757\u652f\u6301\uff0c\u7f16\u8bd1\u65f6\u4f1a\u4ece GOPATH \u548c vendor \u6587\u4ef6\u5939\u4e2d\u67e5\u627e\u5305\u3002 GO111MODULE=on \u542f\u7528\u6a21\u5757\u652f\u6301\uff0c\u7f16\u8bd1\u65f6\u4f1a\u5ffd\u7565 GOPATH \u548c vendor \u6587\u4ef6\u5939\uff0c\u53ea\u6839\u636e go.mod \u4e0b\u8f7d\u4f9d\u8d56\u3002 GO111MODULE=auto \uff0c\u5f53\u9879\u76ee\u5728 $GOPATH/src \u5916\u4e14\u9879\u76ee\u6839\u76ee\u5f55\u6709 go.mod \u6587\u4ef6\u65f6\uff0c\u5f00\u542f\u6a21\u5757\u652f\u6301\u3002 \u7b80\u5355\u6765\u8bf4\uff0c\u8bbe\u7f6e GO111MODULE=on \u4e4b\u540e\u5c31\u53ef\u4ee5\u4f7f\u7528 go module \u4e86\uff0c\u4ee5\u540e\u5c31\u6ca1\u6709\u5fc5\u8981\u5728GOPATH\u4e2d\u521b\u5efa\u9879\u76ee\u4e86\uff0c\u5e76\u4e14\u8fd8\u80fd\u591f\u5f88\u597d\u7684\u7ba1\u7406\u9879\u76ee\u4f9d\u8d56\u7684\u7b2c\u4e09\u65b9\u5305\u4fe1\u606f\u3002 \u4f7f\u7528 go module \u7ba1\u7406\u4f9d\u8d56\u540e\u4f1a\u5728\u9879\u76ee\u6839\u76ee\u5f55\u4e0b\u751f\u6210\u4e24\u4e2a\u6587\u4ef6 go.mod \u548c go.sum \u3002","title":"GO111MODULE"},{"location":"Golang/golang%E7%AE%80%E4%BB%8B%E5%8F%8A%E5%AE%89%E8%A3%85/#goproxy","text":"Go1.11\u4e4b\u540e\u8bbe\u7f6eGOPROXY\u547d\u4ee4\u4e3a\uff1a export GOPROXY = https : //goproxy.cn Go1.13\u4e4b\u540e GOPROXY \u9ed8\u8ba4\u503c\u4e3a https://proxy.golang.org \uff0c\u5728\u56fd\u5185\u662f\u65e0\u6cd5\u76f4\u63a5\u8bbf\u95ee\uff0c\u6240\u4ee5\u5341\u5206\u5efa\u8bae\u5927\u5bb6\u8bbe\u7f6eGOPROXY\uff0c\u63a8\u8350\u4f7f\u7528 goproxy.cn \u3002 go env - w GOPROXY = https : //goproxy.cn,direct","title":"GOPROXY"},{"location":"Golang/golang%E7%AE%80%E4%BB%8B%E5%8F%8A%E5%AE%89%E8%A3%85/#go-module_1","text":"","title":"\u9879\u76ee\u4e2d\u4f7f\u7528go module"},{"location":"Golang/golang%E7%AE%80%E4%BB%8B%E5%8F%8A%E5%AE%89%E8%A3%85/#_7","text":"\u5982\u679c\u9700\u8981\u5bf9\u4e00\u4e2a\u5df2\u7ecf\u5b58\u5728\u7684\u9879\u76ee\u542f\u7528 go module \uff0c\u53ef\u4ee5\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u64cd\u4f5c\uff1a \u5728\u9879\u76ee\u76ee\u5f55\u4e0b\u6267\u884c go mod init \uff0c\u751f\u6210\u4e00\u4e2a go.mod \u6587\u4ef6\u3002 \u6267\u884c go get \uff0c\u67e5\u627e\u5e76\u8bb0\u5f55\u5f53\u524d\u9879\u76ee\u7684\u4f9d\u8d56\uff0c\u540c\u65f6\u751f\u6210\u4e00\u4e2a go.sum \u8bb0\u5f55\u6bcf\u4e2a\u4f9d\u8d56\u5e93\u7684\u7248\u672c\u548c\u54c8\u5e0c\u503c\u3002","title":"\u65e2\u6709\u9879\u76ee"},{"location":"Golang/golang%E7%AE%80%E4%BB%8B%E5%8F%8A%E5%AE%89%E8%A3%85/#_8","text":"\u5bf9\u4e8e\u4e00\u4e2a\u65b0\u521b\u5efa\u7684\u9879\u76ee\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u9879\u76ee\u6587\u4ef6\u5939\u4e0b\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u64cd\u4f5c\uff1a \u6267\u884c go mod init \u9879\u76ee\u540d \u547d\u4ee4\uff0c\u5728\u5f53\u524d\u9879\u76ee\u6587\u4ef6\u5939\u4e0b\u521b\u5efa\u4e00\u4e2a go.mod \u6587\u4ef6\u3002 \u624b\u52a8\u7f16\u8f91 go.mod \u4e2d\u7684require\u4f9d\u8d56\u9879\u6216\u6267\u884c go get \u81ea\u52a8\u53d1\u73b0\u3001\u7ef4\u62a4\u4f9d\u8d56\u3002","title":"\u65b0\u9879\u76ee"},{"location":"Golang/golang%E7%AE%80%E4%BB%8B%E5%8F%8A%E5%AE%89%E8%A3%85/#_9","text":"\u5355\u884c\u6ce8\u91ca //aaa \u591a\u884c\u6ce8\u91ca /* a b */","title":"\u6ce8\u91ca"},{"location":"Golang/goroutine/","text":"goroutine \u8fdb\u7a0b\u548c\u7ebf\u7a0b \u5e76\u53d1\u548c\u5e76\u884c go\u534f\u7a0b\u548c\u4e3b\u7ebf\u7a0b \u7279\u70b9 \u8bf4\u660e goroutine\u8c03\u5ea6\u6a21\u578b MPG\u6a21\u5f0f \u8bbe\u7f6egolang\u8fd0\u884c\u7684cpu\u6570 goroutine \u00b6 \u8fdb\u7a0b\u548c\u7ebf\u7a0b \u00b6 \u8fdb\u7a0b\u5c31\u662f\u7a0b\u5e8f.\u7a0b\u5e8f\u5728\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u7684\u4e00\u6b21\u6267\u884c\u8fc7\u7a0b.\u8fdb\u7a0b\u662f\u7cfb\u7edf\u8d44\u6e90\u5206\u914d\u548c\u8c03\u5ea6\u7684\u57fa\u672c\u5355\u4f4d. \u7ebf\u7a0b\u662f\u8fdb\u7a0b\u7684\u4e00\u4e2a\u6267\u884c\u5b9e\u4f8b.\u662f\u7a0b\u5e8f\u6267\u884c\u7684\u6700\u5c0f\u5355\u4f4d.\u5b83\u662f\u6bd4\u8fdb\u7a0b\u66f4\u5c0f\u7684\u53ef\u4ee5\u72ec\u7acb\u8fd0\u884c\u7684\u57fa\u672c\u5355\u4f4d. \u4e00\u4e2a\u8fdb\u7a0b\u53ef\u4ee5\u521b\u5efa\u548c\u9500\u6bc1\u591a\u4e2a\u7ebf\u7a0b.\u540c\u4e00\u4e2a\u8fdb\u7a0b\u4e2d\u7684\u591a\u4e2a\u7ebf\u7a0b\u53ef\u4ee5\u5e76\u53d1\u6267\u884c \u4e00\u4e2a\u7a0b\u5e8f\u81f3\u5c11\u7531\u4e00\u4e2a\u8fdb\u7a0b,\u4e00\u4e2a\u8fdb\u7a0b\u81f3\u5c11\u6709\u4e00\u4e2a\u7ebf\u7a0b. \u5e76\u53d1\u548c\u5e76\u884c \u00b6 \u591a\u7ebf\u7a0b\u7a0b\u5e8f\u5728\u5355\u6838\u4e0a\u8fd0\u884c,\u5c31\u662f\u5e76\u53d1, \u591a\u7ebf\u7a0b\u7a0b\u5e8f\u5728\u591a\u6838\u4e0a\u8fd0\u884c,\u5c31\u662f\u5e76\u884c. go\u534f\u7a0b\u548c\u4e3b\u7ebf\u7a0b \u00b6 \u7279\u70b9 \u00b6 \u6709\u72ec\u7acb\u7684\u6808\u7a7a\u95f4 \u5171\u4eab\u7a0b\u5e8f\u7684\u5806\u7a7a\u95f4 \u8c03\u5ea6\u7531\u7528\u6237\u63a7\u5236 \u534f\u7a0b\u662f\u8f7b\u91cf\u7ea7\u7684\u7ebf\u7a0b package main import ( \"fmt\" \"strconv\" \"time\" ) func test () { for i := 1 ; i <= 10 ; i ++ { fmt . Println ( \"test hello world\" + strconv . Itoa ( i )) time . Sleep ( time . Second ) } } //\u8fd9\u79cd\u60c5\u51b5\u4e0b\u4f1a\u5148\u5c0610\u4e2atest\u7684world\u6267\u884c\u5b8c\u6bd5\u540e\u518d\u6267\u884c\u4e3b\u51fd\u6570\u7684golang // func main() { // test() // for i := 1; i <= 10; i++ { // fmt.Println(\"main hello golang\" + strconv.Itoa(i)) // time.Sleep(time.Second) // } // } func main () { go test () //\u5f00\u542f\u4e86\u4e00\u4e2a\u534f\u7a0b,main\u4e3b\u7ebf\u7a0b\u548ctest\u534f\u7a0b\u540c\u65f6\u6267\u884c for i := 1 ; i <= 10 ; i ++ { fmt . Println ( \"main hello golang\" + strconv . Itoa ( i )) time . Sleep ( time . Second ) } } \u8bf4\u660e \u00b6 \u5982\u679c\u4e3b\u7ebf\u7a0b\u9000\u51fa\u4e86.\u5373\u4f7f\u534f\u7a0b\u8fd8\u6ca1\u6709\u6267\u884c\u5b8c\u6bd5,\u4e5f\u4f1a\u9000\u51fa. \u5982\u679c\u534f\u7a0b\u5728\u4e3b\u7ebf\u7a0b\u7ed3\u675f\u4e4b\u524d\u7ed3\u675f,\u5219\u81ea\u5df1\u7ed3\u675f\u534f\u7a0b. \u4e3b\u7ebf\u7a0b\u662f\u4e00\u4e2a\u7269\u7406\u7ebf\u7a0b,\u76f4\u63a5\u4f5c\u7528\u4e0ecpu\u4e4b\u4e0a.\u662f\u91cd\u91cf\u7ea7,\u975e\u5e38\u6d88\u8017cpu\u8d44\u6e90 \u534f\u7a0b\u4ece\u4e3b\u7ebf\u7a0b\u5f00\u542f,\u662f\u8f7b\u91cf\u7ea7\u7684\u7ebf\u7a0b,\u662f\u903b\u8f91\u6001.\u5bf9\u8d44\u6e90\u6d88\u8017\u76f8\u5bf9\u8f83\u5c0f. Golang\u7684\u534f\u7a0b\u673a\u5236\u662f\u662fgo\u7684\u7279\u70b9,\u53ef\u4ee5\u8f7b\u677e\u5f00\u542f\u4e0a\u4e07\u534f\u7a0b.\u5176\u4ed6\u8bed\u8a00\u7684\u5e76\u53d1\u4e00\u822c\u662f\u591a\u7ebf\u7a0b,\u76f8\u5bf9\u5360\u7528\u8d44\u6e90\u591a,\u8d44\u6e90\u8017\u8d39\u5927. goroutine\u8c03\u5ea6\u6a21\u578b \u00b6 MPG\u6a21\u5f0f \u00b6 M:\u64cd\u4f5c\u7cfb\u7edf\u7684\u4e3b\u7ebf\u7a0b(\u662f\u7269\u7406\u7ebf\u7a0b) P:\u534f\u7a0b\u6267\u884c\u9700\u8981\u7684\u4e0a\u4e0b\u6587 G:\u534f\u7a0b \u8bbe\u7f6egolang\u8fd0\u884c\u7684cpu\u6570 \u00b6 go1.8\u4e4b\u540e.\u9ed8\u8ba4\u8ba9\u7a0b\u5e8f\u8fd0\u884c\u5728\u591a\u6838\u4e0a. 1.8\u4e4b\u524d\u9700\u8981\u901a\u8fc7runtime\u5305\u5b9e\u73b0 package main import ( \"runtime\" \" fmt ) func main () { //\u67e5\u770b\u81ea\u5df1cpu\u4e2a\u6570 cpuNum := runtime . NumCPU () fmt . Println ( cpuNum ) //\u81ea\u5df1\u8bbe\u7f6e\u4f7f\u7528\u591a\u5c11\u4e2acpu runtime . GOMAXPROCS ( cpuNum - 1 ) }","title":"goroutine"},{"location":"Golang/goroutine/#goroutine","text":"","title":"goroutine"},{"location":"Golang/goroutine/#_1","text":"\u8fdb\u7a0b\u5c31\u662f\u7a0b\u5e8f.\u7a0b\u5e8f\u5728\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u7684\u4e00\u6b21\u6267\u884c\u8fc7\u7a0b.\u8fdb\u7a0b\u662f\u7cfb\u7edf\u8d44\u6e90\u5206\u914d\u548c\u8c03\u5ea6\u7684\u57fa\u672c\u5355\u4f4d. \u7ebf\u7a0b\u662f\u8fdb\u7a0b\u7684\u4e00\u4e2a\u6267\u884c\u5b9e\u4f8b.\u662f\u7a0b\u5e8f\u6267\u884c\u7684\u6700\u5c0f\u5355\u4f4d.\u5b83\u662f\u6bd4\u8fdb\u7a0b\u66f4\u5c0f\u7684\u53ef\u4ee5\u72ec\u7acb\u8fd0\u884c\u7684\u57fa\u672c\u5355\u4f4d. \u4e00\u4e2a\u8fdb\u7a0b\u53ef\u4ee5\u521b\u5efa\u548c\u9500\u6bc1\u591a\u4e2a\u7ebf\u7a0b.\u540c\u4e00\u4e2a\u8fdb\u7a0b\u4e2d\u7684\u591a\u4e2a\u7ebf\u7a0b\u53ef\u4ee5\u5e76\u53d1\u6267\u884c \u4e00\u4e2a\u7a0b\u5e8f\u81f3\u5c11\u7531\u4e00\u4e2a\u8fdb\u7a0b,\u4e00\u4e2a\u8fdb\u7a0b\u81f3\u5c11\u6709\u4e00\u4e2a\u7ebf\u7a0b.","title":"\u8fdb\u7a0b\u548c\u7ebf\u7a0b"},{"location":"Golang/goroutine/#_2","text":"\u591a\u7ebf\u7a0b\u7a0b\u5e8f\u5728\u5355\u6838\u4e0a\u8fd0\u884c,\u5c31\u662f\u5e76\u53d1, \u591a\u7ebf\u7a0b\u7a0b\u5e8f\u5728\u591a\u6838\u4e0a\u8fd0\u884c,\u5c31\u662f\u5e76\u884c.","title":"\u5e76\u53d1\u548c\u5e76\u884c"},{"location":"Golang/goroutine/#go","text":"","title":"go\u534f\u7a0b\u548c\u4e3b\u7ebf\u7a0b"},{"location":"Golang/goroutine/#_3","text":"\u6709\u72ec\u7acb\u7684\u6808\u7a7a\u95f4 \u5171\u4eab\u7a0b\u5e8f\u7684\u5806\u7a7a\u95f4 \u8c03\u5ea6\u7531\u7528\u6237\u63a7\u5236 \u534f\u7a0b\u662f\u8f7b\u91cf\u7ea7\u7684\u7ebf\u7a0b package main import ( \"fmt\" \"strconv\" \"time\" ) func test () { for i := 1 ; i <= 10 ; i ++ { fmt . Println ( \"test hello world\" + strconv . Itoa ( i )) time . Sleep ( time . Second ) } } //\u8fd9\u79cd\u60c5\u51b5\u4e0b\u4f1a\u5148\u5c0610\u4e2atest\u7684world\u6267\u884c\u5b8c\u6bd5\u540e\u518d\u6267\u884c\u4e3b\u51fd\u6570\u7684golang // func main() { // test() // for i := 1; i <= 10; i++ { // fmt.Println(\"main hello golang\" + strconv.Itoa(i)) // time.Sleep(time.Second) // } // } func main () { go test () //\u5f00\u542f\u4e86\u4e00\u4e2a\u534f\u7a0b,main\u4e3b\u7ebf\u7a0b\u548ctest\u534f\u7a0b\u540c\u65f6\u6267\u884c for i := 1 ; i <= 10 ; i ++ { fmt . Println ( \"main hello golang\" + strconv . Itoa ( i )) time . Sleep ( time . Second ) } }","title":"\u7279\u70b9"},{"location":"Golang/goroutine/#_4","text":"\u5982\u679c\u4e3b\u7ebf\u7a0b\u9000\u51fa\u4e86.\u5373\u4f7f\u534f\u7a0b\u8fd8\u6ca1\u6709\u6267\u884c\u5b8c\u6bd5,\u4e5f\u4f1a\u9000\u51fa. \u5982\u679c\u534f\u7a0b\u5728\u4e3b\u7ebf\u7a0b\u7ed3\u675f\u4e4b\u524d\u7ed3\u675f,\u5219\u81ea\u5df1\u7ed3\u675f\u534f\u7a0b. \u4e3b\u7ebf\u7a0b\u662f\u4e00\u4e2a\u7269\u7406\u7ebf\u7a0b,\u76f4\u63a5\u4f5c\u7528\u4e0ecpu\u4e4b\u4e0a.\u662f\u91cd\u91cf\u7ea7,\u975e\u5e38\u6d88\u8017cpu\u8d44\u6e90 \u534f\u7a0b\u4ece\u4e3b\u7ebf\u7a0b\u5f00\u542f,\u662f\u8f7b\u91cf\u7ea7\u7684\u7ebf\u7a0b,\u662f\u903b\u8f91\u6001.\u5bf9\u8d44\u6e90\u6d88\u8017\u76f8\u5bf9\u8f83\u5c0f. Golang\u7684\u534f\u7a0b\u673a\u5236\u662f\u662fgo\u7684\u7279\u70b9,\u53ef\u4ee5\u8f7b\u677e\u5f00\u542f\u4e0a\u4e07\u534f\u7a0b.\u5176\u4ed6\u8bed\u8a00\u7684\u5e76\u53d1\u4e00\u822c\u662f\u591a\u7ebf\u7a0b,\u76f8\u5bf9\u5360\u7528\u8d44\u6e90\u591a,\u8d44\u6e90\u8017\u8d39\u5927.","title":"\u8bf4\u660e"},{"location":"Golang/goroutine/#goroutine_1","text":"","title":"goroutine\u8c03\u5ea6\u6a21\u578b"},{"location":"Golang/goroutine/#mpg","text":"M:\u64cd\u4f5c\u7cfb\u7edf\u7684\u4e3b\u7ebf\u7a0b(\u662f\u7269\u7406\u7ebf\u7a0b) P:\u534f\u7a0b\u6267\u884c\u9700\u8981\u7684\u4e0a\u4e0b\u6587 G:\u534f\u7a0b","title":"MPG\u6a21\u5f0f"},{"location":"Golang/goroutine/#golangcpu","text":"go1.8\u4e4b\u540e.\u9ed8\u8ba4\u8ba9\u7a0b\u5e8f\u8fd0\u884c\u5728\u591a\u6838\u4e0a. 1.8\u4e4b\u524d\u9700\u8981\u901a\u8fc7runtime\u5305\u5b9e\u73b0 package main import ( \"runtime\" \" fmt ) func main () { //\u67e5\u770b\u81ea\u5df1cpu\u4e2a\u6570 cpuNum := runtime . NumCPU () fmt . Println ( cpuNum ) //\u81ea\u5df1\u8bbe\u7f6e\u4f7f\u7528\u591a\u5c11\u4e2acpu runtime . GOMAXPROCS ( cpuNum - 1 ) }","title":"\u8bbe\u7f6egolang\u8fd0\u884c\u7684cpu\u6570"},{"location":"Golang/map/","text":"map \u57fa\u672c\u8bed\u6cd5 \u5b9a\u4e49(\u58f0\u660e) keytype valuetype \u6ce8\u610f \u57fa\u672c\u4f7f\u7528 \u58f0\u660e\u53ca\u521d\u59cb\u5316 \u4f7f\u7528\u4e2d\u62ec\u53f7\u8d4b\u503c,\u53d6\u503c \u5224\u65ad\u67d0\u4e2a\u952e\u662f\u5426\u5b58\u5728 map\u7684\u5220\u9664 map\u7684\u904d\u5386 \u503c\u4e3a\u5207\u7247\u7c7b\u578b\u7684map map\u7684\u6392\u5e8f \u7ec6\u8282 map \u00b6 map\u662fkey-value\u6570\u636e\u7ed3\u6784,\u5b98\u65b9\u79f0\u4e3a\u6620\u5c04. \u5176\u5185\u90e8\u4f7f\u7528\u6563\u5217\u8868(hash)\u5b9e\u73b0.\u5e95\u5c42\u4f7f\u7528\u5e73\u8861\u4e8c\u53c9\u6811.(\u4efb\u610f\u4e24\u68f5\u5b50\u6811\u7684\u9ad8\u5ea6\u5dee\u4e0d\u8d85\u8fc71) Go\u4e2d\u7684map\u662f\u5f15\u7528\u7c7b\u578b,\u5fc5\u987b\u521d\u59cb\u5316(make)\u624d\u80fd\u4f7f\u7528. \u57fa\u672c\u8bed\u6cd5 \u00b6 \u5b9a\u4e49(\u58f0\u660e) \u00b6 map [ keytype ] valusetype keytype\u8868\u793a\u952e\u7c7b\u578b. valuetype\u8868\u793a\u952e\u5bf9\u5e94\u7684\u503c\u7684\u7c7b\u578b. \u6ce8\u610f: map\u7c7b\u578b\u7684\u53d8\u91cf\u9ed8\u8ba4\u521d\u59cb\u503c\u4e3anil, \u58f0\u660e\u671f\u95f4\u4e0d\u5206\u914d\u5185\u5b58 ,\u9700\u8981\u4f7f\u7528make()\u51fd\u6570\u6765\u5206\u914d\u5185\u5b58\u548c\u8d4b\u503c,\u4e4b\u540e\u624d\u53ef\u4ee5\u4f7f\u7528. make ( map [ keytype ] valuetype [, cap ]) \u5176\u4e2dcap\u8868\u793amap\u7684\u5bb9\u91cf,\u8be5\u53c2\u6570\u4e0d\u662f\u5fc5\u987b\u7684,\u4f46\u662f\u5e94\u8be5\u5728\u521d\u59cb\u5316\u65f6\u5019\u4e3amap\u6307\u5b9a\u4e00\u4e2a\u5408\u9002\u7684\u5bb9\u91cf.\u5982\u679c\u5bb9\u91cf\u8d85\u4e86,\u7cfb\u7edf\u4f1a\u81ea\u52a8\u6269\u5bb9. \u6ca1\u6709make,\u76f4\u63a5\u4f7f\u7528\u4e2d\u62ec\u53f7\u7684\u8d4b\u503c\u64cd\u4f5c,\u4f1a\u62a5\u9519. keytype \u00b6 key\u53ef\u4ee5\u6709\u5f88\u591a\u79cd\u7c7b\u578b,\u6bd4\u5982bool,\u6570\u5b57,string,\u6307\u9488,channel,\u6216\u53ea\u5305\u542b\u524d\u9762\u6570\u636e\u7ed3\u6784\u5355\u4e00\u7c7b\u578b\u7684 \u63a5\u53e3,\u7ed3\u6784\u4f53,\u6570\u7ec4 \u6ce8\u610f:slice,map\u548cfunction\u4e0d\u53ef\u4ee5,\u56e0\u4e3a\u65e0\u6cd5\u7528==\u6765\u5224\u65ad \u5e38\u4e3aint,sring valuetype \u00b6 \u540ckeytype,map\u53ef\u4ee5\u505avaluetype \u5e38\u4e3a\u6570\u5b57,string,map,struct \u6ce8\u610f \u00b6 map\u7684key\u4e0d\u80fd\u91cd\u590d,\u5982\u679c\u91cd\u590d,\u540e\u9762\u7684\u952e\u503c\u4f1a\u8986\u76d6\u524d\u9762\u7684\u952e\u503c map\u7684key-value\u662f\u65e0\u5e8f\u7684 \u57fa\u672c\u4f7f\u7528 \u00b6 \u58f0\u660e\u53ca\u521d\u59cb\u5316 \u00b6 \u65b9\u6cd51: var\u58f0\u660e,make,\u4e4b\u540e\u8d4b\u503c func main () { var userInfo map [ string ] string userInfo = make ( map [ string ] string ) userInfo [ \"name1\" ] = \"tom\" userInfo [ \"name2\" ] = \"jerry\" fmt . Println ( userInfo ) } >> > map [ name1 : tom name2 : jerry ] \u65b9\u6cd52: map\u540d := make(map[type]type),\u7136\u540e\u8d4b\u503c func main () { userInfo := make ( map [ string ] string ) userInfo [ \"name1\" ] = \"tom\" userInfo [ \"name2\" ] = \"jerry\" fmt . Println ( userInfo ) } >> > map [ name1 : tom name2 : jerry ] \u65b9\u6cd53 \u58f0\u660e\u76f4\u63a5\u5b9a\u4e49,\u4e0d\u9700\u8981\u4f7f\u7528make, func main () { userInfo := map [ string ] string { \"name1\" : \"tom\" , \"name2\" : \"jerry\" , } fmt . Println ( userInfo ) } >> > map [ name1 : tom name2 : jerry ] \u4f7f\u7528\u4e2d\u62ec\u53f7\u8d4b\u503c,\u53d6\u503c \u00b6 map[\"key\"] = value \u6709\u5219\u4fee\u6539,\u65e0\u5219\u6dfb\u52a0 func main (){ scoreMap := make ( map [ string ] int , 8 ) scoreMap [ \"tom\" ] = 90 scoreMap [ \"jerry\" ] = 100 fmt . Println ( scoreMap ) fmt . Println ( scoreMap [ \"tom\" ]) fmt . Println ( scoreMap [ \"jerry\" ]) } >> > map [ jerry : 100 tom : 90 ] 90 100 \u652f\u6301\u58f0\u660e\u65f6\u76f4\u63a5\u8d4b\u503c func main () { userInfo := map [ string ] string { \"username\" : \"james\" , \"password\" : \"007\" , } fmt . Println ( userInfo ) } >> > map [ password : 007 username : james ] \u5224\u65ad\u67d0\u4e2a\u952e\u662f\u5426\u5b58\u5728 \u00b6 \u8bed\u6cd5: value,ok := map[key] value\u548cok\u90fd\u4e3a\u60ef\u7528\u666e\u901a\u5b57\u7b26\u540d func main () { userInfo := map [ string ] string { \"username\" : \"james\" , \"password\" : \"007\" , } v , ok := userInfo [ \"username\" ] fmt . Println ( v ) fmt . Printf ( \"%v %T\" , ok , ok ) } >> > james true bool \u5982\u679c\u4e0d\u4f7f\u7528\u4e0a\u8ff0\u8bed\u6cd5,\u4f7f\u7528\u5355\u4e2a\u53d8\u91cf\u63a5\u6536 map[key] ,\u82e5key\u5b58\u5728,\u8fd4\u56de\u5bf9\u5e94value,\u5982\u679ckey\u4e0d\u5b58\u5728,\u8fd4\u56de\u5bf9\u5e94valueType\u7684\u96f6\u503c.\u6240\u4ee5\u5982\u679c\u8981\u5224\u65adkey\u662f\u5426\u5b58\u5728,\u9700\u8981\u4f7f\u7528\u4e24\u4e2a\u53d8\u91cf\u63a5\u6536\u8fd4\u56de\u503c. map\u7684\u5220\u9664 \u00b6 delete(map,key) \u5c06key\u5bf9\u5e94\u7684\u952e\u503c\u5bf9\u5220\u9664, key\u5b58\u5728\u5c31\u5220\u9664,\u4e0d\u5b58\u5728,\u4e0d\u62a5\u9519\u4e5f\u4e0d\u64cd\u4f5c func main () { userInfo := map [ string ] string { \"username\" : \"james\" , \"password\" : \"007\" , } delete ( userInfo , \"username\" ) fmt . Println ( userInfo ) } >> > map [ password : 007 ] map\u4e2d\u6ca1\u6709\u4e00\u4e0b\u5220\u9664\u771f\u4e2amap\u7684\u64cd\u4f5c,\u53ea\u80fd\u904d\u5386\u5220\u9664,\u6216\u8005make\u4e00\u4e2a\u65b0\u7684\u540c\u540dmap,\u8ba9\u539f\u6765\u7684\u6210\u4e3a\u5783\u573e,\u88abgc\u56de\u6536. map\u7684\u904d\u5386 \u00b6 Go\u8bed\u8a00\u4e2d\u4f7f\u7528for range\u904d\u5386map func main () { userInfo := map [ string ] string { \"username\" : \"james\" , \"password\" : \"007\" , } for k , v := range userInfo { fmt . Println ( k , v ) } } >> > username james password 007 \u53ea\u904d\u5386k\u7684\u65f6\u5019 func main () { userInfo := map [ string ] string { \"username\" : \"james\" , \"password\" : \"007\" , } for k := range userInfo { fmt . Println ( k ) } } >> > username password map\u4e2d\u7684for range\u53ef\u4ee5\u53ea\u6709\u4e00\u4e2a\u53c2\u6570, k,v\u4e3a\u60ef\u7528\u5b57 \u904d\u5386map\u65f6\u5143\u7d20\u987a\u5e8f\u4e0e\u6dfb\u52a0\u952e\u503c\u5bf9\u987a\u5e8f\u65e0\u5173. \u503c\u4e3a\u5207\u7247\u7c7b\u578b\u7684map \u00b6 map of slice \u503c\u4e3a\u5207\u7247\u7c7b\u578b\u7684map func main () { var sliceMap = make ( map [ string ][] string , 3 ) fmt . Println ( sliceMap ) key := \"\u4e2d\u56fd\" value , ok := sliceMap [ key ] if ! ok { value = make ([] string , 0 , 2 ) } value = append ( value , \"\u5317\u4eac\" , \"\u4e0a\u6d77\" ) sliceMap [ key ] = value fmt . Println ( sliceMap ) } >> > map [] map [ \u4e2d\u56fd :[ \u5317\u4eac \u4e0a\u6d77 ]] map\u7684\u6392\u5e8f \u00b6 \u5148\u5c06map\u7684key\u653e\u5230\u4e00\u4e2a\u5207\u7247\u4e2d, \u5bf9\u5207\u7247\u6392\u5e8f \u904d\u5386\u5207\u7247,\u6309\u7167key\u6765\u8f93\u51famap\u7684\u503c func main () { //\u751f\u6210\u4e00\u4e2a\u5b57\u5178 map1 := make ( map [ int ] int , 10 ) map1 [ 10 ] = 100 map1 [ 1 ] = 23 map1 [ 4 ] = 56 map1 [ 7 ] = 89 //\u58f0\u660e\u4e00\u4e2a\u5207\u7247,\u5e76\u5c06map\u4e2d\u7684key\u52a0\u5165keys\u4e2d var keys [] int for k , _ := range ( map1 ){ keys = append ( keys , k ) } //\u5c06\u5207\u7247keys\u6392\u5e8f sort . Ints ( keys ) fmt . Println ( keys ) //\u904d\u5386\u5207\u7247\u8f93\u51famap1\u4e2d\u5bf9\u5e94\u7684value for _ , k := range keys { fmt . Printf ( \"%v \" , k ) fmt . Println ( map1 [ k ]) } } >> > [ 1 4 7 10 ] 1 23 4 56 7 89 10 100 \u7ec6\u8282 \u00b6 map\u662f==\u5f15\u7528\u7c7b\u578b==,\u9075\u5b88\u5f15\u7528\u7c7b\u578b\u4f20\u9012\u7684\u673a\u5236,\u5728\u4e00\u4e2a\u51fd\u6570\u63a5\u6536map,\u4fee\u6539\u540e,\u4f1a\u76f4\u63a5\u4fee\u6539\u539f\u6765\u7684map func modify ( map1 map [ int ] int ) { map1 [ 10 ]= 900 } func main () { map1 := make ( map [ int ] int ) map1 [ 1 ]= 1 map1 [ 2 ]= 2 map1 [ 10 ]= 10 modify ( map1 ) fmt . Println ( map1 ) } >> > map [ 1 : 1 2 : 2 10 : 900 ] map\u7684\u5bb9\u91cf\u5230\u8fbe\u540e,\u518d\u6dfb\u52a0\u5143\u7d20,\u4f1a\u81ea\u52a8\u6269\u5bb9,\u4e0d\u4f1a\u53d1\u751fpanic,\u6240\u4ee5,map\u53ef\u4ee5\u81ea\u52a8\u52a8\u6001\u589e\u957f\u952e\u503c\u5bf9 map\u7684value\u4e5f\u7ecf\u5e38\u4f7f\u7528struct\u7c7b\u578b,\u66f4\u9002\u5408\u7ba1\u7406\u590d\u6742\u7684\u6570\u636e, type Stu struct { Name string Age int Address string } func main () { student := make ( map [ string ] Stu ) stu1 := Stu { Name : \"tom\" , Age : 18 , Address : \"\u5317\u4eac\" } stu2 := Stu { \"jerry\" , 17 , \"\u4e0a\u6d77\" } student [ \"no1\" ] = stu1 student [ \"no2\" ] = stu2 fmt . Println ( student ) for k , v := range student { fmt . Printf ( \"%v \" , k ) fmt . Printf ( \"%v \" , v . Name ) fmt . Printf ( \"%v \" , v . Age ) fmt . Println ( v . Address ) } } >> > map [ no1 :{ tom 18 \u5317\u4eac } no2 :{ jerry 17 \u4e0a\u6d77 }] no1 tom 18 \u5317\u4eac no2 jerry 17 \u4e0a\u6d77","title":"map"},{"location":"Golang/map/#map","text":"map\u662fkey-value\u6570\u636e\u7ed3\u6784,\u5b98\u65b9\u79f0\u4e3a\u6620\u5c04. \u5176\u5185\u90e8\u4f7f\u7528\u6563\u5217\u8868(hash)\u5b9e\u73b0.\u5e95\u5c42\u4f7f\u7528\u5e73\u8861\u4e8c\u53c9\u6811.(\u4efb\u610f\u4e24\u68f5\u5b50\u6811\u7684\u9ad8\u5ea6\u5dee\u4e0d\u8d85\u8fc71) Go\u4e2d\u7684map\u662f\u5f15\u7528\u7c7b\u578b,\u5fc5\u987b\u521d\u59cb\u5316(make)\u624d\u80fd\u4f7f\u7528.","title":"map"},{"location":"Golang/map/#_1","text":"","title":"\u57fa\u672c\u8bed\u6cd5"},{"location":"Golang/map/#_2","text":"map [ keytype ] valusetype keytype\u8868\u793a\u952e\u7c7b\u578b. valuetype\u8868\u793a\u952e\u5bf9\u5e94\u7684\u503c\u7684\u7c7b\u578b. \u6ce8\u610f: map\u7c7b\u578b\u7684\u53d8\u91cf\u9ed8\u8ba4\u521d\u59cb\u503c\u4e3anil, \u58f0\u660e\u671f\u95f4\u4e0d\u5206\u914d\u5185\u5b58 ,\u9700\u8981\u4f7f\u7528make()\u51fd\u6570\u6765\u5206\u914d\u5185\u5b58\u548c\u8d4b\u503c,\u4e4b\u540e\u624d\u53ef\u4ee5\u4f7f\u7528. make ( map [ keytype ] valuetype [, cap ]) \u5176\u4e2dcap\u8868\u793amap\u7684\u5bb9\u91cf,\u8be5\u53c2\u6570\u4e0d\u662f\u5fc5\u987b\u7684,\u4f46\u662f\u5e94\u8be5\u5728\u521d\u59cb\u5316\u65f6\u5019\u4e3amap\u6307\u5b9a\u4e00\u4e2a\u5408\u9002\u7684\u5bb9\u91cf.\u5982\u679c\u5bb9\u91cf\u8d85\u4e86,\u7cfb\u7edf\u4f1a\u81ea\u52a8\u6269\u5bb9. \u6ca1\u6709make,\u76f4\u63a5\u4f7f\u7528\u4e2d\u62ec\u53f7\u7684\u8d4b\u503c\u64cd\u4f5c,\u4f1a\u62a5\u9519.","title":"\u5b9a\u4e49(\u58f0\u660e)"},{"location":"Golang/map/#keytype","text":"key\u53ef\u4ee5\u6709\u5f88\u591a\u79cd\u7c7b\u578b,\u6bd4\u5982bool,\u6570\u5b57,string,\u6307\u9488,channel,\u6216\u53ea\u5305\u542b\u524d\u9762\u6570\u636e\u7ed3\u6784\u5355\u4e00\u7c7b\u578b\u7684 \u63a5\u53e3,\u7ed3\u6784\u4f53,\u6570\u7ec4 \u6ce8\u610f:slice,map\u548cfunction\u4e0d\u53ef\u4ee5,\u56e0\u4e3a\u65e0\u6cd5\u7528==\u6765\u5224\u65ad \u5e38\u4e3aint,sring","title":"keytype"},{"location":"Golang/map/#valuetype","text":"\u540ckeytype,map\u53ef\u4ee5\u505avaluetype \u5e38\u4e3a\u6570\u5b57,string,map,struct","title":"valuetype"},{"location":"Golang/map/#_3","text":"map\u7684key\u4e0d\u80fd\u91cd\u590d,\u5982\u679c\u91cd\u590d,\u540e\u9762\u7684\u952e\u503c\u4f1a\u8986\u76d6\u524d\u9762\u7684\u952e\u503c map\u7684key-value\u662f\u65e0\u5e8f\u7684","title":"\u6ce8\u610f"},{"location":"Golang/map/#_4","text":"","title":"\u57fa\u672c\u4f7f\u7528"},{"location":"Golang/map/#_5","text":"\u65b9\u6cd51: var\u58f0\u660e,make,\u4e4b\u540e\u8d4b\u503c func main () { var userInfo map [ string ] string userInfo = make ( map [ string ] string ) userInfo [ \"name1\" ] = \"tom\" userInfo [ \"name2\" ] = \"jerry\" fmt . Println ( userInfo ) } >> > map [ name1 : tom name2 : jerry ] \u65b9\u6cd52: map\u540d := make(map[type]type),\u7136\u540e\u8d4b\u503c func main () { userInfo := make ( map [ string ] string ) userInfo [ \"name1\" ] = \"tom\" userInfo [ \"name2\" ] = \"jerry\" fmt . Println ( userInfo ) } >> > map [ name1 : tom name2 : jerry ] \u65b9\u6cd53 \u58f0\u660e\u76f4\u63a5\u5b9a\u4e49,\u4e0d\u9700\u8981\u4f7f\u7528make, func main () { userInfo := map [ string ] string { \"name1\" : \"tom\" , \"name2\" : \"jerry\" , } fmt . Println ( userInfo ) } >> > map [ name1 : tom name2 : jerry ]","title":"\u58f0\u660e\u53ca\u521d\u59cb\u5316"},{"location":"Golang/map/#_6","text":"map[\"key\"] = value \u6709\u5219\u4fee\u6539,\u65e0\u5219\u6dfb\u52a0 func main (){ scoreMap := make ( map [ string ] int , 8 ) scoreMap [ \"tom\" ] = 90 scoreMap [ \"jerry\" ] = 100 fmt . Println ( scoreMap ) fmt . Println ( scoreMap [ \"tom\" ]) fmt . Println ( scoreMap [ \"jerry\" ]) } >> > map [ jerry : 100 tom : 90 ] 90 100 \u652f\u6301\u58f0\u660e\u65f6\u76f4\u63a5\u8d4b\u503c func main () { userInfo := map [ string ] string { \"username\" : \"james\" , \"password\" : \"007\" , } fmt . Println ( userInfo ) } >> > map [ password : 007 username : james ]","title":"\u4f7f\u7528\u4e2d\u62ec\u53f7\u8d4b\u503c,\u53d6\u503c"},{"location":"Golang/map/#_7","text":"\u8bed\u6cd5: value,ok := map[key] value\u548cok\u90fd\u4e3a\u60ef\u7528\u666e\u901a\u5b57\u7b26\u540d func main () { userInfo := map [ string ] string { \"username\" : \"james\" , \"password\" : \"007\" , } v , ok := userInfo [ \"username\" ] fmt . Println ( v ) fmt . Printf ( \"%v %T\" , ok , ok ) } >> > james true bool \u5982\u679c\u4e0d\u4f7f\u7528\u4e0a\u8ff0\u8bed\u6cd5,\u4f7f\u7528\u5355\u4e2a\u53d8\u91cf\u63a5\u6536 map[key] ,\u82e5key\u5b58\u5728,\u8fd4\u56de\u5bf9\u5e94value,\u5982\u679ckey\u4e0d\u5b58\u5728,\u8fd4\u56de\u5bf9\u5e94valueType\u7684\u96f6\u503c.\u6240\u4ee5\u5982\u679c\u8981\u5224\u65adkey\u662f\u5426\u5b58\u5728,\u9700\u8981\u4f7f\u7528\u4e24\u4e2a\u53d8\u91cf\u63a5\u6536\u8fd4\u56de\u503c.","title":"\u5224\u65ad\u67d0\u4e2a\u952e\u662f\u5426\u5b58\u5728"},{"location":"Golang/map/#map_1","text":"delete(map,key) \u5c06key\u5bf9\u5e94\u7684\u952e\u503c\u5bf9\u5220\u9664, key\u5b58\u5728\u5c31\u5220\u9664,\u4e0d\u5b58\u5728,\u4e0d\u62a5\u9519\u4e5f\u4e0d\u64cd\u4f5c func main () { userInfo := map [ string ] string { \"username\" : \"james\" , \"password\" : \"007\" , } delete ( userInfo , \"username\" ) fmt . Println ( userInfo ) } >> > map [ password : 007 ] map\u4e2d\u6ca1\u6709\u4e00\u4e0b\u5220\u9664\u771f\u4e2amap\u7684\u64cd\u4f5c,\u53ea\u80fd\u904d\u5386\u5220\u9664,\u6216\u8005make\u4e00\u4e2a\u65b0\u7684\u540c\u540dmap,\u8ba9\u539f\u6765\u7684\u6210\u4e3a\u5783\u573e,\u88abgc\u56de\u6536.","title":"map\u7684\u5220\u9664"},{"location":"Golang/map/#map_2","text":"Go\u8bed\u8a00\u4e2d\u4f7f\u7528for range\u904d\u5386map func main () { userInfo := map [ string ] string { \"username\" : \"james\" , \"password\" : \"007\" , } for k , v := range userInfo { fmt . Println ( k , v ) } } >> > username james password 007 \u53ea\u904d\u5386k\u7684\u65f6\u5019 func main () { userInfo := map [ string ] string { \"username\" : \"james\" , \"password\" : \"007\" , } for k := range userInfo { fmt . Println ( k ) } } >> > username password map\u4e2d\u7684for range\u53ef\u4ee5\u53ea\u6709\u4e00\u4e2a\u53c2\u6570, k,v\u4e3a\u60ef\u7528\u5b57 \u904d\u5386map\u65f6\u5143\u7d20\u987a\u5e8f\u4e0e\u6dfb\u52a0\u952e\u503c\u5bf9\u987a\u5e8f\u65e0\u5173.","title":"map\u7684\u904d\u5386"},{"location":"Golang/map/#map_3","text":"map of slice \u503c\u4e3a\u5207\u7247\u7c7b\u578b\u7684map func main () { var sliceMap = make ( map [ string ][] string , 3 ) fmt . Println ( sliceMap ) key := \"\u4e2d\u56fd\" value , ok := sliceMap [ key ] if ! ok { value = make ([] string , 0 , 2 ) } value = append ( value , \"\u5317\u4eac\" , \"\u4e0a\u6d77\" ) sliceMap [ key ] = value fmt . Println ( sliceMap ) } >> > map [] map [ \u4e2d\u56fd :[ \u5317\u4eac \u4e0a\u6d77 ]]","title":"\u503c\u4e3a\u5207\u7247\u7c7b\u578b\u7684map"},{"location":"Golang/map/#map_4","text":"\u5148\u5c06map\u7684key\u653e\u5230\u4e00\u4e2a\u5207\u7247\u4e2d, \u5bf9\u5207\u7247\u6392\u5e8f \u904d\u5386\u5207\u7247,\u6309\u7167key\u6765\u8f93\u51famap\u7684\u503c func main () { //\u751f\u6210\u4e00\u4e2a\u5b57\u5178 map1 := make ( map [ int ] int , 10 ) map1 [ 10 ] = 100 map1 [ 1 ] = 23 map1 [ 4 ] = 56 map1 [ 7 ] = 89 //\u58f0\u660e\u4e00\u4e2a\u5207\u7247,\u5e76\u5c06map\u4e2d\u7684key\u52a0\u5165keys\u4e2d var keys [] int for k , _ := range ( map1 ){ keys = append ( keys , k ) } //\u5c06\u5207\u7247keys\u6392\u5e8f sort . Ints ( keys ) fmt . Println ( keys ) //\u904d\u5386\u5207\u7247\u8f93\u51famap1\u4e2d\u5bf9\u5e94\u7684value for _ , k := range keys { fmt . Printf ( \"%v \" , k ) fmt . Println ( map1 [ k ]) } } >> > [ 1 4 7 10 ] 1 23 4 56 7 89 10 100","title":"map\u7684\u6392\u5e8f"},{"location":"Golang/map/#_8","text":"map\u662f==\u5f15\u7528\u7c7b\u578b==,\u9075\u5b88\u5f15\u7528\u7c7b\u578b\u4f20\u9012\u7684\u673a\u5236,\u5728\u4e00\u4e2a\u51fd\u6570\u63a5\u6536map,\u4fee\u6539\u540e,\u4f1a\u76f4\u63a5\u4fee\u6539\u539f\u6765\u7684map func modify ( map1 map [ int ] int ) { map1 [ 10 ]= 900 } func main () { map1 := make ( map [ int ] int ) map1 [ 1 ]= 1 map1 [ 2 ]= 2 map1 [ 10 ]= 10 modify ( map1 ) fmt . Println ( map1 ) } >> > map [ 1 : 1 2 : 2 10 : 900 ] map\u7684\u5bb9\u91cf\u5230\u8fbe\u540e,\u518d\u6dfb\u52a0\u5143\u7d20,\u4f1a\u81ea\u52a8\u6269\u5bb9,\u4e0d\u4f1a\u53d1\u751fpanic,\u6240\u4ee5,map\u53ef\u4ee5\u81ea\u52a8\u52a8\u6001\u589e\u957f\u952e\u503c\u5bf9 map\u7684value\u4e5f\u7ecf\u5e38\u4f7f\u7528struct\u7c7b\u578b,\u66f4\u9002\u5408\u7ba1\u7406\u590d\u6742\u7684\u6570\u636e, type Stu struct { Name string Age int Address string } func main () { student := make ( map [ string ] Stu ) stu1 := Stu { Name : \"tom\" , Age : 18 , Address : \"\u5317\u4eac\" } stu2 := Stu { \"jerry\" , 17 , \"\u4e0a\u6d77\" } student [ \"no1\" ] = stu1 student [ \"no2\" ] = stu2 fmt . Println ( student ) for k , v := range student { fmt . Printf ( \"%v \" , k ) fmt . Printf ( \"%v \" , v . Name ) fmt . Printf ( \"%v \" , v . Age ) fmt . Println ( v . Address ) } } >> > map [ no1 :{ tom 18 \u5317\u4eac } no2 :{ jerry 17 \u4e0a\u6d77 }] no1 tom 18 \u5317\u4eac no2 jerry 17 \u4e0a\u6d77","title":"\u7ec6\u8282"},{"location":"Golang/%E4%BB%A3%E7%A0%81%E7%BB%93%E6%9E%84%E5%92%8C%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/","text":"\u8bed\u6cd5\u7279\u6027 \u6ce8\u91ca \u884c\u6ce8\u91ca \u5757\u7ea7\u6ce8\u91ca \u6ce8\u610f:\u6ce8\u91ca\u4e0d\u80fd\u5d4c\u5957\u4f7f\u7528 \u5199 \u8fd0\u884c \u6ce8\u610f\u4e8b\u9879 Go\u7684\u8f6c\u4e49\u5b57\u7b26(escape char) \u89c4\u8303\u7684\u4ee3\u7801\u98ce\u683c \u8bed\u6cd5\u7279\u6027 \u00b6 package main # \u5b9a\u4e49\u4e86\u4e00\u4e2a\u5305\u7684\u540d\u5b57 import \"fmt\" # \u7a0b\u5e8f\u9700\u8981fmt\u5305 , \u683c\u5f0f\u5316\u8f93\u51fa\u51fd\u6570 func main (){ # func\u8868\u793a\u8981\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570 fmt . Println ( \"hello word,\" ) # main\u8868\u540d\u4e86\u7a0b\u5e8f\u5f00\u59cb\u6267\u884c , } \u975e\u6ce8\u91ca\u7b2c\u4e00\u884c\u4e00\u5b9a\u8981\u58f0\u660e\u5f53\u524d\u6587\u4ef6\u5c5e\u4e8e\u54ea\u4e2a\u5305 \u6bcf\u4e2a\u53ef\u6267\u884c\u51fd\u6570\u90fd\u8981\u5305\u542bmain\u51fd\u6570,main\u662f\u4e00\u4e2a\u6587\u4ef6\u6267\u884c\u7684\u5165\u53e3 fmt.println fmt\u6307\u5305\u4e2d\u7684println\u65b9\u6cd5 \u81ea\u52a8\\n go\u4e2d\u7684{}\u4e0d\u80fd\u5355\u72ec\u653e\u5728\u4e00\u884c,\u5fc5\u987b\u8ddf\u5728\u51fd\u6570\u540e \u4ee3\u7801\u51fd\u6570\u5fc5\u987b\u653e\u5728\u51fd\u6570\u5185\u90e8 \u53d8\u91cf\u5982\u679c\u5b9a\u4e49\u4e86\u800c\u6ca1\u6709\u4f7f\u7528,\u4f1a\u5f15\u53d1\u7f16\u8bd1\u95ee\u9898 \u7ec8\u7aef\u4e2d.go fmt main.go\u81ea\u52a8\u683c\u5f0f\u5316\u4ee3\u7801,\u76ee\u524d\u7f16\u8bd1\u5668\u5927\u90e8\u5206\u81ea\u52a8\u8c03\u7528 \u547d\u540d\u4f7f\u7528\u9a7c\u5cf0\u4f53 Go\u6e90\u6587\u4ef6\u4ee5go\u4e3a\u6269\u5c55\u540d Go\u8bed\u8a00\u4e25\u683c\u533a\u5206\u5927\u5c0f\u5199 Go\u65b9\u6cd5\u7531\u4e00\u6761\u6761\u8bed\u53e5\u6784\u6210,\u6bcf\u4e2a\u8bed\u53e5\u540e\u4e0d\u9700\u8981\u5206\u53f7(Go\u8bed\u8a00\u4f1a\u5728\u6bcf\u884c\u540e\u81ea\u52a8\u52a0\u5206\u53f7),\u52a0\u4e86\u4e5f\u80fd\u7528,\u4f46\u662f\u663e\u5f97\u4e0d\u4e13\u4e1a Go\u7f16\u8bd1\u5668\u662f\u4e00\u884c\u884c\u8fdb\u884c\u7f16\u8bd1\u7684,\u56e0\u6b64\u5199\u4ee3\u7801\u4e00\u884c\u5c31\u5199\u4e00\u6761,\u4e0d\u80fd\u591a\u6761\u8bed\u53e5\u5199\u5728\u4e00\u884c Go\u8bed\u8a00\u5b9a\u4e49\u7684\u53d8\u91cf\u6216\u8005import\u7684\u5305\u5982\u679c\u6ca1\u6709\u4f7f\u7528\u5230,\u4ee3\u7801\u4e0d\u80fd\u901a\u8fc7\u7f16\u8bd1. \u6ce8\u91ca \u00b6 \u884c\u6ce8\u91ca \u00b6 //\u8868\u793a\u5355\u884c\u6ce8\u91ca \u5757\u7ea7\u6ce8\u91ca \u00b6 /* \u5757\u7ea7(\u591a\u884c)\u6ce8\u91ca */ \u6ce8\u610f:\u6ce8\u91ca\u4e0d\u80fd\u5d4c\u5957\u4f7f\u7528 \u00b6 \u5199 \u00b6 package main // import \"fmt\" func main (){ fmt . Println ( \"hellow world\" ) } package main \u8868\u793a\u8be5hello go \u6587\u4ef6\u6240\u5728\u5305\u662fmain,\u5728go\u4e2d,\u6bcf\u4e2a\u6587\u4ef6\u90fd\u5fc5\u987b\u5f52\u5c5e\u4e8e\u4e00\u4e2a\u5305 import \"fmt\" \u8868\u793a\u5f15\u5165\u4e00\u4e2a\u5305,\u5305\u540d\u4e3afmt,\u5f15\u5165\u8be5\u5305\u540e\u5c31\u53ef\u4ee5\u4f7f\u7528fmt\u4e2d\u7684\u51fd\u6570,\u6bd4\u5982: fmt.Println() func main(){ } func \u662f\u4e00\u4e2a\u5173\u952e\u5b57,\u8868\u793a\u4e00\u4e2a\u51fd\u6570,main\u662f\u51fd\u6570\u540d,\u8868\u793a\u662f\u4e00\u4e2a\u4e3b\u51fd\u6570,\u5373\u7a0b\u5e8f\u7684\u5165\u53e3 fmt.Println() \u8868\u793a\u8c03\u7528fmt\u5305\u7684\u51fd\u6570Println\u51fa\u5165''hello world\" \u8fd0\u884c \u00b6 \u901a\u8fc7go build \u547d\u4ee4\u5bf9go\u6587\u4ef6\u8fdb\u884c\u7f16\u8bd1,\u751f\u6210exe\u6587\u4ef6,\u8fd0\u884chello.exe\u6587\u4ef6, \u6267\u884c\u6548\u7387\u9ad8,\u751f\u4ea7\u4e2d\u7528,\u66f4\u6362\u73af\u5883\u4e5f\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 go run \u76f4\u63a5\u8fd0\u884c,\u6267\u884c\u6548\u7387\u4f4e\u66f4\u6362\u73af\u5883\u5fc5\u987b\u4e5f\u6709go\u624d\u80fd\u7528 \u6ce8\u610f\u4e8b\u9879 \u00b6 Go\u6e90\u6587\u4ef6\u4ee5go\u4e3a\u6269\u5c55\u540d Go\u5e94\u7528\u7a0b\u5e8f\u7684\u6267\u884c\u5165\u53e3\u662fmain()\u65b9\u6cd5 Go\u8bed\u8a00\u4e25\u683c\u533a\u5206\u5927\u5c0f\u5199 Go\u65b9\u6cd5\u7531\u4e00\u6761\u6761\u8bed\u53e5\u6784\u6210,\u6bcf\u4e2a\u8bed\u53e5\u540e\u4e0d\u9700\u8981\u5206\u53f7(Go\u8bed\u8a00\u4f1a\u5728\u6bcf\u884c\u540e\u81ea\u52a8\u52a0\u5206\u53f7),\u52a0\u4e86\u4e5f\u80fd\u7528,\u4f46\u662f\u663e\u5f97\u4e0d\u4e13\u4e1a Go\u7f16\u8bd1\u5668\u662f\u4e00\u884c\u884c\u8fdb\u884c\u7f16\u8bd1\u7684,\u56e0\u6b64\u5199\u4ee3\u7801\u4e00\u884c\u5c31\u5199\u4e00\u6761,\u4e0d\u80fd\u591a\u6761\u8bed\u53e5\u5199\u5728\u4e00\u884c Go\u8bed\u8a00\u5b9a\u4e49\u7684\u53d8\u91cf\u6216\u8005import\u7684\u5305\u5982\u679c\u6ca1\u6709\u4f7f\u7528\u5230,\u4ee3\u7801\u4e0d\u80fd\u901a\u8fc7\u7f16\u8bd1. Go\u7684\u8f6c\u4e49\u5b57\u7b26(escape char) \u00b6 \\t \u4e00\u4e2a\u5236\u8868\u7b26 \\n \u6362\u884c\u7b26 \\ \u4e00\u4e2a\\ \\\" \u4e00\u4e2a\" \\r \u4e00\u4e2a\u56de\u8f66 \u89c4\u8303\u7684\u4ee3\u7801\u98ce\u683c \u00b6 \u5b98\u65b9\u63a8\u8350\u884c\u6ce8\u91ca Go\u8bbe\u8ba1\u8005\u601d\u60f3\uff1a\u4e00\u4e2a\u95ee\u9898\u5c3d\u91cf\u53ea\u6709\u4e00\u4e2a\u89e3\u51b3\u65b9\u6cd5\u3002 \u4e00\u884c\u6700\u957f\u4e0d\u8d85\u8fc780\u4e2a\u5b57\u7b26\uff0c\u8d85\u8fc7\u4f7f\u7528\u6362\u884c\u5c55\u793a","title":"\u4ee3\u7801\u7ed3\u6784\u548c\u57fa\u7840\u8bed\u6cd5"},{"location":"Golang/%E4%BB%A3%E7%A0%81%E7%BB%93%E6%9E%84%E5%92%8C%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/#_1","text":"package main # \u5b9a\u4e49\u4e86\u4e00\u4e2a\u5305\u7684\u540d\u5b57 import \"fmt\" # \u7a0b\u5e8f\u9700\u8981fmt\u5305 , \u683c\u5f0f\u5316\u8f93\u51fa\u51fd\u6570 func main (){ # func\u8868\u793a\u8981\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570 fmt . Println ( \"hello word,\" ) # main\u8868\u540d\u4e86\u7a0b\u5e8f\u5f00\u59cb\u6267\u884c , } \u975e\u6ce8\u91ca\u7b2c\u4e00\u884c\u4e00\u5b9a\u8981\u58f0\u660e\u5f53\u524d\u6587\u4ef6\u5c5e\u4e8e\u54ea\u4e2a\u5305 \u6bcf\u4e2a\u53ef\u6267\u884c\u51fd\u6570\u90fd\u8981\u5305\u542bmain\u51fd\u6570,main\u662f\u4e00\u4e2a\u6587\u4ef6\u6267\u884c\u7684\u5165\u53e3 fmt.println fmt\u6307\u5305\u4e2d\u7684println\u65b9\u6cd5 \u81ea\u52a8\\n go\u4e2d\u7684{}\u4e0d\u80fd\u5355\u72ec\u653e\u5728\u4e00\u884c,\u5fc5\u987b\u8ddf\u5728\u51fd\u6570\u540e \u4ee3\u7801\u51fd\u6570\u5fc5\u987b\u653e\u5728\u51fd\u6570\u5185\u90e8 \u53d8\u91cf\u5982\u679c\u5b9a\u4e49\u4e86\u800c\u6ca1\u6709\u4f7f\u7528,\u4f1a\u5f15\u53d1\u7f16\u8bd1\u95ee\u9898 \u7ec8\u7aef\u4e2d.go fmt main.go\u81ea\u52a8\u683c\u5f0f\u5316\u4ee3\u7801,\u76ee\u524d\u7f16\u8bd1\u5668\u5927\u90e8\u5206\u81ea\u52a8\u8c03\u7528 \u547d\u540d\u4f7f\u7528\u9a7c\u5cf0\u4f53 Go\u6e90\u6587\u4ef6\u4ee5go\u4e3a\u6269\u5c55\u540d Go\u8bed\u8a00\u4e25\u683c\u533a\u5206\u5927\u5c0f\u5199 Go\u65b9\u6cd5\u7531\u4e00\u6761\u6761\u8bed\u53e5\u6784\u6210,\u6bcf\u4e2a\u8bed\u53e5\u540e\u4e0d\u9700\u8981\u5206\u53f7(Go\u8bed\u8a00\u4f1a\u5728\u6bcf\u884c\u540e\u81ea\u52a8\u52a0\u5206\u53f7),\u52a0\u4e86\u4e5f\u80fd\u7528,\u4f46\u662f\u663e\u5f97\u4e0d\u4e13\u4e1a Go\u7f16\u8bd1\u5668\u662f\u4e00\u884c\u884c\u8fdb\u884c\u7f16\u8bd1\u7684,\u56e0\u6b64\u5199\u4ee3\u7801\u4e00\u884c\u5c31\u5199\u4e00\u6761,\u4e0d\u80fd\u591a\u6761\u8bed\u53e5\u5199\u5728\u4e00\u884c Go\u8bed\u8a00\u5b9a\u4e49\u7684\u53d8\u91cf\u6216\u8005import\u7684\u5305\u5982\u679c\u6ca1\u6709\u4f7f\u7528\u5230,\u4ee3\u7801\u4e0d\u80fd\u901a\u8fc7\u7f16\u8bd1.","title":"\u8bed\u6cd5\u7279\u6027"},{"location":"Golang/%E4%BB%A3%E7%A0%81%E7%BB%93%E6%9E%84%E5%92%8C%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/#_2","text":"","title":"\u6ce8\u91ca"},{"location":"Golang/%E4%BB%A3%E7%A0%81%E7%BB%93%E6%9E%84%E5%92%8C%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/#_3","text":"//\u8868\u793a\u5355\u884c\u6ce8\u91ca","title":"\u884c\u6ce8\u91ca"},{"location":"Golang/%E4%BB%A3%E7%A0%81%E7%BB%93%E6%9E%84%E5%92%8C%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/#_4","text":"/* \u5757\u7ea7(\u591a\u884c)\u6ce8\u91ca */","title":"\u5757\u7ea7\u6ce8\u91ca"},{"location":"Golang/%E4%BB%A3%E7%A0%81%E7%BB%93%E6%9E%84%E5%92%8C%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/#_5","text":"","title":"\u6ce8\u610f:\u6ce8\u91ca\u4e0d\u80fd\u5d4c\u5957\u4f7f\u7528"},{"location":"Golang/%E4%BB%A3%E7%A0%81%E7%BB%93%E6%9E%84%E5%92%8C%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/#_6","text":"package main // import \"fmt\" func main (){ fmt . Println ( \"hellow world\" ) } package main \u8868\u793a\u8be5hello go \u6587\u4ef6\u6240\u5728\u5305\u662fmain,\u5728go\u4e2d,\u6bcf\u4e2a\u6587\u4ef6\u90fd\u5fc5\u987b\u5f52\u5c5e\u4e8e\u4e00\u4e2a\u5305 import \"fmt\" \u8868\u793a\u5f15\u5165\u4e00\u4e2a\u5305,\u5305\u540d\u4e3afmt,\u5f15\u5165\u8be5\u5305\u540e\u5c31\u53ef\u4ee5\u4f7f\u7528fmt\u4e2d\u7684\u51fd\u6570,\u6bd4\u5982: fmt.Println() func main(){ } func \u662f\u4e00\u4e2a\u5173\u952e\u5b57,\u8868\u793a\u4e00\u4e2a\u51fd\u6570,main\u662f\u51fd\u6570\u540d,\u8868\u793a\u662f\u4e00\u4e2a\u4e3b\u51fd\u6570,\u5373\u7a0b\u5e8f\u7684\u5165\u53e3 fmt.Println() \u8868\u793a\u8c03\u7528fmt\u5305\u7684\u51fd\u6570Println\u51fa\u5165''hello world\"","title":"\u5199"},{"location":"Golang/%E4%BB%A3%E7%A0%81%E7%BB%93%E6%9E%84%E5%92%8C%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/#_7","text":"\u901a\u8fc7go build \u547d\u4ee4\u5bf9go\u6587\u4ef6\u8fdb\u884c\u7f16\u8bd1,\u751f\u6210exe\u6587\u4ef6,\u8fd0\u884chello.exe\u6587\u4ef6, \u6267\u884c\u6548\u7387\u9ad8,\u751f\u4ea7\u4e2d\u7528,\u66f4\u6362\u73af\u5883\u4e5f\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 go run \u76f4\u63a5\u8fd0\u884c,\u6267\u884c\u6548\u7387\u4f4e\u66f4\u6362\u73af\u5883\u5fc5\u987b\u4e5f\u6709go\u624d\u80fd\u7528","title":"\u8fd0\u884c"},{"location":"Golang/%E4%BB%A3%E7%A0%81%E7%BB%93%E6%9E%84%E5%92%8C%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/#_8","text":"Go\u6e90\u6587\u4ef6\u4ee5go\u4e3a\u6269\u5c55\u540d Go\u5e94\u7528\u7a0b\u5e8f\u7684\u6267\u884c\u5165\u53e3\u662fmain()\u65b9\u6cd5 Go\u8bed\u8a00\u4e25\u683c\u533a\u5206\u5927\u5c0f\u5199 Go\u65b9\u6cd5\u7531\u4e00\u6761\u6761\u8bed\u53e5\u6784\u6210,\u6bcf\u4e2a\u8bed\u53e5\u540e\u4e0d\u9700\u8981\u5206\u53f7(Go\u8bed\u8a00\u4f1a\u5728\u6bcf\u884c\u540e\u81ea\u52a8\u52a0\u5206\u53f7),\u52a0\u4e86\u4e5f\u80fd\u7528,\u4f46\u662f\u663e\u5f97\u4e0d\u4e13\u4e1a Go\u7f16\u8bd1\u5668\u662f\u4e00\u884c\u884c\u8fdb\u884c\u7f16\u8bd1\u7684,\u56e0\u6b64\u5199\u4ee3\u7801\u4e00\u884c\u5c31\u5199\u4e00\u6761,\u4e0d\u80fd\u591a\u6761\u8bed\u53e5\u5199\u5728\u4e00\u884c Go\u8bed\u8a00\u5b9a\u4e49\u7684\u53d8\u91cf\u6216\u8005import\u7684\u5305\u5982\u679c\u6ca1\u6709\u4f7f\u7528\u5230,\u4ee3\u7801\u4e0d\u80fd\u901a\u8fc7\u7f16\u8bd1.","title":"\u6ce8\u610f\u4e8b\u9879"},{"location":"Golang/%E4%BB%A3%E7%A0%81%E7%BB%93%E6%9E%84%E5%92%8C%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/#goescape-char","text":"\\t \u4e00\u4e2a\u5236\u8868\u7b26 \\n \u6362\u884c\u7b26 \\ \u4e00\u4e2a\\ \\\" \u4e00\u4e2a\" \\r \u4e00\u4e2a\u56de\u8f66","title":"Go\u7684\u8f6c\u4e49\u5b57\u7b26(escape char)"},{"location":"Golang/%E4%BB%A3%E7%A0%81%E7%BB%93%E6%9E%84%E5%92%8C%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/#_9","text":"\u5b98\u65b9\u63a8\u8350\u884c\u6ce8\u91ca Go\u8bbe\u8ba1\u8005\u601d\u60f3\uff1a\u4e00\u4e2a\u95ee\u9898\u5c3d\u91cf\u53ea\u6709\u4e00\u4e2a\u89e3\u51b3\u65b9\u6cd5\u3002 \u4e00\u884c\u6700\u957f\u4e0d\u8d85\u8fc780\u4e2a\u5b57\u7b26\uff0c\u8d85\u8fc7\u4f7f\u7528\u6362\u884c\u5c55\u793a","title":"\u89c4\u8303\u7684\u4ee3\u7801\u98ce\u683c"},{"location":"Golang/%E5%87%BD%E6%95%B0/","text":"\u51fd\u6570\u57fa\u7840 \u76ee\u7684 \u6982\u5ff5 \u5206\u7c7b \u57fa\u672c\u8bed\u6cd5 \u51fd\u6570\u7684\u8c03\u7528 \u5185\u5b58\u6d41\u7a0b \u53c2\u6570 \u7c7b\u578b\u7b80\u5199 \u53ef\u53d8\u53c2\u6570 \u53c2\u6570\u7684\u4f20\u9012 \u5206\u7c7b \u533a\u522b: \u8fd4\u56de\u503c \u6ce8\u610f: \u591a\u8fd4\u56de\u503c \u547d\u540d\u8fd4\u56de\u503c \u51fd\u6570\u8fdb\u9636 \u53d8\u91cf\u4f5c\u7528\u57df \u5168\u5c40\u53d8\u91cf \u5c40\u90e8\u53d8\u91cf \u51fd\u6570\u7c7b\u578b\u4e0e\u53d8\u91cf \u5b9a\u4e49\u51fd\u6570\u7c7b\u578b \u51fd\u6570\u7c7b\u578b\u53d8\u91cf \u51fd\u6570\u7684\u6570\u636e\u7c7b\u578b \u9ad8\u9636\u51fd\u6570 \u51fd\u6570\u4f5c\u4e3a\u53c2\u6570 \u51fd\u6570\u4f5c\u4e3a\u8fd4\u56de\u503c \u9012\u5f52\u8c03\u7528 init\u51fd\u6570 \u6ce8\u610f: \u533f\u540d\u51fd\u6570 \u5b9a\u4e49\u65b9\u5f0f \u4f7f\u7528\u65b9\u6cd5 \u5168\u5c40\u533f\u540d\u51fd\u6570 \u95ed\u5305 defer\u7684\u4f7f\u7528 \u7528\u9014: \u6ce8\u610f\u4e8b\u9879\u548c\u7ec6\u8282 \u5185\u7f6e\u51fd\u6570\u4ecb\u7ecd \u51fd\u6570\u57fa\u7840 \u00b6 \u76ee\u7684 \u00b6 \u51cf\u5c11\u4ee3\u7801\u5197\u4f59 \u65b9\u4fbf\u4ee3\u7801\u7684\u7ef4\u62a4 \u89e3\u51b3\u4ee3\u7801\u590d\u7528\u6027\u7684\u95ee\u9898 \u6982\u5ff5 \u00b6 \u4e3a\u4e86\u5b8c\u6210\u67d0\u4ee5\u529f\u80fd\u7684\u7a0b\u5e8f\u6307\u4ee4(\u8bed\u53e5)\u7684\u5408\u96c6,\u79f0\u4e3a\u51fd\u6570. \u5206\u7c7b \u00b6 \u81ea\u5b9a\u4e49\u51fd\u6570,\u7cfb\u7edf\u51fd\u6570(Go\u7f16\u7a0b\u624b\u518c) \u57fa\u672c\u8bed\u6cd5 \u00b6 func \u51fd\u6570\u540d ( \u5f62\u53c2\u5217\u8868 ) ( \u8fd4\u56de\u503c\u5217\u8868 ) { \u6267\u884c\u8bed\u53e5 return \u8fd4\u56de\u503c\u5217\u8868 } \u51fd\u6570\u540d\u7684\u547d\u540d\u4e0e\u6807\u8bc6\u7b26\u4e00\u81f4\uff0e\u4e14\u5728\u540c\u4e00\u4e2a\u5305\u5185\uff0c\u51fd\u6570\u540d\u4e0d\u80fd\u91cd\u590d \u5f62\u53c2\u5217\u8868:\u8868\u793a\u51fd\u6570\u7684\u8f93\u5165\uff0c\u7531\u53c2\u6570\u53d8\u91cf\u548c\u53c2\u6570\u53d8\u91cf\u7684\u7c7b\u578b\u7ec4\u6210\uff0c\u591a\u4e2a\u53c2\u6570\u4e4b\u95f4\u7528 , \u5206\u5272 \u51fd\u6570\u4e2d\u7684\u8bed\u53e5:\u8868\u793a\u4e3a\u4e86\u5b9e\u73b0\u67d0\u4e00\u529f\u80fd\u4ee3\u7801\u5757 \u51fd\u6570\u7684\u53c2\u6570\uff0c\u8fd4\u56de\u503c\u4e5f\u53ef\u4ee5\u6ca1\u6709 \u51fd\u6570\u7684\u8c03\u7528 \u00b6 \u5b9a\u4e49\u51fd\u6570\u4e4b\u540e,\u53ef\u4ee5\u901a\u8fc7 \u51fd\u6570\u540d() \u7684\u65b9\u6cd5\u8c03\u7528. \u8c03\u7528\u51fd\u6570\u7684\u65f6\u5019\u4e5f\u53ef\u4ee5\u4e0d\u63a5\u6536\u5176\u8fd4\u56de\u503c. \u6ce8\u610f:\u51fd\u6570\u7684\u8fd4\u56de\u503c\u53ef\u4ee5\u4e0d\u63a5\u6536,\u4f46\u662f\u4e0d\u53ef\u4ee5\u63a5\u6536\u90e8\u5206,(\u8981\u4e48\u5168\u63a5\u6536,\u8981\u4e0d\u4e0d\u63a5\u6536) \u5185\u5b58\u6d41\u7a0b \u00b6 \u5728\u8c03\u7528\u4e00\u4e2a\u51fd\u6570\u65f6,\u4f1a\u7ed9\u8be5\u51fd\u6570\u5206\u914d\u4e00\u4e2a\u65b0\u7684\u7a7a\u95f4,\u7f16\u8bd1\u5668\u4f1a\u901a\u8fc7\u81ea\u8eab\u5904\u7406\u8ba9\u8fd9\u4e2a\u65b0\u7684\u7a7a\u95f4\u548c\u5176\u4ed6\u7a7a\u95f4\u7684\u6808\u7684\u7a7a\u95f4\u533a\u5206\u5f00 \u6bcf\u4e2a\u51fd\u6570\u5bf9\u5e94\u7684\u6808\u4e2d,\u6570\u636e\u7a7a\u95f4\u662f\u72ec\u7acb\u7684,\u4e0d\u4f1a\u6df7\u6dc6 \u5f53\u4e00\u4e2a\u51fd\u6570\u7ed3\u675f\u8c03\u7528(\u6267\u884c\u5b8c\u6bd5)\u540e,\u7a0b\u5e8f\u4f1a\u9500\u6bc1\u8fd9\u4e2a\u51fd\u6570\u5bf9\u5e94\u7684\u6808\u7a7a\u95f4. \u53c2\u6570 \u00b6 \u7c7b\u578b\u7b80\u5199 \u00b6 \u51fd\u6570\u7684\u4ece\u53c2\u6570\u4e2d\u5982\u679c\u76f8\u90bb\u53d8\u91cf\u7684\u7c7b\u578b\u76f8\u540c,\u5219\u53ef\u4ee5\u7701\u7565\u7c7b\u578b func intSum ( x , y int ) int { //\u5f53x,y\u7c7b\u578b\u76f8\u540c\u65f6,\u53ef\u5728\u6700\u540e\u53ea\u5199\u4e00\u4e2a\u7c7b\u578b. return x + y } \u53ef\u53d8\u53c2\u6570 \u00b6 \u53ef\u53d8\u53c2\u6570\u6307\u51fd\u6570\u7684\u53c2\u6570\u6570\u91cf\u4e0d\u56fa\u5b9a. Go\u4e2d\u7684\u53ef\u53d8\u53c2\u6570\u901a\u8fc7\u5728\u53c2\u6570\u540d\u540e\u52a0 ... \u6765\u6807\u8bc6. \u6ce8\u610f:\u53ef\u53d8\u53c2\u6570\u901a\u5e38\u4f5c\u4e3a\u51fd\u6570\u7684\u6700\u540e\u4e00\u4e2a\u53c2\u6570. func intSum ( x ... int ) int { fmt . Println ( x ) //x\u662f\u4e00\u4e2a\u5207\u7247 sum := 0 for _ , v := range x { sum = sum + v } return sum } //\u6ce8\u610f:\u5176\u4e2dx\u4e3aslice\u5bf9\u8c61,\u53ef\u4ee5\u901a\u8fc7x[index]\u6765\u8bbf\u95ee\u5230\u5404\u4e2a\u503c --------------------------- func main () { ret1 := intSum2 () ret2 := intSum2 ( 10 ) ret3 := intSum2 ( 10 , 20 ) ret4 := intSum2 ( 10 , 20 , 30 ) fmt . Println ( ret1 , ret2 , ret3 , ret4 ) } >> > [] [ 10 ] [ 10 20 ] [ 10 20 30 ] 0 10 30 60 \u53c2\u6570\u7684\u4f20\u9012 \u00b6 \u5206\u7c7b \u00b6 \u503c\u4f20\u9012:\u57fa\u672c\u6570\u636e\u7c7b\u578b, \u57fa\u672c\u6570\u636e\u7c7b\u578b(int\u7cfb\u5217,float\u7cfb\u5217,bool,string),\u6570\u7ec4,\u7ed3\u6784\u4f53 \u503c\u4f20\u9012\u5c31\u662f\u5728\u4f20\u9012\u53c2\u6570\u7684\u65f6\u5019\u8fdb\u884c\u4e86\u503c\u62f7\u8d1d. \u5f15\u7528\u4f20\u9012:\u4f20\u9012\u7684\u662f\u5730\u5740. \u6307\u9488,slice\u5207\u7247,map,\u7ba1\u9053channel,interface\u7b49\u9ed8\u8ba4\u5f15\u7528\u7c7b\u578b, \u533a\u522b: \u00b6 \u65e0\u8bba\u503c\u4f20\u9012\u8fd8\u662f\u5f15\u7528\u4f20\u9012,\u4f20\u9012\u7ed9\u51fd\u6570\u7684\u90fd\u662f\u53d8\u91cf\u7684\u526f\u672c, \u503c\u4f20\u9012\u7684\u662f\u503c\u7684\u62f7\u8d1d,\u5f15\u7528\u4f20\u9012\u4f20\u9012\u7684\u5730\u5740\u7684\u62f7\u8d1d \u4e00\u822c\u6765\u8bf4,\u5730\u5740\u62f7\u8d1d\u6548\u7387\u9ad8,\u56e0\u4e3a\u6570\u636e\u91cf\u5c0f \u800c\u503c\u62f7\u8d1d\u51b3\u5b9a\u4e8e\u6570\u636e\u7684\u5927\u5c0f,\u6570\u636e\u8d8a\u5927,\u6548\u7387\u8d8a\u4f4e. \u8fd4\u56de\u503c \u00b6 \u51fd\u6570\u53ef\u4ee5\u6ca1\u6709\u8fd4\u56de\u503c func test ( n1 int ) { n1 = n1 + 1 fmt . Println ( n1 ) } Go\u8bed\u8a00\u4e2d\u901a\u8fc7 return \u5173\u952e\u5b57\u5411\u5916\u8f93\u51fa\u8fd4\u56de\u503c. \u6ce8\u610f: \u00b6 \u51fd\u6570\u4e2d\u5982\u679c\u6ca1\u5b9a\u4e49\u8fd4\u56de\u503c,\u51fd\u6570\u4e2d\u7684return\u53ea\u662f\u7ec8\u6b62\u51fd\u6570,\u4e0d\u8fd4\u56de\u4efb\u4f55\u503c. \u591a\u8fd4\u56de\u503c \u00b6 Go\u8bed\u8a00\u4e2d\u652f\u6301\u591a\u8fd4\u56de\u503c,\u51fd\u6570\u5982\u679c\u6709\u591a\u4e2a\u8fd4\u56de\u503c\u7684\u65f6\u5019,\u5fc5\u987b\u7528 () \u5c06\u6240\u6709\u8fd4\u56de\u503c\u5305\u88f9\u8d77\u6765. func calc ( x , y int ) ( int , int ) { sum := x + y sbu := x - y return sum , sub } \u4e0d\u60f3\u7528\u7684\u8fd4\u56de\u503c\u53ef\u4ee5\u4f7f\u7528 _ \u63a5\u6536,\u4e22\u5f03\u53d8\u91cf \u547d\u540d\u8fd4\u56de\u503c \u00b6 \u51fd\u6570\u5b9a\u4e49\u65f6\u53ef\u4ee5\u7ed9\u8fd4\u56de\u503c\u547d\u540d,\u5e76\u5728\u51fd\u6570\u4f53\u4e2d\u76f4\u63a5\u4f7f\u7528\u8fd9\u4e9b\u53d8\u91cf,\u6700\u540e\u76f4\u63a5 return \u5173\u952e\u5b57\u8fd4\u56de func calc ( x , y int ) ( sum , sub int ) { sum := x + y sbu := x - y return } \u8fd9\u65f6\u5c31\u662f\u4f7f\u7528\u4e86\u8fd4\u56de\u503c\u7684\u9ed8\u8ba4\u503c,return\u5173\u952e\u5b57\u4f1a\u53bb\u51fd\u6570\u5b9a\u4e49\u4e2d\u627e\u8fd4\u56de\u503c\u5e76\u8fd4\u56de. \u51fd\u6570\u8fdb\u9636 \u00b6 \u53d8\u91cf\u4f5c\u7528\u57df \u00b6 \u5168\u5c40\u53d8\u91cf \u00b6 \u51fd\u6570\u5916\u90e8\u5b9a\u4e49/\u58f0\u660e\u7684\u53d8\u91cf\u53eb\u5168\u5c40\u53d8\u91cf,\u4f5c\u7528\u57df\u5728\u6574\u4e2a\u5305\u90fd\u6709\u6548,\u5982\u679c\u5176\u9996\u5b57\u6bcd\u5927\u5199,\u5219\u4f5c\u7528\u57df\u5728\u6574\u4e2a\u7a0b\u5e8f\u90fd\u6709\u6548. \u5168\u5c40\u53d8\u91cf\u65f6\u5b9a\u4e49\u5728\u51fd\u6570\u5916\u90e8\u7684\u53d8\u91cf,\u5b83\u5728\u7a0b\u5e8f\u6574\u4e2a\u8fd0\u884c\u5468\u671f\u5185\u90e8\u90fd\u6709\u6548,\u5728\u51fd\u6570\u4e2d\u53ef\u4ee5\u8bbf\u95ee\u5230\u5168\u5c40\u53d8\u91cf, package main import \"fmt\" var num int = 10 func main (){ fmt . Println ( num ) } >> > 10 \u5c40\u90e8\u53d8\u91cf \u00b6 \u5728\u51fd\u6570\u5185\u90e8\u58f0\u660e/\u5b9a\u4e49\u7684\u53d8\u91cf\u53eb\u5c40\u90e8\u53d8\u91cf,\u4f5c\u7528\u57df\u4ec5\u9650\u4e8e\u51fd\u6570\u5185\u90e8. \u51fd\u6570\u5185\u5b9a\u4e49\u7684\u53d8\u91cf\u65e0\u6cd5\u5728\u8be5\u51fd\u6570\u5916\u4f7f\u7528. \u5982\u679c\u5c40\u90e8\u53d8\u91cf\u548c\u5168\u5c40\u53d8\u91cf\u91cd\u540d,\u4f18\u5148\u8bbf\u95ee\u5c40\u90e8\u53d8\u91cf.for if switch\u4e0e\u51fd\u6570\u540c\u7406 \u51fd\u6570\u7c7b\u578b\u4e0e\u53d8\u91cf \u00b6 \u5b9a\u4e49\u51fd\u6570\u7c7b\u578b \u00b6 \u53ef\u4ee5\u4f7f\u7528 type \u5173\u952e\u5b57\u6765\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\u7c7b\u578b type calculation func ( int , int ) int //\u5b9a\u4e49\u4e86\u4e00\u4e2acalculation\u7c7b\u578b,\u8fd9\u662f\u4e00\u79cd\u51fd\u6570\u7c7b\u578b,\u8fd9\u79cd\u51fd\u6570\u63a5\u6536\u4e24\u4e2aint\u7c7b\u578b\u7684\u53c2\u6570\u5e76\u4e14\u8fd4\u56de\u4e00\u4e2aint\u7c7b\u578b\u7684\u51fd\u6570 \u6ee1\u8db3\u8fd9\u4e2a\u6761\u4ef6\u7684\u51fd\u6570\u90fd\u662fcalculation\u7c7b\u578b\u7684\u51fd\u6570, \u51fd\u6570\u7c7b\u578b\u53d8\u91cf \u00b6 type calculation func ( int , int ) int //\u5b9a\u4e49\u4e86\u4e00\u4e2acalculation\u51fd\u6570\u7c7b\u578b,\u8f93\u5165\u4e24\u4e2aint\u8fd4\u56de\u4e00\u4e2aint func add ( x , y int ) int { return x + y } func main (){ var c calculation = add //\u58f0\u660e\u4e00\u4e2acalculation\u7c7b\u578b\u7684\u53d8\u91cfc\u5e76\u628aadd\u8d4b\u503c\u7ed9c res := c ( 1 , 3 ) //\u50cf\u8c03\u7528add\u4e00\u6837\u8c03\u7528c fmt . Println ( res ) //4 fmt . Printf ( \"%T\\n\" , c ) //main.calculation } >> > 4 main . calculation \u51fd\u6570\u7684\u6570\u636e\u7c7b\u578b \u00b6 func getSum ( n1 , n2 int ) int { return n1 + n2 } func main (){ a := getSum fmt . Printf ( \"type of a is %T,type of getSum is %T\" , a , getSum ) } >> > type of a is func ( int , int ) int , type of getSum is func ( int , int ) int \u9ad8\u9636\u51fd\u6570 \u00b6 \u9ad8\u9636\u51fd\u6570\u5373\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\u6216\u8005\u51fd\u6570\u4f5c\u4e3a\u8fd4\u56de\u503c. \u51fd\u6570\u4f5c\u4e3a\u53c2\u6570 \u00b6 func add ( x , y int ) int { return x + y } //func\u540e\u76844\u4e2aint,\u5206\u522b\u4e3aadd\u7684\u4e24\u4e2a\u53c2\u6570,\u4e00\u4e2a\u8fd4\u56de\u503c\u548ccalc\u7684\u8fd4\u56de\u503c //calc\u5171\u6709\u4e09\u4e2a\u53c2\u6570,\u4e24\u4e2aint\u548c\u4e00\u4e2afunc func calc ( x , y int , op func ( int , int ) int ) int { return op ( x , y ) } func main (){ res := calc ( 10 , 20 , add ) fmt . Println ( res ) } \u51fd\u6570\u4f5c\u4e3a\u8fd4\u56de\u503c \u00b6 func add ( x , y int ) int { return x + y } func do () ( func ( int , int ) int ) { return add } func main (){ res := do ()( 20 , 30 ) fmt . Println ( res ) } >> > 50 \u9012\u5f52\u8c03\u7528 \u00b6 \u4e00\u4e2a\u51fd\u6570\u5728\u51fd\u6570\u4f53\u5185\u53c8\u8c03\u7528\u4e86\u51fd\u6570\u672c\u8eab,\u5c31\u79f0\u4e3a\u9012\u5f52\u8c03\u7528. \u4f8b1: package main import \"fmt\" func test ( n int ) { if n > 2 { n -- test ( n ) } fmt . Println ( n ) } func main () { test ( 4 ) } >> > 2 2 3 \u9012\u5f52\u8fd4\u56de\u7684\u65f6\u5019\u56de\u5230\u4e86\u4e0a\u4e00\u4e2aif,\u51fa\u6808\u7684\u65f6\u5019\u6267\u884c\u4e86Print \u8fdb\u6808\u7684\u65f6\u5019,Print\u5728\u6808\u4e2d\u7b49\u5f85\u6267\u884c,\u51fa\u6808\u7684\u65f6\u5019\u6267\u884c \u4f8b2 package main import \"fmt\" func test ( n int ) { if n > 2 { n -- test ( n ) } else { fmt . Println ( n ) } } func main () { test ( 4 ) } >> > 2 \u51fa\u6808\u7684\u65f6\u5019\u8fdb\u4e0d\u5230else\u91cc\u9762,\u6240\u4ee5\u53ea\u6253\u5370\u4e00\u4e2a2 \u539f\u5219: \u6267\u884c\u4e00\u4e2a\u51fd\u6570\u65f6,\u5c31\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u53d7\u4fdd\u62a4\u7684\u72ec\u7acb\u7a7a\u95f4(\u65b0\u51fd\u6570\u6808) \u51fd\u6570\u7684\u5c40\u90e8\u53d8\u91cf\u65f6\u72ec\u7acb\u7684,\u4e0d\u4f1a\u76f8\u4e92\u5f71\u54cd \u9012\u5f52\u5fc5\u987b\u5411\u9000\u51fa\u9012\u5f52\u7684\u6761\u4ef6\u903c\u8fd1,\u5426\u5219\u5c31\u662f\u65e0\u9650\u9012\u5f52 \u5f53\u4e00\u4e2a\u51fd\u6570\u6267\u884c\u5b8c\u6bd5,\u6216\u8005\u9047\u5230return,\u5c31\u4f1a\u8fd4\u56de,\u9075\u5b88\u8c01\u8c03\u7528,\u5c31\u5c06\u7ed3\u679c\u8fd4\u56de\u7ed9\u8c01. \u5f53\u51fd\u6570\u6267\u884c\u5b8c\u6bd5\u6216\u8005\u8fd4\u56de\u65f6,\u51fd\u6570\u672c\u8eab\u4e5f\u4f1a\u88ab\u9500\u6bc1. \u7ec3\u4e60: //\u6590\u6ce2\u90a3\u5951\u6570 func fib ( n int ) ( int ){ if ( n == 1 || n == 2 ) { return 1 } else { return fib ( n - 1 ) + fib ( n - 2 ) } } func main (){ fmt . Println ( fib ( 5 )) } >> > 5 //f(1)=3,f(n)=2*f(n-1)+1,\u6c42f(n) func f ( n int ) int { if n == 1 { return 3 } else { return 2 * f ( n - 1 ) + 1 } } func main () { fmt . Println ( f ( 5 )) } >> > 63 //\u7334\u5b50\u5403\u6843:\u7b2c\u4e00\u5929\u5403\u4e00\u822c,\u518d\u591a\u5403\u4e00\u4e2a,\u6bcf\u5929\u5403\u4e00\u822c,\u518d\u591a\u4e00\u4e2a,\u7b2c\u5341\u5929,\u53d1\u73b0\u5c31\u5269\u4e00\u4e2a\u4e86,\u95ee\u4e00\u5171\u591a\u5c11\u6843? func peach ( n int ) int { if n == 10 { return 1 } else { return 2 * ( peach ( n + 1 ) + 1 ) } } func main () { fmt . Println ( peach ( 1 )) } >> > 1534 init\u51fd\u6570 \u00b6 \u6bcf\u4e00\u4e2a\u6e90\u6587\u4ef6\u90fd\u53ef\u4ee5\u5305\u542b\u4e00\u4e2ainit\u51fd\u6570,\u8be5\u51fd\u6570\u4f1a\u5728main\u51fd\u6570\u6267\u884c\u524d,\u88abGo\u8fd0\u884c\u6846\u67b6\u8c03\u7528,\u4e5f\u5c31\u662f\u8bf4,init\u4f1a\u5728main\u51fd\u6570\u524d\u88ab\u8c03\u7528. \u901a\u5e38\u5728init\u51fd\u6570\u4e2d\u5b8c\u6210\u51fd\u6570\u7684\u521d\u59cb\u5316\u5de5\u4f5c. \u6ce8\u610f: \u00b6 \u5982\u679c\u4e00\u4e2a\u6587\u4ef6\u540c\u65f6\u5305\u542b\u5168\u5c40\u53d8\u91cf\u5b9a\u4e49,init\u51fd\u6570\u548cmain\u51fd\u6570,\u5219\u6267\u884c\u7684\u6d41\u7a0b\u662f \u53d8\u91cf\u5b9a\u4e49 \u2192 init\u51fd\u6570 \u2192 main\u51fd\u6570 \u9762\u8bd5\u9898: \u5982\u679cmain.go\u548cutils.go\u90fd\u542b\u6709\u53d8\u91cf\u5b9a\u4e49,init\u51fd\u6570\u65f6,\u6267\u884c\u7684\u6d41\u7a0b\u4f1a\u662f\u600e\u6837\u7684? \u4ece\u6700\u5916\u9762\u7684\u88ab\u5bfc\u5165\u5305,\u4f9d\u6b21\u5411main\u51fd\u6570\u9760\u62e2.\u6bcf\u4e2a\u6e90\u6587\u4ef6\u90fd\u662f\u5148\u5168\u5c40\u53d8\u91cf\u5b9a\u4e49,\u7136\u540einit\u51fd\u6570,\u7136\u540e\u4e0b\u4e00\u5c42. \u533f\u540d\u51fd\u6570 \u00b6 \u5982\u679c,\u4e00\u4e2a\u51fd\u6570\u5b9a\u4e49\u4e86\u53ea\u5e0c\u671b\u4f7f\u7528\u4e00\u6b21,\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u533f\u540d\u51fd\u6570.\u4f46\u662f\u533f\u540d\u51fd\u6570\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u591a\u6b21\u8c03\u7528. \u591a\u7528\u4e8e\u5b9e\u73b0\u56de\u8c03\u51fd\u6570\u548c\u95ed\u5305.\u5373\u5728\u51fd\u6570\u5185\u90e8\u4f7f\u7528\u533f\u540d\u51fd\u6570. \u533f\u540d\u51fd\u6570\u53ea\u80fd\u5728\u51fd\u6570\u5185\u4f7f\u7528, \u5b9a\u4e49\u65b9\u5f0f \u00b6 func ( \u53c2\u6570 )( \u8fd4\u56de\u503c ){ \u51fd\u6570\u4f53 } \u4f7f\u7528\u65b9\u6cd5 \u00b6 \u5b9a\u4e49\u540e\u76f4\u63a5\u52a0 () \u8c03\u7528 //\u81ea\u6267\u884c\u51fd\u6570\uff1a\u533f\u540d\u51fd\u6570\u5b9a\u4e49\u5b8c\u52a0()\u76f4\u63a5\u6267\u884c func ( x , y int ) { fmt . Println ( x + y ) }( 10 , 20 ) } \u8fd9\u79cd\u65b9\u5f0f\u533f\u540d\u51fd\u6570\u53ea\u80fd\u8c03\u7528\u4e00\u6b21. \u5c06\u533f\u540d\u51fd\u6570\u8d4b\u503c\u7ed9\u4e00\u4e2a\u53d8\u91cf(\u51fd\u6570\u53d8\u91cf),\u518d\u901a\u8fc7\u8be5\u53d8\u91cf\u6765\u8c03\u7528\u533f\u540d\u51fd\u6570 ```go func main() { // \u5c06\u533f\u540d\u51fd\u6570\u4fdd\u5b58\u5230\u53d8\u91cf add := func(x, y int) { fmt.Println(x + y) } add(10, 20) // \u901a\u8fc7\u53d8\u91cf\u8c03\u7528\u533f\u540d\u51fd\u6570 fmt.Printf(\"%T\", add) } 30 func(int, int) ``` \u867d\u7136add\u53ef\u4ee5\u88ab\u53cd\u590d\u8c03\u7528,\u4f46\u662fadd\u4e0d\u662f\u51fd\u6570\u540d,\u53ef\u4ee5\u901a\u8fc7\u8fd9\u79cd\u65b9\u6cd5\u5728mian\u51fd\u6570\u5185\u5b9a\u4e49\u51fd\u6570 \u8fd9\u91cc\u7684add\u662f func(int, int) \u7c7b\u578b \u5168\u5c40\u533f\u540d\u51fd\u6570 \u00b6 \u5982\u679c\u5c06\u533f\u540d\u51fd\u6570\u8d4b\u503c\u7ed9\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf,\u90a3\u4e48\u8fd9\u4e2a\u533f\u540d\u51fd\u6570,\u5c31\u79f0\u4e3a\u4e00\u4e2a\u5168\u5c40\u533f\u540d\u51fd\u6570,\u53ef\u4ee5\u5728\u5168\u5c40\u88ab\u8c03\u7528. var ( Fun = func ( n1 , n2 int ) int { // \u53d8\u91cf\u540d\u8bb0\u5f97\u5927\u5199 return n1 + n2 } ) func main (){ res := Fun ( 3 , 6 ) fmt . Println ( res ) } \u95ed\u5305 \u00b6 \u95ed\u5305\u51fd\u6570,\u5c31\u662f\u591a\u4e86\u4e00\u4e2a\u51fd\u6570\u4f20\u53c2\u7684\u65b9\u5f0f. \u95ed\u5305\u5c31\u662f\u4e00\u4e2a\u51fd\u6570\u548c\u4e0e\u5176\u76f8\u5173\u7684\u5f15\u7528\u73af\u5883\u7ec4\u5408\u7684\u4e00\u4e2a\u6574\u4f53. \u95ed\u5305 = \u51fd\u6570 + \u5f15\u7528\u73af\u5883 \u4f1a\u5f62\u6210\u5c40\u90e8\u53d8\u91cf\u7684\u9a7b\u7559 //\u7d2f\u52a0\u5668 func add () func ( int ) int { var x int return func ( y int ) int { x += y return x } } func main () { var f = add () //\u8fd4\u56de\u4e00\u4e2a\u95ed\u5305 fmt . Println ( f ( 10 )) fmt . Println ( f ( 20 )) f1 := add () //\u8fd4\u56de\u4e00\u4e2a\u95ed\u5305 fmt . Println ( f1 ( 10 )) fmt . Println ( f1 ( 20 )) } \u8bf4\u660e: add\u65f6\u4e00\u4e2a\u51fd\u6570,\u8fd4\u56de\u7684\u6570\u636e\u7c7b\u578b\u65f6 func (int) int \u95ed\u5305\u8bf4\u660e:\u8fd9\u4e2a\u90e8\u5206\u5c31\u662f\u4e00\u4e2a\u95ed\u5305 var x int return func ( y int ) int { x += y return x \u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u533f\u540d\u51fd\u6570 func (y int) int ,\u4f46\u662f\u533f\u540d\u51fd\u6570\u5f15\u7528\u5230\u4e86\u51fd\u6570\u5916\u7684\u53d8\u91cfx,\u56e0\u6b64\u8fd9\u4e2a\u533f\u540d\u51fd\u6570\u4e8ex\u5c31\u5f62\u6210\u4e00\u4e2a\u6574\u4f53,\u6784\u6210\u95ed\u5305. \u7406\u89e3:\u95ed\u5305\u91cc\u7c7b(\u7684\u5355\u4f8b\u6a21\u5f0f),\u533f\u540d\u51fd\u6570\u662f\u65b9\u6cd5,\u88ab\u5f15\u7528\u53d8\u91cf\u662f\u5c5e\u6027.\u533f\u540d\u51fd\u6570\u4e0e\u88ab\u5f15\u7528\u7684\u53d8\u91cf\u5c31\u6784\u6210\u4e86\u4e00\u4e2a\u95ed\u5305. \u5f53\u53cd\u590d\u8c03\u7528main\u91cc\u9762\u7684f\u65f6,\u56e0\u4e3ax\u53ea\u521d\u59cb\u5316\u4e00\u6b21,\u56e0\u6b64\u6bcf\u8c03\u7528\u4e00\u6b21\u5c31\u662f\u5b9e\u73b0\u4e86\u7d2f\u52a0,\u800c\u4e0d\u4f1a\u91cd\u65b0\u521d\u59cb\u5316\u53d8\u91cfx. \u5206\u6790\u65f6\u8981\u6ce8\u610f\u8fd4\u56de\u503c\u91cc\u9762\u7684\u533f\u540d\u51fd\u6570\u5f15\u7528\u5230\u4e86\u54ea\u4e9b\u53d8\u91cf,\u56e0\u4e3a\u51fd\u6570\u548c\u5b83\u5f15\u7528\u7684\u53d8\u91cf\u5171\u540c\u6784\u6210\u4e86\u95ed\u5305. \u5b9e\u8df5 //\u5224\u65ad\u5b57\u7b26\u4e32\u662f\u5426\u6709\u6307\u5b9a\u540e\u7f00 import \"strings\" func makeSuffix ( suffix string ) func ( string ) string { return func ( name string ) string { if ! strings . HasSuffix ( name , suffix ) { return name + suffix } return name } } func main (){ f := makeSuffix ( \".jpg\" ) fmt . Println ( f ( \"aaa.jpg\" )) } \u8bf4\u660e: \u8fd4\u56de\u7684\u51fd\u6570\u4e0emakeSuffix\u4e2d\u7684suffix\u53d8\u91cf\u7ec4\u6210\u4e00\u4e2a\u95ed\u5305,\u56e0\u4e3a\u8fd4\u56de\u51fd\u6570\u7528\u5230\u4e86suffix\u8fd9\u4e2a\u53d8\u91cf \u95ed\u5305\u7684\u597d\u5904,\u53ef\u4ee5\u4e0d\u7528\u91cd\u590d\u5b9a\u4e49,\u53ea\u5b9a\u4e49\u4e00\u6b21\u5c31\u53ef\u4ee5\u4e86. defer\u7684\u4f7f\u7528 \u00b6 \u5ef6\u65f6\u673a\u5236,\u5728\u672c\u51fd\u6570\u4f53\u5185\u6267\u884c\u5230defer\u65f6,\u5c06defer\u540e\u7684\u8bed\u53e5(1,2,3)\u538b\u6808,\u7b49\u5176\u4ed6\u8bed\u53e5\u6267\u884c\u5b8c\u6bd5,\u4f9d\u6b21(3,2,1)\u51fa\u6808. \u5ef6\u8fdf\u5904\u7406\u5728 defer \u5f52\u5c5e\u7684\u51fd\u6570\u5373\u5c06\u8fd4\u56de\u65f6\uff0c\u5c06\u5ef6\u8fdf\u5904\u7406\u7684\u8bed\u53e5\u6309 defer \u5b9a\u4e49\u7684\u9006\u5e8f\u8fdb\u884c\u6267\u884c\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5148\u88ab defer \u7684\u8bed\u53e5\u6700\u540e\u88ab\u6267\u884c\uff0c\u6700\u540e\u88ab defer \u7684\u8bed\u53e5\uff0c\u6700\u5148\u88ab\u6267\u884c\u3002 func main () { fmt . Println ( \"start\" ) defer fmt . Println ( 1 ) defer fmt . Println ( 2 ) defer fmt . Println ( 3 ) fmt . Println ( \"end\" ) } >> > start end 3 2 1 \u7528\u9014: \u00b6 \u7531\u4e8e defer \u8bed\u53e5\u7684\u5ef6\u8fdf\u8c03\u7528\u7684\u7279\u6027,\u6240\u4ee5 defer \u8bed\u53e5\u53ef\u4ee5\u975e\u5e38\u65b9\u4fbf\u7684\u5904\u7406\u8d44\u6e90\u91ca\u653e\u7684\u95ee\u9898. \u6bd4\u5982: \u521b\u5efa\u8d44\u6e90(\u6570\u636e\u5e93\u8fde\u63a5,\u6587\u4ef6\u53e5\u67c4,\u9501\u7b49),\u8d44\u6e90\u6e05\u7406,\u6587\u4ef6\u5173\u95ed,\u89e3\u9501\u5373\u8bb0\u5f55\u65f6\u95f4\u7b49. \u7ec3\u4e60: func sum ( n1 , n2 int ) int { defer fmt . Println ( \"1\" , n1 ) defer fmt . Println ( \"2\" , n2 ) res := n1 + n2 fmt . Println ( \"3\" , res ) return res } func main () { res := sum ( 10 , 20 ) res += 1 fmt . Println ( \"res\" , res ) } >> > 3 30 2 20 1 10 res 31 //\u5728defer\u5c06\u8bed\u53e5\u653e\u5165\u6808\u4e2d\u65f6,\u4e5f\u4f1a\u5c06\u76f8\u5173\u7684\u503c\u62f7\u8d1d\u540c\u65f6\u5165\u6808. func sum ( n1 , n2 int ) int { defer fmt . Println ( \"1\" , n1 ) defer fmt . Println ( \"2\" , n2 ) n1 ++ n2 ++ res := n1 + n2 fmt . Println ( \"3\" , res ) return res } func main () { res := sum ( 10 , 20 ) res += 1 fmt . Println ( \"res\" , res ) } >> > 3 32 2 20 1 10 res 33 \u8bf4\u660e:\u5728defer\u5c06\u8bed\u53e5\u653e\u5165\u6808\u4e2d\u65f6,\u4e5f\u4f1a\u5c06\u76f8\u5173\u7684\u503c\u62f7\u8d1d\u540c\u65f6\u5165\u6808. \u6ce8\u610f\u4e8b\u9879\u548c\u7ec6\u8282 \u00b6 \u51fd\u6570\u7684\u5f62\u53c2\u5217\u8868\u53ef\u4ee5\u662f\u591a\u4e2a\u62160\u4e2a,\u8fd4\u56de\u503c\u5217\u8868\u4e5f\u53ef\u4ee5\u662f\u591a\u4e2a\u62160\u4e2a. \u5f62\u53c2\u5217\u8868\u548c\u8fd4\u56de\u503c\u5217\u8868\u7684\u6570\u636e\u7c7b\u578b\u53ef\u4ee5\u662f\u503c\u7c7b\u578b\u6216\u5f15\u7528\u7c7b\u578b. \u51fd\u6570\u7684\u547d\u540d\u9075\u5faa\u6807\u8bc6\u7b26\u547d\u540d\u89c4\u8303.\u9996\u5b57\u6bcd\u4e0d\u53ef\u4ee5\u662f\u6570\u5b57,\u9996\u5b57\u6bcd\u5927\u5199\u53ef\u4ee5\u88ab\u5176\u4ed6\u5305\u4f7f\u7528,\u7c7b\u4f3cpublic,\u9996\u5b57\u6bcd\u5c0f\u5199,\u53ea\u80fd\u88ab\u672c\u5305\u4f7f\u7528,\u7c7b\u4f3cprivate. \u51fd\u6570\u4e2d\u7684\u53d8\u91cf\u662f\u5c40\u90e8\u7684,\u51fd\u6570\u5916\u4e0d\u80fd\u4f7f\u7528. \u57fa\u672c\u6570\u636e\u7c7b\u578b\u548c\u6570\u7ec4\u9ed8\u8ba4\u90fd\u662f\u503c\u4f20\u9012,\u5373\u8fdb\u884c\u503c\u62f7\u8d1d. \u503c\u7c7b\u578b,\u5728\u51fd\u6570\u5185\u4fee\u6539,\u4e0d\u5f71\u54cd\u539f\u6765\u7684\u503c. \u6307\u9488\u7c7b\u578b,\u4f20\u9012\u7684\u662f\u6307\u9488\u7684\u6307\u9488.\u6e90\u5730\u5740\u7684\u6307\u9488\u4e0d\u53d8,\u590d\u5236\u4e00\u4e2a\u65b0\u6307\u9488\u6307\u5411\u6e90\u6307\u9488,\u6240\u4ee5\u53ef\u4ee5\u6539\u53d8\u6e90\u503c. https://www.jianshu.com/p/172a52ded985 \u5982\u679c\u5e0c\u671b\u51fd\u6570\u5185\u7684\u53d8\u91cf\u53ef\u4ee5\u4fee\u6539\u51fd\u6570\u5916\u7684\u53d8\u91cf(map,\u5207\u7247\u672c\u8eab\u5c31\u662f\u5f15\u7528,\u6240\u4ee5\u8fd9\u91cc\u9ed8\u8ba4\u8bf4\u7684\u662f\u503c\u4f20\u9012\u65b9\u5f0f\u7684\u53d8\u91cf),\u53ef\u4ee5\u4f20\u5165\u53d8\u91cf\u7684\u5730\u5740\\&,\u51fd\u6570\u5185\u4ee5\u6307\u9488\u7684\u65b9\u5f0f\u64cd\u4f5c\u53d8\u91cf. \u4ece\u6548\u679c\u4e0a\u770b\u7c7b\u4f3c\u5f15\u7528. Go\u51fd\u6570\u4e0d\u652f\u6301\u51fd\u6570\u91cd\u8f7d.\u4f1a\u88ab\u8ba4\u4e3a\u662f\u91cd\u590d\u5b9a\u4e49. \u51fd\u6570\u91cd\u8f7d:\u51fd\u6570\u540d\u76f8\u540c,\u53c2\u6570\u7c7b\u578b\u6216\u4e2a\u6570\u4e0d\u540c\u7684\u4e24\u4e2a\u51fd\u6570. \u5728Go\u4e2d,\u51fd\u6570\u4e5f\u662f\u4e00\u79cd\u6570\u636e\u7c7b\u578b,\u53ef\u4ee5\u8d4b\u503c\u7ed9\u4e00\u4e2a\u53d8\u91cf,\u5219\u8be5\u53d8\u91cf\u5c31\u662f\u4e00\u4e2a\u51fd\u6570\u7c7b\u578b\u7684\u53d8\u91cf.\u53ef\u4ee5\u901a\u8fc7\u8be5\u53d8\u91cf\u5bf9\u51fd\u6570\u8fdb\u884c\u8c03\u7528. func getSum ( n1 , n2 int ) int { return n1 + n2 } func main (){ a := getSum fmt . Printf ( \"type of a is %T,type of getSum is %T\" , a , getSum ) } >> > type of a is func ( int , int ) int , type of getSum is func ( int , int ) int \u51fd\u6570\u4e5f\u662f\u4e00\u79cd\u6570\u636e\u7c7b\u578b,\u6240\u4ee5\u5728Go\u4e2d\u53ef\u4ee5\u4f7f\u7528\u51fd\u6570\u4f5c\u4e3a\u5f62\u53c2,\u5e76\u4e14\u8c03\u7528. \u652f\u6301\u5bf9\u51fd\u6570\u8fd4\u56de\u503c\u547d\u540d func cal ( n1 , n2 int ) ( sum , sub int ) { sum = n1 + n2 sub = n1 - n2 return } \u4f18\u70b9:\u8fd4\u56de\u53ef\u4ee5\u4e0d\u770b\u987a\u5e8f,\u6309\u7ed9\u5b9a\u7684\u53d8\u91cf\u540d\u8fd4\u56de. go\u652f\u6301\u53ef\u53d8\u957f\u53c2\u6570 func sum ( n1 int , args ... int ) int { sum := n1 //\u904d\u5386args\u6c42\u503c for i := 0 ; i < len ( args ); i ++ { sum += args [ i ] } return sum } //\u53ef\u652f\u6301\u8f93\u5165\u81f3\u5c11\u4e00\u4e2a\u503c,\u6c42\u548c \u51fd\u6570\u7684\u6267\u884c\u8bed\u53e5,\u90fd\u8981\u653e\u5165\u51fd\u6570\u4f53\u4e4b\u5185.\u6bd4\u5982:\u51fd\u6570\u5916\u7684\u8d4b\u503c\u8bed\u53e5\u4f1a\u62a5\u9519. \u51fd\u6570\u7684\u7c7b\u578b\u662f func(\u5f62\u53c2\u7c7b\u578b)\u8fd4\u56de\u503c\u7c7b\u578b ,\u5f62\u53c2\u7c7b\u578b,\u8fd4\u56de\u503c\u7c7b\u578b\u4e5f\u662f\u51fd\u6570\u7c7b\u578b\u7684\u4e00\u90e8\u5206,\u51fd\u6570\u540d,\u5f62\u53c2\u540d,\u8fd4\u56de\u503c\u540d\u90fd\u4e0d\u662f\u7c7b\u578b\u7684\u4e00\u90e8\u5206 \u5728\u51fd\u6570\u53c2\u6570\u4e2d\u5efa\u8bae\u4f7f\u7528\u5207\u7247,\u4e0d\u8981\u4f7f\u7528\u6570\u7ec4. \u5185\u7f6e\u51fd\u6570\u4ecb\u7ecd \u00b6 \u5185\u7f6e\u51fd\u6570 \u4ecb\u7ecd close \u4e3b\u8981\u7528\u6765\u5173\u95edchannel len \u7528\u6765\u6c42\u957f\u5ea6\uff0c\u6bd4\u5982string\u3001array\u3001slice\u3001map\u3001channel new \u7528\u6765\u5206\u914d\u5185\u5b58\uff0c\u4e3b\u8981\u7528\u6765\u5206\u914d\u503c\u7c7b\u578b\uff0c\u6bd4\u5982int\u3001struct\u3002\u8fd4\u56de\u7684\u662f\u6307\u9488 make \u7528\u6765\u5206\u914d\u5185\u5b58\uff0c\u4e3b\u8981\u7528\u6765\u5206\u914d\u5f15\u7528\u7c7b\u578b\uff0c\u6bd4\u5982chan\u3001map\u3001slice append \u7528\u6765\u8ffd\u52a0\u5143\u7d20\u5230\u6570\u7ec4\u3001slice\u4e2d","title":"\u51fd\u6570"},{"location":"Golang/%E5%87%BD%E6%95%B0/#_1","text":"","title":"\u51fd\u6570\u57fa\u7840"},{"location":"Golang/%E5%87%BD%E6%95%B0/#_2","text":"\u51cf\u5c11\u4ee3\u7801\u5197\u4f59 \u65b9\u4fbf\u4ee3\u7801\u7684\u7ef4\u62a4 \u89e3\u51b3\u4ee3\u7801\u590d\u7528\u6027\u7684\u95ee\u9898","title":"\u76ee\u7684"},{"location":"Golang/%E5%87%BD%E6%95%B0/#_3","text":"\u4e3a\u4e86\u5b8c\u6210\u67d0\u4ee5\u529f\u80fd\u7684\u7a0b\u5e8f\u6307\u4ee4(\u8bed\u53e5)\u7684\u5408\u96c6,\u79f0\u4e3a\u51fd\u6570.","title":"\u6982\u5ff5"},{"location":"Golang/%E5%87%BD%E6%95%B0/#_4","text":"\u81ea\u5b9a\u4e49\u51fd\u6570,\u7cfb\u7edf\u51fd\u6570(Go\u7f16\u7a0b\u624b\u518c)","title":"\u5206\u7c7b"},{"location":"Golang/%E5%87%BD%E6%95%B0/#_5","text":"func \u51fd\u6570\u540d ( \u5f62\u53c2\u5217\u8868 ) ( \u8fd4\u56de\u503c\u5217\u8868 ) { \u6267\u884c\u8bed\u53e5 return \u8fd4\u56de\u503c\u5217\u8868 } \u51fd\u6570\u540d\u7684\u547d\u540d\u4e0e\u6807\u8bc6\u7b26\u4e00\u81f4\uff0e\u4e14\u5728\u540c\u4e00\u4e2a\u5305\u5185\uff0c\u51fd\u6570\u540d\u4e0d\u80fd\u91cd\u590d \u5f62\u53c2\u5217\u8868:\u8868\u793a\u51fd\u6570\u7684\u8f93\u5165\uff0c\u7531\u53c2\u6570\u53d8\u91cf\u548c\u53c2\u6570\u53d8\u91cf\u7684\u7c7b\u578b\u7ec4\u6210\uff0c\u591a\u4e2a\u53c2\u6570\u4e4b\u95f4\u7528 , \u5206\u5272 \u51fd\u6570\u4e2d\u7684\u8bed\u53e5:\u8868\u793a\u4e3a\u4e86\u5b9e\u73b0\u67d0\u4e00\u529f\u80fd\u4ee3\u7801\u5757 \u51fd\u6570\u7684\u53c2\u6570\uff0c\u8fd4\u56de\u503c\u4e5f\u53ef\u4ee5\u6ca1\u6709","title":"\u57fa\u672c\u8bed\u6cd5"},{"location":"Golang/%E5%87%BD%E6%95%B0/#_6","text":"\u5b9a\u4e49\u51fd\u6570\u4e4b\u540e,\u53ef\u4ee5\u901a\u8fc7 \u51fd\u6570\u540d() \u7684\u65b9\u6cd5\u8c03\u7528. \u8c03\u7528\u51fd\u6570\u7684\u65f6\u5019\u4e5f\u53ef\u4ee5\u4e0d\u63a5\u6536\u5176\u8fd4\u56de\u503c. \u6ce8\u610f:\u51fd\u6570\u7684\u8fd4\u56de\u503c\u53ef\u4ee5\u4e0d\u63a5\u6536,\u4f46\u662f\u4e0d\u53ef\u4ee5\u63a5\u6536\u90e8\u5206,(\u8981\u4e48\u5168\u63a5\u6536,\u8981\u4e0d\u4e0d\u63a5\u6536)","title":"\u51fd\u6570\u7684\u8c03\u7528"},{"location":"Golang/%E5%87%BD%E6%95%B0/#_7","text":"\u5728\u8c03\u7528\u4e00\u4e2a\u51fd\u6570\u65f6,\u4f1a\u7ed9\u8be5\u51fd\u6570\u5206\u914d\u4e00\u4e2a\u65b0\u7684\u7a7a\u95f4,\u7f16\u8bd1\u5668\u4f1a\u901a\u8fc7\u81ea\u8eab\u5904\u7406\u8ba9\u8fd9\u4e2a\u65b0\u7684\u7a7a\u95f4\u548c\u5176\u4ed6\u7a7a\u95f4\u7684\u6808\u7684\u7a7a\u95f4\u533a\u5206\u5f00 \u6bcf\u4e2a\u51fd\u6570\u5bf9\u5e94\u7684\u6808\u4e2d,\u6570\u636e\u7a7a\u95f4\u662f\u72ec\u7acb\u7684,\u4e0d\u4f1a\u6df7\u6dc6 \u5f53\u4e00\u4e2a\u51fd\u6570\u7ed3\u675f\u8c03\u7528(\u6267\u884c\u5b8c\u6bd5)\u540e,\u7a0b\u5e8f\u4f1a\u9500\u6bc1\u8fd9\u4e2a\u51fd\u6570\u5bf9\u5e94\u7684\u6808\u7a7a\u95f4.","title":"\u5185\u5b58\u6d41\u7a0b"},{"location":"Golang/%E5%87%BD%E6%95%B0/#_8","text":"","title":"\u53c2\u6570"},{"location":"Golang/%E5%87%BD%E6%95%B0/#_9","text":"\u51fd\u6570\u7684\u4ece\u53c2\u6570\u4e2d\u5982\u679c\u76f8\u90bb\u53d8\u91cf\u7684\u7c7b\u578b\u76f8\u540c,\u5219\u53ef\u4ee5\u7701\u7565\u7c7b\u578b func intSum ( x , y int ) int { //\u5f53x,y\u7c7b\u578b\u76f8\u540c\u65f6,\u53ef\u5728\u6700\u540e\u53ea\u5199\u4e00\u4e2a\u7c7b\u578b. return x + y }","title":"\u7c7b\u578b\u7b80\u5199"},{"location":"Golang/%E5%87%BD%E6%95%B0/#_10","text":"\u53ef\u53d8\u53c2\u6570\u6307\u51fd\u6570\u7684\u53c2\u6570\u6570\u91cf\u4e0d\u56fa\u5b9a. Go\u4e2d\u7684\u53ef\u53d8\u53c2\u6570\u901a\u8fc7\u5728\u53c2\u6570\u540d\u540e\u52a0 ... \u6765\u6807\u8bc6. \u6ce8\u610f:\u53ef\u53d8\u53c2\u6570\u901a\u5e38\u4f5c\u4e3a\u51fd\u6570\u7684\u6700\u540e\u4e00\u4e2a\u53c2\u6570. func intSum ( x ... int ) int { fmt . Println ( x ) //x\u662f\u4e00\u4e2a\u5207\u7247 sum := 0 for _ , v := range x { sum = sum + v } return sum } //\u6ce8\u610f:\u5176\u4e2dx\u4e3aslice\u5bf9\u8c61,\u53ef\u4ee5\u901a\u8fc7x[index]\u6765\u8bbf\u95ee\u5230\u5404\u4e2a\u503c --------------------------- func main () { ret1 := intSum2 () ret2 := intSum2 ( 10 ) ret3 := intSum2 ( 10 , 20 ) ret4 := intSum2 ( 10 , 20 , 30 ) fmt . Println ( ret1 , ret2 , ret3 , ret4 ) } >> > [] [ 10 ] [ 10 20 ] [ 10 20 30 ] 0 10 30 60","title":"\u53ef\u53d8\u53c2\u6570"},{"location":"Golang/%E5%87%BD%E6%95%B0/#_11","text":"","title":"\u53c2\u6570\u7684\u4f20\u9012"},{"location":"Golang/%E5%87%BD%E6%95%B0/#_12","text":"\u503c\u4f20\u9012:\u57fa\u672c\u6570\u636e\u7c7b\u578b, \u57fa\u672c\u6570\u636e\u7c7b\u578b(int\u7cfb\u5217,float\u7cfb\u5217,bool,string),\u6570\u7ec4,\u7ed3\u6784\u4f53 \u503c\u4f20\u9012\u5c31\u662f\u5728\u4f20\u9012\u53c2\u6570\u7684\u65f6\u5019\u8fdb\u884c\u4e86\u503c\u62f7\u8d1d. \u5f15\u7528\u4f20\u9012:\u4f20\u9012\u7684\u662f\u5730\u5740. \u6307\u9488,slice\u5207\u7247,map,\u7ba1\u9053channel,interface\u7b49\u9ed8\u8ba4\u5f15\u7528\u7c7b\u578b,","title":"\u5206\u7c7b"},{"location":"Golang/%E5%87%BD%E6%95%B0/#_13","text":"\u65e0\u8bba\u503c\u4f20\u9012\u8fd8\u662f\u5f15\u7528\u4f20\u9012,\u4f20\u9012\u7ed9\u51fd\u6570\u7684\u90fd\u662f\u53d8\u91cf\u7684\u526f\u672c, \u503c\u4f20\u9012\u7684\u662f\u503c\u7684\u62f7\u8d1d,\u5f15\u7528\u4f20\u9012\u4f20\u9012\u7684\u5730\u5740\u7684\u62f7\u8d1d \u4e00\u822c\u6765\u8bf4,\u5730\u5740\u62f7\u8d1d\u6548\u7387\u9ad8,\u56e0\u4e3a\u6570\u636e\u91cf\u5c0f \u800c\u503c\u62f7\u8d1d\u51b3\u5b9a\u4e8e\u6570\u636e\u7684\u5927\u5c0f,\u6570\u636e\u8d8a\u5927,\u6548\u7387\u8d8a\u4f4e.","title":"\u533a\u522b:"},{"location":"Golang/%E5%87%BD%E6%95%B0/#_14","text":"\u51fd\u6570\u53ef\u4ee5\u6ca1\u6709\u8fd4\u56de\u503c func test ( n1 int ) { n1 = n1 + 1 fmt . Println ( n1 ) } Go\u8bed\u8a00\u4e2d\u901a\u8fc7 return \u5173\u952e\u5b57\u5411\u5916\u8f93\u51fa\u8fd4\u56de\u503c.","title":"\u8fd4\u56de\u503c"},{"location":"Golang/%E5%87%BD%E6%95%B0/#_15","text":"\u51fd\u6570\u4e2d\u5982\u679c\u6ca1\u5b9a\u4e49\u8fd4\u56de\u503c,\u51fd\u6570\u4e2d\u7684return\u53ea\u662f\u7ec8\u6b62\u51fd\u6570,\u4e0d\u8fd4\u56de\u4efb\u4f55\u503c.","title":"\u6ce8\u610f:"},{"location":"Golang/%E5%87%BD%E6%95%B0/#_16","text":"Go\u8bed\u8a00\u4e2d\u652f\u6301\u591a\u8fd4\u56de\u503c,\u51fd\u6570\u5982\u679c\u6709\u591a\u4e2a\u8fd4\u56de\u503c\u7684\u65f6\u5019,\u5fc5\u987b\u7528 () \u5c06\u6240\u6709\u8fd4\u56de\u503c\u5305\u88f9\u8d77\u6765. func calc ( x , y int ) ( int , int ) { sum := x + y sbu := x - y return sum , sub } \u4e0d\u60f3\u7528\u7684\u8fd4\u56de\u503c\u53ef\u4ee5\u4f7f\u7528 _ \u63a5\u6536,\u4e22\u5f03\u53d8\u91cf","title":"\u591a\u8fd4\u56de\u503c"},{"location":"Golang/%E5%87%BD%E6%95%B0/#_17","text":"\u51fd\u6570\u5b9a\u4e49\u65f6\u53ef\u4ee5\u7ed9\u8fd4\u56de\u503c\u547d\u540d,\u5e76\u5728\u51fd\u6570\u4f53\u4e2d\u76f4\u63a5\u4f7f\u7528\u8fd9\u4e9b\u53d8\u91cf,\u6700\u540e\u76f4\u63a5 return \u5173\u952e\u5b57\u8fd4\u56de func calc ( x , y int ) ( sum , sub int ) { sum := x + y sbu := x - y return } \u8fd9\u65f6\u5c31\u662f\u4f7f\u7528\u4e86\u8fd4\u56de\u503c\u7684\u9ed8\u8ba4\u503c,return\u5173\u952e\u5b57\u4f1a\u53bb\u51fd\u6570\u5b9a\u4e49\u4e2d\u627e\u8fd4\u56de\u503c\u5e76\u8fd4\u56de.","title":"\u547d\u540d\u8fd4\u56de\u503c"},{"location":"Golang/%E5%87%BD%E6%95%B0/#_18","text":"","title":"\u51fd\u6570\u8fdb\u9636"},{"location":"Golang/%E5%87%BD%E6%95%B0/#_19","text":"","title":"\u53d8\u91cf\u4f5c\u7528\u57df"},{"location":"Golang/%E5%87%BD%E6%95%B0/#_20","text":"\u51fd\u6570\u5916\u90e8\u5b9a\u4e49/\u58f0\u660e\u7684\u53d8\u91cf\u53eb\u5168\u5c40\u53d8\u91cf,\u4f5c\u7528\u57df\u5728\u6574\u4e2a\u5305\u90fd\u6709\u6548,\u5982\u679c\u5176\u9996\u5b57\u6bcd\u5927\u5199,\u5219\u4f5c\u7528\u57df\u5728\u6574\u4e2a\u7a0b\u5e8f\u90fd\u6709\u6548. \u5168\u5c40\u53d8\u91cf\u65f6\u5b9a\u4e49\u5728\u51fd\u6570\u5916\u90e8\u7684\u53d8\u91cf,\u5b83\u5728\u7a0b\u5e8f\u6574\u4e2a\u8fd0\u884c\u5468\u671f\u5185\u90e8\u90fd\u6709\u6548,\u5728\u51fd\u6570\u4e2d\u53ef\u4ee5\u8bbf\u95ee\u5230\u5168\u5c40\u53d8\u91cf, package main import \"fmt\" var num int = 10 func main (){ fmt . Println ( num ) } >> > 10","title":"\u5168\u5c40\u53d8\u91cf"},{"location":"Golang/%E5%87%BD%E6%95%B0/#_21","text":"\u5728\u51fd\u6570\u5185\u90e8\u58f0\u660e/\u5b9a\u4e49\u7684\u53d8\u91cf\u53eb\u5c40\u90e8\u53d8\u91cf,\u4f5c\u7528\u57df\u4ec5\u9650\u4e8e\u51fd\u6570\u5185\u90e8. \u51fd\u6570\u5185\u5b9a\u4e49\u7684\u53d8\u91cf\u65e0\u6cd5\u5728\u8be5\u51fd\u6570\u5916\u4f7f\u7528. \u5982\u679c\u5c40\u90e8\u53d8\u91cf\u548c\u5168\u5c40\u53d8\u91cf\u91cd\u540d,\u4f18\u5148\u8bbf\u95ee\u5c40\u90e8\u53d8\u91cf.for if switch\u4e0e\u51fd\u6570\u540c\u7406","title":"\u5c40\u90e8\u53d8\u91cf"},{"location":"Golang/%E5%87%BD%E6%95%B0/#_22","text":"","title":"\u51fd\u6570\u7c7b\u578b\u4e0e\u53d8\u91cf"},{"location":"Golang/%E5%87%BD%E6%95%B0/#_23","text":"\u53ef\u4ee5\u4f7f\u7528 type \u5173\u952e\u5b57\u6765\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\u7c7b\u578b type calculation func ( int , int ) int //\u5b9a\u4e49\u4e86\u4e00\u4e2acalculation\u7c7b\u578b,\u8fd9\u662f\u4e00\u79cd\u51fd\u6570\u7c7b\u578b,\u8fd9\u79cd\u51fd\u6570\u63a5\u6536\u4e24\u4e2aint\u7c7b\u578b\u7684\u53c2\u6570\u5e76\u4e14\u8fd4\u56de\u4e00\u4e2aint\u7c7b\u578b\u7684\u51fd\u6570 \u6ee1\u8db3\u8fd9\u4e2a\u6761\u4ef6\u7684\u51fd\u6570\u90fd\u662fcalculation\u7c7b\u578b\u7684\u51fd\u6570,","title":"\u5b9a\u4e49\u51fd\u6570\u7c7b\u578b"},{"location":"Golang/%E5%87%BD%E6%95%B0/#_24","text":"type calculation func ( int , int ) int //\u5b9a\u4e49\u4e86\u4e00\u4e2acalculation\u51fd\u6570\u7c7b\u578b,\u8f93\u5165\u4e24\u4e2aint\u8fd4\u56de\u4e00\u4e2aint func add ( x , y int ) int { return x + y } func main (){ var c calculation = add //\u58f0\u660e\u4e00\u4e2acalculation\u7c7b\u578b\u7684\u53d8\u91cfc\u5e76\u628aadd\u8d4b\u503c\u7ed9c res := c ( 1 , 3 ) //\u50cf\u8c03\u7528add\u4e00\u6837\u8c03\u7528c fmt . Println ( res ) //4 fmt . Printf ( \"%T\\n\" , c ) //main.calculation } >> > 4 main . calculation","title":"\u51fd\u6570\u7c7b\u578b\u53d8\u91cf"},{"location":"Golang/%E5%87%BD%E6%95%B0/#_25","text":"func getSum ( n1 , n2 int ) int { return n1 + n2 } func main (){ a := getSum fmt . Printf ( \"type of a is %T,type of getSum is %T\" , a , getSum ) } >> > type of a is func ( int , int ) int , type of getSum is func ( int , int ) int","title":"\u51fd\u6570\u7684\u6570\u636e\u7c7b\u578b"},{"location":"Golang/%E5%87%BD%E6%95%B0/#_26","text":"\u9ad8\u9636\u51fd\u6570\u5373\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\u6216\u8005\u51fd\u6570\u4f5c\u4e3a\u8fd4\u56de\u503c.","title":"\u9ad8\u9636\u51fd\u6570"},{"location":"Golang/%E5%87%BD%E6%95%B0/#_27","text":"func add ( x , y int ) int { return x + y } //func\u540e\u76844\u4e2aint,\u5206\u522b\u4e3aadd\u7684\u4e24\u4e2a\u53c2\u6570,\u4e00\u4e2a\u8fd4\u56de\u503c\u548ccalc\u7684\u8fd4\u56de\u503c //calc\u5171\u6709\u4e09\u4e2a\u53c2\u6570,\u4e24\u4e2aint\u548c\u4e00\u4e2afunc func calc ( x , y int , op func ( int , int ) int ) int { return op ( x , y ) } func main (){ res := calc ( 10 , 20 , add ) fmt . Println ( res ) }","title":"\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570"},{"location":"Golang/%E5%87%BD%E6%95%B0/#_28","text":"func add ( x , y int ) int { return x + y } func do () ( func ( int , int ) int ) { return add } func main (){ res := do ()( 20 , 30 ) fmt . Println ( res ) } >> > 50","title":"\u51fd\u6570\u4f5c\u4e3a\u8fd4\u56de\u503c"},{"location":"Golang/%E5%87%BD%E6%95%B0/#_29","text":"\u4e00\u4e2a\u51fd\u6570\u5728\u51fd\u6570\u4f53\u5185\u53c8\u8c03\u7528\u4e86\u51fd\u6570\u672c\u8eab,\u5c31\u79f0\u4e3a\u9012\u5f52\u8c03\u7528. \u4f8b1: package main import \"fmt\" func test ( n int ) { if n > 2 { n -- test ( n ) } fmt . Println ( n ) } func main () { test ( 4 ) } >> > 2 2 3 \u9012\u5f52\u8fd4\u56de\u7684\u65f6\u5019\u56de\u5230\u4e86\u4e0a\u4e00\u4e2aif,\u51fa\u6808\u7684\u65f6\u5019\u6267\u884c\u4e86Print \u8fdb\u6808\u7684\u65f6\u5019,Print\u5728\u6808\u4e2d\u7b49\u5f85\u6267\u884c,\u51fa\u6808\u7684\u65f6\u5019\u6267\u884c \u4f8b2 package main import \"fmt\" func test ( n int ) { if n > 2 { n -- test ( n ) } else { fmt . Println ( n ) } } func main () { test ( 4 ) } >> > 2 \u51fa\u6808\u7684\u65f6\u5019\u8fdb\u4e0d\u5230else\u91cc\u9762,\u6240\u4ee5\u53ea\u6253\u5370\u4e00\u4e2a2 \u539f\u5219: \u6267\u884c\u4e00\u4e2a\u51fd\u6570\u65f6,\u5c31\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u53d7\u4fdd\u62a4\u7684\u72ec\u7acb\u7a7a\u95f4(\u65b0\u51fd\u6570\u6808) \u51fd\u6570\u7684\u5c40\u90e8\u53d8\u91cf\u65f6\u72ec\u7acb\u7684,\u4e0d\u4f1a\u76f8\u4e92\u5f71\u54cd \u9012\u5f52\u5fc5\u987b\u5411\u9000\u51fa\u9012\u5f52\u7684\u6761\u4ef6\u903c\u8fd1,\u5426\u5219\u5c31\u662f\u65e0\u9650\u9012\u5f52 \u5f53\u4e00\u4e2a\u51fd\u6570\u6267\u884c\u5b8c\u6bd5,\u6216\u8005\u9047\u5230return,\u5c31\u4f1a\u8fd4\u56de,\u9075\u5b88\u8c01\u8c03\u7528,\u5c31\u5c06\u7ed3\u679c\u8fd4\u56de\u7ed9\u8c01. \u5f53\u51fd\u6570\u6267\u884c\u5b8c\u6bd5\u6216\u8005\u8fd4\u56de\u65f6,\u51fd\u6570\u672c\u8eab\u4e5f\u4f1a\u88ab\u9500\u6bc1. \u7ec3\u4e60: //\u6590\u6ce2\u90a3\u5951\u6570 func fib ( n int ) ( int ){ if ( n == 1 || n == 2 ) { return 1 } else { return fib ( n - 1 ) + fib ( n - 2 ) } } func main (){ fmt . Println ( fib ( 5 )) } >> > 5 //f(1)=3,f(n)=2*f(n-1)+1,\u6c42f(n) func f ( n int ) int { if n == 1 { return 3 } else { return 2 * f ( n - 1 ) + 1 } } func main () { fmt . Println ( f ( 5 )) } >> > 63 //\u7334\u5b50\u5403\u6843:\u7b2c\u4e00\u5929\u5403\u4e00\u822c,\u518d\u591a\u5403\u4e00\u4e2a,\u6bcf\u5929\u5403\u4e00\u822c,\u518d\u591a\u4e00\u4e2a,\u7b2c\u5341\u5929,\u53d1\u73b0\u5c31\u5269\u4e00\u4e2a\u4e86,\u95ee\u4e00\u5171\u591a\u5c11\u6843? func peach ( n int ) int { if n == 10 { return 1 } else { return 2 * ( peach ( n + 1 ) + 1 ) } } func main () { fmt . Println ( peach ( 1 )) } >> > 1534","title":"\u9012\u5f52\u8c03\u7528"},{"location":"Golang/%E5%87%BD%E6%95%B0/#init","text":"\u6bcf\u4e00\u4e2a\u6e90\u6587\u4ef6\u90fd\u53ef\u4ee5\u5305\u542b\u4e00\u4e2ainit\u51fd\u6570,\u8be5\u51fd\u6570\u4f1a\u5728main\u51fd\u6570\u6267\u884c\u524d,\u88abGo\u8fd0\u884c\u6846\u67b6\u8c03\u7528,\u4e5f\u5c31\u662f\u8bf4,init\u4f1a\u5728main\u51fd\u6570\u524d\u88ab\u8c03\u7528. \u901a\u5e38\u5728init\u51fd\u6570\u4e2d\u5b8c\u6210\u51fd\u6570\u7684\u521d\u59cb\u5316\u5de5\u4f5c.","title":"init\u51fd\u6570"},{"location":"Golang/%E5%87%BD%E6%95%B0/#_30","text":"\u5982\u679c\u4e00\u4e2a\u6587\u4ef6\u540c\u65f6\u5305\u542b\u5168\u5c40\u53d8\u91cf\u5b9a\u4e49,init\u51fd\u6570\u548cmain\u51fd\u6570,\u5219\u6267\u884c\u7684\u6d41\u7a0b\u662f \u53d8\u91cf\u5b9a\u4e49 \u2192 init\u51fd\u6570 \u2192 main\u51fd\u6570 \u9762\u8bd5\u9898: \u5982\u679cmain.go\u548cutils.go\u90fd\u542b\u6709\u53d8\u91cf\u5b9a\u4e49,init\u51fd\u6570\u65f6,\u6267\u884c\u7684\u6d41\u7a0b\u4f1a\u662f\u600e\u6837\u7684? \u4ece\u6700\u5916\u9762\u7684\u88ab\u5bfc\u5165\u5305,\u4f9d\u6b21\u5411main\u51fd\u6570\u9760\u62e2.\u6bcf\u4e2a\u6e90\u6587\u4ef6\u90fd\u662f\u5148\u5168\u5c40\u53d8\u91cf\u5b9a\u4e49,\u7136\u540einit\u51fd\u6570,\u7136\u540e\u4e0b\u4e00\u5c42.","title":"\u6ce8\u610f:"},{"location":"Golang/%E5%87%BD%E6%95%B0/#_31","text":"\u5982\u679c,\u4e00\u4e2a\u51fd\u6570\u5b9a\u4e49\u4e86\u53ea\u5e0c\u671b\u4f7f\u7528\u4e00\u6b21,\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u533f\u540d\u51fd\u6570.\u4f46\u662f\u533f\u540d\u51fd\u6570\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u591a\u6b21\u8c03\u7528. \u591a\u7528\u4e8e\u5b9e\u73b0\u56de\u8c03\u51fd\u6570\u548c\u95ed\u5305.\u5373\u5728\u51fd\u6570\u5185\u90e8\u4f7f\u7528\u533f\u540d\u51fd\u6570. \u533f\u540d\u51fd\u6570\u53ea\u80fd\u5728\u51fd\u6570\u5185\u4f7f\u7528,","title":"\u533f\u540d\u51fd\u6570"},{"location":"Golang/%E5%87%BD%E6%95%B0/#_32","text":"func ( \u53c2\u6570 )( \u8fd4\u56de\u503c ){ \u51fd\u6570\u4f53 }","title":"\u5b9a\u4e49\u65b9\u5f0f"},{"location":"Golang/%E5%87%BD%E6%95%B0/#_33","text":"\u5b9a\u4e49\u540e\u76f4\u63a5\u52a0 () \u8c03\u7528 //\u81ea\u6267\u884c\u51fd\u6570\uff1a\u533f\u540d\u51fd\u6570\u5b9a\u4e49\u5b8c\u52a0()\u76f4\u63a5\u6267\u884c func ( x , y int ) { fmt . Println ( x + y ) }( 10 , 20 ) } \u8fd9\u79cd\u65b9\u5f0f\u533f\u540d\u51fd\u6570\u53ea\u80fd\u8c03\u7528\u4e00\u6b21. \u5c06\u533f\u540d\u51fd\u6570\u8d4b\u503c\u7ed9\u4e00\u4e2a\u53d8\u91cf(\u51fd\u6570\u53d8\u91cf),\u518d\u901a\u8fc7\u8be5\u53d8\u91cf\u6765\u8c03\u7528\u533f\u540d\u51fd\u6570 ```go func main() { // \u5c06\u533f\u540d\u51fd\u6570\u4fdd\u5b58\u5230\u53d8\u91cf add := func(x, y int) { fmt.Println(x + y) } add(10, 20) // \u901a\u8fc7\u53d8\u91cf\u8c03\u7528\u533f\u540d\u51fd\u6570 fmt.Printf(\"%T\", add) } 30 func(int, int) ``` \u867d\u7136add\u53ef\u4ee5\u88ab\u53cd\u590d\u8c03\u7528,\u4f46\u662fadd\u4e0d\u662f\u51fd\u6570\u540d,\u53ef\u4ee5\u901a\u8fc7\u8fd9\u79cd\u65b9\u6cd5\u5728mian\u51fd\u6570\u5185\u5b9a\u4e49\u51fd\u6570 \u8fd9\u91cc\u7684add\u662f func(int, int) \u7c7b\u578b","title":"\u4f7f\u7528\u65b9\u6cd5"},{"location":"Golang/%E5%87%BD%E6%95%B0/#_34","text":"\u5982\u679c\u5c06\u533f\u540d\u51fd\u6570\u8d4b\u503c\u7ed9\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf,\u90a3\u4e48\u8fd9\u4e2a\u533f\u540d\u51fd\u6570,\u5c31\u79f0\u4e3a\u4e00\u4e2a\u5168\u5c40\u533f\u540d\u51fd\u6570,\u53ef\u4ee5\u5728\u5168\u5c40\u88ab\u8c03\u7528. var ( Fun = func ( n1 , n2 int ) int { // \u53d8\u91cf\u540d\u8bb0\u5f97\u5927\u5199 return n1 + n2 } ) func main (){ res := Fun ( 3 , 6 ) fmt . Println ( res ) }","title":"\u5168\u5c40\u533f\u540d\u51fd\u6570"},{"location":"Golang/%E5%87%BD%E6%95%B0/#_35","text":"\u95ed\u5305\u51fd\u6570,\u5c31\u662f\u591a\u4e86\u4e00\u4e2a\u51fd\u6570\u4f20\u53c2\u7684\u65b9\u5f0f. \u95ed\u5305\u5c31\u662f\u4e00\u4e2a\u51fd\u6570\u548c\u4e0e\u5176\u76f8\u5173\u7684\u5f15\u7528\u73af\u5883\u7ec4\u5408\u7684\u4e00\u4e2a\u6574\u4f53. \u95ed\u5305 = \u51fd\u6570 + \u5f15\u7528\u73af\u5883 \u4f1a\u5f62\u6210\u5c40\u90e8\u53d8\u91cf\u7684\u9a7b\u7559 //\u7d2f\u52a0\u5668 func add () func ( int ) int { var x int return func ( y int ) int { x += y return x } } func main () { var f = add () //\u8fd4\u56de\u4e00\u4e2a\u95ed\u5305 fmt . Println ( f ( 10 )) fmt . Println ( f ( 20 )) f1 := add () //\u8fd4\u56de\u4e00\u4e2a\u95ed\u5305 fmt . Println ( f1 ( 10 )) fmt . Println ( f1 ( 20 )) } \u8bf4\u660e: add\u65f6\u4e00\u4e2a\u51fd\u6570,\u8fd4\u56de\u7684\u6570\u636e\u7c7b\u578b\u65f6 func (int) int \u95ed\u5305\u8bf4\u660e:\u8fd9\u4e2a\u90e8\u5206\u5c31\u662f\u4e00\u4e2a\u95ed\u5305 var x int return func ( y int ) int { x += y return x \u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u533f\u540d\u51fd\u6570 func (y int) int ,\u4f46\u662f\u533f\u540d\u51fd\u6570\u5f15\u7528\u5230\u4e86\u51fd\u6570\u5916\u7684\u53d8\u91cfx,\u56e0\u6b64\u8fd9\u4e2a\u533f\u540d\u51fd\u6570\u4e8ex\u5c31\u5f62\u6210\u4e00\u4e2a\u6574\u4f53,\u6784\u6210\u95ed\u5305. \u7406\u89e3:\u95ed\u5305\u91cc\u7c7b(\u7684\u5355\u4f8b\u6a21\u5f0f),\u533f\u540d\u51fd\u6570\u662f\u65b9\u6cd5,\u88ab\u5f15\u7528\u53d8\u91cf\u662f\u5c5e\u6027.\u533f\u540d\u51fd\u6570\u4e0e\u88ab\u5f15\u7528\u7684\u53d8\u91cf\u5c31\u6784\u6210\u4e86\u4e00\u4e2a\u95ed\u5305. \u5f53\u53cd\u590d\u8c03\u7528main\u91cc\u9762\u7684f\u65f6,\u56e0\u4e3ax\u53ea\u521d\u59cb\u5316\u4e00\u6b21,\u56e0\u6b64\u6bcf\u8c03\u7528\u4e00\u6b21\u5c31\u662f\u5b9e\u73b0\u4e86\u7d2f\u52a0,\u800c\u4e0d\u4f1a\u91cd\u65b0\u521d\u59cb\u5316\u53d8\u91cfx. \u5206\u6790\u65f6\u8981\u6ce8\u610f\u8fd4\u56de\u503c\u91cc\u9762\u7684\u533f\u540d\u51fd\u6570\u5f15\u7528\u5230\u4e86\u54ea\u4e9b\u53d8\u91cf,\u56e0\u4e3a\u51fd\u6570\u548c\u5b83\u5f15\u7528\u7684\u53d8\u91cf\u5171\u540c\u6784\u6210\u4e86\u95ed\u5305. \u5b9e\u8df5 //\u5224\u65ad\u5b57\u7b26\u4e32\u662f\u5426\u6709\u6307\u5b9a\u540e\u7f00 import \"strings\" func makeSuffix ( suffix string ) func ( string ) string { return func ( name string ) string { if ! strings . HasSuffix ( name , suffix ) { return name + suffix } return name } } func main (){ f := makeSuffix ( \".jpg\" ) fmt . Println ( f ( \"aaa.jpg\" )) } \u8bf4\u660e: \u8fd4\u56de\u7684\u51fd\u6570\u4e0emakeSuffix\u4e2d\u7684suffix\u53d8\u91cf\u7ec4\u6210\u4e00\u4e2a\u95ed\u5305,\u56e0\u4e3a\u8fd4\u56de\u51fd\u6570\u7528\u5230\u4e86suffix\u8fd9\u4e2a\u53d8\u91cf \u95ed\u5305\u7684\u597d\u5904,\u53ef\u4ee5\u4e0d\u7528\u91cd\u590d\u5b9a\u4e49,\u53ea\u5b9a\u4e49\u4e00\u6b21\u5c31\u53ef\u4ee5\u4e86.","title":"\u95ed\u5305"},{"location":"Golang/%E5%87%BD%E6%95%B0/#defer","text":"\u5ef6\u65f6\u673a\u5236,\u5728\u672c\u51fd\u6570\u4f53\u5185\u6267\u884c\u5230defer\u65f6,\u5c06defer\u540e\u7684\u8bed\u53e5(1,2,3)\u538b\u6808,\u7b49\u5176\u4ed6\u8bed\u53e5\u6267\u884c\u5b8c\u6bd5,\u4f9d\u6b21(3,2,1)\u51fa\u6808. \u5ef6\u8fdf\u5904\u7406\u5728 defer \u5f52\u5c5e\u7684\u51fd\u6570\u5373\u5c06\u8fd4\u56de\u65f6\uff0c\u5c06\u5ef6\u8fdf\u5904\u7406\u7684\u8bed\u53e5\u6309 defer \u5b9a\u4e49\u7684\u9006\u5e8f\u8fdb\u884c\u6267\u884c\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5148\u88ab defer \u7684\u8bed\u53e5\u6700\u540e\u88ab\u6267\u884c\uff0c\u6700\u540e\u88ab defer \u7684\u8bed\u53e5\uff0c\u6700\u5148\u88ab\u6267\u884c\u3002 func main () { fmt . Println ( \"start\" ) defer fmt . Println ( 1 ) defer fmt . Println ( 2 ) defer fmt . Println ( 3 ) fmt . Println ( \"end\" ) } >> > start end 3 2 1","title":"defer\u7684\u4f7f\u7528"},{"location":"Golang/%E5%87%BD%E6%95%B0/#_36","text":"\u7531\u4e8e defer \u8bed\u53e5\u7684\u5ef6\u8fdf\u8c03\u7528\u7684\u7279\u6027,\u6240\u4ee5 defer \u8bed\u53e5\u53ef\u4ee5\u975e\u5e38\u65b9\u4fbf\u7684\u5904\u7406\u8d44\u6e90\u91ca\u653e\u7684\u95ee\u9898. \u6bd4\u5982: \u521b\u5efa\u8d44\u6e90(\u6570\u636e\u5e93\u8fde\u63a5,\u6587\u4ef6\u53e5\u67c4,\u9501\u7b49),\u8d44\u6e90\u6e05\u7406,\u6587\u4ef6\u5173\u95ed,\u89e3\u9501\u5373\u8bb0\u5f55\u65f6\u95f4\u7b49. \u7ec3\u4e60: func sum ( n1 , n2 int ) int { defer fmt . Println ( \"1\" , n1 ) defer fmt . Println ( \"2\" , n2 ) res := n1 + n2 fmt . Println ( \"3\" , res ) return res } func main () { res := sum ( 10 , 20 ) res += 1 fmt . Println ( \"res\" , res ) } >> > 3 30 2 20 1 10 res 31 //\u5728defer\u5c06\u8bed\u53e5\u653e\u5165\u6808\u4e2d\u65f6,\u4e5f\u4f1a\u5c06\u76f8\u5173\u7684\u503c\u62f7\u8d1d\u540c\u65f6\u5165\u6808. func sum ( n1 , n2 int ) int { defer fmt . Println ( \"1\" , n1 ) defer fmt . Println ( \"2\" , n2 ) n1 ++ n2 ++ res := n1 + n2 fmt . Println ( \"3\" , res ) return res } func main () { res := sum ( 10 , 20 ) res += 1 fmt . Println ( \"res\" , res ) } >> > 3 32 2 20 1 10 res 33 \u8bf4\u660e:\u5728defer\u5c06\u8bed\u53e5\u653e\u5165\u6808\u4e2d\u65f6,\u4e5f\u4f1a\u5c06\u76f8\u5173\u7684\u503c\u62f7\u8d1d\u540c\u65f6\u5165\u6808.","title":"\u7528\u9014:"},{"location":"Golang/%E5%87%BD%E6%95%B0/#_37","text":"\u51fd\u6570\u7684\u5f62\u53c2\u5217\u8868\u53ef\u4ee5\u662f\u591a\u4e2a\u62160\u4e2a,\u8fd4\u56de\u503c\u5217\u8868\u4e5f\u53ef\u4ee5\u662f\u591a\u4e2a\u62160\u4e2a. \u5f62\u53c2\u5217\u8868\u548c\u8fd4\u56de\u503c\u5217\u8868\u7684\u6570\u636e\u7c7b\u578b\u53ef\u4ee5\u662f\u503c\u7c7b\u578b\u6216\u5f15\u7528\u7c7b\u578b. \u51fd\u6570\u7684\u547d\u540d\u9075\u5faa\u6807\u8bc6\u7b26\u547d\u540d\u89c4\u8303.\u9996\u5b57\u6bcd\u4e0d\u53ef\u4ee5\u662f\u6570\u5b57,\u9996\u5b57\u6bcd\u5927\u5199\u53ef\u4ee5\u88ab\u5176\u4ed6\u5305\u4f7f\u7528,\u7c7b\u4f3cpublic,\u9996\u5b57\u6bcd\u5c0f\u5199,\u53ea\u80fd\u88ab\u672c\u5305\u4f7f\u7528,\u7c7b\u4f3cprivate. \u51fd\u6570\u4e2d\u7684\u53d8\u91cf\u662f\u5c40\u90e8\u7684,\u51fd\u6570\u5916\u4e0d\u80fd\u4f7f\u7528. \u57fa\u672c\u6570\u636e\u7c7b\u578b\u548c\u6570\u7ec4\u9ed8\u8ba4\u90fd\u662f\u503c\u4f20\u9012,\u5373\u8fdb\u884c\u503c\u62f7\u8d1d. \u503c\u7c7b\u578b,\u5728\u51fd\u6570\u5185\u4fee\u6539,\u4e0d\u5f71\u54cd\u539f\u6765\u7684\u503c. \u6307\u9488\u7c7b\u578b,\u4f20\u9012\u7684\u662f\u6307\u9488\u7684\u6307\u9488.\u6e90\u5730\u5740\u7684\u6307\u9488\u4e0d\u53d8,\u590d\u5236\u4e00\u4e2a\u65b0\u6307\u9488\u6307\u5411\u6e90\u6307\u9488,\u6240\u4ee5\u53ef\u4ee5\u6539\u53d8\u6e90\u503c. https://www.jianshu.com/p/172a52ded985 \u5982\u679c\u5e0c\u671b\u51fd\u6570\u5185\u7684\u53d8\u91cf\u53ef\u4ee5\u4fee\u6539\u51fd\u6570\u5916\u7684\u53d8\u91cf(map,\u5207\u7247\u672c\u8eab\u5c31\u662f\u5f15\u7528,\u6240\u4ee5\u8fd9\u91cc\u9ed8\u8ba4\u8bf4\u7684\u662f\u503c\u4f20\u9012\u65b9\u5f0f\u7684\u53d8\u91cf),\u53ef\u4ee5\u4f20\u5165\u53d8\u91cf\u7684\u5730\u5740\\&,\u51fd\u6570\u5185\u4ee5\u6307\u9488\u7684\u65b9\u5f0f\u64cd\u4f5c\u53d8\u91cf. \u4ece\u6548\u679c\u4e0a\u770b\u7c7b\u4f3c\u5f15\u7528. Go\u51fd\u6570\u4e0d\u652f\u6301\u51fd\u6570\u91cd\u8f7d.\u4f1a\u88ab\u8ba4\u4e3a\u662f\u91cd\u590d\u5b9a\u4e49. \u51fd\u6570\u91cd\u8f7d:\u51fd\u6570\u540d\u76f8\u540c,\u53c2\u6570\u7c7b\u578b\u6216\u4e2a\u6570\u4e0d\u540c\u7684\u4e24\u4e2a\u51fd\u6570. \u5728Go\u4e2d,\u51fd\u6570\u4e5f\u662f\u4e00\u79cd\u6570\u636e\u7c7b\u578b,\u53ef\u4ee5\u8d4b\u503c\u7ed9\u4e00\u4e2a\u53d8\u91cf,\u5219\u8be5\u53d8\u91cf\u5c31\u662f\u4e00\u4e2a\u51fd\u6570\u7c7b\u578b\u7684\u53d8\u91cf.\u53ef\u4ee5\u901a\u8fc7\u8be5\u53d8\u91cf\u5bf9\u51fd\u6570\u8fdb\u884c\u8c03\u7528. func getSum ( n1 , n2 int ) int { return n1 + n2 } func main (){ a := getSum fmt . Printf ( \"type of a is %T,type of getSum is %T\" , a , getSum ) } >> > type of a is func ( int , int ) int , type of getSum is func ( int , int ) int \u51fd\u6570\u4e5f\u662f\u4e00\u79cd\u6570\u636e\u7c7b\u578b,\u6240\u4ee5\u5728Go\u4e2d\u53ef\u4ee5\u4f7f\u7528\u51fd\u6570\u4f5c\u4e3a\u5f62\u53c2,\u5e76\u4e14\u8c03\u7528. \u652f\u6301\u5bf9\u51fd\u6570\u8fd4\u56de\u503c\u547d\u540d func cal ( n1 , n2 int ) ( sum , sub int ) { sum = n1 + n2 sub = n1 - n2 return } \u4f18\u70b9:\u8fd4\u56de\u53ef\u4ee5\u4e0d\u770b\u987a\u5e8f,\u6309\u7ed9\u5b9a\u7684\u53d8\u91cf\u540d\u8fd4\u56de. go\u652f\u6301\u53ef\u53d8\u957f\u53c2\u6570 func sum ( n1 int , args ... int ) int { sum := n1 //\u904d\u5386args\u6c42\u503c for i := 0 ; i < len ( args ); i ++ { sum += args [ i ] } return sum } //\u53ef\u652f\u6301\u8f93\u5165\u81f3\u5c11\u4e00\u4e2a\u503c,\u6c42\u548c \u51fd\u6570\u7684\u6267\u884c\u8bed\u53e5,\u90fd\u8981\u653e\u5165\u51fd\u6570\u4f53\u4e4b\u5185.\u6bd4\u5982:\u51fd\u6570\u5916\u7684\u8d4b\u503c\u8bed\u53e5\u4f1a\u62a5\u9519. \u51fd\u6570\u7684\u7c7b\u578b\u662f func(\u5f62\u53c2\u7c7b\u578b)\u8fd4\u56de\u503c\u7c7b\u578b ,\u5f62\u53c2\u7c7b\u578b,\u8fd4\u56de\u503c\u7c7b\u578b\u4e5f\u662f\u51fd\u6570\u7c7b\u578b\u7684\u4e00\u90e8\u5206,\u51fd\u6570\u540d,\u5f62\u53c2\u540d,\u8fd4\u56de\u503c\u540d\u90fd\u4e0d\u662f\u7c7b\u578b\u7684\u4e00\u90e8\u5206 \u5728\u51fd\u6570\u53c2\u6570\u4e2d\u5efa\u8bae\u4f7f\u7528\u5207\u7247,\u4e0d\u8981\u4f7f\u7528\u6570\u7ec4.","title":"\u6ce8\u610f\u4e8b\u9879\u548c\u7ec6\u8282"},{"location":"Golang/%E5%87%BD%E6%95%B0/#_38","text":"\u5185\u7f6e\u51fd\u6570 \u4ecb\u7ecd close \u4e3b\u8981\u7528\u6765\u5173\u95edchannel len \u7528\u6765\u6c42\u957f\u5ea6\uff0c\u6bd4\u5982string\u3001array\u3001slice\u3001map\u3001channel new \u7528\u6765\u5206\u914d\u5185\u5b58\uff0c\u4e3b\u8981\u7528\u6765\u5206\u914d\u503c\u7c7b\u578b\uff0c\u6bd4\u5982int\u3001struct\u3002\u8fd4\u56de\u7684\u662f\u6307\u9488 make \u7528\u6765\u5206\u914d\u5185\u5b58\uff0c\u4e3b\u8981\u7528\u6765\u5206\u914d\u5f15\u7528\u7c7b\u578b\uff0c\u6bd4\u5982chan\u3001map\u3001slice append \u7528\u6765\u8ffd\u52a0\u5143\u7d20\u5230\u6570\u7ec4\u3001slice\u4e2d","title":"\u5185\u7f6e\u51fd\u6570\u4ecb\u7ecd"},{"location":"Golang/%E5%88%87%E7%89%87/","text":"\u5207\u7247Slice \u5207\u7247\u7684\u5b9a\u4e49 \u57fa\u672c\u8bed\u6cd5 \u5207\u7247\u7684\u4f7f\u7528 \u65b9\u5f0f1 \u6ce8\u610f \u65b9\u5f0f2 \u65b9\u5f0f3 \u65b9\u5f0f1,2 \u7684\u533a\u522b \u5207\u7247\u7684\u5c5e\u6027 \u5207\u7247\u7684\u672c\u8d28 \u5207\u7247\u5728\u5185\u5b58\u7684\u5f62\u5f0f \u5207\u7247\u7684\u8d4b\u503c\u62f7\u8d1d \u5207\u7247\u7684\u904d\u5386 \u5207\u7247\u7684\u52a8\u6001\u8ffd\u52a0append \u4e00\u6b21\u6027\u8ffd\u52a0\u591a\u4e2a\u503c make\u65b9\u6cd5\u4e2d\u7684append \u5207\u7247\u6269\u5bb9\u7b56\u7565 \u8bf4\u660e: \u5207\u7247\u7684copy\u65b9\u6cd5 \u5207\u7247\u7684\u5220\u9664 string\u548cslice \u7ec6\u8282 \u5143\u7d20\u662fmap\u7684\u5207\u7247 \u5207\u7247Slice \u00b6 \u5207\u7247(Slice)\u662f\u4e00\u4e2a\u62e5\u6709\u76f8\u540c\u7c7b\u578b\u5143\u7d20\u7684\u53ef\u53d8\u957f\u7684\u5e8f\u5217.\u5b83\u662f\u57fa\u4e8e\u6570\u7ec4\u7c7b\u578b\u505a\u7684\u4e00\u5c42\u5c01\u88c5.\u5b83\u975e\u5e38\u7075\u6d3b,\u652f\u6301\u81ea\u52a8\u6269\u5bb9. \u5207\u7247\u7684\u957f\u5ea6\u662f\u53ef\u4ee5\u53d8\u5316\u7684,\u56e0\u6b64\u5207\u7247\u662f\u4e00\u4e2a\u53ef\u4ee5\u52a8\u6001\u53d8\u5316\u7684\u6570\u7ec4. \u5207\u7247\u662f\u4e00\u4e2a\u6570\u7ec4\u7684\u5f15\u7528,\u6bcf\u90e8\u7ed3\u6784\u5305\u542b\u5730\u5740,\u957f\u5ea6\u548c\u5bb9\u91cf. \u4e00\u822c\u7528\u4e8e\u5feb\u901f\u5730\u64cd\u4f5c\u4e00\u5757\u6570\u636e\u96c6\u5408. \u5207\u7247\u7684\u5b9a\u4e49 \u00b6 \u57fa\u672c\u8bed\u6cd5 \u00b6 var name [] T name\u4e3a\u53d8\u91cf\u540d, T\u8868\u793a\u5207\u7247\u4e2d\u7684\u5143\u7d20\u7c7b\u578b func main () { var a [] string //\u58f0\u660e\u4e00\u4e2a\u5b57\u7b26\u4e32\u5207\u7247 var b = [] int {} //\u58f0\u660e\u4e00\u4e2a\u6574\u578b\u5207\u7247\u5e76\u521d\u59cb\u5316 var c = [] bool { false , true } //\u58f0\u660e\u4e00\u4e2a\u5e03\u5c14\u5207\u7247\u5e76\u521d\u59cb\u5316 // var d = []bool{false,true} fmt . Println ( a ) fmt . Println ( b ) fmt . Println ( c ) fmt . Println ( a == nil ) fmt . Println ( b == nil ) fmt . Println ( c == nil ) // fmt.Println(c == d) //invalid operation: c == d (slice can only be compared to nil) } >> > [] [] [ false true ] true false false \u6ce8\u610f: \u5207\u7247\u4e4b\u95f4\u4e0d\u80fd\u8fdb\u884c\u503c\u6bd4\u8f83(\u8fdb\u884c == \u8fd0\u7b97) \u5207\u7247\u53ea\u80fd\u4e0enil\u6bd4\u8f83,\u8868\u793a\u8be5\u5207\u7247\u6ca1\u6709\u5e95\u5c42\u6570\u7ec4.\u4f46\u662f\u4e0d\u80fd\u8868\u793a\u8be5\u5207\u7247\u4e3a\u7a7a!!! \u5982\u679c\u8981\u5224\u65ad\u4e00\u4e2a\u5207\u7247\u662f\u5426\u4e3a\u7a7a,\u8981\u4f7f\u7528 len(s)==0 \u6765\u5224\u65ad. \u5207\u7247\u7684\u4f7f\u7528 \u00b6 \u65b9\u5f0f1 \u00b6 \u5b9a\u4e49\u4e00\u4e2a\u5207\u7247,\u7136\u540e\u8ba9\u5207\u7247\u53bb\u5f15\u7528\u4e00\u4e2a\u5df2\u7ecf\u521b\u5efa\u597d\u7684\u6570\u7ec4 \u53e6\u5916,\u5207\u7247\u8fd8\u53ef\u4ee5\u901a\u8fc7\u5207\u7247\u5f97\u5230.(\u5207\u7247\u518d\u5207\u7247) func main () { //\u5207\u7247\u518d\u5207\u7247 a := [ ... ] string { \"\u5317\u4eac\" , \"\u4e0a\u6d77\" , \"\u5e7f\u5dde\" , \"\u6df1\u5733\" , \"\u6210\u90fd\" , \"\u91cd\u5e86\" } fmt . Printf ( \"a:%v type:%T len:%d cap:%d\\n\" , a , a , len ( a ), cap ( a )) b := a [ 1 : 3 ] fmt . Printf ( \"b:%v type:%T len:%d cap:%d\\n\" , b , b , len ( b ), cap ( b )) c := b [ 1 : 5 ] fmt . Printf ( \"c:%v type:%T len:%d cap:%d\\n\" , c , c , len ( c ), cap ( c )) } >> > a :[ \u5317\u4eac \u4e0a\u6d77 \u5e7f\u5dde \u6df1\u5733 \u6210\u90fd \u91cd\u5e86 ] type :[ 6 ] string len : 6 cap : 6 b :[ \u4e0a\u6d77 \u5e7f\u5dde ] type :[] string len : 2 cap : 5 c :[ \u5e7f\u5dde \u6df1\u5733 \u6210\u90fd \u91cd\u5e86 ] type :[] string len : 4 cap : 4 \u6ce8\u610f \u00b6 \u5207\u7247\u518d\u5207\u7247\u9700\u8981\u6ce8\u610f,\u7b2c\u4e8c\u6b21\u5207\u7247\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u5730\u5740\u4e3a\u7b2c\u4e00\u4e2a\u5207\u7247\u5143\u7d20\u7684\u9996\u5730\u5740. \u65b9\u5f0f2 \u00b6 \u901a\u8fc7make\u6765\u521b\u5efa\u5207\u7247 \u57fa\u672c\u8bed\u6cd5 var \u5207\u7247\u540d []type = make([]type,len[,cap]) \u5176\u4e2dtype\u4e3a\u6570\u636e\u7c7b\u578b, len\u4e3a\u957f\u5ea6,\u4e00\u5b9a\u8981\u8bbe\u7f6e cap\u53ef\u9009\u9879,\u4e3a\u5207\u7247\u5bb9\u91cf,\u8981\u6c42can>=len. func main () { var slice [] float64 = make ([] float64 , 5 , 10 ) slice [ 1 ] = 10 slice [ 3 ] = 20 fmt . Println ( slice ) fmt . Println ( len ( slice )) fmt . Println ( cap ( slice )) } >> > [ 0 10 0 20 0 ] 5 10 \u8bf4\u660e: \u901a\u8fc7make\u65b9\u5f0f\u521b\u5efa\u5207\u7247\u53ef\u4ee5\u624b\u52a8\u6307\u5b9a\u5207\u7247\u7684\u5927\u5c0f\u548c\u5bb9\u91cf \u5982\u679c\u6ca1\u6709\u7ed9\u5207\u7247\u7684\u5404\u4e2a\u5143\u7d20\u8d4b\u503c,\u5c31\u4f1a\u4f7f\u7528\u9ed8\u8ba4\u503c int,float \u2192 0 string \u2192 \"\" bool \u2192 false \u901a\u8fc7make\u65b9\u5f0f\u521b\u5efa\u7684\u5207\u7247\u5bf9\u5e94\u7684\u6570\u7ec4\u662f\u7531make\u5e95\u5c42\u7ef4\u62a4,\u5bf9\u5916\u4e0d\u53ef\u89c1,\u53ea\u80fd\u901a\u8fc7slice\u53bb\u8bbf\u95ee\u5404\u4e2a\u5143\u7d20. \u65b9\u5f0f3 \u00b6 \u5b9a\u4e49\u4e00\u4e2a\u5207\u7247,\u76f4\u63a5\u6307\u5b9a\u5177\u4f53\u6570\u7ec4,\u4f7f\u7528\u539f\u7406\u7c7b\u4f3cmake\u65b9\u5f0f. func main () { var strSlice [] string = [] string { \"tom\" , \"jerry\" , \"james\" } fmt . Println ( strSlice ) fmt . Println ( len ( strSlice )) fmt . Println ( cap ( strSlice )) } >> > [ tom jerry james ] 3 3 \u6b64\u65b9\u6cd5\u5927\u6982\u636e,cap == len \u65b9\u5f0f1,2 \u7684\u533a\u522b \u00b6 \u65b9\u5f0f1,\u76f4\u63a5\u5f15\u7528\u6570\u7ec4,\u6b64\u6570\u7ec4\u5b9e\u73b0\u5b58\u5728,\u7a0b\u5e8f\u5458\u53ef\u89c1. \u65b9\u5f0f2,\u901a\u8fc7make\u6765\u521b\u5efa\u5207\u7247,make\u4e5f\u4f1a\u521b\u5efa\u4e00\u4e2a\u6570\u7ec4,\u4f46\u662f\u6570\u7ec4\u7531\u5207\u7247\u5728\u5e95\u5c42\u8fdb\u884c\u7ef4\u62a4,\u7a0b\u5e8f\u5458\u65e0\u6cd5\u770b\u89c1\u8fd9\u4e2a\u6570\u7ec4. \u5207\u7247\u7684\u5c5e\u6027 \u00b6 type:\u5207\u7247\u4e2d\u7684\u6570\u636e\u7684\u6570\u636e\u7c7b\u578b len:\u5207\u7247\u4e2d\u6570\u636e\u7684\u4e2a\u6570 cap:\u6307\u5b9a\u5207\u7247\u7684\u5bb9\u91cf,\u5982\u679c\u624b\u52a8\u5206\u914d,\u9700\u8981\u4fdd\u8bc1cap>=len.\u52a8\u6001\u5206\u914d. \u5207\u7247\u7684\u672c\u8d28 \u00b6 \u5207\u7247\u7684\u672c\u8d28\u5c31\u662f\u5bf9\u5e95\u5c42\u6570\u7ec4\u7684\u5c01\u88c5,\u5305\u542b\u4e09\u4e2a\u6027\u8d28,\u5e95\u5c42\u6570\u7ec4\u7684\u6307\u9488,\u5207\u7247\u7684\u957f\u5ea6(len)\u548c\u5207\u7247\u7684\u5bb9\u91cf(cap) cap\u52a8\u6001\u5206\u914d,\u82e5\u7531\u65b9\u6cd51\u6570\u7ec4\u5f97\u5230\u7684\u5207\u7247,cap\u503c\u4e3a\u5f53\u524d\u6307\u9488\u5230\u672b\u5c3e\u7684\u6570\u636e\u957f\u5ea6, \u82e5\u7531\u65b9\u6cd53\u76f4\u63a5\u5f97\u5230,cap= len \u5207\u7247\u5728\u5185\u5b58\u7684\u5f62\u5f0f \u00b6 slice\u662f\u4e00\u4e2a\u5f15\u7528\u7c7b\u578b, func main () { var intArr [ 5 ] int = [ ... ] int { 11 , 22 , 33 , 44 , 55 } slice := intArr [ 1 : 3 ] //Go\u4e2d\u7684\u8fd9\u79cd\u53d6\u503c\u4e0ePython\u4e2d\u4e00\u6837,\u5de6\u95ed\u53f3\u5f00 fmt . Printf ( \"intArr\u7684 %p\\n\" , & intArr [ 1 ]) fmt . Printf ( \"slice\u7684 %p\" , & slice [ 0 ]) } >> > intArr\u7684 0xc00000a398 slice\u7684 0xc00000a398 //\u4e24\u4e2a\u5730\u5740\u4e00\u81f4,\u8bf4\u660e\u662f\u5f15\u7528\u7c7b\u578b slice\u4ece\u5e95\u5c42\u6765\u8bf4,\u662f\u4e00\u4e2a\u6570\u636e\u7ed3\u6784(struct\u7ed3\u6784\u4f53) \u5e95\u5c42\u7684\u6784\u6210,\u53ef\u4ee5\u7406\u89e3\u4e3a\u7531\u4e09\u4e2a\u90e8\u5206\u6784\u6210,\u7b2c\u4e00\u4e2a\u90e8\u5206\u4e3a\u5176\u5f15\u7528\u7684\u6570\u636e\u7684\u6307\u9488ptr,\u7b2c\u4e8c\u90e8\u5206\u4e3a\u957f\u5ea6len,\u7b2c\u4e09\u90e8\u5206\u4e3a\u5bb9\u91cf\u5927\u5c0fcap. type slice struct { ptr * [ 2 ] int len int cap int } \u5207\u7247\u7684\u8d4b\u503c\u62f7\u8d1d \u00b6 func main () { s1 := make ([] int , 3 ) s2 := s1 s2 [ 0 ] = 100 fmt . Println ( s1 ) fmt . Println ( s2 ) } >> > [ 100 0 0 ] [ 100 0 0 ] \u8fd8\u662f\u90a3\u53e5\u8bdd,\u5207\u7247\u662f\u5f15\u7528\u7c7b\u578b,\u6240\u6709\u64cd\u4f5c\u90fd\u662f\u9488\u5bf9\u5730\u5740\u7684\u64cd\u4f5c. \u5207\u7247\u7684\u904d\u5386 \u00b6 \u540carray,\u4e24\u79cd\u65b9\u6cd5 \u5207\u7247\u7684\u52a8\u6001\u8ffd\u52a0append \u00b6 \u53ef\u4ee5\u901a\u8fc7append\u65b9\u6cd5\u6765\u5bf9\u5207\u7247\u8fdb\u884c\u52a8\u6001\u8ffd\u52a0,\u5c3e\u90e8\u8ffd\u52a0\u5230\u6307\u5b9a\u5207\u7247\u4e2d \u4e0d\u7528append\u65e0\u6cd5\u8d85\u8d8alen,\u8d85\u8d8a\u5c31\u62a5\u9519,\u4f7f\u7528append\u53ef\u4ee5\u52a8\u6001\u8ffd\u52a0,\u8d85\u8fc7len,\u63d0\u4f9b\u4e86\u4e00\u4e2a\u52a8\u6001\u8ffd\u52a0\u7684\u65b9\u6cd5. func main () { var numSlice [] int for i := 0 ; i < 5 ; i ++ { numSlice = append ( numSlice , i ) fmt . Printf ( \"%v len:%d cap:%d val[0]ptr:%p sliceptr:%p\\n\" , numSlice , len ( numSlice ), cap ( numSlice ), & numSlice [ 0 ], numSlice ) } } >> > [ 0 ] len : 1 cap : 1 val [ 0 ] ptr : 0xc0000100a0 sliceptr : 0xc0000100a0 [ 0 1 ] len : 2 cap : 2 val [ 0 ] ptr : 0xc0000100f0 sliceptr : 0xc0000100f0 [ 0 1 2 ] len : 3 cap : 4 val [ 0 ] ptr : 0xc00000c400 sliceptr : 0xc00000c400 [ 0 1 2 3 ] len : 4 cap : 4 val [ 0 ] ptr : 0xc00000c400 sliceptr : 0xc00000c400 [ 0 1 2 3 4 ] len : 5 cap : 8 val [ 0 ] ptr : 0xc00000e200 sliceptr : 0xc00000e200 append\u5728\u7ed9\u81ea\u5df1\u6dfb\u52a0\u503c\u7684\u65f6\u5019,\u5982\u679ccap\u6ca1\u6709\u8d85\u754c,\u5219\u5728\u539f\u5207\u7247\u672c\u5730\u66f4\u6539 \u8d85\u754c\u4e4b\u540e,\u91cd\u65b0\u52a8\u6001\u8bbe\u7f6ecap,\u521b\u5efa\u65b0\u7684\u5207\u7247. \u5f53append\u8d4b\u503c\u7ed9\u4e00\u4e2a\u65b0\u7684\u53d8\u91cf\u7684\u65f6\u5019,\u5f00\u8f9f\u65b0\u7684\u5185\u5b58. \u4e00\u6b21\u6027\u8ffd\u52a0\u591a\u4e2a\u503c \u00b6 func main () { var citySlice [] int citySlice = append ( citySlice , 1 , 2 , 3 ) fmt . Println ( citySlice ) } >> > [ 1 2 3 ] make\u65b9\u6cd5\u4e2d\u7684append \u00b6 func main () { s1 := make ([] int , 3 , 4 ) s1 = append ( s1 , 1 , 2 , 3 , 4 , 5 , 6 ) fmt . Printf ( \"%v len:%d cap%d\" , s1 , len ( s1 ), cap ( s1 )) } >> > [ 0 0 0 1 2 3 4 5 6 ] len : 9 cap10 make\u65b9\u6cd5\u521b\u5efa\u7684\u5207\u7247,\u9ed8\u8ba4\u5c3e\u90e8\u8ffd\u52a0,cap\u52a8\u6001\u6269\u5bb9 \u5207\u7247\u6269\u5bb9\u7b56\u7565 \u00b6 \u53ef\u4ee5\u901a\u8fc7\u67e5\u770b $GOROOT/src/runtime/slice.go \u6e90\u7801\uff0c\u5176\u4e2d\u6269\u5bb9\u76f8\u5173\u4ee3\u7801\u5982\u4e0b\uff1a newcap := old . cap doublecap := newcap + newcap if cap > doublecap { newcap = cap } else { if old . len < 1024 { newcap = doublecap } else { // Check 0 < newcap to detect overflow // and prevent an infinite loop. for 0 < newcap && newcap < cap { newcap += newcap / 4 } // Set newcap to the requested cap when // the newcap calculation overflowed. if newcap <= 0 { newcap = cap } } } \u4ece\u4e0a\u9762\u7684\u4ee3\u7801\u53ef\u4ee5\u770b\u51fa\u4ee5\u4e0b\u5185\u5bb9\uff1a \u9996\u5148\u5224\u65ad\uff0c\u5982\u679c\u65b0\u7533\u8bf7\u5bb9\u91cf\uff08cap\uff09\u5927\u4e8e2\u500d\u7684\u65e7\u5bb9\u91cf\uff08old.cap\uff09\uff0c\u6700\u7ec8\u5bb9\u91cf\uff08newcap\uff09\u5c31\u662f\u65b0\u7533\u8bf7\u7684\u5bb9\u91cf\uff08cap\uff09\u3002 \u5426\u5219\u5224\u65ad\uff0c\u5982\u679c\u65e7\u5207\u7247\u7684\u957f\u5ea6\u5c0f\u4e8e1024\uff0c\u5219\u6700\u7ec8\u5bb9\u91cf(newcap)\u5c31\u662f\u65e7\u5bb9\u91cf(old.cap)\u7684\u4e24\u500d\uff0c\u5373\uff08newcap=doublecap\uff09\uff0c \u5426\u5219\u5224\u65ad\uff0c\u5982\u679c\u65e7\u5207\u7247\u957f\u5ea6\u5927\u4e8e\u7b49\u4e8e1024\uff0c\u5219\u6700\u7ec8\u5bb9\u91cf\uff08newcap\uff09\u4ece\u65e7\u5bb9\u91cf\uff08old.cap\uff09\u5f00\u59cb\u5faa\u73af\u589e\u52a0\u539f\u6765\u7684\u00bc\uff0c\u5373\uff08newcap=old.cap,for {newcap += newcap/4}\uff09\u76f4\u5230\u6700\u7ec8\u5bb9\u91cf\uff08newcap\uff09\u5927\u4e8e\u7b49\u4e8e\u65b0\u7533\u8bf7\u7684\u5bb9\u91cf(cap)\uff0c\u5373\uff08newcap >= cap\uff09 \u5982\u679c\u6700\u7ec8\u5bb9\u91cf\uff08cap\uff09\u8ba1\u7b97\u503c\u6ea2\u51fa\uff0c\u5219\u6700\u7ec8\u5bb9\u91cf\uff08cap\uff09\u5c31\u662f\u65b0\u7533\u8bf7\u5bb9\u91cf\uff08cap\uff09\u3002 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5207\u7247\u6269\u5bb9\u8fd8\u4f1a\u6839\u636e\u5207\u7247\u4e2d\u5143\u7d20\u7684\u7c7b\u578b\u4e0d\u540c\u800c\u505a\u4e0d\u540c\u7684\u5904\u7406\uff0c\u6bd4\u5982 int \u548c string \u7c7b\u578b\u7684\u5904\u7406\u65b9\u5f0f\u5c31\u4e0d\u4e00\u6837\u3002 \u8bf4\u660e: \u00b6 append\u65b9\u6cd5\u53ea\u80fd\u5207\u7247\u6dfb\u52a0\u5207\u7247,\u4e0d\u80fd\u4f7f\u7528\u6570\u7ec4: cannot use a (type [3]int) as type []int in append \u5207\u7247\u7684copy\u65b9\u6cd5 \u00b6 Go\u8bed\u8a00\u5185\u5efa\u7684 copy() \u51fd\u6570\u53ef\u4ee5\u8fc5\u901f\u5730\u5c06\u4e00\u4e2a\u5207\u7247\u7684\u6570\u636e\u590d\u5236\u5230\u53e6\u5916\u4e00\u4e2a\u5207\u7247\u7a7a\u95f4\u4e2d\uff0c copy() \u51fd\u6570\u7684\u4f7f\u7528\u683c\u5f0f\u5982\u4e0b\uff1a copy ( destSlice, srcSlice [] T ) \u5176\u4e2d\uff1a destSlice: \u76ee\u6807\u5207\u7247 srcSlice: \u6570\u636e\u6765\u6e90\u5207\u7247 func main () { a := [] int { 1 , 2 , 3 , 4 , 5 } c := make ([] int , 5 ) copy ( c , a ) fmt . Println ( a ) fmt . Println ( c ) c [ 0 ] = 0 fmt . Println ( a ) fmt . Println ( c ) } >> > [ 1 2 3 4 5 ] [ 1 2 3 4 5 ] [ 1 2 3 4 5 ] [ 0 2 3 4 5 ] ---------------------------- func main () { a := [] int { 1 , 2 , 3 , 4 , 5 } c := make ([] int , 6 ) fmt . Println ( a ) fmt . Println ( c ) copy ( c , a ) fmt . Println ( a ) fmt . Println ( c ) } >> > [ 1 2 3 4 5 ] [ 0 0 0 0 0 0 ] [ 1 2 3 4 5 ] [ 1 2 3 4 5 0 ] ----------------------------- func main () { a := [] int { 1 , 2 , 3 , 4 , 5 } c := make ([] int , 4 ) fmt . Println ( a ) fmt . Println ( c ) copy ( c , a ) fmt . Println ( a ) fmt . Println ( c ) } >> > [ 1 2 3 4 5 ] [ 0 0 0 0 ] [ 1 2 3 4 5 ] [ 1 2 3 4 ] \u6ce8\u610f: copy\u662f\u7528\u540e\u9762\u5207\u7247\u7684\u503c\u8986\u76d6\u6389\u4e86\u524d\u9762\u5207\u7247\u7684\u503c, d\u5207\u7247\u82e5\u957f\u5ea6\u5c0f\u4e8es\u5207\u7247,\u53ea\u8986\u76d6\u5bf9\u5e94\u4f4d\u6570\u7684\u503c,\u4e0d\u4f1a\u52a8\u6001\u6269\u5bb9. d\u5207\u7247\u82e5\u957f\u5ea6\u5927\u4e8es\u5207\u7247,\u53ea\u8986\u76d6\u5bf9\u5e94\u4f4d\u6570\u7684\u503c,\u5176\u4f59\u4f4d\u4e0d\u53d8. \u5207\u7247\u7c7b\u578b\u624d\u53ef\u4ee5copy,\u6570\u7ec4\u4e0d\u884c. \u5207\u7247\u7684\u5220\u9664 \u00b6 Go\u8bed\u8a00\u4e2d\u5e76\u6ca1\u6709\u5220\u9664\u5207\u7247\u5143\u7d20\u7684\u4e13\u7528\u65b9\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5207\u7247\u672c\u8eab\u7684\u7279\u6027\u6765\u5220\u9664\u5143\u7d20\u3002 func main () { a := [] int { 1 , 2 , 3 , 4 , 5 } fmt . Println ( a ) a = append ( a [: 2 ], a [ 3 :] ... ) fmt . Println ( a ) } >> > [ 1 2 3 4 5 ] [ 1 2 4 5 ] \u8bf4\u660e: ... \u53ef\u4ee5\u5c06\u5207\u7247\u4e2d\u7684\u6570\u636e\u6253\u6563\u4f20\u5165,\u4e0d\u53ef\u4ee5\u6253\u6563\u6570\u7ec4. \u603b\u7ed3\uff1a\u8981\u4ece\u5207\u7247a\u4e2d\u5220\u9664\u7d22\u5f15\u4e3a index \u7684\u5143\u7d20\uff0c\u64cd\u4f5c\u65b9\u6cd5\u662f a = append(a[:index], a[index+1:]...) string\u548cslice \u00b6 string\u5e95\u5c42\u662f\u4e00\u4e2abyte\u6570\u7ec4,\u56e0\u6b64string\u4e5f\u53ef\u4ee5\u5207\u7247 func main () { str := \"abcdefg\" slice := str [: 5 ] fmt . Println ( slice ) } >> > abcde string\u662f\u4e0d\u53ef\u53d8\u7684,\u4e0d\u80fd\u901a\u8fc7str[0] = \"z\"\u65b9\u5f0f\u6765\u4fee\u6539\u5b57\u7b26\u4e32 cannot assign to str[0] \u5982\u679c\u9700\u8981\u4fee\u6539,\u9700\u8981\u5148\u5c06string==>[]byte\u6216\u8005[]rune\u4fee\u6539,\u518d\u91cd\u65b0\u8f6c\u6362\u6210string rune\u652f\u6301\u8f6c\u6362\u4e2d\u6587. func main () { str := \"abcdefg\" arr1 := [] byte ( str ) arr1 [ 0 ] = 'z' str = string ( arr1 ) fmt . Println ( str ) } >> > zbcdefg -------------------------------- func main () { str := \"abcdefg\" arr1 := [] rune ( str ) arr1 [ 0 ] = '\u6de6' str = string ( arr1 ) fmt . Println ( str ) } >> > \u6de6bcdefg \u6ce8\u610f: \u6de6 \u4e5f\u662fbyte\u7c7b\u578b\u7684 '\u6de6' \u7ec6\u8282 \u00b6 \u5207\u7247\u521d\u59cb\u5316 val slice = arr[startindex:endindex] \u4ecearr\u6570\u636e\u7d22\u5f15\u4e3astartindex\u5f00\u59cb,\u5230endindex\u7ed3\u675f,\u5de6\u95ed\u53f3\u5f00 \u5207\u7247\u521d\u59cb\u5316\u65f6,\u4e0d\u53ef\u4ee5\u8d8a\u754c.\u8303\u56f4\u5728[0:len(arr)]\u4e4b\u95f4,\u4f46\u662f\u53ef\u4ee5\u52a8\u6001\u589e\u957f var slice = arr[0:end] \u53ef\u4ee5\u7b80\u5199 var slice = arr[:end] var slice = arr[start:len(arr)] \u53ef\u4ee5\u7b80\u5199\uff1a var slice = arr[start:] var slice = arr[0:len(arr)] \u53ef\u4ee5\u7b80\u5199: var slice = arr[:] cap\u662f\u4e00\u4e2a\u5185\u7f6e\u51fd\u6570,\u7528\u4e8e\u7edf\u8ba1\u5207\u7247\u7684\u5bb9\u91cf,\u5373\u6700\u5927\u53ef\u4ee5\u5b58\u653e\u591a\u5c11\u4e2a\u5143\u7d20. \u5207\u7247\u5b9a\u4e49\u4e4b\u540e,\u8fd8\u4e0d\u80fd\u4f7f\u7528,\u56e0\u4e3a\u5176\u672c\u8eab\u65f6\u4e00\u4e2a\u7a7a,\u9700\u8981\u8ba9\u5176\u5f15\u7528\u4e00\u4e2a\u6570\u7ec4\u6216\u8005make\u65b9\u6cd5\u521b\u5efa\u4e00\u4e2a\u5207\u7247\u6765\u9002\u4f7f\u7528. \u7ec3\u4e60: \u6590\u6ce2\u90a3\u5951\u8fdb\u5207\u7247 func fbn ( n int )([] uint64 ) { fbnSlice := make ([] uint64 , n ) fbnSlice [ 0 ] = 1 fbnSlice [ 1 ] = 1 for i := 2 ; i < n ; i ++ { fbnSlice [ i ] = fbnSlice [ i - 1 ] + fbnSlice [ i - 2 ] } return fbnSlice } func main () { fbnSlice := fbn ( 7 ) fmt . Println ( fbnSlice , fbnSlice [ 4 ]) } >> > [ 1 1 2 3 5 8 13 ] 5 \u5143\u7d20\u662fmap\u7684\u5207\u7247 \u00b6 slice of map,map\u5207\u7247 \u6ce8\u610f:\u6bcf\u4e2amap\u4f7f\u7528\u4e4b\u524d\u90fd\u8981\u5148make,\u5426\u5219\u4e0d\u80fd\u4f7f\u7528 func main () { var mapSlice = make ([] map [ string ] string , 3 ) for index , value := range mapSlice { fmt . Printf ( \"index:%d value:%v\\n\" , index , value ) } fmt . Println ( \"````````````````\" ) //\u5bf9\u5207\u7247\u4e2d\u7684map\u5143\u7d20\u8fdb\u884c\u521d\u59cb\u5316 mapSlice [ 0 ] = make ( map [ string ] string , 10 ) mapSlice [ 1 ] = make ( map [ string ] string , 10 ) mapSlice [ 0 ][ \"name\" ]= \"tom\" mapSlice [ 0 ][ \"password\" ]= \"111\" mapSlice [ 1 ][ \"name\" ]= \"jerry\" mapSlice [ 1 ][ \"password\" ]= \"222\" for index , value := range mapSlice { fmt . Printf ( \"index:%d value:%v\\n\" , index , value ) } } >> > index : 0 value : map [] index : 1 value : map [] index : 2 value : map [] \u200b ```````````````` index : 0 value : map [ name : tom password : 111 ] index : 1 value : map [ name : jerry password : 222 ] index : 2 value : map [] \u53ef\u4ee5\u4f7f\u7528append\u52a8\u6001\u6dfb\u52a0 \u5148\u5b9a\u4e49\u4e00\u4e2amap \u518d\u7528append\u65b9\u6cd5\u5c06map\u52a8\u6001\u6dfb\u52a0\u5230slice\u4e2d","title":"\u5207\u7247"},{"location":"Golang/%E5%88%87%E7%89%87/#slice","text":"\u5207\u7247(Slice)\u662f\u4e00\u4e2a\u62e5\u6709\u76f8\u540c\u7c7b\u578b\u5143\u7d20\u7684\u53ef\u53d8\u957f\u7684\u5e8f\u5217.\u5b83\u662f\u57fa\u4e8e\u6570\u7ec4\u7c7b\u578b\u505a\u7684\u4e00\u5c42\u5c01\u88c5.\u5b83\u975e\u5e38\u7075\u6d3b,\u652f\u6301\u81ea\u52a8\u6269\u5bb9. \u5207\u7247\u7684\u957f\u5ea6\u662f\u53ef\u4ee5\u53d8\u5316\u7684,\u56e0\u6b64\u5207\u7247\u662f\u4e00\u4e2a\u53ef\u4ee5\u52a8\u6001\u53d8\u5316\u7684\u6570\u7ec4. \u5207\u7247\u662f\u4e00\u4e2a\u6570\u7ec4\u7684\u5f15\u7528,\u6bcf\u90e8\u7ed3\u6784\u5305\u542b\u5730\u5740,\u957f\u5ea6\u548c\u5bb9\u91cf. \u4e00\u822c\u7528\u4e8e\u5feb\u901f\u5730\u64cd\u4f5c\u4e00\u5757\u6570\u636e\u96c6\u5408.","title":"\u5207\u7247Slice"},{"location":"Golang/%E5%88%87%E7%89%87/#_1","text":"","title":"\u5207\u7247\u7684\u5b9a\u4e49"},{"location":"Golang/%E5%88%87%E7%89%87/#_2","text":"var name [] T name\u4e3a\u53d8\u91cf\u540d, T\u8868\u793a\u5207\u7247\u4e2d\u7684\u5143\u7d20\u7c7b\u578b func main () { var a [] string //\u58f0\u660e\u4e00\u4e2a\u5b57\u7b26\u4e32\u5207\u7247 var b = [] int {} //\u58f0\u660e\u4e00\u4e2a\u6574\u578b\u5207\u7247\u5e76\u521d\u59cb\u5316 var c = [] bool { false , true } //\u58f0\u660e\u4e00\u4e2a\u5e03\u5c14\u5207\u7247\u5e76\u521d\u59cb\u5316 // var d = []bool{false,true} fmt . Println ( a ) fmt . Println ( b ) fmt . Println ( c ) fmt . Println ( a == nil ) fmt . Println ( b == nil ) fmt . Println ( c == nil ) // fmt.Println(c == d) //invalid operation: c == d (slice can only be compared to nil) } >> > [] [] [ false true ] true false false \u6ce8\u610f: \u5207\u7247\u4e4b\u95f4\u4e0d\u80fd\u8fdb\u884c\u503c\u6bd4\u8f83(\u8fdb\u884c == \u8fd0\u7b97) \u5207\u7247\u53ea\u80fd\u4e0enil\u6bd4\u8f83,\u8868\u793a\u8be5\u5207\u7247\u6ca1\u6709\u5e95\u5c42\u6570\u7ec4.\u4f46\u662f\u4e0d\u80fd\u8868\u793a\u8be5\u5207\u7247\u4e3a\u7a7a!!! \u5982\u679c\u8981\u5224\u65ad\u4e00\u4e2a\u5207\u7247\u662f\u5426\u4e3a\u7a7a,\u8981\u4f7f\u7528 len(s)==0 \u6765\u5224\u65ad.","title":"\u57fa\u672c\u8bed\u6cd5"},{"location":"Golang/%E5%88%87%E7%89%87/#_3","text":"","title":"\u5207\u7247\u7684\u4f7f\u7528"},{"location":"Golang/%E5%88%87%E7%89%87/#1","text":"\u5b9a\u4e49\u4e00\u4e2a\u5207\u7247,\u7136\u540e\u8ba9\u5207\u7247\u53bb\u5f15\u7528\u4e00\u4e2a\u5df2\u7ecf\u521b\u5efa\u597d\u7684\u6570\u7ec4 \u53e6\u5916,\u5207\u7247\u8fd8\u53ef\u4ee5\u901a\u8fc7\u5207\u7247\u5f97\u5230.(\u5207\u7247\u518d\u5207\u7247) func main () { //\u5207\u7247\u518d\u5207\u7247 a := [ ... ] string { \"\u5317\u4eac\" , \"\u4e0a\u6d77\" , \"\u5e7f\u5dde\" , \"\u6df1\u5733\" , \"\u6210\u90fd\" , \"\u91cd\u5e86\" } fmt . Printf ( \"a:%v type:%T len:%d cap:%d\\n\" , a , a , len ( a ), cap ( a )) b := a [ 1 : 3 ] fmt . Printf ( \"b:%v type:%T len:%d cap:%d\\n\" , b , b , len ( b ), cap ( b )) c := b [ 1 : 5 ] fmt . Printf ( \"c:%v type:%T len:%d cap:%d\\n\" , c , c , len ( c ), cap ( c )) } >> > a :[ \u5317\u4eac \u4e0a\u6d77 \u5e7f\u5dde \u6df1\u5733 \u6210\u90fd \u91cd\u5e86 ] type :[ 6 ] string len : 6 cap : 6 b :[ \u4e0a\u6d77 \u5e7f\u5dde ] type :[] string len : 2 cap : 5 c :[ \u5e7f\u5dde \u6df1\u5733 \u6210\u90fd \u91cd\u5e86 ] type :[] string len : 4 cap : 4","title":"\u65b9\u5f0f1"},{"location":"Golang/%E5%88%87%E7%89%87/#_4","text":"\u5207\u7247\u518d\u5207\u7247\u9700\u8981\u6ce8\u610f,\u7b2c\u4e8c\u6b21\u5207\u7247\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u5730\u5740\u4e3a\u7b2c\u4e00\u4e2a\u5207\u7247\u5143\u7d20\u7684\u9996\u5730\u5740.","title":"\u6ce8\u610f"},{"location":"Golang/%E5%88%87%E7%89%87/#2","text":"\u901a\u8fc7make\u6765\u521b\u5efa\u5207\u7247 \u57fa\u672c\u8bed\u6cd5 var \u5207\u7247\u540d []type = make([]type,len[,cap]) \u5176\u4e2dtype\u4e3a\u6570\u636e\u7c7b\u578b, len\u4e3a\u957f\u5ea6,\u4e00\u5b9a\u8981\u8bbe\u7f6e cap\u53ef\u9009\u9879,\u4e3a\u5207\u7247\u5bb9\u91cf,\u8981\u6c42can>=len. func main () { var slice [] float64 = make ([] float64 , 5 , 10 ) slice [ 1 ] = 10 slice [ 3 ] = 20 fmt . Println ( slice ) fmt . Println ( len ( slice )) fmt . Println ( cap ( slice )) } >> > [ 0 10 0 20 0 ] 5 10 \u8bf4\u660e: \u901a\u8fc7make\u65b9\u5f0f\u521b\u5efa\u5207\u7247\u53ef\u4ee5\u624b\u52a8\u6307\u5b9a\u5207\u7247\u7684\u5927\u5c0f\u548c\u5bb9\u91cf \u5982\u679c\u6ca1\u6709\u7ed9\u5207\u7247\u7684\u5404\u4e2a\u5143\u7d20\u8d4b\u503c,\u5c31\u4f1a\u4f7f\u7528\u9ed8\u8ba4\u503c int,float \u2192 0 string \u2192 \"\" bool \u2192 false \u901a\u8fc7make\u65b9\u5f0f\u521b\u5efa\u7684\u5207\u7247\u5bf9\u5e94\u7684\u6570\u7ec4\u662f\u7531make\u5e95\u5c42\u7ef4\u62a4,\u5bf9\u5916\u4e0d\u53ef\u89c1,\u53ea\u80fd\u901a\u8fc7slice\u53bb\u8bbf\u95ee\u5404\u4e2a\u5143\u7d20.","title":"\u65b9\u5f0f2"},{"location":"Golang/%E5%88%87%E7%89%87/#3","text":"\u5b9a\u4e49\u4e00\u4e2a\u5207\u7247,\u76f4\u63a5\u6307\u5b9a\u5177\u4f53\u6570\u7ec4,\u4f7f\u7528\u539f\u7406\u7c7b\u4f3cmake\u65b9\u5f0f. func main () { var strSlice [] string = [] string { \"tom\" , \"jerry\" , \"james\" } fmt . Println ( strSlice ) fmt . Println ( len ( strSlice )) fmt . Println ( cap ( strSlice )) } >> > [ tom jerry james ] 3 3 \u6b64\u65b9\u6cd5\u5927\u6982\u636e,cap == len","title":"\u65b9\u5f0f3"},{"location":"Golang/%E5%88%87%E7%89%87/#12","text":"\u65b9\u5f0f1,\u76f4\u63a5\u5f15\u7528\u6570\u7ec4,\u6b64\u6570\u7ec4\u5b9e\u73b0\u5b58\u5728,\u7a0b\u5e8f\u5458\u53ef\u89c1. \u65b9\u5f0f2,\u901a\u8fc7make\u6765\u521b\u5efa\u5207\u7247,make\u4e5f\u4f1a\u521b\u5efa\u4e00\u4e2a\u6570\u7ec4,\u4f46\u662f\u6570\u7ec4\u7531\u5207\u7247\u5728\u5e95\u5c42\u8fdb\u884c\u7ef4\u62a4,\u7a0b\u5e8f\u5458\u65e0\u6cd5\u770b\u89c1\u8fd9\u4e2a\u6570\u7ec4.","title":"\u65b9\u5f0f1,2 \u7684\u533a\u522b"},{"location":"Golang/%E5%88%87%E7%89%87/#_5","text":"type:\u5207\u7247\u4e2d\u7684\u6570\u636e\u7684\u6570\u636e\u7c7b\u578b len:\u5207\u7247\u4e2d\u6570\u636e\u7684\u4e2a\u6570 cap:\u6307\u5b9a\u5207\u7247\u7684\u5bb9\u91cf,\u5982\u679c\u624b\u52a8\u5206\u914d,\u9700\u8981\u4fdd\u8bc1cap>=len.\u52a8\u6001\u5206\u914d.","title":"\u5207\u7247\u7684\u5c5e\u6027"},{"location":"Golang/%E5%88%87%E7%89%87/#_6","text":"\u5207\u7247\u7684\u672c\u8d28\u5c31\u662f\u5bf9\u5e95\u5c42\u6570\u7ec4\u7684\u5c01\u88c5,\u5305\u542b\u4e09\u4e2a\u6027\u8d28,\u5e95\u5c42\u6570\u7ec4\u7684\u6307\u9488,\u5207\u7247\u7684\u957f\u5ea6(len)\u548c\u5207\u7247\u7684\u5bb9\u91cf(cap) cap\u52a8\u6001\u5206\u914d,\u82e5\u7531\u65b9\u6cd51\u6570\u7ec4\u5f97\u5230\u7684\u5207\u7247,cap\u503c\u4e3a\u5f53\u524d\u6307\u9488\u5230\u672b\u5c3e\u7684\u6570\u636e\u957f\u5ea6, \u82e5\u7531\u65b9\u6cd53\u76f4\u63a5\u5f97\u5230,cap= len","title":"\u5207\u7247\u7684\u672c\u8d28"},{"location":"Golang/%E5%88%87%E7%89%87/#_7","text":"slice\u662f\u4e00\u4e2a\u5f15\u7528\u7c7b\u578b, func main () { var intArr [ 5 ] int = [ ... ] int { 11 , 22 , 33 , 44 , 55 } slice := intArr [ 1 : 3 ] //Go\u4e2d\u7684\u8fd9\u79cd\u53d6\u503c\u4e0ePython\u4e2d\u4e00\u6837,\u5de6\u95ed\u53f3\u5f00 fmt . Printf ( \"intArr\u7684 %p\\n\" , & intArr [ 1 ]) fmt . Printf ( \"slice\u7684 %p\" , & slice [ 0 ]) } >> > intArr\u7684 0xc00000a398 slice\u7684 0xc00000a398 //\u4e24\u4e2a\u5730\u5740\u4e00\u81f4,\u8bf4\u660e\u662f\u5f15\u7528\u7c7b\u578b slice\u4ece\u5e95\u5c42\u6765\u8bf4,\u662f\u4e00\u4e2a\u6570\u636e\u7ed3\u6784(struct\u7ed3\u6784\u4f53) \u5e95\u5c42\u7684\u6784\u6210,\u53ef\u4ee5\u7406\u89e3\u4e3a\u7531\u4e09\u4e2a\u90e8\u5206\u6784\u6210,\u7b2c\u4e00\u4e2a\u90e8\u5206\u4e3a\u5176\u5f15\u7528\u7684\u6570\u636e\u7684\u6307\u9488ptr,\u7b2c\u4e8c\u90e8\u5206\u4e3a\u957f\u5ea6len,\u7b2c\u4e09\u90e8\u5206\u4e3a\u5bb9\u91cf\u5927\u5c0fcap. type slice struct { ptr * [ 2 ] int len int cap int }","title":"\u5207\u7247\u5728\u5185\u5b58\u7684\u5f62\u5f0f"},{"location":"Golang/%E5%88%87%E7%89%87/#_8","text":"func main () { s1 := make ([] int , 3 ) s2 := s1 s2 [ 0 ] = 100 fmt . Println ( s1 ) fmt . Println ( s2 ) } >> > [ 100 0 0 ] [ 100 0 0 ] \u8fd8\u662f\u90a3\u53e5\u8bdd,\u5207\u7247\u662f\u5f15\u7528\u7c7b\u578b,\u6240\u6709\u64cd\u4f5c\u90fd\u662f\u9488\u5bf9\u5730\u5740\u7684\u64cd\u4f5c.","title":"\u5207\u7247\u7684\u8d4b\u503c\u62f7\u8d1d"},{"location":"Golang/%E5%88%87%E7%89%87/#_9","text":"\u540carray,\u4e24\u79cd\u65b9\u6cd5","title":"\u5207\u7247\u7684\u904d\u5386"},{"location":"Golang/%E5%88%87%E7%89%87/#append","text":"\u53ef\u4ee5\u901a\u8fc7append\u65b9\u6cd5\u6765\u5bf9\u5207\u7247\u8fdb\u884c\u52a8\u6001\u8ffd\u52a0,\u5c3e\u90e8\u8ffd\u52a0\u5230\u6307\u5b9a\u5207\u7247\u4e2d \u4e0d\u7528append\u65e0\u6cd5\u8d85\u8d8alen,\u8d85\u8d8a\u5c31\u62a5\u9519,\u4f7f\u7528append\u53ef\u4ee5\u52a8\u6001\u8ffd\u52a0,\u8d85\u8fc7len,\u63d0\u4f9b\u4e86\u4e00\u4e2a\u52a8\u6001\u8ffd\u52a0\u7684\u65b9\u6cd5. func main () { var numSlice [] int for i := 0 ; i < 5 ; i ++ { numSlice = append ( numSlice , i ) fmt . Printf ( \"%v len:%d cap:%d val[0]ptr:%p sliceptr:%p\\n\" , numSlice , len ( numSlice ), cap ( numSlice ), & numSlice [ 0 ], numSlice ) } } >> > [ 0 ] len : 1 cap : 1 val [ 0 ] ptr : 0xc0000100a0 sliceptr : 0xc0000100a0 [ 0 1 ] len : 2 cap : 2 val [ 0 ] ptr : 0xc0000100f0 sliceptr : 0xc0000100f0 [ 0 1 2 ] len : 3 cap : 4 val [ 0 ] ptr : 0xc00000c400 sliceptr : 0xc00000c400 [ 0 1 2 3 ] len : 4 cap : 4 val [ 0 ] ptr : 0xc00000c400 sliceptr : 0xc00000c400 [ 0 1 2 3 4 ] len : 5 cap : 8 val [ 0 ] ptr : 0xc00000e200 sliceptr : 0xc00000e200 append\u5728\u7ed9\u81ea\u5df1\u6dfb\u52a0\u503c\u7684\u65f6\u5019,\u5982\u679ccap\u6ca1\u6709\u8d85\u754c,\u5219\u5728\u539f\u5207\u7247\u672c\u5730\u66f4\u6539 \u8d85\u754c\u4e4b\u540e,\u91cd\u65b0\u52a8\u6001\u8bbe\u7f6ecap,\u521b\u5efa\u65b0\u7684\u5207\u7247. \u5f53append\u8d4b\u503c\u7ed9\u4e00\u4e2a\u65b0\u7684\u53d8\u91cf\u7684\u65f6\u5019,\u5f00\u8f9f\u65b0\u7684\u5185\u5b58.","title":"\u5207\u7247\u7684\u52a8\u6001\u8ffd\u52a0append"},{"location":"Golang/%E5%88%87%E7%89%87/#_10","text":"func main () { var citySlice [] int citySlice = append ( citySlice , 1 , 2 , 3 ) fmt . Println ( citySlice ) } >> > [ 1 2 3 ]","title":"\u4e00\u6b21\u6027\u8ffd\u52a0\u591a\u4e2a\u503c"},{"location":"Golang/%E5%88%87%E7%89%87/#makeappend","text":"func main () { s1 := make ([] int , 3 , 4 ) s1 = append ( s1 , 1 , 2 , 3 , 4 , 5 , 6 ) fmt . Printf ( \"%v len:%d cap%d\" , s1 , len ( s1 ), cap ( s1 )) } >> > [ 0 0 0 1 2 3 4 5 6 ] len : 9 cap10 make\u65b9\u6cd5\u521b\u5efa\u7684\u5207\u7247,\u9ed8\u8ba4\u5c3e\u90e8\u8ffd\u52a0,cap\u52a8\u6001\u6269\u5bb9","title":"make\u65b9\u6cd5\u4e2d\u7684append"},{"location":"Golang/%E5%88%87%E7%89%87/#_11","text":"\u53ef\u4ee5\u901a\u8fc7\u67e5\u770b $GOROOT/src/runtime/slice.go \u6e90\u7801\uff0c\u5176\u4e2d\u6269\u5bb9\u76f8\u5173\u4ee3\u7801\u5982\u4e0b\uff1a newcap := old . cap doublecap := newcap + newcap if cap > doublecap { newcap = cap } else { if old . len < 1024 { newcap = doublecap } else { // Check 0 < newcap to detect overflow // and prevent an infinite loop. for 0 < newcap && newcap < cap { newcap += newcap / 4 } // Set newcap to the requested cap when // the newcap calculation overflowed. if newcap <= 0 { newcap = cap } } } \u4ece\u4e0a\u9762\u7684\u4ee3\u7801\u53ef\u4ee5\u770b\u51fa\u4ee5\u4e0b\u5185\u5bb9\uff1a \u9996\u5148\u5224\u65ad\uff0c\u5982\u679c\u65b0\u7533\u8bf7\u5bb9\u91cf\uff08cap\uff09\u5927\u4e8e2\u500d\u7684\u65e7\u5bb9\u91cf\uff08old.cap\uff09\uff0c\u6700\u7ec8\u5bb9\u91cf\uff08newcap\uff09\u5c31\u662f\u65b0\u7533\u8bf7\u7684\u5bb9\u91cf\uff08cap\uff09\u3002 \u5426\u5219\u5224\u65ad\uff0c\u5982\u679c\u65e7\u5207\u7247\u7684\u957f\u5ea6\u5c0f\u4e8e1024\uff0c\u5219\u6700\u7ec8\u5bb9\u91cf(newcap)\u5c31\u662f\u65e7\u5bb9\u91cf(old.cap)\u7684\u4e24\u500d\uff0c\u5373\uff08newcap=doublecap\uff09\uff0c \u5426\u5219\u5224\u65ad\uff0c\u5982\u679c\u65e7\u5207\u7247\u957f\u5ea6\u5927\u4e8e\u7b49\u4e8e1024\uff0c\u5219\u6700\u7ec8\u5bb9\u91cf\uff08newcap\uff09\u4ece\u65e7\u5bb9\u91cf\uff08old.cap\uff09\u5f00\u59cb\u5faa\u73af\u589e\u52a0\u539f\u6765\u7684\u00bc\uff0c\u5373\uff08newcap=old.cap,for {newcap += newcap/4}\uff09\u76f4\u5230\u6700\u7ec8\u5bb9\u91cf\uff08newcap\uff09\u5927\u4e8e\u7b49\u4e8e\u65b0\u7533\u8bf7\u7684\u5bb9\u91cf(cap)\uff0c\u5373\uff08newcap >= cap\uff09 \u5982\u679c\u6700\u7ec8\u5bb9\u91cf\uff08cap\uff09\u8ba1\u7b97\u503c\u6ea2\u51fa\uff0c\u5219\u6700\u7ec8\u5bb9\u91cf\uff08cap\uff09\u5c31\u662f\u65b0\u7533\u8bf7\u5bb9\u91cf\uff08cap\uff09\u3002 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5207\u7247\u6269\u5bb9\u8fd8\u4f1a\u6839\u636e\u5207\u7247\u4e2d\u5143\u7d20\u7684\u7c7b\u578b\u4e0d\u540c\u800c\u505a\u4e0d\u540c\u7684\u5904\u7406\uff0c\u6bd4\u5982 int \u548c string \u7c7b\u578b\u7684\u5904\u7406\u65b9\u5f0f\u5c31\u4e0d\u4e00\u6837\u3002","title":"\u5207\u7247\u6269\u5bb9\u7b56\u7565"},{"location":"Golang/%E5%88%87%E7%89%87/#_12","text":"append\u65b9\u6cd5\u53ea\u80fd\u5207\u7247\u6dfb\u52a0\u5207\u7247,\u4e0d\u80fd\u4f7f\u7528\u6570\u7ec4: cannot use a (type [3]int) as type []int in append","title":"\u8bf4\u660e:"},{"location":"Golang/%E5%88%87%E7%89%87/#copy","text":"Go\u8bed\u8a00\u5185\u5efa\u7684 copy() \u51fd\u6570\u53ef\u4ee5\u8fc5\u901f\u5730\u5c06\u4e00\u4e2a\u5207\u7247\u7684\u6570\u636e\u590d\u5236\u5230\u53e6\u5916\u4e00\u4e2a\u5207\u7247\u7a7a\u95f4\u4e2d\uff0c copy() \u51fd\u6570\u7684\u4f7f\u7528\u683c\u5f0f\u5982\u4e0b\uff1a copy ( destSlice, srcSlice [] T ) \u5176\u4e2d\uff1a destSlice: \u76ee\u6807\u5207\u7247 srcSlice: \u6570\u636e\u6765\u6e90\u5207\u7247 func main () { a := [] int { 1 , 2 , 3 , 4 , 5 } c := make ([] int , 5 ) copy ( c , a ) fmt . Println ( a ) fmt . Println ( c ) c [ 0 ] = 0 fmt . Println ( a ) fmt . Println ( c ) } >> > [ 1 2 3 4 5 ] [ 1 2 3 4 5 ] [ 1 2 3 4 5 ] [ 0 2 3 4 5 ] ---------------------------- func main () { a := [] int { 1 , 2 , 3 , 4 , 5 } c := make ([] int , 6 ) fmt . Println ( a ) fmt . Println ( c ) copy ( c , a ) fmt . Println ( a ) fmt . Println ( c ) } >> > [ 1 2 3 4 5 ] [ 0 0 0 0 0 0 ] [ 1 2 3 4 5 ] [ 1 2 3 4 5 0 ] ----------------------------- func main () { a := [] int { 1 , 2 , 3 , 4 , 5 } c := make ([] int , 4 ) fmt . Println ( a ) fmt . Println ( c ) copy ( c , a ) fmt . Println ( a ) fmt . Println ( c ) } >> > [ 1 2 3 4 5 ] [ 0 0 0 0 ] [ 1 2 3 4 5 ] [ 1 2 3 4 ] \u6ce8\u610f: copy\u662f\u7528\u540e\u9762\u5207\u7247\u7684\u503c\u8986\u76d6\u6389\u4e86\u524d\u9762\u5207\u7247\u7684\u503c, d\u5207\u7247\u82e5\u957f\u5ea6\u5c0f\u4e8es\u5207\u7247,\u53ea\u8986\u76d6\u5bf9\u5e94\u4f4d\u6570\u7684\u503c,\u4e0d\u4f1a\u52a8\u6001\u6269\u5bb9. d\u5207\u7247\u82e5\u957f\u5ea6\u5927\u4e8es\u5207\u7247,\u53ea\u8986\u76d6\u5bf9\u5e94\u4f4d\u6570\u7684\u503c,\u5176\u4f59\u4f4d\u4e0d\u53d8. \u5207\u7247\u7c7b\u578b\u624d\u53ef\u4ee5copy,\u6570\u7ec4\u4e0d\u884c.","title":"\u5207\u7247\u7684copy\u65b9\u6cd5"},{"location":"Golang/%E5%88%87%E7%89%87/#_13","text":"Go\u8bed\u8a00\u4e2d\u5e76\u6ca1\u6709\u5220\u9664\u5207\u7247\u5143\u7d20\u7684\u4e13\u7528\u65b9\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5207\u7247\u672c\u8eab\u7684\u7279\u6027\u6765\u5220\u9664\u5143\u7d20\u3002 func main () { a := [] int { 1 , 2 , 3 , 4 , 5 } fmt . Println ( a ) a = append ( a [: 2 ], a [ 3 :] ... ) fmt . Println ( a ) } >> > [ 1 2 3 4 5 ] [ 1 2 4 5 ] \u8bf4\u660e: ... \u53ef\u4ee5\u5c06\u5207\u7247\u4e2d\u7684\u6570\u636e\u6253\u6563\u4f20\u5165,\u4e0d\u53ef\u4ee5\u6253\u6563\u6570\u7ec4. \u603b\u7ed3\uff1a\u8981\u4ece\u5207\u7247a\u4e2d\u5220\u9664\u7d22\u5f15\u4e3a index \u7684\u5143\u7d20\uff0c\u64cd\u4f5c\u65b9\u6cd5\u662f a = append(a[:index], a[index+1:]...)","title":"\u5207\u7247\u7684\u5220\u9664"},{"location":"Golang/%E5%88%87%E7%89%87/#stringslice","text":"string\u5e95\u5c42\u662f\u4e00\u4e2abyte\u6570\u7ec4,\u56e0\u6b64string\u4e5f\u53ef\u4ee5\u5207\u7247 func main () { str := \"abcdefg\" slice := str [: 5 ] fmt . Println ( slice ) } >> > abcde string\u662f\u4e0d\u53ef\u53d8\u7684,\u4e0d\u80fd\u901a\u8fc7str[0] = \"z\"\u65b9\u5f0f\u6765\u4fee\u6539\u5b57\u7b26\u4e32 cannot assign to str[0] \u5982\u679c\u9700\u8981\u4fee\u6539,\u9700\u8981\u5148\u5c06string==>[]byte\u6216\u8005[]rune\u4fee\u6539,\u518d\u91cd\u65b0\u8f6c\u6362\u6210string rune\u652f\u6301\u8f6c\u6362\u4e2d\u6587. func main () { str := \"abcdefg\" arr1 := [] byte ( str ) arr1 [ 0 ] = 'z' str = string ( arr1 ) fmt . Println ( str ) } >> > zbcdefg -------------------------------- func main () { str := \"abcdefg\" arr1 := [] rune ( str ) arr1 [ 0 ] = '\u6de6' str = string ( arr1 ) fmt . Println ( str ) } >> > \u6de6bcdefg \u6ce8\u610f: \u6de6 \u4e5f\u662fbyte\u7c7b\u578b\u7684 '\u6de6'","title":"string\u548cslice"},{"location":"Golang/%E5%88%87%E7%89%87/#_14","text":"\u5207\u7247\u521d\u59cb\u5316 val slice = arr[startindex:endindex] \u4ecearr\u6570\u636e\u7d22\u5f15\u4e3astartindex\u5f00\u59cb,\u5230endindex\u7ed3\u675f,\u5de6\u95ed\u53f3\u5f00 \u5207\u7247\u521d\u59cb\u5316\u65f6,\u4e0d\u53ef\u4ee5\u8d8a\u754c.\u8303\u56f4\u5728[0:len(arr)]\u4e4b\u95f4,\u4f46\u662f\u53ef\u4ee5\u52a8\u6001\u589e\u957f var slice = arr[0:end] \u53ef\u4ee5\u7b80\u5199 var slice = arr[:end] var slice = arr[start:len(arr)] \u53ef\u4ee5\u7b80\u5199\uff1a var slice = arr[start:] var slice = arr[0:len(arr)] \u53ef\u4ee5\u7b80\u5199: var slice = arr[:] cap\u662f\u4e00\u4e2a\u5185\u7f6e\u51fd\u6570,\u7528\u4e8e\u7edf\u8ba1\u5207\u7247\u7684\u5bb9\u91cf,\u5373\u6700\u5927\u53ef\u4ee5\u5b58\u653e\u591a\u5c11\u4e2a\u5143\u7d20. \u5207\u7247\u5b9a\u4e49\u4e4b\u540e,\u8fd8\u4e0d\u80fd\u4f7f\u7528,\u56e0\u4e3a\u5176\u672c\u8eab\u65f6\u4e00\u4e2a\u7a7a,\u9700\u8981\u8ba9\u5176\u5f15\u7528\u4e00\u4e2a\u6570\u7ec4\u6216\u8005make\u65b9\u6cd5\u521b\u5efa\u4e00\u4e2a\u5207\u7247\u6765\u9002\u4f7f\u7528. \u7ec3\u4e60: \u6590\u6ce2\u90a3\u5951\u8fdb\u5207\u7247 func fbn ( n int )([] uint64 ) { fbnSlice := make ([] uint64 , n ) fbnSlice [ 0 ] = 1 fbnSlice [ 1 ] = 1 for i := 2 ; i < n ; i ++ { fbnSlice [ i ] = fbnSlice [ i - 1 ] + fbnSlice [ i - 2 ] } return fbnSlice } func main () { fbnSlice := fbn ( 7 ) fmt . Println ( fbnSlice , fbnSlice [ 4 ]) } >> > [ 1 1 2 3 5 8 13 ] 5","title":"\u7ec6\u8282"},{"location":"Golang/%E5%88%87%E7%89%87/#map","text":"slice of map,map\u5207\u7247 \u6ce8\u610f:\u6bcf\u4e2amap\u4f7f\u7528\u4e4b\u524d\u90fd\u8981\u5148make,\u5426\u5219\u4e0d\u80fd\u4f7f\u7528 func main () { var mapSlice = make ([] map [ string ] string , 3 ) for index , value := range mapSlice { fmt . Printf ( \"index:%d value:%v\\n\" , index , value ) } fmt . Println ( \"````````````````\" ) //\u5bf9\u5207\u7247\u4e2d\u7684map\u5143\u7d20\u8fdb\u884c\u521d\u59cb\u5316 mapSlice [ 0 ] = make ( map [ string ] string , 10 ) mapSlice [ 1 ] = make ( map [ string ] string , 10 ) mapSlice [ 0 ][ \"name\" ]= \"tom\" mapSlice [ 0 ][ \"password\" ]= \"111\" mapSlice [ 1 ][ \"name\" ]= \"jerry\" mapSlice [ 1 ][ \"password\" ]= \"222\" for index , value := range mapSlice { fmt . Printf ( \"index:%d value:%v\\n\" , index , value ) } } >> > index : 0 value : map [] index : 1 value : map [] index : 2 value : map [] \u200b ```````````````` index : 0 value : map [ name : tom password : 111 ] index : 1 value : map [ name : jerry password : 222 ] index : 2 value : map [] \u53ef\u4ee5\u4f7f\u7528append\u52a8\u6001\u6dfb\u52a0 \u5148\u5b9a\u4e49\u4e00\u4e2amap \u518d\u7528append\u65b9\u6cd5\u5c06map\u52a8\u6001\u6dfb\u52a0\u5230slice\u4e2d","title":"\u5143\u7d20\u662fmap\u7684\u5207\u7247"},{"location":"Golang/%E5%8C%85/","text":"\u5305 \u5305\u7684\u4f5c\u7528 \u5b9a\u4e49\u5305 \u53ef\u89c1\u6027 \u5305\u7684\u5bfc\u5165 \u5bfc\u5165\u540e\u4f7f\u7528 \u5355\u884c\u5bfc\u5165 \u591a\u884c\u5bfc\u5165 \u81ea\u5b9a\u4e49\u5305\u540d \u533f\u540d\u5305\u7684\u5bfc\u5165 \u6ce8\u610f\u4e8b\u9879 \u5305 \u00b6 \u5728\u5b9e\u9645\u5f00\u53d1\u4e2d,\u5f80\u5f80\u9700\u8981\u5728\u4e0d\u540c\u7684\u6587\u4ef6\u4e2d,\u53bb\u8c03\u7528\u5176\u4ed6\u6587\u4ef6\u4e2d\u5b9a\u4e49\u7684\u51fd\u6570, \u5305\u7684\u672c\u8d28,\u5c31\u662f\u521b\u5efa\u4e0d\u540c\u7684\u6587\u4ef6\u5939,\u6765\u5b58\u653e\u7a0b\u5e8f\u7684\u6587\u4ef6 \u5305\u7684\u4f5c\u7528 \u00b6 \u533a\u5206\u76f8\u540c\u540d\u5b57\u7684\u51fd\u6570,\u53d8\u91cf\u7b49\u6807\u8bc6\u7b26 \u5f53\u7a0b\u5e8f\u6587\u4ef6\u5f88\u591a\u65f6,\u65b9\u4fbf\u9879\u76ee\u7ba1\u7406 \u63a7\u5236\u51fd\u6570,\u53d8\u91cf\u7b49\u8bbf\u95ee\u8303\u56f4,\u5373\u4f5c\u7528\u57df \u5b9a\u4e49\u5305 \u00b6 package \u5305\u540d \u53ef\u89c1\u6027 \u00b6 \u5f53\u5728\u4e00\u4e2a\u5305\u4e2d\u5f15\u7528\u53e6\u4e00\u4e2a\u5305\u91cc\u7684\u6807\u8bc6\u7b26,\u8be5\u6807\u8bc6\u7b26\u5fc5\u987b\u662f\u5bf9\u5916\u53ef\u89c1\u7684(public).\u5728Go\u8bed\u8a00\u4e2d\u9700\u8981\u5c06\u6807\u8bc6\u7b26\u9996\u5b57\u6bcd\u5927\u5199\u5c31\u53ef\u4ee5\u8ba9\u6807\u8bc6\u7b26\u5bf9\u5916\u53ef\u89c1. \u7ed3\u6784\u4f53\u4e2d\u7684\u5b57\u6bb5\u540d\u548c\u63a5\u53e3\u4e2d\u7684\u65b9\u6cd5\u540d\u5982\u679c\u9996\u5b57\u6bcd\u5927\u5199,\u5916\u90e8\u5305\u53ef\u4ee5\u8bbf\u95ee\u8fd9\u4e9b\u5b57\u6bb5\u548c\u65b9\u6cd5. \u5305\u7684\u5bfc\u5165 \u00b6 import \"\u5305\u7684\u8def\u5f84\" \u5bfc\u5165\u540e\u4f7f\u7528 \u00b6 \u5305\u540d.\u51fd\u6570\u540d \u6ce8\u610f: import\u5bfc\u5165\u8bed\u53e5\u901a\u5e38\u653e\u5728\u6587\u4ef6\u5f00\u5934\u5305\u58f0\u660e\u8bed\u53e5\u7684\u4e0b\u9762 \u5bfc\u5165\u7684\u5305\u540d\u9700\u8981\u4f7f\u7528\u53cc\u5f15\u53f7\u62ec\u8d77\u6765 \u5305\u540d\u662f\u4ece $GOPATH/src/ \u540e\u9762\u5f00\u59cb\u8ba1\u7b97\u7684,\u4f7f\u7528 / \u8fdb\u884c\u8def\u5f84\u5206\u5272.\u4ee5\u5305\u6587\u4ef6\u5939\u4e3a\u7ed3\u5c3e Go\u4e2d\u8fdb\u5236\u5faa\u73af\u5bfc\u5165\u5305 \u5355\u884c\u5bfc\u5165 \u00b6 import \"\u53051\" import \"\u53052\" \u591a\u884c\u5bfc\u5165 \u00b6 import ( \"\u53051\" \"\u53052\" ) \u81ea\u5b9a\u4e49\u5305\u540d \u00b6 \u5728\u5bfc\u5165\u5305\u7684\u65f6\u5019,\u53ef\u4ee5\u4e3a\u5bfc\u5165\u7684\u5305\u8bbe\u7f6e\u522b\u540d,\u8bbe\u7f6e\u522b\u540d\u4e4b\u540e,\u539f\u8def\u5f84\u540d\u65e0\u6cd5\u4f7f\u7528,\u8c03\u7528\u65b9\u6cd5\u548c\u53d8\u91cf\u9700\u8981\u4f7f\u7528\u522b\u540d\u6765\u8c03\u7528. import \u522b\u540d \"\u5305\u7684\u8def\u5f84\" //\u5355\u884c import \"fmt\" import m \"gocode/study/func\" func main () { fmt . Println ( m . Add ( 10 , 20 )) } //\u591a\u884c import ( \"fmt\" m \"gocode/study/func\" ) func main () { fmt . Println ( m . Add ( 10 , 20 )) } \u533f\u540d\u5305\u7684\u5bfc\u5165 \u00b6 \u5982\u679c\u53ea\u5e0c\u671b\u5bfc\u5165\u5305,\u800c\u4e0d\u4f7f\u7528\u5305\u5185\u90e8\u7684\u6570\u636e,\u53ef\u4ee5\u4f7f\u7528\u533f\u540d\u5bfc\u5165\u5305. \u533f\u540d\u5bfc\u5165\u7684\u5305\u4e0e\u5176\u4ed6\u65b9\u5f0f\u5bfc\u5165\u7684\u5305\u4e00\u6837\u4f1a\u88ab\u7f16\u8bd1\u5230\u53ef\u6267\u884c\u6587\u4ef6\u4e2d. import _ \"\u5305\u7684\u8def\u5f84\" \u6ce8\u610f\u4e8b\u9879 \u00b6 \u4e00\u4e2a\u6587\u4ef6\u5939\u4e0b\u53ea\u80fd\u6709\u4e00\u4e2a\u5305,\u540c\u6837\u7684\u4e00\u4e2a\u5305\u7684\u6587\u4ef6\u4e0d\u80fd\u5728\u591a\u4e2a\u6587\u4ef6\u5939\u4e0b. \u4e00\u4e2a\u5305\u4e2d\u53ef\u4ee5\u6709\u591a\u4e2a .go \u6587\u4ef6,\u8fd9\u4e9b .go \u6587\u4ef6\u7684package \u540d \u5fc5\u987b\u4e00\u81f4(\u5efa\u8bae\u4e0e\u5305\u540d\u4e00\u81f4),\u65b9\u4fbf\u7ba1\u7406. \u5305\u540d\u53ef\u4ee5\u4e0d\u548c\u6587\u4ef6\u5939\u7684\u540d\u5b57\u4e00\u6837,\u5305\u540d\u4e0d\u80fd\u5305\u542b - \u7b26\u53f7 \u5305\u540d\u4e3amain\u7684\u5305\u4e3a\u5e94\u7528\u7a0b\u5e8f\u7684\u5165\u53e3,\u7f16\u8bd1\u4e0d\u542bmain\u5305\u7684\u6e90\u4ee3\u7801\u65f6,\u4e0d\u4f1a\u5f97\u5230\u53ef\u6267\u884c\u6587\u4ef6. package\u6307\u4ee4\u5728\u6587\u4ef6\u7b2c\u4e00\u884c,\u7136\u540e\u662fimport\u6307\u4ee4. \u540c\u4e00\u4e2a\u5305\u4e0b,\u4e0d\u80fd\u6709\u76f8\u540c\u7684\u51fd\u6570\u540d(\u5168\u5c40\u53d8\u91cf\u540d\u90fd\u4e0d\u53ef\u4ee5\u91cd\u590d),\u5426\u5219\u62a5\u91cd\u590d\u5b9a\u4e49. \u8c03\u7528\u65f6\u4f7f\u7528\u7684\u5305\u540d\u4e0d\u662f\u6587\u4ef6\u5939\u540d,\u4e5f\u4e0d\u662f .go \u6587\u4ef6\u7684\u6587\u4ef6\u540d,\u800c\u662f\u5305\u4e2d\u7b2c\u4e00\u884cpackage \u540e\u9762\u7684\u5305\u540d \u5f53main\u5305\u7f16\u8bd1\u5b8c\u6210\u540e,\u4f1a\u5728pkg\u6587\u4ef6\u5939\u4e2d\u751f\u6210 .a \u7684\u5e93\u6587\u4ef6(package\u4e0d\u662fmain\u7684\u6587\u4ef6\u53eb\u5e93\u6587\u4ef6) \u540c\u4e00\u5305\u4e0b\u4e0d\u540c .go \u6587\u4ef6,\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528\u5c0f\u5199\u53d8\u91cf\u540d. \u5927\u5c0f\u5199\u63a7\u5236\u7684\u662f\u5916\u90e8\u5305\u662f\u5426\u53ef\u4ee5\u8c03\u7528. \u5305\u53ef\u5b9a\u4e49\u5728\u4e0e\u9879\u76ee\u540c\u7ea7\u7684\u76ee\u5f55\u4e0b. src / gocade / demo / aaa \u6587\u4ef6\u5939\u540daaa \u6587\u4ef6\u540dbbb . go \u6587\u4ef6\u4e2dpackage ccc //\u82e5\u5bfc\u5165\u8fc7\u7a0b\u4e2d\u672a\u4f7f\u7528\u522b\u540d import \"gocode/demo/aaa\" ccc . Func () //\u5fc5\u987b\u4f7f\u7528package ccc \u540d\u6765\u8c03\u7528\u51fd\u6570,\u4e0eaaa,bbb\u65e0\u5173 //\u82e5\u5bfc\u5165\u8fc7\u7a0b\u4e2d\u4f7f\u7528\u522b\u540d,\u5219\u53ea\u5bfc\u5165\u81f3\u8be5\u5305\u7684\u6587\u4ef6\u5939\u540d,\u540e\u7eed\u53ea\u80fd\u4f7f\u7528\u522b\u540d.\u65b9\u6cd5\u8c03\u7528\u65b9\u6cd5 import f \"gocode/demo/aaa\" f . Func () //\u8ddfaaa,bbb,ccc\u5df2\u7ecf\u65e0\u5173","title":"\u5305"},{"location":"Golang/%E5%8C%85/#_1","text":"\u5728\u5b9e\u9645\u5f00\u53d1\u4e2d,\u5f80\u5f80\u9700\u8981\u5728\u4e0d\u540c\u7684\u6587\u4ef6\u4e2d,\u53bb\u8c03\u7528\u5176\u4ed6\u6587\u4ef6\u4e2d\u5b9a\u4e49\u7684\u51fd\u6570, \u5305\u7684\u672c\u8d28,\u5c31\u662f\u521b\u5efa\u4e0d\u540c\u7684\u6587\u4ef6\u5939,\u6765\u5b58\u653e\u7a0b\u5e8f\u7684\u6587\u4ef6","title":"\u5305"},{"location":"Golang/%E5%8C%85/#_2","text":"\u533a\u5206\u76f8\u540c\u540d\u5b57\u7684\u51fd\u6570,\u53d8\u91cf\u7b49\u6807\u8bc6\u7b26 \u5f53\u7a0b\u5e8f\u6587\u4ef6\u5f88\u591a\u65f6,\u65b9\u4fbf\u9879\u76ee\u7ba1\u7406 \u63a7\u5236\u51fd\u6570,\u53d8\u91cf\u7b49\u8bbf\u95ee\u8303\u56f4,\u5373\u4f5c\u7528\u57df","title":"\u5305\u7684\u4f5c\u7528"},{"location":"Golang/%E5%8C%85/#_3","text":"package \u5305\u540d","title":"\u5b9a\u4e49\u5305"},{"location":"Golang/%E5%8C%85/#_4","text":"\u5f53\u5728\u4e00\u4e2a\u5305\u4e2d\u5f15\u7528\u53e6\u4e00\u4e2a\u5305\u91cc\u7684\u6807\u8bc6\u7b26,\u8be5\u6807\u8bc6\u7b26\u5fc5\u987b\u662f\u5bf9\u5916\u53ef\u89c1\u7684(public).\u5728Go\u8bed\u8a00\u4e2d\u9700\u8981\u5c06\u6807\u8bc6\u7b26\u9996\u5b57\u6bcd\u5927\u5199\u5c31\u53ef\u4ee5\u8ba9\u6807\u8bc6\u7b26\u5bf9\u5916\u53ef\u89c1. \u7ed3\u6784\u4f53\u4e2d\u7684\u5b57\u6bb5\u540d\u548c\u63a5\u53e3\u4e2d\u7684\u65b9\u6cd5\u540d\u5982\u679c\u9996\u5b57\u6bcd\u5927\u5199,\u5916\u90e8\u5305\u53ef\u4ee5\u8bbf\u95ee\u8fd9\u4e9b\u5b57\u6bb5\u548c\u65b9\u6cd5.","title":"\u53ef\u89c1\u6027"},{"location":"Golang/%E5%8C%85/#_5","text":"import \"\u5305\u7684\u8def\u5f84\"","title":"\u5305\u7684\u5bfc\u5165"},{"location":"Golang/%E5%8C%85/#_6","text":"\u5305\u540d.\u51fd\u6570\u540d \u6ce8\u610f: import\u5bfc\u5165\u8bed\u53e5\u901a\u5e38\u653e\u5728\u6587\u4ef6\u5f00\u5934\u5305\u58f0\u660e\u8bed\u53e5\u7684\u4e0b\u9762 \u5bfc\u5165\u7684\u5305\u540d\u9700\u8981\u4f7f\u7528\u53cc\u5f15\u53f7\u62ec\u8d77\u6765 \u5305\u540d\u662f\u4ece $GOPATH/src/ \u540e\u9762\u5f00\u59cb\u8ba1\u7b97\u7684,\u4f7f\u7528 / \u8fdb\u884c\u8def\u5f84\u5206\u5272.\u4ee5\u5305\u6587\u4ef6\u5939\u4e3a\u7ed3\u5c3e Go\u4e2d\u8fdb\u5236\u5faa\u73af\u5bfc\u5165\u5305","title":"\u5bfc\u5165\u540e\u4f7f\u7528"},{"location":"Golang/%E5%8C%85/#_7","text":"import \"\u53051\" import \"\u53052\"","title":"\u5355\u884c\u5bfc\u5165"},{"location":"Golang/%E5%8C%85/#_8","text":"import ( \"\u53051\" \"\u53052\" )","title":"\u591a\u884c\u5bfc\u5165"},{"location":"Golang/%E5%8C%85/#_9","text":"\u5728\u5bfc\u5165\u5305\u7684\u65f6\u5019,\u53ef\u4ee5\u4e3a\u5bfc\u5165\u7684\u5305\u8bbe\u7f6e\u522b\u540d,\u8bbe\u7f6e\u522b\u540d\u4e4b\u540e,\u539f\u8def\u5f84\u540d\u65e0\u6cd5\u4f7f\u7528,\u8c03\u7528\u65b9\u6cd5\u548c\u53d8\u91cf\u9700\u8981\u4f7f\u7528\u522b\u540d\u6765\u8c03\u7528. import \u522b\u540d \"\u5305\u7684\u8def\u5f84\" //\u5355\u884c import \"fmt\" import m \"gocode/study/func\" func main () { fmt . Println ( m . Add ( 10 , 20 )) } //\u591a\u884c import ( \"fmt\" m \"gocode/study/func\" ) func main () { fmt . Println ( m . Add ( 10 , 20 )) }","title":"\u81ea\u5b9a\u4e49\u5305\u540d"},{"location":"Golang/%E5%8C%85/#_10","text":"\u5982\u679c\u53ea\u5e0c\u671b\u5bfc\u5165\u5305,\u800c\u4e0d\u4f7f\u7528\u5305\u5185\u90e8\u7684\u6570\u636e,\u53ef\u4ee5\u4f7f\u7528\u533f\u540d\u5bfc\u5165\u5305. \u533f\u540d\u5bfc\u5165\u7684\u5305\u4e0e\u5176\u4ed6\u65b9\u5f0f\u5bfc\u5165\u7684\u5305\u4e00\u6837\u4f1a\u88ab\u7f16\u8bd1\u5230\u53ef\u6267\u884c\u6587\u4ef6\u4e2d. import _ \"\u5305\u7684\u8def\u5f84\"","title":"\u533f\u540d\u5305\u7684\u5bfc\u5165"},{"location":"Golang/%E5%8C%85/#_11","text":"\u4e00\u4e2a\u6587\u4ef6\u5939\u4e0b\u53ea\u80fd\u6709\u4e00\u4e2a\u5305,\u540c\u6837\u7684\u4e00\u4e2a\u5305\u7684\u6587\u4ef6\u4e0d\u80fd\u5728\u591a\u4e2a\u6587\u4ef6\u5939\u4e0b. \u4e00\u4e2a\u5305\u4e2d\u53ef\u4ee5\u6709\u591a\u4e2a .go \u6587\u4ef6,\u8fd9\u4e9b .go \u6587\u4ef6\u7684package \u540d \u5fc5\u987b\u4e00\u81f4(\u5efa\u8bae\u4e0e\u5305\u540d\u4e00\u81f4),\u65b9\u4fbf\u7ba1\u7406. \u5305\u540d\u53ef\u4ee5\u4e0d\u548c\u6587\u4ef6\u5939\u7684\u540d\u5b57\u4e00\u6837,\u5305\u540d\u4e0d\u80fd\u5305\u542b - \u7b26\u53f7 \u5305\u540d\u4e3amain\u7684\u5305\u4e3a\u5e94\u7528\u7a0b\u5e8f\u7684\u5165\u53e3,\u7f16\u8bd1\u4e0d\u542bmain\u5305\u7684\u6e90\u4ee3\u7801\u65f6,\u4e0d\u4f1a\u5f97\u5230\u53ef\u6267\u884c\u6587\u4ef6. package\u6307\u4ee4\u5728\u6587\u4ef6\u7b2c\u4e00\u884c,\u7136\u540e\u662fimport\u6307\u4ee4. \u540c\u4e00\u4e2a\u5305\u4e0b,\u4e0d\u80fd\u6709\u76f8\u540c\u7684\u51fd\u6570\u540d(\u5168\u5c40\u53d8\u91cf\u540d\u90fd\u4e0d\u53ef\u4ee5\u91cd\u590d),\u5426\u5219\u62a5\u91cd\u590d\u5b9a\u4e49. \u8c03\u7528\u65f6\u4f7f\u7528\u7684\u5305\u540d\u4e0d\u662f\u6587\u4ef6\u5939\u540d,\u4e5f\u4e0d\u662f .go \u6587\u4ef6\u7684\u6587\u4ef6\u540d,\u800c\u662f\u5305\u4e2d\u7b2c\u4e00\u884cpackage \u540e\u9762\u7684\u5305\u540d \u5f53main\u5305\u7f16\u8bd1\u5b8c\u6210\u540e,\u4f1a\u5728pkg\u6587\u4ef6\u5939\u4e2d\u751f\u6210 .a \u7684\u5e93\u6587\u4ef6(package\u4e0d\u662fmain\u7684\u6587\u4ef6\u53eb\u5e93\u6587\u4ef6) \u540c\u4e00\u5305\u4e0b\u4e0d\u540c .go \u6587\u4ef6,\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528\u5c0f\u5199\u53d8\u91cf\u540d. \u5927\u5c0f\u5199\u63a7\u5236\u7684\u662f\u5916\u90e8\u5305\u662f\u5426\u53ef\u4ee5\u8c03\u7528. \u5305\u53ef\u5b9a\u4e49\u5728\u4e0e\u9879\u76ee\u540c\u7ea7\u7684\u76ee\u5f55\u4e0b. src / gocade / demo / aaa \u6587\u4ef6\u5939\u540daaa \u6587\u4ef6\u540dbbb . go \u6587\u4ef6\u4e2dpackage ccc //\u82e5\u5bfc\u5165\u8fc7\u7a0b\u4e2d\u672a\u4f7f\u7528\u522b\u540d import \"gocode/demo/aaa\" ccc . Func () //\u5fc5\u987b\u4f7f\u7528package ccc \u540d\u6765\u8c03\u7528\u51fd\u6570,\u4e0eaaa,bbb\u65e0\u5173 //\u82e5\u5bfc\u5165\u8fc7\u7a0b\u4e2d\u4f7f\u7528\u522b\u540d,\u5219\u53ea\u5bfc\u5165\u81f3\u8be5\u5305\u7684\u6587\u4ef6\u5939\u540d,\u540e\u7eed\u53ea\u80fd\u4f7f\u7528\u522b\u540d.\u65b9\u6cd5\u8c03\u7528\u65b9\u6cd5 import f \"gocode/demo/aaa\" f . Func () //\u8ddfaaa,bbb,ccc\u5df2\u7ecf\u65e0\u5173","title":"\u6ce8\u610f\u4e8b\u9879"},{"location":"Golang/%E5%8F%98%E9%87%8F%E5%92%8C%E5%B8%B8%E9%87%8F/","text":"\u53d8\u91cf \u53d8\u91cf\u4f7f\u7528\u7684\u57fa\u672c\u6b65\u9aa4 \u53d8\u91cf\u7684\u58f0\u660e\uff0c\u521d\u59cb\u5316\u548c\u8d4b\u503c \u58f0\u660e\u53d8\u91cf \u521d\u59cb\u5316\u53d8\u91cf \u7ed9\u53d8\u91cf\u8d4b\u503c \u53d8\u91cf\u7684\u521d\u59cb\u5316\u683c\u5f0f \u53d8\u91cf\u6807\u51c6\u5b9a\u4e49\u521d\u59cb\u5316\u683c\u5f0f \u7f16\u8bd1\u5668\u63a8\u5230\u7c7b\u578b\u7684\u683c\u5f0f \u77ed\u53d8\u91cf\u58f0\u660e\u5e76\u521d\u59cb\u5316 \u53d8\u91cf\u4f7f\u7528\u6ce8\u610f\u4e8b\u9879 \u6ce8\u610f\uff1a \u7a0b\u5e8f\u4e2d+\u53f7\u7684\u4f7f\u7528 \u5e38\u91cf \u7b80\u6d01\u7684\u5199\u6cd5 \u4e13\u4e1a\u7684\u5199\u6cd5 \u65e0\u7c7b\u578b\u5e38\u91cf \u53d8\u91cf \u00b6 \u53d8\u91cf\u662f\u7a0b\u5e8f\u7684\u57fa\u672c\u7ec4\u6210\u5355\u4f4d \u53d8\u91cf\u662f\u5185\u5b58\u4e2d\u4e00\u4e2a\u6570\u636e\u5b58\u50a8\u7a7a\u95f4\u7684\u8868\u793a\uff0c\u901a\u8fc7\u53d8\u91cf\u540d\u53ef\u4ee5\u8bbf\u95ee\u5230\u53d8\u91cf\u503c\u3002 \u53d8\u91cf\u4f7f\u7528\u7684\u57fa\u672c\u6b65\u9aa4 \u00b6 \u58f0\u660e\u53d8\u91cf\uff08\u5b9a\u4e49\u53d8\u91cf\uff09 \u8d4b\u503c \u4f7f\u7528 package main import \"fmt\" func main (){ var i int = 10 fmt . Println ( \"i=\" , i ) } >> > i = 10 \u53d8\u91cf\u7684\u58f0\u660e\uff0c\u521d\u59cb\u5316\u548c\u8d4b\u503c \u00b6 \u58f0\u660e\u53d8\u91cf \u00b6 \u57fa\u672c\u8bed\u6cd5\uff1avar \u53d8\u91cf\u540d \u6570\u636e\u7c7b\u578b var a int \u58f0\u660e\u4e86\u4e00\u4e2a\u6574\u578b\u53d8\u91cfa \u521d\u59cb\u5316\u53d8\u91cf \u00b6 \u5728\u58f0\u660e\u7684\u65f6\u5019\u5c31\u7ed9\u4e00\u4e2a\u503c var a int = 5 \u521d\u59cb\u5316\u4e00\u4e2a\u6574\u578b\u53d8\u91cf\u4f7f\u5176\u503c\u4e3a5 \u5982\u679c\u58f0\u660e\u65f6\u5c31\u76f4\u63a5\u8d4b\u503c\uff0c\u53ef\u7701\u7565\u6570\u636e\u7c7b\u578b \u200b var b = 400 \u7ed9\u53d8\u91cf\u8d4b\u503c \u00b6 \u5148\u58f0\u660e\u4e86\u53d8\u91cfvar num int \u6b64\u65f6\u4f7f\u7528\u9ed8\u8ba4\u503c\u4e3a0 \u7136\u540e\u8d4b\u503c num= 100 \u53d8\u91cf\u7684\u521d\u59cb\u5316\u683c\u5f0f \u00b6 \u53d8\u91cf\u6807\u51c6\u5b9a\u4e49\u521d\u59cb\u5316\u683c\u5f0f \u00b6 var a int = 10 \u7f16\u8bd1\u5668\u63a8\u5230\u7c7b\u578b\u7684\u683c\u5f0f \u00b6 var b = 10 \u77ed\u53d8\u91cf\u58f0\u660e\u5e76\u521d\u59cb\u5316 \u00b6 c := 10 \u53d8\u91cf\u4f7f\u7528\u6ce8\u610f\u4e8b\u9879 \u00b6 golang\u4e2d\u53d8\u91cf\u8981\u5148\u58f0\u660e\u518d\u4f7f\u7528 \u53d8\u91cf\u8868\u793a\u5185\u5b58\u4e2d\u7684\u4e00\u4e2a\u5b58\u50a8\u533a\u57df \u8be5\u533a\u57df\u6709\u81ea\u5df1\u7684\u540d\u79f0\uff08\u53d8\u91cf\u540d\uff09\u548c\u7c7b\u578b\uff08\u6570\u636e\u7c7b\u578b\uff09 Golang\u53d8\u91cf\u58f0\u660e\u7684\u4e09\u79cd\u65b9\u5f0f\uff1a \u6307\u5b9a\u53d8\u91cf\u7c7b\u578b\uff0c\u58f0\u660e\u540e\u82e5\u4e0d\u8d4b\u503c\uff0c\u4f7f\u7528\u9ed8\u8ba4\u503c \u6839\u636e\u503c\u81ea\u52a8\u5224\u5b9a\u53d8\u91cf\u7c7b\u578b\uff08\u7c7b\u578b\u63a8\u5bfc\uff09 \u7701\u7565var \u6ce8\u610f \uff1a= \u5de6\u4fa7\u53d8\u91cf\u4e0d\u5e94\u8be5\u662f\u5df2\u7ecf\u58f0\u660e\u8fc7\u7684\uff0c\u5426\u5219\u4f1a\u5bfc\u81f4\u7f16\u8bd1\u9519\u8bef name := \"tom\" \u7b49\u4ef7\u4e8e var name string name = \"tom\" \u7b49\u4ef7\u4e8e var name = \"tom\" \u591a\u53d8\u91cf\u58f0\u660e \u5728\u53d8\u6210\u4e2d\uff0c\u6709\u4e8b\u9700\u8981\u4e00\u6b21\u6027\u58f0\u660e\u591a\u4e2a\u53d8\u91cf\uff0cgolang\u4e5f\u63d0\u4f9b\u8fd9\u6837\u7684\u8bed\u6cd5 \u65b9\u5f0f1 \u591a\u4e2a\u540c\u4e00\u6570\u636e\u7c7b\u578b var n1,n2,n3 int \u65b9\u5f0f2 \u591a\u4e2a\u4e0d\u540c\u6570\u636e\u7c7b\u578b var n1,name,n3 = 100,\"tom\",888 \u65b9\u5f0f3 \u7c7b\u578b\u63a8\u5bfc n1,name,n3 \uff1a= 100,\"tom\",888 \u7b49\u4ef7\u4e8e\u65b9\u5f0f2 \u6ce8\u610f\uff1a\u5728go\u4e2d\uff0c\u51fd\u6570\u5916\u58f0\u660e\u7684\u53d8\u91cf\u5c31\u662f\u5168\u5c40\u53d8\u91cf\uff0c \u5168\u5c40\u53d8\u91cf\u7684\u58f0\u660e var n1 = 100 var name = \"tom\" \u7b49\u4ef7\u4e8e var ( n1 = 100 name = \"tom\" ) \u5728\u8be5\u533a\u57df\u7684\u6570\u636e\u503c\u53ef\u4ee5\u5728\u7edf\u4e00\u7c7b\u578b\u8303\u56f4\u5185\u4e0d\u65ad\u53d8\u5316\uff0c\u5373\u540c\u6570\u636e\u7c7b\u578b\u53ef\u8986\u76d6\u8d4b\u503c \u53d8\u91cf\u5728\u540c\u4e00\u4e2a\u4f5c\u7528\u57df\u5185\u4e0d\u80fd\u91cd\u540d \u53d8\u91cf\u4e09\u8981\u7d20 \u53d8\u91cf=\u53d8\u91cf\u540d + \u503c+\u6570\u636e\u7c7b\u578b golang\u7684\u53d8\u91cf\u5982\u679c\u6ca1\u6709\u8d4b\u503c\uff0c\u7f16\u8bd1\u5668\u4f1a\u4f7f\u7528\u9ed8\u8ba4\u503c\uff0cint\uff0cfloat\u9ed8\u8ba40\uff0cstring\u9ed8\u8ba4\u4e3a\u7a7a\u4e32 \u6ce8\u610f\uff1a \u00b6 golang\u4e2d\u5b9a\u4e49\u53d8\u91cf\uff0c\u4f1a\u5148\u6839\u636e\u5f00\u8f9f\u5185\u5b58\u7a7a\u95f4\uff0c\u786e\u5b9a\u6570\u636e\u7c7b\u578b\uff0c\u7ed9\u5b9a\u9ed8\u8ba4\u503c\uff0c\u5728\u8d4b\u503c\u7684\u65f6\u5019\u518d\u5c06\u9ed8\u8ba4\u503c\u66f4\u6539\u4e3a\u88ab\u8d4b\u503c\u7684\u503c\u3002 golang\u4e2d := \u8868\u793a\uff0c\u5b9a\u4e49\u8d4b\u503c \u7a0b\u5e8f\u4e2d+\u53f7\u7684\u4f7f\u7528 \u00b6 \u5f53\u5de6\u53f3\u4e24\u8fb9\u90fd\u662f\u6570\u503c\u7c7b\u578b\u65f6\uff0c\u505a\u52a0\u6cd5\u8fd0\u7b97 \u5f53\u5de6\u53f3\u4e24\u8fb9\u90fd\u662f\u5b57\u7b26\u4e32\u7c7b\u578b\u65f6\uff0c\u505a\u5b57\u7b26\u4e32\u62fc\u63a5 \u6570\u5b57\u548c\u5b57\u7b26\u4e32\u4e0d\u80fd\u4f7f\u7528+\u53f7 (mismatched types string and int) \u5e38\u91cf \u00b6 \u5e38\u91cf\u4f7f\u7528const\u4fee\u6539 \u5e38\u91cf\u5728\u5b9a\u4e49\u7684\u65f6\u5019,\u5fc5\u987b\u521d\u59cb\u5316 \u5e38\u91cf\u4e0d\u80fd\u4fee\u6539 \u5e38\u91cf\u53ea\u80fd\u4fee\u9970bool,\u6570\u503c\u7c7b\u578b(in,float\u7cfb\u5217,),string\u7c7b\u578b \u8bed\u6cd5: const identifier [type] = value go\u4e2d\u6ca1\u6709\u89c4\u5b9a\u5e38\u91cf\u4e00\u5b9a\u8981\u5168\u5927\u5199,\u4f46\u662f\u4f9d\u7136\u901a\u8fc7\u9996\u5b57\u6bcd\u5927\u5c0f\u5199\u6765\u63a7\u5236\u5e38\u91cf\u7684\u8bbf\u95ee\u8303\u56f4. \u4e3e\u4f8b: const name = \"tom\" \u5bf9 const b = num /3 num\u4e3a\u53d8\u91cf,\u5219\u62a5\u9519 \u7b80\u6d01\u7684\u5199\u6cd5 \u00b6 const ( a = 1 b = 2 ) \u4e13\u4e1a\u7684\u5199\u6cd5 \u00b6 const ( a = iota //\u8868\u793aa\u8d4b\u503c\u4e3a0 b //b\u5728a\u7684\u57fa\u7840\u4e0a+1 c //c\u5728b\u7684\u57fa\u7840\u4e0a+1 ) fmt . Println ( a , b , c ) //0,1,2 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ const ( a = iota //\u8868\u793aa\u8d4b\u503c\u4e3a0 b = iota //b\u5728a\u7684\u57fa\u7840\u4e0a+1 c , d = iota , iota //c,d\u5728b\u7684\u57fa\u7840\u4e0a+1 ) fmt . Println ( a , b , c , d ) //0,1,2,2 iota\u53ea\u5728\u672cconst()\u7684\u62ec\u53f7\u4e2d\u8d77\u6548,\u51fa\u4e86\u62ec\u53f7\u7684iota\u91cd\u65b0\u4ece0\u5f00\u59cb \u65e0\u7c7b\u578b\u5e38\u91cf \u00b6 Go\u8bed\u8a00\u7684\u5e38\u91cf\u7684\u4e0d\u540c\u4e4b\u5904.\u5f88\u591a\u5e38\u91cf\u6ca1\u6709\u4e00\u4e2a\u660e\u786e\u7684\u57fa\u7840\u7c7b\u578b.\u7f16\u8bd1\u5668\u4e3a\u8fd9\u4e9b\u6ca1\u6709\u660e\u786e\u7684\u57fa\u7840\u7c7b\u578b\u7684\u6570\u5b57\u5e38\u91cf\u63d0\u4f9b\u6bd4\u57fa\u7840\u7c7b\u578b\u66f4\u9ad8\u7cbe\u5ea6\u7684\u7b97\u6570\u8fd0\u7b97.\u53ef\u4ee5\u8ba4\u4e3a\u81f3\u5c11\u6709256bit\u7684\u8fd0\u7b97\u7cbe\u5ea6.\u8fd9\u91cc\u6709\u516d\u79cd\u672a\u660e\u786e\u7c7b\u578b\u7684\u5e38\u91cf\u7c7b\u578b,\u5206\u522b\u65f6\u65e0\u7c7b\u578b\u7684\u5e03\u5c14\u578b,\u65e0\u7c7b\u578b\u7684\u6574\u6570,\u65e0\u7c7b\u578b\u7684\u6d6e\u70b9\u6570,\u65e0\u7c7b\u578b\u7684\u5b57\u7b26,\u65e0\u7c7b\u578b\u7684\u590d\u6570,\u65e0\u7c7b\u578b\u7684\u5b57\u7b26\u4e32. \u901a\u8fc7\u5ef6\u8fdf\u660e\u786e\u5e38\u91cf\u7684\u5177\u4f53\u7c7b\u578b,\u65e0\u7c7b\u578b\u7684\u5e38\u91cf\u4e0d\u4ec5\u53ef\u4ee5\u63d0\u4f9b\u66f4\u9ad8\u7684\u8fd0\u7b97\u7cbe\u5ea6,\u800c\u4e14\u53ef\u4ee5\u76f4\u63a5\u7528\u4e8e\u66f4\u591a\u7684\u8868\u8fbe\u5f0f\u800c\u4e0d\u9700\u8981\u663e\u5f0f\u7684\u7c7b\u578b\u8f6c\u6362.","title":"\u53d8\u91cf\u548c\u5e38\u91cf"},{"location":"Golang/%E5%8F%98%E9%87%8F%E5%92%8C%E5%B8%B8%E9%87%8F/#_1","text":"\u53d8\u91cf\u662f\u7a0b\u5e8f\u7684\u57fa\u672c\u7ec4\u6210\u5355\u4f4d \u53d8\u91cf\u662f\u5185\u5b58\u4e2d\u4e00\u4e2a\u6570\u636e\u5b58\u50a8\u7a7a\u95f4\u7684\u8868\u793a\uff0c\u901a\u8fc7\u53d8\u91cf\u540d\u53ef\u4ee5\u8bbf\u95ee\u5230\u53d8\u91cf\u503c\u3002","title":"\u53d8\u91cf"},{"location":"Golang/%E5%8F%98%E9%87%8F%E5%92%8C%E5%B8%B8%E9%87%8F/#_2","text":"\u58f0\u660e\u53d8\u91cf\uff08\u5b9a\u4e49\u53d8\u91cf\uff09 \u8d4b\u503c \u4f7f\u7528 package main import \"fmt\" func main (){ var i int = 10 fmt . Println ( \"i=\" , i ) } >> > i = 10","title":"\u53d8\u91cf\u4f7f\u7528\u7684\u57fa\u672c\u6b65\u9aa4"},{"location":"Golang/%E5%8F%98%E9%87%8F%E5%92%8C%E5%B8%B8%E9%87%8F/#_3","text":"","title":"\u53d8\u91cf\u7684\u58f0\u660e\uff0c\u521d\u59cb\u5316\u548c\u8d4b\u503c"},{"location":"Golang/%E5%8F%98%E9%87%8F%E5%92%8C%E5%B8%B8%E9%87%8F/#_4","text":"\u57fa\u672c\u8bed\u6cd5\uff1avar \u53d8\u91cf\u540d \u6570\u636e\u7c7b\u578b var a int \u58f0\u660e\u4e86\u4e00\u4e2a\u6574\u578b\u53d8\u91cfa","title":"\u58f0\u660e\u53d8\u91cf"},{"location":"Golang/%E5%8F%98%E9%87%8F%E5%92%8C%E5%B8%B8%E9%87%8F/#_5","text":"\u5728\u58f0\u660e\u7684\u65f6\u5019\u5c31\u7ed9\u4e00\u4e2a\u503c var a int = 5 \u521d\u59cb\u5316\u4e00\u4e2a\u6574\u578b\u53d8\u91cf\u4f7f\u5176\u503c\u4e3a5 \u5982\u679c\u58f0\u660e\u65f6\u5c31\u76f4\u63a5\u8d4b\u503c\uff0c\u53ef\u7701\u7565\u6570\u636e\u7c7b\u578b \u200b var b = 400","title":"\u521d\u59cb\u5316\u53d8\u91cf"},{"location":"Golang/%E5%8F%98%E9%87%8F%E5%92%8C%E5%B8%B8%E9%87%8F/#_6","text":"\u5148\u58f0\u660e\u4e86\u53d8\u91cfvar num int \u6b64\u65f6\u4f7f\u7528\u9ed8\u8ba4\u503c\u4e3a0 \u7136\u540e\u8d4b\u503c num= 100","title":"\u7ed9\u53d8\u91cf\u8d4b\u503c"},{"location":"Golang/%E5%8F%98%E9%87%8F%E5%92%8C%E5%B8%B8%E9%87%8F/#_7","text":"","title":"\u53d8\u91cf\u7684\u521d\u59cb\u5316\u683c\u5f0f"},{"location":"Golang/%E5%8F%98%E9%87%8F%E5%92%8C%E5%B8%B8%E9%87%8F/#_8","text":"var a int = 10","title":"\u53d8\u91cf\u6807\u51c6\u5b9a\u4e49\u521d\u59cb\u5316\u683c\u5f0f"},{"location":"Golang/%E5%8F%98%E9%87%8F%E5%92%8C%E5%B8%B8%E9%87%8F/#_9","text":"var b = 10","title":"\u7f16\u8bd1\u5668\u63a8\u5230\u7c7b\u578b\u7684\u683c\u5f0f"},{"location":"Golang/%E5%8F%98%E9%87%8F%E5%92%8C%E5%B8%B8%E9%87%8F/#_10","text":"c := 10","title":"\u77ed\u53d8\u91cf\u58f0\u660e\u5e76\u521d\u59cb\u5316"},{"location":"Golang/%E5%8F%98%E9%87%8F%E5%92%8C%E5%B8%B8%E9%87%8F/#_11","text":"golang\u4e2d\u53d8\u91cf\u8981\u5148\u58f0\u660e\u518d\u4f7f\u7528 \u53d8\u91cf\u8868\u793a\u5185\u5b58\u4e2d\u7684\u4e00\u4e2a\u5b58\u50a8\u533a\u57df \u8be5\u533a\u57df\u6709\u81ea\u5df1\u7684\u540d\u79f0\uff08\u53d8\u91cf\u540d\uff09\u548c\u7c7b\u578b\uff08\u6570\u636e\u7c7b\u578b\uff09 Golang\u53d8\u91cf\u58f0\u660e\u7684\u4e09\u79cd\u65b9\u5f0f\uff1a \u6307\u5b9a\u53d8\u91cf\u7c7b\u578b\uff0c\u58f0\u660e\u540e\u82e5\u4e0d\u8d4b\u503c\uff0c\u4f7f\u7528\u9ed8\u8ba4\u503c \u6839\u636e\u503c\u81ea\u52a8\u5224\u5b9a\u53d8\u91cf\u7c7b\u578b\uff08\u7c7b\u578b\u63a8\u5bfc\uff09 \u7701\u7565var \u6ce8\u610f \uff1a= \u5de6\u4fa7\u53d8\u91cf\u4e0d\u5e94\u8be5\u662f\u5df2\u7ecf\u58f0\u660e\u8fc7\u7684\uff0c\u5426\u5219\u4f1a\u5bfc\u81f4\u7f16\u8bd1\u9519\u8bef name := \"tom\" \u7b49\u4ef7\u4e8e var name string name = \"tom\" \u7b49\u4ef7\u4e8e var name = \"tom\" \u591a\u53d8\u91cf\u58f0\u660e \u5728\u53d8\u6210\u4e2d\uff0c\u6709\u4e8b\u9700\u8981\u4e00\u6b21\u6027\u58f0\u660e\u591a\u4e2a\u53d8\u91cf\uff0cgolang\u4e5f\u63d0\u4f9b\u8fd9\u6837\u7684\u8bed\u6cd5 \u65b9\u5f0f1 \u591a\u4e2a\u540c\u4e00\u6570\u636e\u7c7b\u578b var n1,n2,n3 int \u65b9\u5f0f2 \u591a\u4e2a\u4e0d\u540c\u6570\u636e\u7c7b\u578b var n1,name,n3 = 100,\"tom\",888 \u65b9\u5f0f3 \u7c7b\u578b\u63a8\u5bfc n1,name,n3 \uff1a= 100,\"tom\",888 \u7b49\u4ef7\u4e8e\u65b9\u5f0f2 \u6ce8\u610f\uff1a\u5728go\u4e2d\uff0c\u51fd\u6570\u5916\u58f0\u660e\u7684\u53d8\u91cf\u5c31\u662f\u5168\u5c40\u53d8\u91cf\uff0c \u5168\u5c40\u53d8\u91cf\u7684\u58f0\u660e var n1 = 100 var name = \"tom\" \u7b49\u4ef7\u4e8e var ( n1 = 100 name = \"tom\" ) \u5728\u8be5\u533a\u57df\u7684\u6570\u636e\u503c\u53ef\u4ee5\u5728\u7edf\u4e00\u7c7b\u578b\u8303\u56f4\u5185\u4e0d\u65ad\u53d8\u5316\uff0c\u5373\u540c\u6570\u636e\u7c7b\u578b\u53ef\u8986\u76d6\u8d4b\u503c \u53d8\u91cf\u5728\u540c\u4e00\u4e2a\u4f5c\u7528\u57df\u5185\u4e0d\u80fd\u91cd\u540d \u53d8\u91cf\u4e09\u8981\u7d20 \u53d8\u91cf=\u53d8\u91cf\u540d + \u503c+\u6570\u636e\u7c7b\u578b golang\u7684\u53d8\u91cf\u5982\u679c\u6ca1\u6709\u8d4b\u503c\uff0c\u7f16\u8bd1\u5668\u4f1a\u4f7f\u7528\u9ed8\u8ba4\u503c\uff0cint\uff0cfloat\u9ed8\u8ba40\uff0cstring\u9ed8\u8ba4\u4e3a\u7a7a\u4e32","title":"\u53d8\u91cf\u4f7f\u7528\u6ce8\u610f\u4e8b\u9879"},{"location":"Golang/%E5%8F%98%E9%87%8F%E5%92%8C%E5%B8%B8%E9%87%8F/#_12","text":"golang\u4e2d\u5b9a\u4e49\u53d8\u91cf\uff0c\u4f1a\u5148\u6839\u636e\u5f00\u8f9f\u5185\u5b58\u7a7a\u95f4\uff0c\u786e\u5b9a\u6570\u636e\u7c7b\u578b\uff0c\u7ed9\u5b9a\u9ed8\u8ba4\u503c\uff0c\u5728\u8d4b\u503c\u7684\u65f6\u5019\u518d\u5c06\u9ed8\u8ba4\u503c\u66f4\u6539\u4e3a\u88ab\u8d4b\u503c\u7684\u503c\u3002 golang\u4e2d := \u8868\u793a\uff0c\u5b9a\u4e49\u8d4b\u503c","title":"\u6ce8\u610f\uff1a"},{"location":"Golang/%E5%8F%98%E9%87%8F%E5%92%8C%E5%B8%B8%E9%87%8F/#_13","text":"\u5f53\u5de6\u53f3\u4e24\u8fb9\u90fd\u662f\u6570\u503c\u7c7b\u578b\u65f6\uff0c\u505a\u52a0\u6cd5\u8fd0\u7b97 \u5f53\u5de6\u53f3\u4e24\u8fb9\u90fd\u662f\u5b57\u7b26\u4e32\u7c7b\u578b\u65f6\uff0c\u505a\u5b57\u7b26\u4e32\u62fc\u63a5 \u6570\u5b57\u548c\u5b57\u7b26\u4e32\u4e0d\u80fd\u4f7f\u7528+\u53f7 (mismatched types string and int)","title":"\u7a0b\u5e8f\u4e2d+\u53f7\u7684\u4f7f\u7528"},{"location":"Golang/%E5%8F%98%E9%87%8F%E5%92%8C%E5%B8%B8%E9%87%8F/#_14","text":"\u5e38\u91cf\u4f7f\u7528const\u4fee\u6539 \u5e38\u91cf\u5728\u5b9a\u4e49\u7684\u65f6\u5019,\u5fc5\u987b\u521d\u59cb\u5316 \u5e38\u91cf\u4e0d\u80fd\u4fee\u6539 \u5e38\u91cf\u53ea\u80fd\u4fee\u9970bool,\u6570\u503c\u7c7b\u578b(in,float\u7cfb\u5217,),string\u7c7b\u578b \u8bed\u6cd5: const identifier [type] = value go\u4e2d\u6ca1\u6709\u89c4\u5b9a\u5e38\u91cf\u4e00\u5b9a\u8981\u5168\u5927\u5199,\u4f46\u662f\u4f9d\u7136\u901a\u8fc7\u9996\u5b57\u6bcd\u5927\u5c0f\u5199\u6765\u63a7\u5236\u5e38\u91cf\u7684\u8bbf\u95ee\u8303\u56f4. \u4e3e\u4f8b: const name = \"tom\" \u5bf9 const b = num /3 num\u4e3a\u53d8\u91cf,\u5219\u62a5\u9519","title":"\u5e38\u91cf"},{"location":"Golang/%E5%8F%98%E9%87%8F%E5%92%8C%E5%B8%B8%E9%87%8F/#_15","text":"const ( a = 1 b = 2 )","title":"\u7b80\u6d01\u7684\u5199\u6cd5"},{"location":"Golang/%E5%8F%98%E9%87%8F%E5%92%8C%E5%B8%B8%E9%87%8F/#_16","text":"const ( a = iota //\u8868\u793aa\u8d4b\u503c\u4e3a0 b //b\u5728a\u7684\u57fa\u7840\u4e0a+1 c //c\u5728b\u7684\u57fa\u7840\u4e0a+1 ) fmt . Println ( a , b , c ) //0,1,2 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ const ( a = iota //\u8868\u793aa\u8d4b\u503c\u4e3a0 b = iota //b\u5728a\u7684\u57fa\u7840\u4e0a+1 c , d = iota , iota //c,d\u5728b\u7684\u57fa\u7840\u4e0a+1 ) fmt . Println ( a , b , c , d ) //0,1,2,2 iota\u53ea\u5728\u672cconst()\u7684\u62ec\u53f7\u4e2d\u8d77\u6548,\u51fa\u4e86\u62ec\u53f7\u7684iota\u91cd\u65b0\u4ece0\u5f00\u59cb","title":"\u4e13\u4e1a\u7684\u5199\u6cd5"},{"location":"Golang/%E5%8F%98%E9%87%8F%E5%92%8C%E5%B8%B8%E9%87%8F/#_17","text":"Go\u8bed\u8a00\u7684\u5e38\u91cf\u7684\u4e0d\u540c\u4e4b\u5904.\u5f88\u591a\u5e38\u91cf\u6ca1\u6709\u4e00\u4e2a\u660e\u786e\u7684\u57fa\u7840\u7c7b\u578b.\u7f16\u8bd1\u5668\u4e3a\u8fd9\u4e9b\u6ca1\u6709\u660e\u786e\u7684\u57fa\u7840\u7c7b\u578b\u7684\u6570\u5b57\u5e38\u91cf\u63d0\u4f9b\u6bd4\u57fa\u7840\u7c7b\u578b\u66f4\u9ad8\u7cbe\u5ea6\u7684\u7b97\u6570\u8fd0\u7b97.\u53ef\u4ee5\u8ba4\u4e3a\u81f3\u5c11\u6709256bit\u7684\u8fd0\u7b97\u7cbe\u5ea6.\u8fd9\u91cc\u6709\u516d\u79cd\u672a\u660e\u786e\u7c7b\u578b\u7684\u5e38\u91cf\u7c7b\u578b,\u5206\u522b\u65f6\u65e0\u7c7b\u578b\u7684\u5e03\u5c14\u578b,\u65e0\u7c7b\u578b\u7684\u6574\u6570,\u65e0\u7c7b\u578b\u7684\u6d6e\u70b9\u6570,\u65e0\u7c7b\u578b\u7684\u5b57\u7b26,\u65e0\u7c7b\u578b\u7684\u590d\u6570,\u65e0\u7c7b\u578b\u7684\u5b57\u7b26\u4e32. \u901a\u8fc7\u5ef6\u8fdf\u660e\u786e\u5e38\u91cf\u7684\u5177\u4f53\u7c7b\u578b,\u65e0\u7c7b\u578b\u7684\u5e38\u91cf\u4e0d\u4ec5\u53ef\u4ee5\u63d0\u4f9b\u66f4\u9ad8\u7684\u8fd0\u7b97\u7cbe\u5ea6,\u800c\u4e14\u53ef\u4ee5\u76f4\u63a5\u7528\u4e8e\u66f4\u591a\u7684\u8868\u8fbe\u5f0f\u800c\u4e0d\u9700\u8981\u663e\u5f0f\u7684\u7c7b\u578b\u8f6c\u6362.","title":"\u65e0\u7c7b\u578b\u5e38\u91cf"},{"location":"Golang/%E5%AD%97%E7%AC%A6%E4%B8%B2/","text":"\u5b57\u7b26\u4e32\u7c7b\u578bstring \u7ec6\u8282 \u57fa\u672c\u6570\u636e\u7c7b\u578b\u548cstring\u7684\u8f6c\u6362 \u57fa\u672c\u6570\u636e\u7c7b\u578b\u8f6cstring string\u8f6c\u57fa\u672c\u6570\u636e\u7c7b\u578b\u8f6c \u4f7f\u7528strconv\u5305\u7684\u51fd\u6570 \u6ce8\u610f\u4e8b\u9879 \u5b57\u7b26\u4e32\u7cfb\u7edf\u51fd\u6570 \u5e38\u7528\u5185\u7f6e\u51fd\u6570 \u5b57\u7b26\u4e32\u7c7b\u578bstring \u00b6 \u7ec6\u8282 \u00b6 \u5b57\u7b26\u4e32\u5c31\u662f\u4e00\u4e32\u56fa\u5b9a\u957f\u5ea6\u7684\u5b57\u7b26\u8fde\u63a5\u8d77\u6765\u7684\u5b57\u7b26\u5e8f\u5217.go\u7684\u5b57\u7b26\u4e32\u65f6\u7531\u5355\u4e2a\u5b57\u8282\u8fde\u63a5\u8d77\u6765\u7684.go\u8bed\u8a00\u7684\u5b57\u7b26\u4e32\u7684\u5b57\u8282\u4f7f\u7528utf-8\u7f16\u7801\u8868\u793aUnicode\u6587\u672c \u5b57\u7b26\u4e32\u5f0f\u4e0d\u53ef\u53d8\u7c7b\u578b,\u4e00\u65e6\u8d4b\u503c\u4e86,\u5c31\u4e0d\u80fd\u66f4\u6539\u4e86 var str = \"hello\" str [ 0 ] = \"a\" >> > cannot assign to str [ 0 ] \u5b57\u7b26\u4e32\u7684\u4e24\u79cd\u5f62\u5f0f \u53cc\u5f15\u53f7,\u4f1a\u8bc6\u522b\u8f6c\u4e49\u5b57\u7b26 \u53cd\u5f15\u53f7,\u4ee5\u5b57\u7b26\u4e32\u7684\u539f\u751f\u5f62\u5f0f\u8f93\u51fa,\u5305\u62ec\u6362\u884c\u548c\u7279\u6b8a\u5b57\u7b26,\u53ef\u4ee5\u5b9e\u73b0\u9632\u6b62\u653b\u51fb,\u8f93\u51fa\u6e90\u4ee3\u7801\u7b49\u6548\u679c.\u5305\u62ec\u6362\u884c. \u5b57\u7b26\u4e32\u7684\u62fc\u63a5\u65b9\u5f0f \u52a0\u53f7 var str = \"hello \" + \"world\" fmt . Println ( str ) >> > hello world \u6ce8\u610f,\u5f53\u5b57\u7b26\u4e32\u8fc7\u957f\u9700\u8981\u6362\u884c\u65f6,\u8981\u628a\u52a0\u53f7\u7559\u5728\u4e0a\u9762\u4e00\u884c,\u5426\u5219\u62a5\u9519 \u57fa\u672c\u6570\u636e\u7c7b\u578b\u548cstring\u7684\u8f6c\u6362 \u00b6 \u57fa\u672c\u6570\u636e\u7c7b\u578b\u8f6cstring \u00b6 fmt.Spingf(\"%\u53c2\u6570\",\u8868\u8fbe\u5f0f) \u53c2\u6570\u9700\u8981\u548c\u8868\u8fbe\u5f0f\u7684\u6570\u636e\u7c7b\u578b\u76f8\u5339\u914d fmt.Sprintf()\u4f1a\u8fd4\u56de\u8f6c\u6362\u540e\u7684\u5b57\u7b26\u4e32 var num1 int = 99 var num2 float64 = 23.456 var b bool = true var myChar byte = 'h' var str string str = fmt . Sprintf ( \"%d\" , num1 ) fmt . Printf ( \"1 str type %T %v\\n\" , str , str ) str = fmt . Sprintf ( \"%f\" , num2 ) fmt . Printf ( \"2 str type %T %v\\n\" , str , str ) str = fmt . Sprintf ( \"%t\" , b ) fmt . Printf ( \"3 str type %T %v\\n\" , str , str ) str = fmt . Sprintf ( \"%c\" , myChar ) fmt . Printf ( \"4 str type %T %v\\n\" , str , str ) >> > 1 str type string 99 >> > 2 str type string 23.456000 >> > 3 str type string true >> > 4 str type string h \u4f7f\u7528strconv\u5305\u7684\u51fd\u6570 func FormatBool(b bool) string \u4e4b\u7c7b \u5176\u4e2d\u6574\u578b\u7c7b\u578b\u53ef\u4f7f\u7528 func Itoa(i int) string int\u7c7b\u578b\u8f6c\u5b57\u7b26\u4e32\u975e\u5e38\u65b9\u4fbf string\u8f6c\u57fa\u672c\u6570\u636e\u7c7b\u578b\u8f6c \u00b6 \u4f7f\u7528strconv\u5305\u7684\u51fd\u6570 \u00b6 func ParseBool(str string) (value bool, err error) \u4e4b\u7c7b \u4f1a\u8fd4\u56de\u4e24\u4e2a\u503c,\u7b2c\u4e00\u4e2a\u662f\u6570\u636e\u7c7b\u578b\u503c,\u7b2c\u4e8c\u4e2a\u662ferr error,\u6240\u4ee5\u8981\u7528_\u5ffd\u7565\u53d8\u91cf\u63a5\u6536 \u6ce8\u610f\u4e8b\u9879 \u00b6 \u5c06string\u8f6c\u4e3a\u5176\u4ed6\u6570\u636e\u7c7b\u578b\u7684\u65f6\u5019,\u8981\u786e\u4fddstring\u7c7b\u578b\u53ef\u4ee5\u8f6c\u6210\u6709\u6548\u6570\u636e.\u6bd4\u5982,\u53ef\u4ee5\u628a'123'\u8f6c\u6210\u4e00\u4e2a\u6574\u6570,\u4f46\u4e0d\u80fd\u628a\"hello\"\u8f6c\u6210\u4e00\u4e2a\u6574\u6570,\u5f53\u8f6c\u6362\u5931\u8d25\u7684\u65f6\u5019,Golang\u76f4\u63a5\u5c06\u5176\u8f6c\u6362\u6210 \u503c\u4e3a\u9ed8\u8ba4\u503c0 \u7c7b\u578b\u4e3a\u53c2\u6570\u4e2d\u8bbe\u7f6e\u7684\u7c7b\u578b \u7684\u4e00\u4e2a\u503c. \u53d1\u6563\u4e00\u4e0b,\u6570\u636e\u7c7b\u578b\u4e4b\u95f4\u7684\u8f6c\u6362,\u82e5\u8f6c\u6362\u5931\u8d25,\u90fd\u4f1a\u53d8\u6210\u8be5\u6570\u636e\u7c7b\u578b\u7684\u9ed8\u8ba4\u503c. \u5355\u5f15\u53f7\u4f1a\u5c06\u5355\u5f15\u53f7\u4e2d\u7684\u6570\u636e\u8f6c\u6362\u4e3aascii\u7801\u4fdd\u5b58, \u5b57\u7b26\u4e32\u7cfb\u7edf\u51fd\u6570 \u00b6 \u5e38\u7528\u5185\u7f6e\u51fd\u6570 \u00b6 func len func len(v Type) int \u57fa\u4e8ev\u7684\u7c7b\u578b,\u8fd4\u56dev\u7684\u957f\u5ea6, \u6570\u7ec4 \uff1a v \u4e2d\u5143\u7d20\u7684\u6570\u91cf \u3002 \u6570\u7ec4\u6307\u9488 \uff1a * v \u4e2d\u5143\u7d20\u7684\u6570\u91cf \uff08 \u5373\u4f7f v \u4e3a nil \uff09\u3002 \u5207\u7247\u6216\u6620\u5c04 \uff1a v \u4e2d\u5143\u7d20\u7684\u6570\u91cf \uff1b \u82e5 v \u4e3a nil \uff0c len ( v ) \u5373\u4e3a\u96f6 \u3002 \u5b57\u7b26\u4e32 \uff1a v \u4e2d\u5b57\u8282\u7684\u6570\u91cf \u3002 \u901a\u9053 \uff1a \u901a\u9053\u7f13\u5b58\u4e2d\u961f\u5217 \uff08 \u672a\u8bfb\u53d6 \uff09 \u5143\u7d20\u7684\u6570\u91cf \uff1b \u82e5 v \u4e3a nil \uff0c len ( v ) \u5373\u4e3a\u96f6 \u3002 package main import ( \"fmt\" ) func main () { str1 := \"hello\" str2 := \"\u4f60\u597d\" str3 := \"123\" fmt . Println ( len ( str1 ), len ( str2 ), len ( str3 )) } >> > 5 6 3 \u5b57\u7b26\u4e32\u7684\u904d\u5386,\u540c\u65f6\u5904\u7406\u6709\u4e2d\u6587\u7684\u95ee\u9898 r=[]rune(str) func main () { str := \"hello\u4f60\u597d\" for i := 0 ; i < len ( str ); i ++ { fmt . Print ( str [ i ], \" \" ) } } >> > //\u9ed8\u8ba4\u8f93\u51fa\u5bf9\u5e94\u7684\u7f16\u7801 104 101 108 108 111 228 189 160 229 165 189 ------------------------------------ func main () { str := \"hello\u4f60\u597d\" r := [] rune ( str ) for i := 0 ; i < len ( r ); i ++ { fmt . Printf ( \"%c \" , r [ i ]) } } >> > //\u8f6c\u4e3ar := []rune(str) \u5207\u7247\u4f7f\u7528Printf\u624d\u80fd\u8f6c\u4e3a\u5b57\u7b26\u904d\u5386. h e l l o \u4f60 \u597d \u5b57\u7b26\u4e32\u8f6c\u6574\u6570 func main () { n , err := strconv . Atoi ( \"123\" ) if err != nil { fmt . Println ( err ) } else { fmt . Println ( n ) } } >> > 123 \u6574\u6570\u8f6c\u5b57\u7b26\u4e32 func main () { n := strconv . Itoa ( 123 ) fmt . Printf ( \"%v,%T\" , n , n ) } >> > 123 , string //Itoa\u53ea\u8fd4\u56de\u4e00\u4e2a\u53c2\u6570 \u5b57\u7b26\u4e32\u8f6c[]byte func main () { var bytes = [] byte ( \"hello go\" ) fmt . Println ( bytes ) } >> > [ 104 101 108 108 111 32 103 111 ] []bytes\u8f6c\u5b57\u7b26\u4e32 func main () { str := string ([] byte { 97 , 98 , 99 }) fmt . Println ( str ) } >> > abc 10\u8fdb\u5236\u8f6c2,8,16\u8fdb\u5236 str = strconv.FormatInt(123,2) func main () { str1 := strconv . FormatInt ( 123 , 2 ) str2 := strconv . FormatInt ( 123 , 8 ) str3 := strconv . FormatInt ( 123 , 16 ) fmt . Println ( str1 , str2 , str3 ) } >> > 1111011 173 7 b \u67e5\u627e\u5b50\u4e32\u662f\u5426\u5728\u6307\u5b9a\u7684\u5b57\u7b26\u4e32\u4e2d strings.Contains(\"seafood\",\"foo\") //true\u8fd4\u56de\u5e03\u5c14\u503c func main () { a := strings . Contains ( \"seafood\" , \"sea\" ) b := strings . Contains ( \"seafood\" , \"saaaa\" ) fmt . Println ( a , b ) } >> > true false \u7edf\u8ba1\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u6709\u51e0\u4e2a\u81ea\u5b9a\u5b50\u4e32 strings.Count(\"chinese\",\"e\") //2 \u8fd4\u56de\u6574\u578b func main () { a := strings . Count ( \"chinese\" , \"e\" ) fmt . Println ( a ) } >> > 2 \u4e0d\u533a\u5206\u5b57\u6bcd\u5927\u5c0f\u5199\u6bd4\u8f83\u5b57\u7b26\u4e32 == \u6bd4\u8f83\u662f\u533a\u5206\u5927\u5c0f\u5199\u7684 func main () { fmt . Println ( strings . EqualFold ( \"abc\" , \"ABC\" )) fmt . Println ( \"ABC\" == \"abc\" ) } >> > true false \u8fd4\u56de\u5b50\u4e32\u5728\u5b57\u7b26\u4e32\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684index\u503c,\u6ca1\u6709\u8fd4\u56de-1 func main () { a := strings . Index ( \"chinese\" , \"i\" ) b := strings . Index ( \"chinese\" , \"io\" ) fmt . Println ( a ) fmt . Println ( b ) } >> > 2 - 1 \u8fd4\u56de\u5b50\u4e32\u5728\u5b57\u7b26\u4e32\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684index\u503c,\u6ca1\u6709\u8fd4\u56de-1 func main (){ a := strings . LastIndex ( \"go golang\" , \"go\" ) fmt . Println ( a ) } >> > 3 \u5c06\u6307\u5b9a\u7684\u5b57\u4e32\u66ff\u6362\u6210\u53e6\u4e00\u4e2a\u5b57\u4e32 strings.Replace(\"go go hello\",\"go\",\"Python\",n),n\u8868\u793a\u66ff\u6362\u51e0\u4e2a,\u5982\u679c n=-1 \u8868\u793a\u5168\u90e8\u66ff\u6362 \u5f53n\u5927\u4e8e\u5b9e\u9645\u5b58\u5728\u7684\u6570\u91cf,\u66ff\u6362\u5168\u90e8,n\u5fc5\u987b\u5b58\u5728 func main () { a := strings . Replace ( \"go go hello\" , \"go\" , \"Python\" , 3 ) fmt . Println ( a ) } >> > Python Python hello \u6309\u7167\u6307\u5b9a\u5b57\u7b26,\u4f5c\u4e3a\u5206\u5272\u7b26,\u5c06\u4e00\u4e2a\u5b57\u7b26\u4e32\u62c6\u5206\u6210\u5b57\u7b26\u4e32\u5207\u7247 Split\u540e\u5fc5\u987b\u4f20\u4e24\u4e2a\u53c2\u6570,\u65e0\u9ed8\u8ba4\u503c func main () { a := strings . Split ( \"hello, world\" , \",\" ) fmt . Printf ( \"%T %v\" , a , a ) } >> > [] string [ hello world ] --------------------------- func main () { a := strings . Split ( \"hello, world\" , \"\" ) fmt . Printf ( \"%T %v\" , a , a ) } >> > [] string [ h e l l o , w o r l d ] \u5c06\u5b57\u7b26\u4e32\u5168\u90e8\u8f6c\u6362\u4e3a\u5c0f\u5199/\u5927\u5199 func main () { str := \"GoLang\" str1 := strings . ToLower ( str ) str2 := strings . ToUpper ( str ) fmt . Println ( str1 , str2 ) } >> > golang GOLANG \u5c06\u5b57\u7b26\u4e32\u5de6\u53f3\u4e24\u8fb9\u7684\u7a7a\u767d\u5b57\u7b26(\u5305\u62ec\\r\\n\\t\u7a7a\u683c)\u53bb\u6389 func main () { str := \" \\t \\n \\n abcde \\r\\r\\r \" str1 := strings . TrimSpace ( str ) fmt . Println ( str1 ) } >> > abcde \u5c06\u5b57\u7b26\u4e32\u5de6\u53f3\u4e24\u8fb9\u7684\u6307\u5b9a\u5b57\u7b26\u53bb\u6389 \u4e0e\u88ab\u53bb\u9664\u5b57\u7b26\u4e32\u4e2d\u7684\u987a\u5e8f\u65e0\u5173,\u53ea\u8981\u6709,\u4f9d\u6b21\u53bb\u6389,\u4e0ePython\u76f8\u540c \u5de6/\u53f3\u53bb\u6389\u5b57\u7b26\u4e32 strings.TrimLeft(str,\"* #\")``strings.TrimRight(str,\"* #\") func main () { str := \"***### abcde*** ###\" str1 := strings . Trim ( str , \"* #\" ) fmt . Println ( str1 ) } >> > abced \u5224\u65ad\u5b57\u7b26\u4e32\u662f\u5426\u4ee5\u6307\u5b9a\u5b57\u7b26\u4e32\u5f00\u5934/\u7ed3\u5c3e func main () { str := \"www.golang.org\" str1 := strings . HasPrefix ( str , \"www\" ) str2 := strings . HasSuffix ( str , \"com\" ) fmt . Println ( str1 , str2 ) } >> > true false","title":"\u5b57\u7b26\u4e32"},{"location":"Golang/%E5%AD%97%E7%AC%A6%E4%B8%B2/#string","text":"","title":"\u5b57\u7b26\u4e32\u7c7b\u578bstring"},{"location":"Golang/%E5%AD%97%E7%AC%A6%E4%B8%B2/#_1","text":"\u5b57\u7b26\u4e32\u5c31\u662f\u4e00\u4e32\u56fa\u5b9a\u957f\u5ea6\u7684\u5b57\u7b26\u8fde\u63a5\u8d77\u6765\u7684\u5b57\u7b26\u5e8f\u5217.go\u7684\u5b57\u7b26\u4e32\u65f6\u7531\u5355\u4e2a\u5b57\u8282\u8fde\u63a5\u8d77\u6765\u7684.go\u8bed\u8a00\u7684\u5b57\u7b26\u4e32\u7684\u5b57\u8282\u4f7f\u7528utf-8\u7f16\u7801\u8868\u793aUnicode\u6587\u672c \u5b57\u7b26\u4e32\u5f0f\u4e0d\u53ef\u53d8\u7c7b\u578b,\u4e00\u65e6\u8d4b\u503c\u4e86,\u5c31\u4e0d\u80fd\u66f4\u6539\u4e86 var str = \"hello\" str [ 0 ] = \"a\" >> > cannot assign to str [ 0 ] \u5b57\u7b26\u4e32\u7684\u4e24\u79cd\u5f62\u5f0f \u53cc\u5f15\u53f7,\u4f1a\u8bc6\u522b\u8f6c\u4e49\u5b57\u7b26 \u53cd\u5f15\u53f7,\u4ee5\u5b57\u7b26\u4e32\u7684\u539f\u751f\u5f62\u5f0f\u8f93\u51fa,\u5305\u62ec\u6362\u884c\u548c\u7279\u6b8a\u5b57\u7b26,\u53ef\u4ee5\u5b9e\u73b0\u9632\u6b62\u653b\u51fb,\u8f93\u51fa\u6e90\u4ee3\u7801\u7b49\u6548\u679c.\u5305\u62ec\u6362\u884c. \u5b57\u7b26\u4e32\u7684\u62fc\u63a5\u65b9\u5f0f \u52a0\u53f7 var str = \"hello \" + \"world\" fmt . Println ( str ) >> > hello world \u6ce8\u610f,\u5f53\u5b57\u7b26\u4e32\u8fc7\u957f\u9700\u8981\u6362\u884c\u65f6,\u8981\u628a\u52a0\u53f7\u7559\u5728\u4e0a\u9762\u4e00\u884c,\u5426\u5219\u62a5\u9519","title":"\u7ec6\u8282"},{"location":"Golang/%E5%AD%97%E7%AC%A6%E4%B8%B2/#string_1","text":"","title":"\u57fa\u672c\u6570\u636e\u7c7b\u578b\u548cstring\u7684\u8f6c\u6362"},{"location":"Golang/%E5%AD%97%E7%AC%A6%E4%B8%B2/#string_2","text":"fmt.Spingf(\"%\u53c2\u6570\",\u8868\u8fbe\u5f0f) \u53c2\u6570\u9700\u8981\u548c\u8868\u8fbe\u5f0f\u7684\u6570\u636e\u7c7b\u578b\u76f8\u5339\u914d fmt.Sprintf()\u4f1a\u8fd4\u56de\u8f6c\u6362\u540e\u7684\u5b57\u7b26\u4e32 var num1 int = 99 var num2 float64 = 23.456 var b bool = true var myChar byte = 'h' var str string str = fmt . Sprintf ( \"%d\" , num1 ) fmt . Printf ( \"1 str type %T %v\\n\" , str , str ) str = fmt . Sprintf ( \"%f\" , num2 ) fmt . Printf ( \"2 str type %T %v\\n\" , str , str ) str = fmt . Sprintf ( \"%t\" , b ) fmt . Printf ( \"3 str type %T %v\\n\" , str , str ) str = fmt . Sprintf ( \"%c\" , myChar ) fmt . Printf ( \"4 str type %T %v\\n\" , str , str ) >> > 1 str type string 99 >> > 2 str type string 23.456000 >> > 3 str type string true >> > 4 str type string h \u4f7f\u7528strconv\u5305\u7684\u51fd\u6570 func FormatBool(b bool) string \u4e4b\u7c7b \u5176\u4e2d\u6574\u578b\u7c7b\u578b\u53ef\u4f7f\u7528 func Itoa(i int) string int\u7c7b\u578b\u8f6c\u5b57\u7b26\u4e32\u975e\u5e38\u65b9\u4fbf","title":"\u57fa\u672c\u6570\u636e\u7c7b\u578b\u8f6cstring"},{"location":"Golang/%E5%AD%97%E7%AC%A6%E4%B8%B2/#string_3","text":"","title":"string\u8f6c\u57fa\u672c\u6570\u636e\u7c7b\u578b\u8f6c"},{"location":"Golang/%E5%AD%97%E7%AC%A6%E4%B8%B2/#strconv","text":"func ParseBool(str string) (value bool, err error) \u4e4b\u7c7b \u4f1a\u8fd4\u56de\u4e24\u4e2a\u503c,\u7b2c\u4e00\u4e2a\u662f\u6570\u636e\u7c7b\u578b\u503c,\u7b2c\u4e8c\u4e2a\u662ferr error,\u6240\u4ee5\u8981\u7528_\u5ffd\u7565\u53d8\u91cf\u63a5\u6536","title":"\u4f7f\u7528strconv\u5305\u7684\u51fd\u6570"},{"location":"Golang/%E5%AD%97%E7%AC%A6%E4%B8%B2/#_2","text":"\u5c06string\u8f6c\u4e3a\u5176\u4ed6\u6570\u636e\u7c7b\u578b\u7684\u65f6\u5019,\u8981\u786e\u4fddstring\u7c7b\u578b\u53ef\u4ee5\u8f6c\u6210\u6709\u6548\u6570\u636e.\u6bd4\u5982,\u53ef\u4ee5\u628a'123'\u8f6c\u6210\u4e00\u4e2a\u6574\u6570,\u4f46\u4e0d\u80fd\u628a\"hello\"\u8f6c\u6210\u4e00\u4e2a\u6574\u6570,\u5f53\u8f6c\u6362\u5931\u8d25\u7684\u65f6\u5019,Golang\u76f4\u63a5\u5c06\u5176\u8f6c\u6362\u6210 \u503c\u4e3a\u9ed8\u8ba4\u503c0 \u7c7b\u578b\u4e3a\u53c2\u6570\u4e2d\u8bbe\u7f6e\u7684\u7c7b\u578b \u7684\u4e00\u4e2a\u503c. \u53d1\u6563\u4e00\u4e0b,\u6570\u636e\u7c7b\u578b\u4e4b\u95f4\u7684\u8f6c\u6362,\u82e5\u8f6c\u6362\u5931\u8d25,\u90fd\u4f1a\u53d8\u6210\u8be5\u6570\u636e\u7c7b\u578b\u7684\u9ed8\u8ba4\u503c. \u5355\u5f15\u53f7\u4f1a\u5c06\u5355\u5f15\u53f7\u4e2d\u7684\u6570\u636e\u8f6c\u6362\u4e3aascii\u7801\u4fdd\u5b58,","title":"\u6ce8\u610f\u4e8b\u9879"},{"location":"Golang/%E5%AD%97%E7%AC%A6%E4%B8%B2/#_3","text":"","title":"\u5b57\u7b26\u4e32\u7cfb\u7edf\u51fd\u6570"},{"location":"Golang/%E5%AD%97%E7%AC%A6%E4%B8%B2/#_4","text":"func len func len(v Type) int \u57fa\u4e8ev\u7684\u7c7b\u578b,\u8fd4\u56dev\u7684\u957f\u5ea6, \u6570\u7ec4 \uff1a v \u4e2d\u5143\u7d20\u7684\u6570\u91cf \u3002 \u6570\u7ec4\u6307\u9488 \uff1a * v \u4e2d\u5143\u7d20\u7684\u6570\u91cf \uff08 \u5373\u4f7f v \u4e3a nil \uff09\u3002 \u5207\u7247\u6216\u6620\u5c04 \uff1a v \u4e2d\u5143\u7d20\u7684\u6570\u91cf \uff1b \u82e5 v \u4e3a nil \uff0c len ( v ) \u5373\u4e3a\u96f6 \u3002 \u5b57\u7b26\u4e32 \uff1a v \u4e2d\u5b57\u8282\u7684\u6570\u91cf \u3002 \u901a\u9053 \uff1a \u901a\u9053\u7f13\u5b58\u4e2d\u961f\u5217 \uff08 \u672a\u8bfb\u53d6 \uff09 \u5143\u7d20\u7684\u6570\u91cf \uff1b \u82e5 v \u4e3a nil \uff0c len ( v ) \u5373\u4e3a\u96f6 \u3002 package main import ( \"fmt\" ) func main () { str1 := \"hello\" str2 := \"\u4f60\u597d\" str3 := \"123\" fmt . Println ( len ( str1 ), len ( str2 ), len ( str3 )) } >> > 5 6 3 \u5b57\u7b26\u4e32\u7684\u904d\u5386,\u540c\u65f6\u5904\u7406\u6709\u4e2d\u6587\u7684\u95ee\u9898 r=[]rune(str) func main () { str := \"hello\u4f60\u597d\" for i := 0 ; i < len ( str ); i ++ { fmt . Print ( str [ i ], \" \" ) } } >> > //\u9ed8\u8ba4\u8f93\u51fa\u5bf9\u5e94\u7684\u7f16\u7801 104 101 108 108 111 228 189 160 229 165 189 ------------------------------------ func main () { str := \"hello\u4f60\u597d\" r := [] rune ( str ) for i := 0 ; i < len ( r ); i ++ { fmt . Printf ( \"%c \" , r [ i ]) } } >> > //\u8f6c\u4e3ar := []rune(str) \u5207\u7247\u4f7f\u7528Printf\u624d\u80fd\u8f6c\u4e3a\u5b57\u7b26\u904d\u5386. h e l l o \u4f60 \u597d \u5b57\u7b26\u4e32\u8f6c\u6574\u6570 func main () { n , err := strconv . Atoi ( \"123\" ) if err != nil { fmt . Println ( err ) } else { fmt . Println ( n ) } } >> > 123 \u6574\u6570\u8f6c\u5b57\u7b26\u4e32 func main () { n := strconv . Itoa ( 123 ) fmt . Printf ( \"%v,%T\" , n , n ) } >> > 123 , string //Itoa\u53ea\u8fd4\u56de\u4e00\u4e2a\u53c2\u6570 \u5b57\u7b26\u4e32\u8f6c[]byte func main () { var bytes = [] byte ( \"hello go\" ) fmt . Println ( bytes ) } >> > [ 104 101 108 108 111 32 103 111 ] []bytes\u8f6c\u5b57\u7b26\u4e32 func main () { str := string ([] byte { 97 , 98 , 99 }) fmt . Println ( str ) } >> > abc 10\u8fdb\u5236\u8f6c2,8,16\u8fdb\u5236 str = strconv.FormatInt(123,2) func main () { str1 := strconv . FormatInt ( 123 , 2 ) str2 := strconv . FormatInt ( 123 , 8 ) str3 := strconv . FormatInt ( 123 , 16 ) fmt . Println ( str1 , str2 , str3 ) } >> > 1111011 173 7 b \u67e5\u627e\u5b50\u4e32\u662f\u5426\u5728\u6307\u5b9a\u7684\u5b57\u7b26\u4e32\u4e2d strings.Contains(\"seafood\",\"foo\") //true\u8fd4\u56de\u5e03\u5c14\u503c func main () { a := strings . Contains ( \"seafood\" , \"sea\" ) b := strings . Contains ( \"seafood\" , \"saaaa\" ) fmt . Println ( a , b ) } >> > true false \u7edf\u8ba1\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u6709\u51e0\u4e2a\u81ea\u5b9a\u5b50\u4e32 strings.Count(\"chinese\",\"e\") //2 \u8fd4\u56de\u6574\u578b func main () { a := strings . Count ( \"chinese\" , \"e\" ) fmt . Println ( a ) } >> > 2 \u4e0d\u533a\u5206\u5b57\u6bcd\u5927\u5c0f\u5199\u6bd4\u8f83\u5b57\u7b26\u4e32 == \u6bd4\u8f83\u662f\u533a\u5206\u5927\u5c0f\u5199\u7684 func main () { fmt . Println ( strings . EqualFold ( \"abc\" , \"ABC\" )) fmt . Println ( \"ABC\" == \"abc\" ) } >> > true false \u8fd4\u56de\u5b50\u4e32\u5728\u5b57\u7b26\u4e32\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684index\u503c,\u6ca1\u6709\u8fd4\u56de-1 func main () { a := strings . Index ( \"chinese\" , \"i\" ) b := strings . Index ( \"chinese\" , \"io\" ) fmt . Println ( a ) fmt . Println ( b ) } >> > 2 - 1 \u8fd4\u56de\u5b50\u4e32\u5728\u5b57\u7b26\u4e32\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684index\u503c,\u6ca1\u6709\u8fd4\u56de-1 func main (){ a := strings . LastIndex ( \"go golang\" , \"go\" ) fmt . Println ( a ) } >> > 3 \u5c06\u6307\u5b9a\u7684\u5b57\u4e32\u66ff\u6362\u6210\u53e6\u4e00\u4e2a\u5b57\u4e32 strings.Replace(\"go go hello\",\"go\",\"Python\",n),n\u8868\u793a\u66ff\u6362\u51e0\u4e2a,\u5982\u679c n=-1 \u8868\u793a\u5168\u90e8\u66ff\u6362 \u5f53n\u5927\u4e8e\u5b9e\u9645\u5b58\u5728\u7684\u6570\u91cf,\u66ff\u6362\u5168\u90e8,n\u5fc5\u987b\u5b58\u5728 func main () { a := strings . Replace ( \"go go hello\" , \"go\" , \"Python\" , 3 ) fmt . Println ( a ) } >> > Python Python hello \u6309\u7167\u6307\u5b9a\u5b57\u7b26,\u4f5c\u4e3a\u5206\u5272\u7b26,\u5c06\u4e00\u4e2a\u5b57\u7b26\u4e32\u62c6\u5206\u6210\u5b57\u7b26\u4e32\u5207\u7247 Split\u540e\u5fc5\u987b\u4f20\u4e24\u4e2a\u53c2\u6570,\u65e0\u9ed8\u8ba4\u503c func main () { a := strings . Split ( \"hello, world\" , \",\" ) fmt . Printf ( \"%T %v\" , a , a ) } >> > [] string [ hello world ] --------------------------- func main () { a := strings . Split ( \"hello, world\" , \"\" ) fmt . Printf ( \"%T %v\" , a , a ) } >> > [] string [ h e l l o , w o r l d ] \u5c06\u5b57\u7b26\u4e32\u5168\u90e8\u8f6c\u6362\u4e3a\u5c0f\u5199/\u5927\u5199 func main () { str := \"GoLang\" str1 := strings . ToLower ( str ) str2 := strings . ToUpper ( str ) fmt . Println ( str1 , str2 ) } >> > golang GOLANG \u5c06\u5b57\u7b26\u4e32\u5de6\u53f3\u4e24\u8fb9\u7684\u7a7a\u767d\u5b57\u7b26(\u5305\u62ec\\r\\n\\t\u7a7a\u683c)\u53bb\u6389 func main () { str := \" \\t \\n \\n abcde \\r\\r\\r \" str1 := strings . TrimSpace ( str ) fmt . Println ( str1 ) } >> > abcde \u5c06\u5b57\u7b26\u4e32\u5de6\u53f3\u4e24\u8fb9\u7684\u6307\u5b9a\u5b57\u7b26\u53bb\u6389 \u4e0e\u88ab\u53bb\u9664\u5b57\u7b26\u4e32\u4e2d\u7684\u987a\u5e8f\u65e0\u5173,\u53ea\u8981\u6709,\u4f9d\u6b21\u53bb\u6389,\u4e0ePython\u76f8\u540c \u5de6/\u53f3\u53bb\u6389\u5b57\u7b26\u4e32 strings.TrimLeft(str,\"* #\")``strings.TrimRight(str,\"* #\") func main () { str := \"***### abcde*** ###\" str1 := strings . Trim ( str , \"* #\" ) fmt . Println ( str1 ) } >> > abced \u5224\u65ad\u5b57\u7b26\u4e32\u662f\u5426\u4ee5\u6307\u5b9a\u5b57\u7b26\u4e32\u5f00\u5934/\u7ed3\u5c3e func main () { str := \"www.golang.org\" str1 := strings . HasPrefix ( str , \"www\" ) str2 := strings . HasSuffix ( str , \"com\" ) fmt . Println ( str1 , str2 ) } >> > true false","title":"\u5e38\u7528\u5185\u7f6e\u51fd\u6570"},{"location":"Golang/%E5%AD%97%E7%AC%A6%E7%B1%BB%E5%9E%8B/","text":"\u5b57\u7b26\u7c7b\u578b(char) \u5355\u5f15\u53f7 \u53cc\u5f15\u53f7 \u53cd\u5f15\u53f7 \u672c\u8d28 \u5b57\u7b26\u7c7b\u578b(char) \u00b6 golang\u4e2d\u6ca1\u6709\u4e13\u95e8\u7684\u5b57\u7b26\u7c7b\u578b,\u5982\u679c\u8981\u5b58\u50a8\u5355\u4e2a\u5b57\u7b26(ascii\u4e2d),\u4e00\u822c\u4f7f\u7528byte\u6765\u4fdd\u5b58. golang\u7684\u5b57\u7b26\u4e32,\u662f\u7531==\u5b57\u8282==\u7ec4\u6210\u7684. \u5b57\u7b26\u5e38\u91cf\u7528\u5355\u5f15\u53f7\u62ec\u8d77\u6765\u7684\u5355\u4e2a\u5b57\u7b26. go\u8bed\u8a00\u4f7f\u7528utf-8\u7f16\u7801,\u5e94\u4f4d\u5b57\u6bcd1\u4e2a\u5b57\u8282,\u6c49\u5b573\u4e2a\u5b57\u8282 go\u4e2d,\u5b57\u7b26\u7684\u672c\u8d28\u662f\u4e00\u4e2a\u6574\u6570,\u76f4\u63a5\u8f93\u51fa,\u662f\u8be5\u5b57\u7b26\u5bf9\u5e94\u7684utf-8\u7f16\u7801\u7684\u7801\u503c. \u5355\u4e2a\u5b57\u7b26\u7c7b\u578b\u53ef\u4ee5\u8fdb\u884c\u8fd0\u7b97,\u76f8\u5f53\u4e8e\u4e00\u4e2a\u6574\u6570,\u90fd\u5bf9\u5e94Unicode\u7f16\u7801. \u8d4b\u503c\u65f6\u53ef\u4ee5\u7ed9\u67d0\u4e2a\u53d8\u91cf\u4e00\u4e2a\u6570\u5b57,\u7136\u540e\u683c\u5f0f\u5316\u8f93\u51fa%c,\u5c31\u53ef\u4ee5\u8f93\u51fa\u8be5\u6570\u5b57\u5bf9\u5e94\u7684unicode\u5b57\u7b26. \u5355\u5f15\u53f7 \u00b6 \u5355\u5f15\u53f7\u5728go\u8bed\u8a00\u4e2d\u8868\u793agolang\u4e2d\u7684rune(int32)\u6216byte\u7c7b\u578b\uff0c\u5355\u5f15\u53f7\u91cc\u9762\u662f\u5355\u4e2a\u5b57\u7b26\uff0c\u5bf9\u5e94\u7684\u503c\u4e3a\u8be5\u5b57\u7b26\u7684ASCII\u7801\u503c\u3002 \u5982\u679c\u4f7f\u7528\u683c\u5f0f\u5316\u8f93\u51fa,\u5373\u53ef\u663e\u793a\u539f\u503c package main import \"fmt\" func main (){ var i byte = 'a' var a byte = '1' var b byte = 1 var n1 = 10 + 'a' fmt . Println ( i ) fmt . Println ( a ) fmt . Println ( b ) fmt . Printf ( \"i = %c\" , i ) // %c\u663e\u793a\u539f\u503c %d\u8f93\u51fa\u7801\u503c fmt . Println ( \"n1 = \" , n1 ) } >> > 97 >> > 49 >> > 1 >> > i = a >> > n1 = 107 \u53cc\u5f15\u53f7 \u00b6 \u5728go\u8bed\u8a00\u4e2d\u53cc\u5f15\u53f7\u91cc\u9762\u53ef\u4ee5\u662f\u5355\u4e2a\u5b57\u7b26\u4e5f\u53ef\u4ee5\u662f\u5b57\u7b26\u4e32\uff0c\u53cc\u5f15\u53f7\u91cc\u9762\u53ef\u4ee5\u6709\u8f6c\u4e49\u5b57\u7b26\uff0c\u5982\\n\u3001\\r\u7b49\uff0c\u5bf9\u5e94go\u8bed\u8a00\u4e2d\u7684string\u7c7b\u578b\u3002 \u53cd\u5f15\u53f7 \u00b6 \u53cd\u5f15\u53f7\u4e2d\u7684\u5b57\u7b26\u8868\u793a\u5176\u539f\u751f\u7684\u610f\u601d\uff0c\u5728\u5355\u5f15\u53f7\u4e2d\u7684\u5185\u5bb9\u53ef\u4ee5\u662f\u591a\u884c\u5185\u5bb9\uff0c\u4e0d\u652f\u6301\u8f6c\u4e49\u3002 \u672c\u8d28 \u00b6 \u5b57\u7b26\u578b\u5b58\u50a8\u5230\u8ba1\u7b97\u673a\u4e2d,\u9700\u8981\u5c06\u5bf9\u5e94\u7684\u7801\u503c(\u6574\u6570)\u627e\u51fa\u6765 \u5b58\u50a8:\u5b57\u7b26\u2192\u5bf9\u5e94\u7801\u503c\u2192\u4e8c\u8fdb\u5236\u2192\u5b58\u50a8 \u8bfb\u53d6:\u4e8c\u8fdb\u5236\u2192\u7801\u503c\u2192\u5b57\u7b26\u2192\u8bfb\u53d6 \u5b57\u7b26\u548c\u7801\u503c\u7684\u5bf9\u5e94\u5173\u7cfb\u65f6\u901a\u8fc7\u5b57\u7b26\u7f16\u7801\u8868\u51b3\u5b9a\u7684 go\u8bed\u8a00\u7edf\u4e00\u6210\u4e86utf-8\uff0e\u65b9\u4fbf\uff0c\u7edf\u4e00\uff0e\u4e0d\u6613\u4e71\u7801\uff0e","title":"\u5b57\u7b26\u7c7b\u578b"},{"location":"Golang/%E5%AD%97%E7%AC%A6%E7%B1%BB%E5%9E%8B/#char","text":"golang\u4e2d\u6ca1\u6709\u4e13\u95e8\u7684\u5b57\u7b26\u7c7b\u578b,\u5982\u679c\u8981\u5b58\u50a8\u5355\u4e2a\u5b57\u7b26(ascii\u4e2d),\u4e00\u822c\u4f7f\u7528byte\u6765\u4fdd\u5b58. golang\u7684\u5b57\u7b26\u4e32,\u662f\u7531==\u5b57\u8282==\u7ec4\u6210\u7684. \u5b57\u7b26\u5e38\u91cf\u7528\u5355\u5f15\u53f7\u62ec\u8d77\u6765\u7684\u5355\u4e2a\u5b57\u7b26. go\u8bed\u8a00\u4f7f\u7528utf-8\u7f16\u7801,\u5e94\u4f4d\u5b57\u6bcd1\u4e2a\u5b57\u8282,\u6c49\u5b573\u4e2a\u5b57\u8282 go\u4e2d,\u5b57\u7b26\u7684\u672c\u8d28\u662f\u4e00\u4e2a\u6574\u6570,\u76f4\u63a5\u8f93\u51fa,\u662f\u8be5\u5b57\u7b26\u5bf9\u5e94\u7684utf-8\u7f16\u7801\u7684\u7801\u503c. \u5355\u4e2a\u5b57\u7b26\u7c7b\u578b\u53ef\u4ee5\u8fdb\u884c\u8fd0\u7b97,\u76f8\u5f53\u4e8e\u4e00\u4e2a\u6574\u6570,\u90fd\u5bf9\u5e94Unicode\u7f16\u7801. \u8d4b\u503c\u65f6\u53ef\u4ee5\u7ed9\u67d0\u4e2a\u53d8\u91cf\u4e00\u4e2a\u6570\u5b57,\u7136\u540e\u683c\u5f0f\u5316\u8f93\u51fa%c,\u5c31\u53ef\u4ee5\u8f93\u51fa\u8be5\u6570\u5b57\u5bf9\u5e94\u7684unicode\u5b57\u7b26.","title":"\u5b57\u7b26\u7c7b\u578b(char)"},{"location":"Golang/%E5%AD%97%E7%AC%A6%E7%B1%BB%E5%9E%8B/#_1","text":"\u5355\u5f15\u53f7\u5728go\u8bed\u8a00\u4e2d\u8868\u793agolang\u4e2d\u7684rune(int32)\u6216byte\u7c7b\u578b\uff0c\u5355\u5f15\u53f7\u91cc\u9762\u662f\u5355\u4e2a\u5b57\u7b26\uff0c\u5bf9\u5e94\u7684\u503c\u4e3a\u8be5\u5b57\u7b26\u7684ASCII\u7801\u503c\u3002 \u5982\u679c\u4f7f\u7528\u683c\u5f0f\u5316\u8f93\u51fa,\u5373\u53ef\u663e\u793a\u539f\u503c package main import \"fmt\" func main (){ var i byte = 'a' var a byte = '1' var b byte = 1 var n1 = 10 + 'a' fmt . Println ( i ) fmt . Println ( a ) fmt . Println ( b ) fmt . Printf ( \"i = %c\" , i ) // %c\u663e\u793a\u539f\u503c %d\u8f93\u51fa\u7801\u503c fmt . Println ( \"n1 = \" , n1 ) } >> > 97 >> > 49 >> > 1 >> > i = a >> > n1 = 107","title":"\u5355\u5f15\u53f7"},{"location":"Golang/%E5%AD%97%E7%AC%A6%E7%B1%BB%E5%9E%8B/#_2","text":"\u5728go\u8bed\u8a00\u4e2d\u53cc\u5f15\u53f7\u91cc\u9762\u53ef\u4ee5\u662f\u5355\u4e2a\u5b57\u7b26\u4e5f\u53ef\u4ee5\u662f\u5b57\u7b26\u4e32\uff0c\u53cc\u5f15\u53f7\u91cc\u9762\u53ef\u4ee5\u6709\u8f6c\u4e49\u5b57\u7b26\uff0c\u5982\\n\u3001\\r\u7b49\uff0c\u5bf9\u5e94go\u8bed\u8a00\u4e2d\u7684string\u7c7b\u578b\u3002","title":"\u53cc\u5f15\u53f7"},{"location":"Golang/%E5%AD%97%E7%AC%A6%E7%B1%BB%E5%9E%8B/#_3","text":"\u53cd\u5f15\u53f7\u4e2d\u7684\u5b57\u7b26\u8868\u793a\u5176\u539f\u751f\u7684\u610f\u601d\uff0c\u5728\u5355\u5f15\u53f7\u4e2d\u7684\u5185\u5bb9\u53ef\u4ee5\u662f\u591a\u884c\u5185\u5bb9\uff0c\u4e0d\u652f\u6301\u8f6c\u4e49\u3002","title":"\u53cd\u5f15\u53f7"},{"location":"Golang/%E5%AD%97%E7%AC%A6%E7%B1%BB%E5%9E%8B/#_4","text":"\u5b57\u7b26\u578b\u5b58\u50a8\u5230\u8ba1\u7b97\u673a\u4e2d,\u9700\u8981\u5c06\u5bf9\u5e94\u7684\u7801\u503c(\u6574\u6570)\u627e\u51fa\u6765 \u5b58\u50a8:\u5b57\u7b26\u2192\u5bf9\u5e94\u7801\u503c\u2192\u4e8c\u8fdb\u5236\u2192\u5b58\u50a8 \u8bfb\u53d6:\u4e8c\u8fdb\u5236\u2192\u7801\u503c\u2192\u5b57\u7b26\u2192\u8bfb\u53d6 \u5b57\u7b26\u548c\u7801\u503c\u7684\u5bf9\u5e94\u5173\u7cfb\u65f6\u901a\u8fc7\u5b57\u7b26\u7f16\u7801\u8868\u51b3\u5b9a\u7684 go\u8bed\u8a00\u7edf\u4e00\u6210\u4e86utf-8\uff0e\u65b9\u4fbf\uff0c\u7edf\u4e00\uff0e\u4e0d\u6613\u4e71\u7801\uff0e","title":"\u672c\u8d28"},{"location":"Golang/%E5%B8%83%E5%B0%94%E7%B1%BB%E5%9E%8B/","text":"\u5e03\u5c14\u7c7b\u578bbool \u00b6 \u53ea\u5141\u8bb8\u53d6\u503ctrue\u548cfalse bool\u7c7b\u578b\u503c\u5360\u4e00\u4e2a\u5b57\u8282 boolean\u7c7b\u578b\u9002\u7528\u4e8e\u903b\u8f91\u8fd0\u7b97,\u4e00\u822c\u7528\u4e8e\u6d41\u7a0b\u63a7\u5236 \u6ce8\u610f:\u4e0d\u80fd\u75280\u6216\u8005\u975e0\u6574\u6570\u66ff\u4ee3false\u6216true \u5728==\u8f93\u5165\u4e2d==,\u53ea\u6709t\u6216\u8005true\u662ftrue,\u5176\u4f59\u5168\u90e8\u4e3afalse","title":"\u5e03\u5c14\u7c7b\u578b"},{"location":"Golang/%E5%B8%83%E5%B0%94%E7%B1%BB%E5%9E%8B/#bool","text":"\u53ea\u5141\u8bb8\u53d6\u503ctrue\u548cfalse bool\u7c7b\u578b\u503c\u5360\u4e00\u4e2a\u5b57\u8282 boolean\u7c7b\u578b\u9002\u7528\u4e8e\u903b\u8f91\u8fd0\u7b97,\u4e00\u822c\u7528\u4e8e\u6d41\u7a0b\u63a7\u5236 \u6ce8\u610f:\u4e0d\u80fd\u75280\u6216\u8005\u975e0\u6574\u6570\u66ff\u4ee3false\u6216true \u5728==\u8f93\u5165\u4e2d==,\u53ea\u6709t\u6216\u8005true\u662ftrue,\u5176\u4f59\u5168\u90e8\u4e3afalse","title":"\u5e03\u5c14\u7c7b\u578bbool"},{"location":"Golang/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/","text":"Golang\u4e2d\u7684\u5e76\u53d1\u7f16\u7a0b \u5168\u5c40\u53d8\u91cf\u4e92\u65a5\u9501 sync\u5305 goroutine \u4f7f\u7528 \u542f\u52a8\u5355\u4e2agoroutine \u542f\u52a8\u591a\u4e2agoroutine \u53ef\u589e\u957f\u7684\u6808 goroutine\u8c03\u5ea6 GOMAXPROCS channel \u58f0\u660e \u8bf4\u660e \u521d\u59cb\u5316 \u64cd\u4f5c \u53d1\u9001 \u63a5\u6536 \u5173\u95ed \u6ce8\u610f: \u65e0\u7f13\u51b2\u7684\u901a\u9053 \u6ce8\u610f \u6709\u7f13\u51b2\u7684\u7ba1\u9053 \u63a5\u6536\u7a7a\u63a5\u53e3\u7684channel channel\u7684\u904d\u5386 \u5355\u5411\u901a\u9053 channel\u7684\u963b\u585e\u673a\u5236 \u901a\u9053\u5f02\u5e38\u603b\u7ed3 \u5f02\u5e38\u6355\u83b7 worker pool(goroutine\u6c60) select\u591a\u8def\u590d\u7528 \u5e76\u53d1\u5b89\u5168\u548c\u9501 \u4e92\u65a5\u9501 \u8bfb\u5199\u4e92\u65a5\u9501 sync.WaitGroup \u5e76\u53d1\u5b89\u5168\u7684\u5355\u4f8b\u6a21\u5f0f sync.Map \u539f\u5b50\u64cd\u4f5c atomic\u5305 \u793a\u4f8b Golang\u4e2d\u7684\u5e76\u53d1\u7f16\u7a0b \u00b6 \u5355\u7eaf\u5730\u5c06\u51fd\u6570\u5e76\u53d1\u6267\u884c\u662f\u6ca1\u6709\u610f\u4e49\u7684\u3002\u51fd\u6570\u4e0e\u51fd\u6570\u95f4\u9700\u8981\u4ea4\u6362\u6570\u636e\u624d\u80fd\u4f53\u73b0\u5e76\u53d1\u6267\u884c\u51fd\u6570\u7684\u610f\u4e49\u3002 \u867d\u7136\u53ef\u4ee5\u4f7f\u7528\u5171\u4eab\u5185\u5b58\u8fdb\u884c\u6570\u636e\u4ea4\u6362\uff0c\u4f46\u662f\u5171\u4eab\u5185\u5b58\u5728\u4e0d\u540c\u7684 goroutine \u4e2d\u5bb9\u6613\u53d1\u751f\u7ade\u6001\u95ee\u9898\u3002\u4e3a\u4e86\u4fdd\u8bc1\u6570\u636e\u4ea4\u6362\u7684\u6b63\u786e\u6027\uff0c\u5fc5\u987b\u4f7f\u7528\u4e92\u65a5\u91cf\u5bf9\u5185\u5b58\u8fdb\u884c\u52a0\u9501\uff0c\u8fd9\u79cd\u505a\u6cd5\u52bf\u5fc5\u9020\u6210\u6027\u80fd\u95ee\u9898\u3002 Go\u8bed\u8a00\u7684\u5e76\u53d1\u6a21\u578b\u662f CSP\uff08Communicating Sequential Processes\uff09 \uff0c\u63d0\u5021**\u901a\u8fc7\u901a\u4fe1\u5171\u4eab\u5185\u5b58**\u800c\u4e0d\u662f**\u901a\u8fc7\u5171\u4eab\u5185\u5b58\u800c\u5b9e\u73b0\u901a\u4fe1**\u3002 \u5982\u679c\u8bf4 goroutine \u662fGo\u7a0b\u5e8f\u5e76\u53d1\u7684\u6267\u884c\u4f53\uff0c channel \u5c31\u662f\u5b83\u4eec\u4e4b\u95f4\u7684\u8fde\u63a5\u3002 channel \u662f\u53ef\u4ee5\u8ba9\u4e00\u4e2a goroutine \u53d1\u9001\u7279\u5b9a\u503c\u5230\u53e6\u4e00\u4e2a goroutine \u7684\u901a\u4fe1\u673a\u5236\u3002 Go \u8bed\u8a00\u4e2d\u7684\u901a\u9053\uff08channel\uff09\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u7c7b\u578b\u3002\u901a\u9053\u50cf\u4e00\u4e2a\u4f20\u9001\u5e26\u6216\u8005\u961f\u5217\uff0c\u603b\u662f\u9075\u5faa\u5148\u5165\u5148\u51fa\uff08First In First Out\uff09\u7684\u89c4\u5219\uff0c\u4fdd\u8bc1\u6536\u53d1\u6570\u636e\u7684\u987a\u5e8f\u3002\u6bcf\u4e00\u4e2a\u901a\u9053\u90fd\u662f\u4e00\u4e2a\u5177\u4f53\u7c7b\u578b\u7684\u5bfc\u7ba1\uff0c\u4e5f\u5c31\u662f\u58f0\u660echannel\u7684\u65f6\u5019\u9700\u8981\u4e3a\u5176\u6307\u5b9a\u5143\u7d20\u7c7b\u578b\u3002 \u5168\u5c40\u53d8\u91cf\u4e92\u65a5\u9501 \u00b6 package main import ( \"fmt\" \"time\" ) //\u7f16\u5199\u4e00\u989d\u51fd\u6570,\u8ba1\u7b971\u5230200\u5404\u4e2a\u6570\u7684\u9636\u4e58,\u5e76\u653e\u5165map\u79cd //\u542f\u52a8\u591a\u4e2a\u534f\u7a0b,\u5c06\u7edf\u8ba1\u7684\u7ed3\u679c\u653e\u5230map,\u6b64map\u5e94\u8be5\u662f\u4e00\u4e2a\u5168\u5c40\u7684 var ( myMap = make ( map [ int ] int , 10 ) ) //\u8ba1\u7b97n\u7684\u9636\u4e58,\u5c06\u7ed3\u679c\u653e\u5165map\u4e2d func test ( n int ) { res := 1 for i := 1 ; i <= n ; i ++ { res *= i } //\u5c06res\u7ed3\u679c\u653e\u5165myMap\u4e2d myMap [ n ] = res //\u4f1a\u89e6\u53d1fatal error: concurrent map writes\u9519\u8bef //\u89e6\u53d1\u4e86\u5199\u4fdd\u62a4 } func main () { //\u5f00\u542f\u591a\u4e2a\u534f\u7a0b\u5b8c\u6210\u4efb\u52a1 for i := 1 ; i <= 200 ; i ++ { go test ( i ) } time . Sleep ( time . Second * 10 ) //\u8f93\u51famap\u7ed3\u679c for i , v := range myMap { fmt . Printf ( \"map[%d]=%d\\n\" , i , v ) } } //go build -race main.go \u5f53\u51fa\u73b0\u8d44\u6e90\u7ade\u4e89\u7684\u65f6\u5019,race\u4f1a\u5c06\u4fe1\u606f\u6253\u5370\u51fa\u6765 //\u4f1a\u62a5Found 3 data race(s),\u8868\u793a\u4e09\u4e2a\u8d44\u6e90\u7ade\u4e89 \u4f7f\u7528goroutine\u65f6,\u4f1a\u51fa\u73b0\u5e76\u53d1/\u5e76\u884c\u5b89\u5168\u95ee\u9898. \u53ef\u4ee5\u901a\u8fc7\u52a0\u5165\u4e92\u65a5\u9501\u6765\u89e3\u51b3\u95ee\u9898. sync\u5305 \u00b6 package main import ( \"fmt\" \"sync\" ) //\u7f16\u5199\u4e00\u989d\u51fd\u6570,\u8ba1\u7b971\u5230200\u5404\u4e2a\u6570\u7684\u9636\u4e58,\u5e76\u653e\u5165map\u79cd //\u542f\u52a8\u591a\u4e2a\u534f\u7a0b,\u5c06\u7edf\u8ba1\u7684\u7ed3\u679c\u653e\u5230map,\u6b64map\u5e94\u8be5\u662f\u4e00\u4e2a\u5168\u5c40\u7684 var ( myMap = make ( map [ int ] int , 10 ) //\u58f0\u660e\u4e00\u4e2a\u5168\u5c40\u7684\u4e92\u65a5\u9501 //lock \u662f\u4e00\u4e2a\u5168\u5c40\u7684\u4e92\u65a5\u9501, //synv synchornized\u540c\u6b65\u5305 //Mutex\u4e92\u65a5,\u6392\u4ed6,\u662f\u4e00\u4e2a\u7ed3\u6784\u4f53,\u5176\u4e2d\u6709Lock\u548cUnlock\u4e24\u4e2a\u65b9\u6cd5 lock sync . Mutex ) //\u8ba1\u7b97n\u7684\u9636\u4e58,\u5c06\u7ed3\u679c\u653e\u5165map\u4e2d func test ( n int ) { res := 1 for i := 1 ; i <= n ; i ++ { res *= i } //\u5c06res\u7ed3\u679c\u653e\u5165myMap\u4e2d //\u52a0\u9501 lock . Lock () myMap [ n ] = res //\u89e3\u9501 lock . Unlock () //\u4f1a\u89e6\u53d1fatal error: concurrent map writes\u9519\u8bef //\u89e6\u53d1\u4e86\u5199\u4fdd\u62a4 } func main () { //\u5f00\u542f\u591a\u4e2a\u534f\u7a0b\u5b8c\u6210\u4efb\u52a1 for i := 1 ; i <= 20 ; i ++ { go test ( i ) } // time.Sleep(time.Second * 10) //\u8f93\u51famap\u7ed3\u679c lock . Lock () for i , v := range myMap { fmt . Printf ( \"map[%d]=%d\\n\" , i , v ) } lock . Unlock () } //go build -race main.go \u5f53\u51fa\u73b0\u8d44\u6e90\u7ade\u4e89\u7684\u65f6\u5019,race\u4f1a\u5c06\u4fe1\u606f\u6253\u5370\u51fa\u6765 //\u4f1a\u62a5Found 3 data race(s),\u8868\u793a\u4e09\u4e2a\u8d44\u6e90\u7ade\u4e89 \u7ed3\u679c\u4e0d\u4f1a\u62a5\u9519 goroutine \u00b6 Go\u8bed\u8a00\u4e2d\u7684goroutine\u6982\u5ff5\u7c7b\u4f3c\u7ebf\u7a0b,\u4f46\u662fgoroutine\u662f\u7531Go\u7684\u8fd0\u884c\u65f6(runtime)\u8c03\u5ea6\u548c\u7ba1\u7406\u7684.Go\u7a0b\u5e8f\u4f1a\u667a\u80fd\u7684\u5c06goroutine\u4e2d\u7684\u4efb\u52a1\u5408\u7406\u7684\u5206\u914d\u7ed9\u6bcf\u4e2aCPU. \u4f7f\u7528 \u00b6 \u53ea\u9700\u8981\u5728\u8c03\u7528\u51fd\u6570\u7684\u65f6\u5019\u5728\u524d\u9762\u52a0\u4e0ago\u5173\u952e\u5b57,\u5c31\u53ef\u4e0e\u4e3a\u4e00\u4e2a\u51fd\u6570\u521b\u5efa\u4e00\u4e2agoroutine. \u4e00\u4e2agoroutine\u5fc5\u987b\u5bf9\u5e94\u4e00\u4e2a\u51fd\u6570,\u53ef\u4ee5\u521b\u5efa\u591a\u4e2agoroutine\u53bb\u6267\u884c\u76f8\u540c\u7684\u51fd\u6570. \u542f\u52a8\u5355\u4e2agoroutine \u00b6 \u53ea\u9700\u8981\u5728\u8c03\u7528\u7684\u51fd\u6570(\u666e\u901a\u51fd\u6570\u6216\u533f\u540d\u51fd\u6570)\u524d\u9762\u52a0\u4e00\u4e2ago\u5173\u952e\u5b57 func hello (){ fmt . Println ( \"hello\" ) } func main (){ go hello () // \u542f\u52a8\u53e6\u5916\u4e00\u4e2agoroutine\u53bb\u6267\u884chello\u51fd\u6570 fmt . Println ( \"main done\" ) } \u7a0b\u5e8f\u542f\u52a8\u65f6,Go\u7a0b\u5e8f\u4f1a\u4e3amain()\u51fd\u6570\u521b\u5efa\u4e00\u4e2a\u9ed8\u8ba4\u7684goroutine. \u5f53main()\u51fd\u6570\u8fd4\u56de\u7684\u65f6\u5019\u8be5goroutine\u5c31\u7ed3\u675f\u4e86,main()\u51fd\u6570\u4e2d\u6240\u6709\u542f\u52a8\u7684goroutine\u90fd\u4f1a\u4e00\u5e76\u7ed3\u675f. \u542f\u52a8\u591a\u4e2agoroutine \u00b6 package main import ( \"fmt\" \"sync\" ) var wg sync . WaitGroup func hello ( i int ){ fmt . Println ( \"hello\" , i ) wg . Done () //\u901a\u77e5wg\u8ba1\u6570\u5668\u51cf1 } func main (){ for i := 0 ; i < 10 ; i ++ { wg . Add ( 1 ) //wg\u8ba1\u6570\u5668\u52a01 go hello () // \u542f\u52a8\u53e6\u5916\u4e00\u4e2agoroutine\u53bb\u6267\u884chello\u51fd\u6570 } fmt . Println ( \"main done\" ) wg . Wait () //\u963b\u585e,\u7b49\u5f85\u5176\u4ed6\u8ba1\u6570\u5668\u5f52\u96f6 } \u53ef\u589e\u957f\u7684\u6808 \u00b6 OS\u7ebf\u7a0b(\u64cd\u4f5c\u7cfb\u7edf\u7684\u7ebf\u7a0b)\u4e00\u822c\u56fa\u5b9a\u6808\u5185\u5b58\u901a\u5e38\u4e3a2MB,\u800c\u4e00\u4e2agoroutine\u7684\u6808\u5728\u5176\u751f\u547d\u5468\u671f\u5f00\u59cb\u65f6\u53ea\u6709\u5f88\u5c0f\u7684\u6808(1.5\u4ee5\u540e2kb),goroutine\u7684\u6808\u4e0d\u662f\u56fa\u5b9a\u7684,\u53ef\u4ee5\u6309\u9700\u589e\u52a0\u548c\u51cf\u5c0f,\u6700\u5927\u9650\u5236\u53ef\u4ee5\u5230\u8fbe1GB,\u6240\u4ee5\u7406\u8bba\u4e0a\u4e00\u6b21\u53ef\u4ee5\u521b\u5efa\u5341\u4e07\u6b21\u5de6\u53f3\u7684goroutine. goroutine\u8c03\u5ea6 \u00b6 GPM \u662fGo\u8bed\u8a00\u8fd0\u884c\u65f6\uff08runtime\uff09\u5c42\u9762\u7684\u5b9e\u73b0\uff0c\u662fgo\u8bed\u8a00\u81ea\u5df1\u5b9e\u73b0\u7684\u4e00\u5957\u8c03\u5ea6\u7cfb\u7edf\u3002\u533a\u522b\u4e8e\u64cd\u4f5c\u7cfb\u7edf\u8c03\u5ea6OS\u7ebf\u7a0b\u3002 G \u5f88\u597d\u7406\u89e3\uff0c\u5c31\u662f\u4e2agoroutine\u7684\uff0c\u91cc\u9762\u9664\u4e86\u5b58\u653e\u672cgoroutine\u4fe1\u606f\u5916 \u8fd8\u6709\u4e0e\u6240\u5728P\u7684\u7ed1\u5b9a\u7b49\u4fe1\u606f\u3002 P \u7ba1\u7406\u7740\u4e00\u7ec4goroutine\u961f\u5217\uff0cP\u91cc\u9762\u4f1a\u5b58\u50a8\u5f53\u524dgoroutine\u8fd0\u884c\u7684\u4e0a\u4e0b\u6587\u73af\u5883\uff08\u51fd\u6570\u6307\u9488\uff0c\u5806\u6808\u5730\u5740\u53ca\u5730\u5740\u8fb9\u754c\uff09\uff0cP\u4f1a\u5bf9\u81ea\u5df1\u7ba1\u7406\u7684goroutine\u961f\u5217\u505a\u4e00\u4e9b\u8c03\u5ea6\uff08\u6bd4\u5982\u628a\u5360\u7528CPU\u65f6\u95f4\u8f83\u957f\u7684goroutine\u6682\u505c\u3001\u8fd0\u884c\u540e\u7eed\u7684goroutine\u7b49\u7b49\uff09\u5f53\u81ea\u5df1\u7684\u961f\u5217\u6d88\u8d39\u5b8c\u4e86\u5c31\u53bb\u5168\u5c40\u961f\u5217\u91cc\u53d6\uff0c\u5982\u679c\u5168\u5c40\u961f\u5217\u91cc\u4e5f\u6d88\u8d39\u5b8c\u4e86\u4f1a\u53bb\u5176\u4ed6P\u7684\u961f\u5217\u91cc\u62a2\u4efb\u52a1\u3002 M\uff08machine\uff09 \u662fGo\u8fd0\u884c\u65f6\uff08runtime\uff09\u5bf9\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u7ebf\u7a0b\u7684\u865a\u62df\uff0c M\u4e0e\u5185\u6838\u7ebf\u7a0b\u4e00\u822c\u662f\u4e00\u4e00\u6620\u5c04\u7684\u5173\u7cfb\uff0c \u4e00\u4e2agroutine\u6700\u7ec8\u662f\u8981\u653e\u5230M\u4e0a\u6267\u884c\u7684\uff1b P\u4e0eM\u4e00\u822c\u4e5f\u662f\u4e00\u4e00\u5bf9\u5e94\u7684\u3002\u4ed6\u4eec\u5173\u7cfb\u662f\uff1a P\u7ba1\u7406\u7740\u4e00\u7ec4G\u6302\u8f7d\u5728M\u4e0a\u8fd0\u884c\u3002\u5f53\u4e00\u4e2aG\u957f\u4e45\u963b\u585e\u5728\u4e00\u4e2aM\u4e0a\u65f6\uff0cruntime\u4f1a\u65b0\u5efa\u4e00\u4e2aM\uff0c\u963b\u585eG\u6240\u5728\u7684P\u4f1a\u628a\u5176\u4ed6\u7684G \u6302\u8f7d\u5728\u65b0\u5efa\u7684M\u4e0a\u3002\u5f53\u65e7\u7684G\u963b\u585e\u5b8c\u6210\u6216\u8005\u8ba4\u4e3a\u5176\u5df2\u7ecf\u6b7b\u6389\u65f6 \u56de\u6536\u65e7\u7684M\u3002 P\u7684\u4e2a\u6570\u662f\u901a\u8fc7 runtime.GOMAXPROCS \u8bbe\u5b9a\uff08\u6700\u5927256\uff09\uff0cGo1.5\u7248\u672c\u4e4b\u540e\u9ed8\u8ba4\u4e3a\u7269\u7406\u7ebf\u7a0b\u6570\u3002 \u5728\u5e76\u53d1\u91cf\u5927\u7684\u65f6\u5019\u4f1a\u589e\u52a0\u4e00\u4e9bP\u548cM\uff0c\u4f46\u4e0d\u4f1a\u592a\u591a\uff0c\u5207\u6362\u592a\u9891\u7e41\u7684\u8bdd\u5f97\u4e0d\u507f\u5931\u3002 \u5355\u4ece\u7ebf\u7a0b\u8c03\u5ea6\u8bb2\uff0cGo\u8bed\u8a00\u76f8\u6bd4\u8d77\u5176\u4ed6\u8bed\u8a00\u7684\u4f18\u52bf\u5728\u4e8eOS\u7ebf\u7a0b\u662f\u7531OS\u5185\u6838\u6765\u8c03\u5ea6\u7684\uff0c goroutine \u5219\u662f\u7531Go\u8fd0\u884c\u65f6\uff08runtime\uff09\u81ea\u5df1\u7684\u8c03\u5ea6\u5668\u8c03\u5ea6\u7684\uff0c\u8fd9\u4e2a\u8c03\u5ea6\u5668\u4f7f\u7528\u4e00\u4e2a\u79f0\u4e3am:n\u8c03\u5ea6\u7684\u6280\u672f\uff08\u590d\u7528/\u8c03\u5ea6m\u4e2agoroutine\u5230n\u4e2aOS\u7ebf\u7a0b\uff09\u3002 \u5176\u4e00\u5927\u7279\u70b9\u662fgoroutine\u7684\u8c03\u5ea6\u662f\u5728\u7528\u6237\u6001\u4e0b\u5b8c\u6210\u7684\uff0c \u4e0d\u6d89\u53ca\u5185\u6838\u6001\u4e0e\u7528\u6237\u6001\u4e4b\u95f4\u7684\u9891\u7e41\u5207\u6362\uff0c\u5305\u62ec\u5185\u5b58\u7684\u5206\u914d\u4e0e\u91ca\u653e\uff0c\u90fd\u662f\u5728\u7528\u6237\u6001\u7ef4\u62a4\u7740\u4e00\u5757\u5927\u7684\u5185\u5b58\u6c60\uff0c \u4e0d\u76f4\u63a5\u8c03\u7528\u7cfb\u7edf\u7684malloc\u51fd\u6570\uff08\u9664\u975e\u5185\u5b58\u6c60\u9700\u8981\u6539\u53d8\uff09\uff0c\u6210\u672c\u6bd4\u8c03\u5ea6OS\u7ebf\u7a0b\u4f4e\u5f88\u591a\u3002 \u53e6\u4e00\u65b9\u9762\u5145\u5206\u5229\u7528\u4e86\u591a\u6838\u7684\u786c\u4ef6\u8d44\u6e90\uff0c\u8fd1\u4f3c\u7684\u628a\u82e5\u5e72goroutine\u5747\u5206\u5728\u7269\u7406\u7ebf\u7a0b\u4e0a\uff0c \u518d\u52a0\u4e0a\u672c\u8eabgoroutine\u7684\u8d85\u8f7b\u91cf\uff0c\u4ee5\u4e0a\u79cd\u79cd\u4fdd\u8bc1\u4e86go\u8c03\u5ea6\u65b9\u9762\u7684\u6027\u80fd\u3002 GOMAXPROCS \u00b6 Go\u8fd0\u884c\u65f6\u7684\u8c03\u5ea6\u5668\u4f7f\u7528 GOMAXPROCS \u53c2\u6570\u6765\u786e\u5b9a\u9700\u8981\u4f7f\u7528\u591a\u5c11\u4e2aOS\u7ebf\u7a0b\u6765\u540c\u65f6\u6267\u884cGo\u4ee3\u7801\u3002\u9ed8\u8ba4\u503c\u662f\u673a\u5668\u4e0a\u7684CPU\u6838\u5fc3\u6570\u3002\u4f8b\u5982\u5728\u4e00\u4e2a8\u6838\u5fc3\u7684\u673a\u5668\u4e0a\uff0c\u8c03\u5ea6\u5668\u4f1a\u628aGo\u4ee3\u7801\u540c\u65f6\u8c03\u5ea6\u52308\u4e2aOS\u7ebf\u7a0b\u4e0a\uff08GOMAXPROCS\u662fm:n\u8c03\u5ea6\u4e2d\u7684n\uff09\u3002 Go\u8bed\u8a00\u4e2d\u53ef\u4ee5\u901a\u8fc7 runtime.GOMAXPROCS() \u51fd\u6570\u8bbe\u7f6e\u5f53\u524d\u7a0b\u5e8f\u5e76\u53d1\u65f6\u5360\u7528\u7684CPU\u903b\u8f91\u6838\u5fc3\u6570\u3002 Go1.5\u7248\u672c\u4e4b\u524d\uff0c\u9ed8\u8ba4\u4f7f\u7528\u7684\u662f\u5355\u6838\u5fc3\u6267\u884c\u3002Go1.5\u7248\u672c\u4e4b\u540e\uff0c\u9ed8\u8ba4\u4f7f\u7528\u5168\u90e8\u7684CPU\u903b\u8f91\u6838\u5fc3\u6570\u3002 func a () { for i := 1 ; i < 10 ; i ++ { fmt . Println ( \"A:\" , i ) } } func b () { for i := 1 ; i < 10 ; i ++ { fmt . Println ( \"B:\" , i ) } } func main () { runtime . GOMAXPROCS ( 1 ) go a () go b () time . Sleep ( time . Second ) } //\u4e24\u4e2a\u4efb\u52a1\u53ea\u6709\u4e00\u4e2a\u903b\u8f91\u6838\u5fc3\uff0c\u6b64\u65f6\u662f\u505a\u5b8c\u4e00\u4e2a\u4efb\u52a1\u518d\u505a\u53e6\u4e00\u4e2a\u4efb\u52a1\u3002 //\u5c06\u903b\u8f91\u6838\u5fc3\u6570\u8bbe\u4e3a2\uff0c\u6b64\u65f6\u4e24\u4e2a\u4efb\u52a1\u5e76\u884c\u6267\u884c\uff0c\u4ee3\u7801\u5982\u4e0b\u3002 func a () { for i := 1 ; i < 10 ; i ++ { fmt . Println ( \"A:\" , i ) } } func b () { for i := 1 ; i < 10 ; i ++ { fmt . Println ( \"B:\" , i ) } } func main () { runtime . GOMAXPROCS ( 2 ) go a () go b () time . Sleep ( time . Second ) } Go\u8bed\u8a00\u4e2d\u7684\u64cd\u4f5c\u7cfb\u7edf\u7ebf\u7a0b\u548cgoroutine\u7684\u5173\u7cfb\uff1a \u4e00\u4e2a\u64cd\u4f5c\u7cfb\u7edf\u7ebf\u7a0b\u5bf9\u5e94\u7528\u6237\u6001\u591a\u4e2agoroutine\u3002 go\u7a0b\u5e8f\u53ef\u4ee5\u540c\u65f6\u4f7f\u7528\u591a\u4e2a\u64cd\u4f5c\u7cfb\u7edf\u7ebf\u7a0b\u3002 goroutine\u548cOS\u7ebf\u7a0b\u662f\u591a\u5bf9\u591a\u7684\u5173\u7cfb\uff0c\u5373m:n\u3002m\u4e2agoroutine\u5206\u914d\u5230n\u4e2acpu\u4e0a\u53bb\u6267\u884c channel \u00b6 channel\u662f\u4e00\u79cd\u5f15\u7528\u7c7b\u578b channel\u672c\u8d28\u662f\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\u7684\u961f\u5217. channel\u662f\u5148\u8fdb\u5148\u51faFIFO,first in first out \u7ebf\u7a0b\u5b89\u5168,\u591agoroutine\u8bbf\u95ee\u65f6,\u4e0d\u9700\u8981\u52a0\u9501,channel\u672c\u8eab\u662f\u7ebf\u7a0b\u5b89\u5168\u7684 channel\u662f\u6709\u7c7b\u578b\u7684,\u4e00\u4e2astring\u7684channel\u53ea\u80fd\u653estring\u7c7b\u578b\u7684\u6570\u636e \u58f0\u660e \u00b6 var \u53d8\u91cf chan \u5143\u7d20\u7c7b\u578b var intChan chan int ( intChan\u7528\u4e8e\u5b58\u653eint\u6570\u636e ) var mapChan chan map [ int ] string var perChan chan Person var perChan2 chan * Persion \u8bf4\u660e \u00b6 channel\u662f\u5f15\u7528\u7c7b\u578b channel\u5fc5\u987b\u521d\u59cb\u5316\u624d\u80fd\u5199\u5165\u6570\u636e,\u5373\u4f7f\u7528\u524d\u9700\u8981\u5148make \u7ba1\u9053\u662f\u6709\u7c7b\u578b\u7684,intChan\u53ea\u80fd\u5199\u5165\u6574\u6570int \u521d\u59cb\u5316 \u00b6 \u901a\u9053\u662f\u5f15\u7528\u7c7b\u578b,\u5373\u5176\u7a7a\u503c\u4e3anil var ch chan int fmt . Println ( ch ) // <nil> \u58f0\u660e\u901a\u9053\u540e,\u4f7f\u7528\u4e4b\u524d\u9700\u8981make\u521d\u59cb\u5316\u540e\u624d\u80fd\u4f7f\u7528. make ( chan \u5143\u7d20\u7c7b\u578b ,[ \u7f13\u51b2\u5927\u5c0f ]) ch4 := make ( chan int ) ch5 := make ( chan bool ) ch6 := make ( chan [] int ) channel\u7684\u7f13\u51b2\u5927\u5c0f\u53ef\u4ee5\u9009\u62e9\u5199\u6216\u4e0d\u5199. \u64cd\u4f5c \u00b6 \u901a\u9053\u6709\u53d1\u9001\uff08send\uff09\u3001\u63a5\u6536(receive\uff09\u548c\u5173\u95ed\uff08close\uff09\u4e09\u79cd\u64cd\u4f5c\u3002 \u53d1\u9001\u548c\u63a5\u6536\u90fd\u4f7f\u7528 <- \u7b26\u53f7\u3002 \u5b9a\u4e49\u4e00\u4e2a\u901a\u9053 ch := make ( chan int ) \u53d1\u9001 \u00b6 \u5c06\u4e00\u4e2a\u503c\u53d1\u9001\u5230\u901a\u9053\u4e2d\u3002 ch <- 10 // \u628a10\u53d1\u9001\u5230ch\u4e2d \u63a5\u6536 \u00b6 \u4ece\u4e00\u4e2a\u901a\u9053\u4e2d\u63a5\u6536\u503c\u3002 x := <- ch // \u4ecech\u4e2d\u63a5\u6536\u503c\u5e76\u8d4b\u503c\u7ed9\u53d8\u91cfx <- ch // \u4ecech\u4e2d\u63a5\u6536\u503c\uff0c\u5ffd\u7565\u7ed3\u679c \u5173\u95ed \u00b6 \u6211\u4eec\u901a\u8fc7\u8c03\u7528\u5185\u7f6e\u7684 close \u51fd\u6570\u6765\u5173\u95ed\u901a\u9053\u3002 close ( ch ) \u5173\u4e8e\u5173\u95ed\u901a\u9053\u9700\u8981\u6ce8\u610f\u7684\u4e8b\u60c5\u662f\uff0c\u53ea\u6709\u5728\u901a\u77e5\u63a5\u6536\u65b9goroutine\u6240\u6709\u7684\u6570\u636e\u90fd\u53d1\u9001\u5b8c\u6bd5\u7684\u65f6\u5019\u624d\u9700\u8981\u5173\u95ed\u901a\u9053\u3002\u901a\u9053\u662f\u53ef\u4ee5\u88ab\u5783\u573e\u56de\u6536\u673a\u5236\u56de\u6536\u7684\uff0c\u5b83\u548c\u5173\u95ed\u6587\u4ef6\u662f\u4e0d\u4e00\u6837\u7684\uff0c\u5728\u7ed3\u675f\u64cd\u4f5c\u4e4b\u540e\u5173\u95ed\u6587\u4ef6\u662f\u5fc5\u987b\u8981\u505a\u7684\uff0c\u4f46\u5173\u95ed\u901a\u9053\u4e0d\u662f\u5fc5\u987b\u7684\u3002 \u5173\u95ed\u540e\u7684\u901a\u9053\u6709\u4ee5\u4e0b\u7279\u70b9\uff1a \u5bf9\u4e00\u4e2a\u5173\u95ed\u7684\u901a\u9053\u518d\u53d1\u9001\u503c\u5c31\u4f1a\u5bfc\u81f4panic\u3002 \u5bf9\u4e00\u4e2a\u5173\u95ed\u7684\u901a\u9053\u8fdb\u884c\u63a5\u6536\u4f1a\u4e00\u76f4\u83b7\u53d6\u503c\u76f4\u5230\u901a\u9053\u4e3a\u7a7a\u3002 \u5bf9\u4e00\u4e2a\u5173\u95ed\u7684\u5e76\u4e14\u6ca1\u6709\u503c\u7684\u901a\u9053\u6267\u884c\u63a5\u6536\u64cd\u4f5c\u4f1a\u5f97\u5230\u5bf9\u5e94\u7c7b\u578b\u7684\u96f6\u503c\u3002 \u5173\u95ed\u4e00\u4e2a\u5df2\u7ecf\u5173\u95ed\u7684\u901a\u9053\u4f1a\u5bfc\u81f4panic\u3002 \u4f7f\u7528\u5185\u7f6e\u51fd\u6570close\u53ef\u4ee5\u5173\u95edchannel,\u5f53channel\u5173\u95ed\u540e,\u5c31\u4e0d\u80fd\u518d\u5411channel\u5199\u6570\u636e\u4e86,\u4f46\u662f\u4f9d\u7136\u53ef\u4ee5\u4ece\u8be5channel\u8bfb\u53d6\u6570\u636e. \u7c7b\u4f3c\u4e8e\u6dfb\u52a0\u4e86\u5199\u9501,\u800c\u8bfb\u6ca1\u6709\u9650\u5236. close\u4e3a\u5185\u7f6e\u51fd\u6570,\u6548\u679c\u662f\u518d\u6700\u540e\u53d1\u9001\u7684\u503c\u88ab\u63a5\u6536\u540e\u505c\u6b62\u8be5\u901a\u9053. \u6ce8\u610f: \u00b6 channel\u4e2d\u53ea\u80fd\u5b58\u653e\u6307\u5b9a\u6570\u636e\u7c7b\u578b,\u5982\u679c\u8981\u4f7f\u7528\u591a\u79cd\u6570\u636e\u7ed3\u6784,\u9700\u8981\u4f7f\u7528\u7a7a\u63a5\u53e3 channel\u6570\u636e\u653e\u6ee1cap\u540e\u4e0d\u53ef\u4ee5\u7ee7\u7eed\u5b58\u5165,\u62a5deadlock\u9519 \u5982\u679cchannel\u4e2d\u6570\u636e\u4e3a\u7a7a,\u7ee7\u7eed\u53d6\u503c,\u62a5deadlock\u9519 \u65e0\u7f13\u51b2\u7684\u901a\u9053 \u00b6 \u65e0\u7f13\u51b2\u7684\u901a\u9053\u53c8\u79f0\u4e3a\u963b\u585e\u7684\u901a\u9053\u3002\u6211\u4eec\u6765\u770b\u4e00\u4e0b\u4e0b\u9762\u7684\u4ee3\u7801\uff1a func main () { ch := make ( chan int ) ch <- 10 fmt . Println ( \"\u53d1\u9001\u6210\u529f\" ) } \u4e0a\u9762\u8fd9\u6bb5\u4ee3\u7801\u80fd\u591f\u901a\u8fc7\u7f16\u8bd1\uff0c\u4f46\u662f\u6267\u884c\u7684\u65f6\u5019\u4f1a\u51fa\u73b0\u4ee5\u4e0b\u9519\u8bef\uff1a fatal error: all goroutines are asleep - deadlock! goroutine 1 [ chan send ] : main.main () .../src/github.com/Q1mi/studygo/day06/channel02/main.go:8 +0x54 \u4e3a\u4ec0\u4e48\u4f1a\u51fa\u73b0 deadlock \u9519\u8bef\u5462\uff1f \u56e0\u4e3a\u6211\u4eec\u4f7f\u7528 ch := make(chan int) \u521b\u5efa\u7684\u662f\u65e0\u7f13\u51b2\u7684\u901a\u9053\uff0c\u65e0\u7f13\u51b2\u7684\u901a\u9053\u53ea\u6709\u5728\u6709\u4eba\u63a5\u6536\u503c\u7684\u65f6\u5019\u624d\u80fd\u53d1\u9001\u503c\u3002\u5c31\u50cf\u4f60\u4f4f\u7684\u5c0f\u533a\u6ca1\u6709\u5feb\u9012\u67dc\u548c\u4ee3\u6536\u70b9\uff0c\u5feb\u9012\u5458\u7ed9\u4f60\u6253\u7535\u8bdd\u5fc5\u987b\u8981\u628a\u8fd9\u4e2a\u7269\u54c1\u9001\u5230\u4f60\u7684\u624b\u4e2d\uff0c\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u65e0\u7f13\u51b2\u7684\u901a\u9053\u5fc5\u987b\u6709\u63a5\u6536\u624d\u80fd\u53d1\u9001\u3002 \u4e0a\u9762\u7684\u4ee3\u7801\u4f1a\u963b\u585e\u5728 ch <- 10 \u8fd9\u4e00\u884c\u4ee3\u7801\u5f62\u6210\u6b7b\u9501\uff0c\u90a3\u5982\u4f55\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u5462\uff1f \u4e00\u79cd\u65b9\u6cd5\u662f\u542f\u7528\u4e00\u4e2a goroutine \u53bb\u63a5\u6536\u503c\uff0c\u4f8b\u5982\uff1a func recv ( c chan int ) { ret := <- c fmt . Println ( \"\u63a5\u6536\u6210\u529f\" , ret ) } func main () { ch := make ( chan int ) go recv ( ch ) // \u542f\u7528goroutine\u4ece\u901a\u9053\u63a5\u6536\u503c ch <- 10 fmt . Println ( \"\u53d1\u9001\u6210\u529f\" ) } \u65e0\u7f13\u51b2\u901a\u9053\u4e0a\u7684\u53d1\u9001\u64cd\u4f5c\u4f1a\u963b\u585e\uff0c\u76f4\u5230\u53e6\u4e00\u4e2a goroutine \u5728\u8be5\u901a\u9053\u4e0a\u6267\u884c\u63a5\u6536\u64cd\u4f5c\uff0c\u8fd9\u65f6\u503c\u624d\u80fd\u53d1\u9001\u6210\u529f\uff0c\u4e24\u4e2a goroutine \u5c06\u7ee7\u7eed\u6267\u884c\u3002\u76f8\u53cd\uff0c\u5982\u679c\u63a5\u6536\u64cd\u4f5c\u5148\u6267\u884c\uff0c\u63a5\u6536\u65b9\u7684goroutine\u5c06\u963b\u585e\uff0c\u76f4\u5230\u53e6\u4e00\u4e2a goroutine \u5728\u8be5\u901a\u9053\u4e0a\u53d1\u9001\u4e00\u4e2a\u503c\u3002 \u4f7f\u7528\u65e0\u7f13\u51b2\u901a\u9053\u8fdb\u884c\u901a\u4fe1\u5c06\u5bfc\u81f4\u53d1\u9001\u548c\u63a5\u6536\u7684 goroutine \u540c\u6b65\u5316\u3002\u56e0\u6b64\uff0c\u65e0\u7f13\u51b2\u901a\u9053\u4e5f\u88ab\u79f0\u4e3a \u540c\u6b65\u901a\u9053 \u3002 \u6ce8\u610f \u00b6 \u65e0\u7f13\u51b2\u7684\u7ba1\u9053\u9ed8\u8ba4len\u548ccap\u90fd\u662f0 func main () { ch := make ( chan int ) fmt . Println ( len ( ch )) fmt . Println ( cap ( ch )) } >> > 0 0 \u6709\u7f13\u51b2\u7684\u7ba1\u9053 \u00b6 \u89e3\u51b3\u4e0a\u9762\u95ee\u9898\u7684\u65b9\u6cd5\u8fd8\u6709\u4e00\u79cd\u5c31\u662f\u4f7f\u7528\u6709\u7f13\u51b2\u533a\u7684\u901a\u9053\u3002\u6211\u4eec\u53ef\u4ee5\u5728\u4f7f\u7528make\u51fd\u6570\u521d\u59cb\u5316\u901a\u9053\u7684\u65f6\u5019\u4e3a\u5176\u6307\u5b9a\u901a\u9053\u7684\u5bb9\u91cf\uff0c\u4f8b\u5982\uff1a func main () { ch := make ( chan int , 1 ) // \u521b\u5efa\u4e00\u4e2a\u5bb9\u91cf\u4e3a1\u7684\u6709\u7f13\u51b2\u533a\u901a\u9053 ch <- 10 fmt . Println ( \"\u53d1\u9001\u6210\u529f\" ) } \u53ea\u8981\u901a\u9053\u7684\u5bb9\u91cf\u5927\u4e8e\u96f6\uff0c\u90a3\u4e48\u8be5\u901a\u9053\u5c31\u662f\u6709\u7f13\u51b2\u7684\u901a\u9053\uff0c\u901a\u9053\u7684\u5bb9\u91cf\u8868\u793a\u901a\u9053\u4e2d\u80fd\u5b58\u653e\u5143\u7d20\u7684\u6570\u91cf\u3002\u5c31\u50cf\u4f60\u5c0f\u533a\u7684\u5feb\u9012\u67dc\u53ea\u6709\u90a3\u4e48\u4e2a\u591a\u683c\u5b50\uff0c\u683c\u5b50\u6ee1\u4e86\u5c31\u88c5\u4e0d\u4e0b\u4e86\uff0c\u5c31\u963b\u585e\u4e86\uff0c\u7b49\u5230\u522b\u4eba\u53d6\u8d70\u4e00\u4e2a\u5feb\u9012\u5458\u5c31\u80fd\u5f80\u91cc\u9762\u653e\u4e00\u4e2a\u3002 \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5185\u7f6e\u7684 len \u51fd\u6570\u83b7\u53d6\u901a\u9053\u5185\u5143\u7d20\u7684\u6570\u91cf\uff0c\u4f7f\u7528 cap \u51fd\u6570\u83b7\u53d6\u901a\u9053\u7684\u5bb9\u91cf\uff0c\u867d\u7136\u6211\u4eec\u5f88\u5c11\u4f1a\u8fd9\u4e48\u505a\u3002 \u63a5\u6536\u7a7a\u63a5\u53e3\u7684channel \u00b6 package main import ( \"fmt\" ) type Cat struct { Name string Age int } func main () { //\u5b9a\u4e49\u4e00\u4e2a\u53ef\u4ee5\u5b58\u653e\u4efb\u610f\u6570\u636e\u7c7b\u578b\u7684\u7ba1\u9053 //var allChan chan interface{} allChan := make ( chan interface {}, 3 ) allChan <- 10 allChan <- \"agsol\" cat := Cat { \"tom\" , 4 } allChan <- cat //\u5982\u679c\u5e0c\u671b\u5f97\u5230channel\u4e2d\u7b2c\u4e09\u4e2a\u6570\u636e,\u9700\u8981\u5c06\u5176\u524d\u9762\u7684\u4e24\u4e2a\u6570\u636e\u5148\u63a8\u51fa //channel\u7684\u63a8\u51fa\u53ef\u4ee5\u6ca1\u6709\u53d8\u91cf\u63a5\u6536 <- allChan <- allChan newCat := <- allChan fmt . Printf ( \"newCat = %T,newCat=%v\\n\" , newCat , newCat ) // fmt.Printf(\"newCat.Name %v\", newCat.Name) //\u4e0a\u9762\u7684\u8f93\u51fa\u7c7b\u578b\u4e3a\u63a5\u53e3,\u65e0\u6cd5\u8fdb\u884c\u64cd\u4f5c,\u9700\u8981\u8fdb\u884c\u7c7b\u578b\u65ad\u8a00,\u7f16\u8bd1\u65e0\u6cd5\u901a\u8fc7 //\u4f7f\u7528\u7c7b\u578b\u65ad\u8a00 a := newCat .( Cat ) fmt . Printf ( \"newCat.Name %v\" , a . Name ) } >> > newCat = main . Cat , newCat ={ tom 4 } newCat . Name tom \u6ce8\u610f:newCat\u5728\u4ece\u7ba1\u9053\u4e2d\u63a8\u51fa\u7684\u65f6\u5019,\u6570\u636e\u7c7b\u578b\u4e3ainterface{},\u6240\u4ee5\u6ca1\u6709Name\u5c5e\u6027,\u9700\u8981\u63a5\u53e3\u53d6\u503c\u65f6\u8981\u4f7f\u7528\u7c7b\u578b\u65ad\u8a00. channel\u7684\u904d\u5386 \u00b6 channel\u652f\u6301for-range\u7684\u65b9\u5f0f\u8fdb\u884c\u904d\u5386. \u5728\u904d\u5386\u8fc7\u7a0b\u4e2d,\u5982\u679cchannel\u6ca1\u6709\u5173\u95ed,\u5219\u4f1a\u62a5deadlock\u9519\u8bef \u5728\u904d\u5386\u8fc7\u7a0b\u4e2d,\u5982\u679cchannel\u5df2\u7ecf\u5173\u95ed,\u5219\u4f1a\u6b63\u5e38\u904d\u5386\u6570\u636e,\u904d\u5386\u5b8c\u6210\u540e,\u4f1a\u9000\u51fa\u904d\u5386. package main import ( \"fmt\" ) func main () { intChan2 := make ( chan int , 100 ) for i := 1 ; i < 100 ; i ++ { intChan2 <- i * 2 } //\u5728\u904d\u5386\u524d\u5173\u95ed\u7ba1\u9053 close ( intChan2 ) //\u904d\u5386 for v := range intChan2 { fmt . Println ( \"v=\" , v ) } } \u904d\u5386\u7ba1\u9053\u65f6\u4e0d\u80fd\u4f7f\u7528\u666e\u901a\u7684for\u5faa\u73af,\u56e0\u4e3a\u7ba1\u9053\u5185\u6570\u636e\u4e2a\u6570\u53d8\u5316,\u6240\u4ee5len\u65e0\u6cd5\u7cbe\u786e\u53d6\u503c \u904d\u5386\u524d\u8981\u5173\u95ed\u7ba1\u9053,\u5426\u5219\u5728\u904d\u5386\u5230\u5934\u4e4b\u540e,\u8fd8\u4f1a\u7ee7\u7eed\u904d\u5386,\u5bfc\u81f4\u62a5\u9519 fatal error: all goroutines are asleep - deadlock! ,\u6b64\u79cd\u505a\u6cd5\u867d\u7136\u6700\u540e\u62a5\u9519,\u4f46\u662f\u7ed3\u679c\u4f1a\u88ab\u904d\u5386\u51fa\u6765. \u4f7f\u7528 for range \u904d\u5386\u901a\u9053\uff0c\u5f53\u901a\u9053\u88ab\u5173\u95ed\u7684\u65f6\u5019\u5c31\u4f1a\u9000\u51fa for range \u3002 \u5355\u5411\u901a\u9053 \u00b6 \u6709\u7684\u65f6\u5019\u6211\u4eec\u4f1a\u5c06\u901a\u9053\u4f5c\u4e3a\u53c2\u6570\u5728\u591a\u4e2a\u4efb\u52a1\u51fd\u6570\u95f4\u4f20\u9012\uff0c\u5f88\u591a\u65f6\u5019\u6211\u4eec\u5728\u4e0d\u540c\u7684\u4efb\u52a1\u51fd\u6570\u4e2d\u4f7f\u7528\u901a\u9053\u90fd\u4f1a\u5bf9\u5176\u8fdb\u884c\u9650\u5236\uff0c\u6bd4\u5982\u9650\u5236\u901a\u9053\u5728\u51fd\u6570\u4e2d\u53ea\u80fd\u53d1\u9001\u6216\u53ea\u80fd\u63a5\u6536\u3002 \u5728\u51fd\u6570\u7684\u53c2\u6570\u4e2d\u8bbe\u7f6e\u662f\u5426\u4e3a\u5355\u5411\u901a\u9053. Go\u8bed\u8a00\u4e2d\u63d0\u4f9b\u4e86**\u5355\u5411\u901a\u9053**\u6765\u5904\u7406\u8fd9\u79cd\u60c5\u51b5\u3002 //\u5355\u5411\u8fdb\u5165\u7ba1\u9053 func counter ( out chan <- int ) { for i := 0 ; i < 100 ; i ++ { out <- i } close ( out ) } //\u5355\u9879\u51fa\u7ba1\u9053 func printer ( in <- chan int ) { for i := range in { fmt . Println ( i ) } } \u5176\u4e2d\uff0c chan<- int \u662f\u4e00\u4e2a\u53ea\u5199\u5355\u5411\u901a\u9053\uff08\u53ea\u80fd\u5bf9\u5176\u5199\u5165int\u7c7b\u578b\u503c\uff09\uff0c\u53ef\u4ee5\u5bf9\u5176\u6267\u884c\u53d1\u9001\u64cd\u4f5c\u4f46\u662f\u4e0d\u80fd\u6267\u884c\u63a5\u6536\u64cd\u4f5c\uff1b <-chan int \u662f\u4e00\u4e2a\u53ea\u8bfb\u5355\u5411\u901a\u9053\uff08\u53ea\u80fd\u4ece\u5176\u8bfb\u53d6int\u7c7b\u578b\u503c\uff09\uff0c\u53ef\u4ee5\u5bf9\u5176\u6267\u884c\u63a5\u6536\u64cd\u4f5c\u4f46\u662f\u4e0d\u80fd\u6267\u884c\u53d1\u9001\u64cd\u4f5c\u3002 \u5728\u51fd\u6570\u4f20\u53c2\u53ca\u4efb\u4f55\u8d4b\u503c\u64cd\u4f5c\u4e2d\u53ef\u4ee5\u5c06\u53cc\u5411\u901a\u9053\u8f6c\u6362\u4e3a\u5355\u5411\u901a\u9053\uff0c\u4f46\u53cd\u8fc7\u6765\u662f\u4e0d\u53ef\u4ee5\u7684\u3002 channel\u7684\u963b\u585e\u673a\u5236 \u00b6 \u6ee1\u4e86\u6216\u8005\u6ca1\u4e86\u5c31\u4f1a\u963b\u585e. \u901a\u9053\u5f02\u5e38\u603b\u7ed3 \u00b6 \u5173\u95ed\u5df2\u7ecf\u5173\u95ed\u7684channel\u4f1a\u5f15\u53d1panic \u5f02\u5e38\u6355\u83b7 \u00b6 \u5f53\u5f00\u542f\u591a\u4e2a\u534f\u7a0b\u65f6,\u4e0d\u5e0c\u671b\u67d0\u4e00\u4e2a\u534f\u7a0b\u51fa\u73b0\u95ee\u9898\u5bfc\u81f4\u6574\u4f53\u4ee3\u7801\u7684panic. \u53ef\u4ee5\u4f7f\u7528defer+recover\u6765\u89e3\u51b3 package main import ( \"fmt\" \"time\" ) func sayHello () { for i := 0 ; i < 10 ; i ++ { time . Sleep ( time . Second ) fmt . Println ( \"hello world\" ) } } func test () { //\u4f7f\u7528defer+recover\u89e3\u51b3 defer func () { //\u6355\u83b7\u5f02\u5e38 if err := recover (); err != nil { fmt . Println ( \"test error\" , err ) } }() var myMap map [ int ] string myMap [ 0 ] = \"golang\" //\u56e0\u4e3a\u6ca1\u6709make,\u6240\u4ee5\u4f1a\u62a5\u9519 } func main () { go sayHello () go test () for i := 0 ; i < 10 ; i ++ { fmt . Println ( \"main ok\" , i ) time . Sleep ( time . Second ) } } defer \u5185\u5efa\u51fd\u6570,\u6240\u5728\u65b9\u6cd5\u91cc\u9000\u51fa\u65f6\u8c03\u7528\uff0c\u4e00\u4e2a\u65b9\u6cd5\u91cc\u82e5\u6709\u591a\u4e2adefer\u8bed\u53e5\uff0c\u5219\u5148\u58f0\u660e\u7684\u540e\u88ab\u8c03\u7528\uff0c\u4e00\u822c\u4e0erecover()\u51fd\u6570\u4e00\u8d77\u914d\u5408\u4f7f\u7528\uff0crecover()\u4e00\u822c\u7528\u4e8e\u6355\u6349panic\u629b\u51fa\u7684\u5f02\u5e38 worker pool(goroutine\u6c60) \u00b6 \u5728\u5de5\u4f5c\u4e2d\u6211\u4eec\u901a\u5e38\u4f1a\u4f7f\u7528\u53ef\u4ee5\u6307\u5b9a\u542f\u52a8\u7684goroutine\u6570\u91cf\u2013 worker pool \u6a21\u5f0f\uff0c\u63a7\u5236 goroutine \u7684\u6570\u91cf\uff0c\u9632\u6b62 goroutine \u6cc4\u6f0f\u548c\u66b4\u6da8\u3002 func worker ( id int , jobs <- chan int , results chan <- int ) { for j := range jobs { fmt . Printf ( \"worker:%d start job:%d\\n\" , id , j ) time . Sleep ( time . Second ) fmt . Printf ( \"worker:%d end job:%d\\n\" , id , j ) results <- j * 2 } } func main () { jobs := make ( chan int , 100 ) results := make ( chan int , 100 ) // \u5f00\u542f3\u4e2agoroutine for w := 1 ; w <= 3 ; w ++ { go worker ( w , jobs , results ) } // 5\u4e2a\u4efb\u52a1 for j := 1 ; j <= 5 ; j ++ { jobs <- j } close ( jobs ) // \u8f93\u51fa\u7ed3\u679c for a := 1 ; a <= 5 ; a ++ { <- results } } select\u591a\u8def\u590d\u7528 \u00b6 \u5728\u67d0\u4e9b\u573a\u666f\u4e0b\u6211\u4eec\u9700\u8981\u540c\u65f6\u4ece\u591a\u4e2a\u901a\u9053\u63a5\u6536\u6570\u636e\u3002 Go\u5185\u7f6e\u4e86 select \u5173\u952e\u5b57\uff0c\u53ef\u4ee5\u540c\u65f6\u54cd\u5e94\u591a\u4e2a\u901a\u9053\u7684\u64cd\u4f5c\u3002 select \u7684\u4f7f\u7528\u7c7b\u4f3c\u4e8eswitch\u8bed\u53e5\uff0c\u5b83\u6709\u4e00\u7cfb\u5217case\u5206\u652f\u548c\u4e00\u4e2a\u9ed8\u8ba4\u7684\u5206\u652f\u3002\u6bcf\u4e2acase\u4f1a\u5bf9\u5e94\u4e00\u4e2a\u901a\u9053\u7684\u901a\u4fe1\uff08\u63a5\u6536\u6216\u53d1\u9001\uff09\u8fc7\u7a0b\u3002 select \u4f1a\u4e00\u76f4\u7b49\u5f85\uff0c\u76f4\u5230\u67d0\u4e2a case \u7684\u901a\u4fe1\u64cd\u4f5c\u5b8c\u6210\u65f6\uff0c\u5c31\u4f1a\u6267\u884c case \u5206\u652f\u5bf9\u5e94\u7684\u8bed\u53e5\u3002\u5177\u4f53\u683c\u5f0f\u5982\u4e0b\uff1a select { case <- ch1 : ... case data := <- ch2 : ... case ch3 <- data : ... default : \u9ed8\u8ba4\u64cd\u4f5c } \u4e3e\u4e2a\u5c0f\u4f8b\u5b50\u6765\u6f14\u793a\u4e0b select \u7684\u4f7f\u7528\uff1a func main () { ch := make ( chan int , 1 ) for i := 0 ; i < 10 ; i ++ { select { case x := <- ch : fmt . Println ( x ) case ch <- i : } } } \u4f7f\u7528 select \u8bed\u53e5\u80fd\u63d0\u9ad8\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\u3002 \u53ef\u5904\u7406\u4e00\u4e2a\u6216\u591a\u4e2achannel\u7684\u53d1\u9001/\u63a5\u6536\u64cd\u4f5c\u3002 \u5982\u679c\u591a\u4e2a case \u540c\u65f6\u6ee1\u8db3\uff0c select \u4f1a\u968f\u673a\u9009\u62e9\u4e00\u4e2a\u3002 \u5bf9\u4e8e\u6ca1\u6709 case \u7684 select{} \u4f1a\u4e00\u76f4\u7b49\u5f85\uff0c\u53ef\u7528\u4e8e\u963b\u585emain\u51fd\u6570\u3002 \u5e76\u53d1\u5b89\u5168\u548c\u9501 \u00b6 package main import ( \"fmt\" \"time\" ) //\u7f16\u5199\u4e00\u989d\u51fd\u6570,\u8ba1\u7b971\u5230200\u5404\u4e2a\u6570\u7684\u9636\u4e58,\u5e76\u653e\u5165map\u79cd //\u542f\u52a8\u591a\u4e2a\u534f\u7a0b,\u5c06\u7edf\u8ba1\u7684\u7ed3\u679c\u653e\u5230map,\u6b64map\u5e94\u8be5\u662f\u4e00\u4e2a\u5168\u5c40\u7684 var ( myMap = make ( map [ int ] int , 10 ) ) //\u8ba1\u7b97n\u7684\u9636\u4e58,\u5c06\u7ed3\u679c\u653e\u5165map\u4e2d func test ( n int ) { res := 1 for i := 1 ; i <= n ; i ++ { res *= i } //\u5c06res\u7ed3\u679c\u653e\u5165myMap\u4e2d myMap [ n ] = res //\u4f1a\u89e6\u53d1fatal error: concurrent map writes\u9519\u8bef //\u89e6\u53d1\u4e86\u5199\u4fdd\u62a4 } func main () { //\u5f00\u542f\u591a\u4e2a\u534f\u7a0b\u5b8c\u6210\u4efb\u52a1 for i := 1 ; i <= 200 ; i ++ { go test ( i ) } time . Sleep ( time . Second * 10 ) //\u8f93\u51famap\u7ed3\u679c for i , v := range myMap { fmt . Printf ( \"map[%d]=%d\\n\" , i , v ) } } //go build -race main.go \u5f53\u51fa\u73b0\u8d44\u6e90\u7ade\u4e89\u7684\u65f6\u5019,race\u4f1a\u5c06\u4fe1\u606f\u6253\u5370\u51fa\u6765 //\u4f1a\u62a5Found 3 data race(s),\u8868\u793a\u4e09\u4e2a\u8d44\u6e90\u7ade\u4e89 \u4e92\u65a5\u9501 \u00b6 \u4e92\u65a5\u9501\u662f\u4e00\u79cd\u5e38\u7528\u7684\u63a7\u5236\u5171\u4eab\u8d44\u6e90\u8bbf\u95ee\u7684\u65b9\u6cd5\uff0c\u5b83\u80fd\u591f\u4fdd\u8bc1\u540c\u65f6\u53ea\u6709\u4e00\u4e2a goroutine \u53ef\u4ee5\u8bbf\u95ee\u5171\u4eab\u8d44\u6e90\u3002Go\u8bed\u8a00\u4e2d\u4f7f\u7528 sync \u5305\u7684 Mutex \u7c7b\u578b\u6765\u5b9e\u73b0\u4e92\u65a5\u9501\u3002 \u4f7f\u7528\u4e92\u65a5\u9501\u6765\u4fee\u590d\u4e0a\u9762\u4ee3\u7801\u7684\u95ee\u9898\uff1a var x int64 var wg sync . WaitGroup var lock sync . Mutex func add () { for i := 0 ; i < 5000 ; i ++ { lock . Lock () // \u52a0\u9501 x = x + 1 lock . Unlock () // \u89e3\u9501 } wg . Done () } func main () { wg . Add ( 2 ) go add () go add () wg . Wait () fmt . Println ( x ) } \u4f7f\u7528\u4e92\u65a5\u9501\u80fd\u591f\u4fdd\u8bc1\u540c\u4e00\u65f6\u95f4\u6709\u4e14\u53ea\u6709\u4e00\u4e2a goroutine \u8fdb\u5165\u4e34\u754c\u533a\uff0c\u5176\u4ed6\u7684 goroutine \u5219\u5728\u7b49\u5f85\u9501\uff1b\u5f53\u4e92\u65a5\u9501\u91ca\u653e\u540e\uff0c\u7b49\u5f85\u7684 goroutine \u624d\u53ef\u4ee5\u83b7\u53d6\u9501\u8fdb\u5165\u4e34\u754c\u533a\uff0c\u591a\u4e2a goroutine \u540c\u65f6\u7b49\u5f85\u4e00\u4e2a\u9501\u65f6\uff0c\u5524\u9192\u7684\u7b56\u7565\u662f\u968f\u673a\u7684\u3002 \u8bfb\u5199\u4e92\u65a5\u9501 \u00b6 \u4e92\u65a5\u9501\u662f\u5b8c\u5168\u4e92\u65a5\u7684\uff0c\u4f46\u662f\u6709\u5f88\u591a\u5b9e\u9645\u7684\u573a\u666f\u4e0b\u662f\u8bfb\u591a\u5199\u5c11\u7684\uff0c\u5f53\u6211\u4eec\u5e76\u53d1\u7684\u53bb\u8bfb\u53d6\u4e00\u4e2a\u8d44\u6e90\u4e0d\u6d89\u53ca\u8d44\u6e90\u4fee\u6539\u7684\u65f6\u5019\u662f\u6ca1\u6709\u5fc5\u8981\u52a0\u9501\u7684\uff0c\u8fd9\u79cd\u573a\u666f\u4e0b\u4f7f\u7528\u8bfb\u5199\u9501\u662f\u66f4\u597d\u7684\u4e00\u79cd\u9009\u62e9\u3002\u8bfb\u5199\u9501\u5728Go\u8bed\u8a00\u4e2d\u4f7f\u7528 sync \u5305\u4e2d\u7684 RWMutex \u7c7b\u578b\u3002 \u8bfb\u5199\u9501\u5206\u4e3a\u4e24\u79cd\uff1a\u8bfb\u9501\u548c\u5199\u9501\u3002\u5f53\u4e00\u4e2agoroutine\u83b7\u53d6\u8bfb\u9501\u4e4b\u540e\uff0c\u5176\u4ed6\u7684 goroutine \u5982\u679c\u662f\u83b7\u53d6\u8bfb\u9501\u4f1a\u7ee7\u7eed\u83b7\u5f97\u9501\uff0c\u5982\u679c\u662f\u83b7\u53d6\u5199\u9501\u5c31\u4f1a\u7b49\u5f85\uff1b\u5f53\u4e00\u4e2a goroutine \u83b7\u53d6\u5199\u9501\u4e4b\u540e\uff0c\u5176\u4ed6\u7684 goroutine \u65e0\u8bba\u662f\u83b7\u53d6\u8bfb\u9501\u8fd8\u662f\u5199\u9501\u90fd\u4f1a\u7b49\u5f85\u3002 \u8bfb\u5199\u9501\u793a\u4f8b\uff1a var ( x int64 wg sync . WaitGroup lock sync . Mutex rwlock sync . RWMutex ) func write () { // lock.Lock() // \u52a0\u4e92\u65a5\u9501 rwlock . Lock () // \u52a0\u5199\u9501 x = x + 1 time . Sleep ( 10 * time . Millisecond ) // \u5047\u8bbe\u8bfb\u64cd\u4f5c\u8017\u65f610\u6beb\u79d2 rwlock . Unlock () // \u89e3\u5199\u9501 // lock.Unlock() // \u89e3\u4e92\u65a5\u9501 wg . Done () } func read () { // lock.Lock() // \u52a0\u4e92\u65a5\u9501 rwlock . RLock () // \u52a0\u8bfb\u9501 time . Sleep ( time . Millisecond ) // \u5047\u8bbe\u8bfb\u64cd\u4f5c\u8017\u65f61\u6beb\u79d2 rwlock . RUnlock () // \u89e3\u8bfb\u9501 // lock.Unlock() // \u89e3\u4e92\u65a5\u9501 wg . Done () } func main () { start := time . Now () for i := 0 ; i < 10 ; i ++ { wg . Add ( 1 ) go write () } for i := 0 ; i < 1000 ; i ++ { wg . Add ( 1 ) go read () } wg . Wait () end := time . Now () fmt . Println ( end . Sub ( start )) } \u9700\u8981\u6ce8\u610f\u7684\u662f\u8bfb\u5199\u9501\u975e\u5e38\u9002\u5408\u8bfb\u591a\u5199\u5c11\u7684\u573a\u666f\uff0c\u5982\u679c\u8bfb\u548c\u5199\u7684\u64cd\u4f5c\u5dee\u522b\u4e0d\u5927\uff0c\u8bfb\u5199\u9501\u7684\u4f18\u52bf\u5c31\u53d1\u6325\u4e0d\u51fa\u6765\u3002 sync.WaitGroup \u00b6 \u5728\u4ee3\u7801\u4e2d\u751f\u786c\u7684\u4f7f\u7528 time.Sleep \u80af\u5b9a\u662f\u4e0d\u5408\u9002\u7684\uff0cGo\u8bed\u8a00\u4e2d\u53ef\u4ee5\u4f7f\u7528 sync.WaitGroup \u6765\u5b9e\u73b0\u5e76\u53d1\u4efb\u52a1\u7684\u540c\u6b65\u3002 sync.WaitGroup \u6709\u4ee5\u4e0b\u51e0\u4e2a\u65b9\u6cd5\uff1a \u65b9\u6cd5\u540d \u529f\u80fd (wg * WaitGroup) Add(delta int) \u8ba1\u6570\u5668+delta (wg *WaitGroup) Done() \u8ba1\u6570\u5668-1 (wg *WaitGroup) Wait() \u963b\u585e\u76f4\u5230\u8ba1\u6570\u5668\u53d8\u4e3a0 sync.WaitGroup \u5185\u90e8\u7ef4\u62a4\u7740\u4e00\u4e2a\u8ba1\u6570\u5668\uff0c\u8ba1\u6570\u5668\u7684\u503c\u53ef\u4ee5\u589e\u52a0\u548c\u51cf\u5c11\u3002\u4f8b\u5982\u5f53\u6211\u4eec\u542f\u52a8\u4e86N \u4e2a\u5e76\u53d1\u4efb\u52a1\u65f6\uff0c\u5c31\u5c06\u8ba1\u6570\u5668\u503c\u589e\u52a0N\u3002\u6bcf\u4e2a\u4efb\u52a1\u5b8c\u6210\u65f6\u901a\u8fc7\u8c03\u7528Done()\u65b9\u6cd5\u5c06\u8ba1\u6570\u5668\u51cf1\u3002\u901a\u8fc7\u8c03\u7528Wait()\u6765\u7b49\u5f85\u5e76\u53d1\u4efb\u52a1\u6267\u884c\u5b8c\uff0c\u5f53\u8ba1\u6570\u5668\u503c\u4e3a0\u65f6\uff0c\u8868\u793a\u6240\u6709\u5e76\u53d1\u4efb\u52a1\u5df2\u7ecf\u5b8c\u6210\u3002 \u6211\u4eec\u5229\u7528 sync.WaitGroup \u5c06\u4e0a\u9762\u7684\u4ee3\u7801\u4f18\u5316\u4e00\u4e0b\uff1a var wg sync . WaitGroup func hello () { defer wg . Done () fmt . Println ( \"Hello Goroutine!\" ) } func main () { wg . Add ( 1 ) go hello () // \u542f\u52a8\u53e6\u5916\u4e00\u4e2agoroutine\u53bb\u6267\u884chello\u51fd\u6570 fmt . Println ( \"main goroutine done!\" ) wg . Wait () } \u9700\u8981\u6ce8\u610f sync.WaitGroup \u662f\u4e00\u4e2a\u7ed3\u6784\u4f53\uff0c\u4f20\u9012\u7684\u65f6\u5019\u8981\u4f20\u9012\u6307\u9488\u3002 \u5e76\u53d1\u5b89\u5168\u7684\u5355\u4f8b\u6a21\u5f0f \u00b6 \u4e0b\u9762\u662f\u501f\u52a9 sync.Once \u5b9e\u73b0\u7684\u5e76\u53d1\u5b89\u5168\u7684\u5355\u4f8b\u6a21\u5f0f\uff1a package singleton import ( \"sync\" ) type singleton struct {} var instance * singleton var once sync . Once func GetInstance () * singleton { once . Do ( func () { instance = & singleton {} }) return instance } sync.Once \u5176\u5b9e\u5185\u90e8\u5305\u542b\u4e00\u4e2a\u4e92\u65a5\u9501\u548c\u4e00\u4e2a\u5e03\u5c14\u503c\uff0c\u4e92\u65a5\u9501\u4fdd\u8bc1\u5e03\u5c14\u503c\u548c\u6570\u636e\u7684\u5b89\u5168\uff0c\u800c\u5e03\u5c14\u503c\u7528\u6765\u8bb0\u5f55\u521d\u59cb\u5316\u662f\u5426\u5b8c\u6210\u3002\u8fd9\u6837\u8bbe\u8ba1\u5c31\u80fd\u4fdd\u8bc1\u521d\u59cb\u5316\u64cd\u4f5c\u7684\u65f6\u5019\u662f\u5e76\u53d1\u5b89\u5168\u7684\u5e76\u4e14\u521d\u59cb\u5316\u64cd\u4f5c\u4e5f\u4e0d\u4f1a\u88ab\u6267\u884c\u591a\u6b21\u3002 sync.Map \u00b6 Go\u8bed\u8a00\u4e2d\u5185\u7f6e\u7684map\u4e0d\u662f\u5e76\u53d1\u5b89\u5168\u7684\u3002\u8bf7\u770b\u4e0b\u9762\u7684\u793a\u4f8b\uff1a var m = make ( map [ string ] int ) func get ( key string ) int { return m [ key ] } func set ( key string , value int ) { m [ key ] = value } func main () { wg := sync . WaitGroup {} for i := 0 ; i < 20 ; i ++ { wg . Add ( 1 ) go func ( n int ) { key := strconv . Itoa ( n ) set ( key , n ) fmt . Printf ( \"k=:%v,v:=%v\\n\" , key , get ( key )) wg . Done () }( i ) } wg . Wait () } \u4e0a\u9762\u7684\u4ee3\u7801\u5f00\u542f\u5c11\u91cf\u51e0\u4e2a goroutine \u7684\u65f6\u5019\u53ef\u80fd\u6ca1\u4ec0\u4e48\u95ee\u9898\uff0c\u5f53\u5e76\u53d1\u591a\u4e86\u4e4b\u540e\u6267\u884c\u4e0a\u9762\u7684\u4ee3\u7801\u5c31\u4f1a\u62a5 fatal error: concurrent map writes \u9519\u8bef\u3002 \u50cf\u8fd9\u79cd\u573a\u666f\u4e0b\u5c31\u9700\u8981\u4e3amap\u52a0\u9501\u6765\u4fdd\u8bc1\u5e76\u53d1\u7684\u5b89\u5168\u6027\u4e86\uff0cGo\u8bed\u8a00\u7684 sync \u5305\u4e2d\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5f00\u7bb1\u5373\u7528\u7684\u5e76\u53d1\u5b89\u5168\u7248map\u2013 sync.Map \u3002\u5f00\u7bb1\u5373\u7528\u8868\u793a\u4e0d\u7528\u50cf\u5185\u7f6e\u7684map\u4e00\u6837\u4f7f\u7528make\u51fd\u6570\u521d\u59cb\u5316\u5c31\u80fd\u76f4\u63a5\u4f7f\u7528\u3002\u540c\u65f6 sync.Map \u5185\u7f6e\u4e86\u8bf8\u5982 Store \u3001 Load \u3001 LoadOrStore \u3001 Delete \u3001 Range \u7b49\u64cd\u4f5c\u65b9\u6cd5\u3002 var m = sync . Map {} func main () { wg := sync . WaitGroup {} for i := 0 ; i < 20 ; i ++ { wg . Add ( 1 ) go func ( n int ) { key := strconv . Itoa ( n ) m . Store ( key , n ) value , _ := m . Load ( key ) fmt . Printf ( \"k=:%v,v:=%v\\n\" , key , value ) wg . Done () }( i ) } wg . Wait () } \u539f\u5b50\u64cd\u4f5c \u00b6 \u4ee3\u7801\u4e2d\u7684\u52a0\u9501\u64cd\u4f5c\u56e0\u4e3a\u6d89\u53ca\u5185\u6838\u6001\u7684\u4e0a\u4e0b\u6587\u5207\u6362\u4f1a\u6bd4\u8f83\u8017\u65f6\u3001\u4ee3\u4ef7\u6bd4\u8f83\u9ad8\u3002\u9488\u5bf9\u57fa\u672c\u6570\u636e\u7c7b\u578b\u6211\u4eec\u8fd8\u53ef\u4ee5\u4f7f\u7528\u539f\u5b50\u64cd\u4f5c\u6765\u4fdd\u8bc1\u5e76\u53d1\u5b89\u5168\uff0c\u56e0\u4e3a\u539f\u5b50\u64cd\u4f5c\u662fGo\u8bed\u8a00\u63d0\u4f9b\u7684\u65b9\u6cd5\u5b83\u5728\u7528\u6237\u6001\u5c31\u53ef\u4ee5\u5b8c\u6210\uff0c\u56e0\u6b64\u6027\u80fd\u6bd4\u52a0\u9501\u64cd\u4f5c\u66f4\u597d\u3002Go\u8bed\u8a00\u4e2d\u539f\u5b50\u64cd\u4f5c\u7531\u5185\u7f6e\u7684\u6807\u51c6\u5e93 sync/atomic \u63d0\u4f9b\u3002 atomic\u5305 \u00b6 \u65b9\u6cd5 \u89e3\u91ca func LoadInt32(addr *int32) (val int32) func LoadInt64(addr *int64) (val int64) func LoadUint32(addr *uint32) (val uint32) func LoadUint64(addr *uint64) (val uint64) func LoadUintptr(addr *uintptr) (val uintptr) func LoadPointer(addr *unsafe.Pointer) (val unsafe.Pointer) \u8bfb\u53d6\u64cd\u4f5c func StoreInt32(addr *int32, val int32) func StoreInt64(addr *int64, val int64) func StoreUint32(addr *uint32, val uint32) func StoreUint64(addr *uint64, val uint64) func StoreUintptr(addr *uintptr, val uintptr) func StorePointer(addr *unsafe.Pointer, val unsafe.Pointer) \u5199\u5165\u64cd\u4f5c func AddInt32(addr *int32, delta int32) (new int32) func AddInt64(addr *int64, delta int64) (new int64) func AddUint32(addr *uint32, delta uint32) (new uint32) func AddUint64(addr *uint64, delta uint64) (new uint64) func AddUintptr(addr *uintptr, delta uintptr) (new uintptr) \u4fee\u6539\u64cd\u4f5c func SwapInt32(addr *int32, new int32) (old int32) func SwapInt64(addr *int64, new int64) (old int64) func SwapUint32(addr *uint32, new uint32) (old uint32) func SwapUint64(addr *uint64, new uint64) (old uint64) func SwapUintptr(addr *uintptr, new uintptr) (old uintptr) func SwapPointer(addr *unsafe.Pointer, new unsafe.Pointer) (old unsafe.Pointer) \u4ea4\u6362\u64cd\u4f5c func CompareAndSwapInt32(addr *int32, old, new int32) (swapped bool) func CompareAndSwapInt64(addr *int64, old, new int64) (swapped bool) func CompareAndSwapUint32(addr *uint32, old, new uint32) (swapped bool) func CompareAndSwapUint64(addr *uint64, old, new uint64) (swapped bool) func CompareAndSwapUintptr(addr *uintptr, old, new uintptr) (swapped bool) func CompareAndSwapPointer(addr *unsafe.Pointer, old, new unsafe.Pointer) (swapped bool) \u6bd4\u8f83\u5e76\u4ea4\u6362\u64cd\u4f5c \u793a\u4f8b \u00b6 \u6211\u4eec\u586b\u5199\u4e00\u4e2a\u793a\u4f8b\u6765\u6bd4\u8f83\u4e0b\u4e92\u65a5\u9501\u548c\u539f\u5b50\u64cd\u4f5c\u7684\u6027\u80fd\u3002 package main import ( \"fmt\" \"sync\" \"sync/atomic\" \"time\" ) type Counter interface { Inc () Load () int64 } // \u666e\u901a\u7248 type CommonCounter struct { counter int64 } func ( c CommonCounter ) Inc () { c . counter ++ } func ( c CommonCounter ) Load () int64 { return c . counter } // \u4e92\u65a5\u9501\u7248 type MutexCounter struct { counter int64 lock sync . Mutex } func ( m * MutexCounter ) Inc () { m . lock . Lock () defer m . lock . Unlock () m . counter ++ } func ( m * MutexCounter ) Load () int64 { m . lock . Lock () defer m . lock . Unlock () return m . counter } // \u539f\u5b50\u64cd\u4f5c\u7248 type AtomicCounter struct { counter int64 } func ( a * AtomicCounter ) Inc () { atomic . AddInt64 ( & a . counter , 1 ) } func ( a * AtomicCounter ) Load () int64 { return atomic . LoadInt64 ( & a . counter ) } func test ( c Counter ) { var wg sync . WaitGroup start := time . Now () for i := 0 ; i < 1000 ; i ++ { wg . Add ( 1 ) go func () { c . Inc () wg . Done () }() } wg . Wait () end := time . Now () fmt . Println ( c . Load (), end . Sub ( start )) } func main () { c1 := CommonCounter {} // \u975e\u5e76\u53d1\u5b89\u5168 test ( c1 ) c2 := MutexCounter {} // \u4f7f\u7528\u4e92\u65a5\u9501\u5b9e\u73b0\u5e76\u53d1\u5b89\u5168 test ( & c2 ) c3 := AtomicCounter {} // \u5e76\u53d1\u5b89\u5168\u4e14\u6bd4\u4e92\u65a5\u9501\u6548\u7387\u66f4\u9ad8 test ( & c3 ) } atomic \u5305\u63d0\u4f9b\u4e86\u5e95\u5c42\u7684\u539f\u5b50\u7ea7\u5185\u5b58\u64cd\u4f5c\uff0c\u5bf9\u4e8e\u540c\u6b65\u7b97\u6cd5\u7684\u5b9e\u73b0\u5f88\u6709\u7528\u3002\u8fd9\u4e9b\u51fd\u6570\u5fc5\u987b\u8c28\u614e\u5730\u4fdd\u8bc1\u6b63\u786e\u4f7f\u7528\u3002\u9664\u4e86\u67d0\u4e9b\u7279\u6b8a\u7684\u5e95\u5c42\u5e94\u7528\uff0c\u4f7f\u7528\u901a\u9053\u6216\u8005sync\u5305\u7684\u51fd\u6570/\u7c7b\u578b\u5b9e\u73b0\u540c\u6b65\u66f4\u597d\u3002","title":"\u5e76\u53d1\u7f16\u7a0b"},{"location":"Golang/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#golang","text":"\u5355\u7eaf\u5730\u5c06\u51fd\u6570\u5e76\u53d1\u6267\u884c\u662f\u6ca1\u6709\u610f\u4e49\u7684\u3002\u51fd\u6570\u4e0e\u51fd\u6570\u95f4\u9700\u8981\u4ea4\u6362\u6570\u636e\u624d\u80fd\u4f53\u73b0\u5e76\u53d1\u6267\u884c\u51fd\u6570\u7684\u610f\u4e49\u3002 \u867d\u7136\u53ef\u4ee5\u4f7f\u7528\u5171\u4eab\u5185\u5b58\u8fdb\u884c\u6570\u636e\u4ea4\u6362\uff0c\u4f46\u662f\u5171\u4eab\u5185\u5b58\u5728\u4e0d\u540c\u7684 goroutine \u4e2d\u5bb9\u6613\u53d1\u751f\u7ade\u6001\u95ee\u9898\u3002\u4e3a\u4e86\u4fdd\u8bc1\u6570\u636e\u4ea4\u6362\u7684\u6b63\u786e\u6027\uff0c\u5fc5\u987b\u4f7f\u7528\u4e92\u65a5\u91cf\u5bf9\u5185\u5b58\u8fdb\u884c\u52a0\u9501\uff0c\u8fd9\u79cd\u505a\u6cd5\u52bf\u5fc5\u9020\u6210\u6027\u80fd\u95ee\u9898\u3002 Go\u8bed\u8a00\u7684\u5e76\u53d1\u6a21\u578b\u662f CSP\uff08Communicating Sequential Processes\uff09 \uff0c\u63d0\u5021**\u901a\u8fc7\u901a\u4fe1\u5171\u4eab\u5185\u5b58**\u800c\u4e0d\u662f**\u901a\u8fc7\u5171\u4eab\u5185\u5b58\u800c\u5b9e\u73b0\u901a\u4fe1**\u3002 \u5982\u679c\u8bf4 goroutine \u662fGo\u7a0b\u5e8f\u5e76\u53d1\u7684\u6267\u884c\u4f53\uff0c channel \u5c31\u662f\u5b83\u4eec\u4e4b\u95f4\u7684\u8fde\u63a5\u3002 channel \u662f\u53ef\u4ee5\u8ba9\u4e00\u4e2a goroutine \u53d1\u9001\u7279\u5b9a\u503c\u5230\u53e6\u4e00\u4e2a goroutine \u7684\u901a\u4fe1\u673a\u5236\u3002 Go \u8bed\u8a00\u4e2d\u7684\u901a\u9053\uff08channel\uff09\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u7c7b\u578b\u3002\u901a\u9053\u50cf\u4e00\u4e2a\u4f20\u9001\u5e26\u6216\u8005\u961f\u5217\uff0c\u603b\u662f\u9075\u5faa\u5148\u5165\u5148\u51fa\uff08First In First Out\uff09\u7684\u89c4\u5219\uff0c\u4fdd\u8bc1\u6536\u53d1\u6570\u636e\u7684\u987a\u5e8f\u3002\u6bcf\u4e00\u4e2a\u901a\u9053\u90fd\u662f\u4e00\u4e2a\u5177\u4f53\u7c7b\u578b\u7684\u5bfc\u7ba1\uff0c\u4e5f\u5c31\u662f\u58f0\u660echannel\u7684\u65f6\u5019\u9700\u8981\u4e3a\u5176\u6307\u5b9a\u5143\u7d20\u7c7b\u578b\u3002","title":"Golang\u4e2d\u7684\u5e76\u53d1\u7f16\u7a0b"},{"location":"Golang/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#_1","text":"package main import ( \"fmt\" \"time\" ) //\u7f16\u5199\u4e00\u989d\u51fd\u6570,\u8ba1\u7b971\u5230200\u5404\u4e2a\u6570\u7684\u9636\u4e58,\u5e76\u653e\u5165map\u79cd //\u542f\u52a8\u591a\u4e2a\u534f\u7a0b,\u5c06\u7edf\u8ba1\u7684\u7ed3\u679c\u653e\u5230map,\u6b64map\u5e94\u8be5\u662f\u4e00\u4e2a\u5168\u5c40\u7684 var ( myMap = make ( map [ int ] int , 10 ) ) //\u8ba1\u7b97n\u7684\u9636\u4e58,\u5c06\u7ed3\u679c\u653e\u5165map\u4e2d func test ( n int ) { res := 1 for i := 1 ; i <= n ; i ++ { res *= i } //\u5c06res\u7ed3\u679c\u653e\u5165myMap\u4e2d myMap [ n ] = res //\u4f1a\u89e6\u53d1fatal error: concurrent map writes\u9519\u8bef //\u89e6\u53d1\u4e86\u5199\u4fdd\u62a4 } func main () { //\u5f00\u542f\u591a\u4e2a\u534f\u7a0b\u5b8c\u6210\u4efb\u52a1 for i := 1 ; i <= 200 ; i ++ { go test ( i ) } time . Sleep ( time . Second * 10 ) //\u8f93\u51famap\u7ed3\u679c for i , v := range myMap { fmt . Printf ( \"map[%d]=%d\\n\" , i , v ) } } //go build -race main.go \u5f53\u51fa\u73b0\u8d44\u6e90\u7ade\u4e89\u7684\u65f6\u5019,race\u4f1a\u5c06\u4fe1\u606f\u6253\u5370\u51fa\u6765 //\u4f1a\u62a5Found 3 data race(s),\u8868\u793a\u4e09\u4e2a\u8d44\u6e90\u7ade\u4e89 \u4f7f\u7528goroutine\u65f6,\u4f1a\u51fa\u73b0\u5e76\u53d1/\u5e76\u884c\u5b89\u5168\u95ee\u9898. \u53ef\u4ee5\u901a\u8fc7\u52a0\u5165\u4e92\u65a5\u9501\u6765\u89e3\u51b3\u95ee\u9898.","title":"\u5168\u5c40\u53d8\u91cf\u4e92\u65a5\u9501"},{"location":"Golang/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#sync","text":"package main import ( \"fmt\" \"sync\" ) //\u7f16\u5199\u4e00\u989d\u51fd\u6570,\u8ba1\u7b971\u5230200\u5404\u4e2a\u6570\u7684\u9636\u4e58,\u5e76\u653e\u5165map\u79cd //\u542f\u52a8\u591a\u4e2a\u534f\u7a0b,\u5c06\u7edf\u8ba1\u7684\u7ed3\u679c\u653e\u5230map,\u6b64map\u5e94\u8be5\u662f\u4e00\u4e2a\u5168\u5c40\u7684 var ( myMap = make ( map [ int ] int , 10 ) //\u58f0\u660e\u4e00\u4e2a\u5168\u5c40\u7684\u4e92\u65a5\u9501 //lock \u662f\u4e00\u4e2a\u5168\u5c40\u7684\u4e92\u65a5\u9501, //synv synchornized\u540c\u6b65\u5305 //Mutex\u4e92\u65a5,\u6392\u4ed6,\u662f\u4e00\u4e2a\u7ed3\u6784\u4f53,\u5176\u4e2d\u6709Lock\u548cUnlock\u4e24\u4e2a\u65b9\u6cd5 lock sync . Mutex ) //\u8ba1\u7b97n\u7684\u9636\u4e58,\u5c06\u7ed3\u679c\u653e\u5165map\u4e2d func test ( n int ) { res := 1 for i := 1 ; i <= n ; i ++ { res *= i } //\u5c06res\u7ed3\u679c\u653e\u5165myMap\u4e2d //\u52a0\u9501 lock . Lock () myMap [ n ] = res //\u89e3\u9501 lock . Unlock () //\u4f1a\u89e6\u53d1fatal error: concurrent map writes\u9519\u8bef //\u89e6\u53d1\u4e86\u5199\u4fdd\u62a4 } func main () { //\u5f00\u542f\u591a\u4e2a\u534f\u7a0b\u5b8c\u6210\u4efb\u52a1 for i := 1 ; i <= 20 ; i ++ { go test ( i ) } // time.Sleep(time.Second * 10) //\u8f93\u51famap\u7ed3\u679c lock . Lock () for i , v := range myMap { fmt . Printf ( \"map[%d]=%d\\n\" , i , v ) } lock . Unlock () } //go build -race main.go \u5f53\u51fa\u73b0\u8d44\u6e90\u7ade\u4e89\u7684\u65f6\u5019,race\u4f1a\u5c06\u4fe1\u606f\u6253\u5370\u51fa\u6765 //\u4f1a\u62a5Found 3 data race(s),\u8868\u793a\u4e09\u4e2a\u8d44\u6e90\u7ade\u4e89 \u7ed3\u679c\u4e0d\u4f1a\u62a5\u9519","title":"sync\u5305"},{"location":"Golang/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#goroutine","text":"Go\u8bed\u8a00\u4e2d\u7684goroutine\u6982\u5ff5\u7c7b\u4f3c\u7ebf\u7a0b,\u4f46\u662fgoroutine\u662f\u7531Go\u7684\u8fd0\u884c\u65f6(runtime)\u8c03\u5ea6\u548c\u7ba1\u7406\u7684.Go\u7a0b\u5e8f\u4f1a\u667a\u80fd\u7684\u5c06goroutine\u4e2d\u7684\u4efb\u52a1\u5408\u7406\u7684\u5206\u914d\u7ed9\u6bcf\u4e2aCPU.","title":"goroutine"},{"location":"Golang/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#_2","text":"\u53ea\u9700\u8981\u5728\u8c03\u7528\u51fd\u6570\u7684\u65f6\u5019\u5728\u524d\u9762\u52a0\u4e0ago\u5173\u952e\u5b57,\u5c31\u53ef\u4e0e\u4e3a\u4e00\u4e2a\u51fd\u6570\u521b\u5efa\u4e00\u4e2agoroutine. \u4e00\u4e2agoroutine\u5fc5\u987b\u5bf9\u5e94\u4e00\u4e2a\u51fd\u6570,\u53ef\u4ee5\u521b\u5efa\u591a\u4e2agoroutine\u53bb\u6267\u884c\u76f8\u540c\u7684\u51fd\u6570.","title":"\u4f7f\u7528"},{"location":"Golang/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#goroutine_1","text":"\u53ea\u9700\u8981\u5728\u8c03\u7528\u7684\u51fd\u6570(\u666e\u901a\u51fd\u6570\u6216\u533f\u540d\u51fd\u6570)\u524d\u9762\u52a0\u4e00\u4e2ago\u5173\u952e\u5b57 func hello (){ fmt . Println ( \"hello\" ) } func main (){ go hello () // \u542f\u52a8\u53e6\u5916\u4e00\u4e2agoroutine\u53bb\u6267\u884chello\u51fd\u6570 fmt . Println ( \"main done\" ) } \u7a0b\u5e8f\u542f\u52a8\u65f6,Go\u7a0b\u5e8f\u4f1a\u4e3amain()\u51fd\u6570\u521b\u5efa\u4e00\u4e2a\u9ed8\u8ba4\u7684goroutine. \u5f53main()\u51fd\u6570\u8fd4\u56de\u7684\u65f6\u5019\u8be5goroutine\u5c31\u7ed3\u675f\u4e86,main()\u51fd\u6570\u4e2d\u6240\u6709\u542f\u52a8\u7684goroutine\u90fd\u4f1a\u4e00\u5e76\u7ed3\u675f.","title":"\u542f\u52a8\u5355\u4e2agoroutine"},{"location":"Golang/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#goroutine_2","text":"package main import ( \"fmt\" \"sync\" ) var wg sync . WaitGroup func hello ( i int ){ fmt . Println ( \"hello\" , i ) wg . Done () //\u901a\u77e5wg\u8ba1\u6570\u5668\u51cf1 } func main (){ for i := 0 ; i < 10 ; i ++ { wg . Add ( 1 ) //wg\u8ba1\u6570\u5668\u52a01 go hello () // \u542f\u52a8\u53e6\u5916\u4e00\u4e2agoroutine\u53bb\u6267\u884chello\u51fd\u6570 } fmt . Println ( \"main done\" ) wg . Wait () //\u963b\u585e,\u7b49\u5f85\u5176\u4ed6\u8ba1\u6570\u5668\u5f52\u96f6 }","title":"\u542f\u52a8\u591a\u4e2agoroutine"},{"location":"Golang/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#_3","text":"OS\u7ebf\u7a0b(\u64cd\u4f5c\u7cfb\u7edf\u7684\u7ebf\u7a0b)\u4e00\u822c\u56fa\u5b9a\u6808\u5185\u5b58\u901a\u5e38\u4e3a2MB,\u800c\u4e00\u4e2agoroutine\u7684\u6808\u5728\u5176\u751f\u547d\u5468\u671f\u5f00\u59cb\u65f6\u53ea\u6709\u5f88\u5c0f\u7684\u6808(1.5\u4ee5\u540e2kb),goroutine\u7684\u6808\u4e0d\u662f\u56fa\u5b9a\u7684,\u53ef\u4ee5\u6309\u9700\u589e\u52a0\u548c\u51cf\u5c0f,\u6700\u5927\u9650\u5236\u53ef\u4ee5\u5230\u8fbe1GB,\u6240\u4ee5\u7406\u8bba\u4e0a\u4e00\u6b21\u53ef\u4ee5\u521b\u5efa\u5341\u4e07\u6b21\u5de6\u53f3\u7684goroutine.","title":"\u53ef\u589e\u957f\u7684\u6808"},{"location":"Golang/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#goroutine_3","text":"GPM \u662fGo\u8bed\u8a00\u8fd0\u884c\u65f6\uff08runtime\uff09\u5c42\u9762\u7684\u5b9e\u73b0\uff0c\u662fgo\u8bed\u8a00\u81ea\u5df1\u5b9e\u73b0\u7684\u4e00\u5957\u8c03\u5ea6\u7cfb\u7edf\u3002\u533a\u522b\u4e8e\u64cd\u4f5c\u7cfb\u7edf\u8c03\u5ea6OS\u7ebf\u7a0b\u3002 G \u5f88\u597d\u7406\u89e3\uff0c\u5c31\u662f\u4e2agoroutine\u7684\uff0c\u91cc\u9762\u9664\u4e86\u5b58\u653e\u672cgoroutine\u4fe1\u606f\u5916 \u8fd8\u6709\u4e0e\u6240\u5728P\u7684\u7ed1\u5b9a\u7b49\u4fe1\u606f\u3002 P \u7ba1\u7406\u7740\u4e00\u7ec4goroutine\u961f\u5217\uff0cP\u91cc\u9762\u4f1a\u5b58\u50a8\u5f53\u524dgoroutine\u8fd0\u884c\u7684\u4e0a\u4e0b\u6587\u73af\u5883\uff08\u51fd\u6570\u6307\u9488\uff0c\u5806\u6808\u5730\u5740\u53ca\u5730\u5740\u8fb9\u754c\uff09\uff0cP\u4f1a\u5bf9\u81ea\u5df1\u7ba1\u7406\u7684goroutine\u961f\u5217\u505a\u4e00\u4e9b\u8c03\u5ea6\uff08\u6bd4\u5982\u628a\u5360\u7528CPU\u65f6\u95f4\u8f83\u957f\u7684goroutine\u6682\u505c\u3001\u8fd0\u884c\u540e\u7eed\u7684goroutine\u7b49\u7b49\uff09\u5f53\u81ea\u5df1\u7684\u961f\u5217\u6d88\u8d39\u5b8c\u4e86\u5c31\u53bb\u5168\u5c40\u961f\u5217\u91cc\u53d6\uff0c\u5982\u679c\u5168\u5c40\u961f\u5217\u91cc\u4e5f\u6d88\u8d39\u5b8c\u4e86\u4f1a\u53bb\u5176\u4ed6P\u7684\u961f\u5217\u91cc\u62a2\u4efb\u52a1\u3002 M\uff08machine\uff09 \u662fGo\u8fd0\u884c\u65f6\uff08runtime\uff09\u5bf9\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u7ebf\u7a0b\u7684\u865a\u62df\uff0c M\u4e0e\u5185\u6838\u7ebf\u7a0b\u4e00\u822c\u662f\u4e00\u4e00\u6620\u5c04\u7684\u5173\u7cfb\uff0c \u4e00\u4e2agroutine\u6700\u7ec8\u662f\u8981\u653e\u5230M\u4e0a\u6267\u884c\u7684\uff1b P\u4e0eM\u4e00\u822c\u4e5f\u662f\u4e00\u4e00\u5bf9\u5e94\u7684\u3002\u4ed6\u4eec\u5173\u7cfb\u662f\uff1a P\u7ba1\u7406\u7740\u4e00\u7ec4G\u6302\u8f7d\u5728M\u4e0a\u8fd0\u884c\u3002\u5f53\u4e00\u4e2aG\u957f\u4e45\u963b\u585e\u5728\u4e00\u4e2aM\u4e0a\u65f6\uff0cruntime\u4f1a\u65b0\u5efa\u4e00\u4e2aM\uff0c\u963b\u585eG\u6240\u5728\u7684P\u4f1a\u628a\u5176\u4ed6\u7684G \u6302\u8f7d\u5728\u65b0\u5efa\u7684M\u4e0a\u3002\u5f53\u65e7\u7684G\u963b\u585e\u5b8c\u6210\u6216\u8005\u8ba4\u4e3a\u5176\u5df2\u7ecf\u6b7b\u6389\u65f6 \u56de\u6536\u65e7\u7684M\u3002 P\u7684\u4e2a\u6570\u662f\u901a\u8fc7 runtime.GOMAXPROCS \u8bbe\u5b9a\uff08\u6700\u5927256\uff09\uff0cGo1.5\u7248\u672c\u4e4b\u540e\u9ed8\u8ba4\u4e3a\u7269\u7406\u7ebf\u7a0b\u6570\u3002 \u5728\u5e76\u53d1\u91cf\u5927\u7684\u65f6\u5019\u4f1a\u589e\u52a0\u4e00\u4e9bP\u548cM\uff0c\u4f46\u4e0d\u4f1a\u592a\u591a\uff0c\u5207\u6362\u592a\u9891\u7e41\u7684\u8bdd\u5f97\u4e0d\u507f\u5931\u3002 \u5355\u4ece\u7ebf\u7a0b\u8c03\u5ea6\u8bb2\uff0cGo\u8bed\u8a00\u76f8\u6bd4\u8d77\u5176\u4ed6\u8bed\u8a00\u7684\u4f18\u52bf\u5728\u4e8eOS\u7ebf\u7a0b\u662f\u7531OS\u5185\u6838\u6765\u8c03\u5ea6\u7684\uff0c goroutine \u5219\u662f\u7531Go\u8fd0\u884c\u65f6\uff08runtime\uff09\u81ea\u5df1\u7684\u8c03\u5ea6\u5668\u8c03\u5ea6\u7684\uff0c\u8fd9\u4e2a\u8c03\u5ea6\u5668\u4f7f\u7528\u4e00\u4e2a\u79f0\u4e3am:n\u8c03\u5ea6\u7684\u6280\u672f\uff08\u590d\u7528/\u8c03\u5ea6m\u4e2agoroutine\u5230n\u4e2aOS\u7ebf\u7a0b\uff09\u3002 \u5176\u4e00\u5927\u7279\u70b9\u662fgoroutine\u7684\u8c03\u5ea6\u662f\u5728\u7528\u6237\u6001\u4e0b\u5b8c\u6210\u7684\uff0c \u4e0d\u6d89\u53ca\u5185\u6838\u6001\u4e0e\u7528\u6237\u6001\u4e4b\u95f4\u7684\u9891\u7e41\u5207\u6362\uff0c\u5305\u62ec\u5185\u5b58\u7684\u5206\u914d\u4e0e\u91ca\u653e\uff0c\u90fd\u662f\u5728\u7528\u6237\u6001\u7ef4\u62a4\u7740\u4e00\u5757\u5927\u7684\u5185\u5b58\u6c60\uff0c \u4e0d\u76f4\u63a5\u8c03\u7528\u7cfb\u7edf\u7684malloc\u51fd\u6570\uff08\u9664\u975e\u5185\u5b58\u6c60\u9700\u8981\u6539\u53d8\uff09\uff0c\u6210\u672c\u6bd4\u8c03\u5ea6OS\u7ebf\u7a0b\u4f4e\u5f88\u591a\u3002 \u53e6\u4e00\u65b9\u9762\u5145\u5206\u5229\u7528\u4e86\u591a\u6838\u7684\u786c\u4ef6\u8d44\u6e90\uff0c\u8fd1\u4f3c\u7684\u628a\u82e5\u5e72goroutine\u5747\u5206\u5728\u7269\u7406\u7ebf\u7a0b\u4e0a\uff0c \u518d\u52a0\u4e0a\u672c\u8eabgoroutine\u7684\u8d85\u8f7b\u91cf\uff0c\u4ee5\u4e0a\u79cd\u79cd\u4fdd\u8bc1\u4e86go\u8c03\u5ea6\u65b9\u9762\u7684\u6027\u80fd\u3002","title":"goroutine\u8c03\u5ea6"},{"location":"Golang/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#gomaxprocs","text":"Go\u8fd0\u884c\u65f6\u7684\u8c03\u5ea6\u5668\u4f7f\u7528 GOMAXPROCS \u53c2\u6570\u6765\u786e\u5b9a\u9700\u8981\u4f7f\u7528\u591a\u5c11\u4e2aOS\u7ebf\u7a0b\u6765\u540c\u65f6\u6267\u884cGo\u4ee3\u7801\u3002\u9ed8\u8ba4\u503c\u662f\u673a\u5668\u4e0a\u7684CPU\u6838\u5fc3\u6570\u3002\u4f8b\u5982\u5728\u4e00\u4e2a8\u6838\u5fc3\u7684\u673a\u5668\u4e0a\uff0c\u8c03\u5ea6\u5668\u4f1a\u628aGo\u4ee3\u7801\u540c\u65f6\u8c03\u5ea6\u52308\u4e2aOS\u7ebf\u7a0b\u4e0a\uff08GOMAXPROCS\u662fm:n\u8c03\u5ea6\u4e2d\u7684n\uff09\u3002 Go\u8bed\u8a00\u4e2d\u53ef\u4ee5\u901a\u8fc7 runtime.GOMAXPROCS() \u51fd\u6570\u8bbe\u7f6e\u5f53\u524d\u7a0b\u5e8f\u5e76\u53d1\u65f6\u5360\u7528\u7684CPU\u903b\u8f91\u6838\u5fc3\u6570\u3002 Go1.5\u7248\u672c\u4e4b\u524d\uff0c\u9ed8\u8ba4\u4f7f\u7528\u7684\u662f\u5355\u6838\u5fc3\u6267\u884c\u3002Go1.5\u7248\u672c\u4e4b\u540e\uff0c\u9ed8\u8ba4\u4f7f\u7528\u5168\u90e8\u7684CPU\u903b\u8f91\u6838\u5fc3\u6570\u3002 func a () { for i := 1 ; i < 10 ; i ++ { fmt . Println ( \"A:\" , i ) } } func b () { for i := 1 ; i < 10 ; i ++ { fmt . Println ( \"B:\" , i ) } } func main () { runtime . GOMAXPROCS ( 1 ) go a () go b () time . Sleep ( time . Second ) } //\u4e24\u4e2a\u4efb\u52a1\u53ea\u6709\u4e00\u4e2a\u903b\u8f91\u6838\u5fc3\uff0c\u6b64\u65f6\u662f\u505a\u5b8c\u4e00\u4e2a\u4efb\u52a1\u518d\u505a\u53e6\u4e00\u4e2a\u4efb\u52a1\u3002 //\u5c06\u903b\u8f91\u6838\u5fc3\u6570\u8bbe\u4e3a2\uff0c\u6b64\u65f6\u4e24\u4e2a\u4efb\u52a1\u5e76\u884c\u6267\u884c\uff0c\u4ee3\u7801\u5982\u4e0b\u3002 func a () { for i := 1 ; i < 10 ; i ++ { fmt . Println ( \"A:\" , i ) } } func b () { for i := 1 ; i < 10 ; i ++ { fmt . Println ( \"B:\" , i ) } } func main () { runtime . GOMAXPROCS ( 2 ) go a () go b () time . Sleep ( time . Second ) } Go\u8bed\u8a00\u4e2d\u7684\u64cd\u4f5c\u7cfb\u7edf\u7ebf\u7a0b\u548cgoroutine\u7684\u5173\u7cfb\uff1a \u4e00\u4e2a\u64cd\u4f5c\u7cfb\u7edf\u7ebf\u7a0b\u5bf9\u5e94\u7528\u6237\u6001\u591a\u4e2agoroutine\u3002 go\u7a0b\u5e8f\u53ef\u4ee5\u540c\u65f6\u4f7f\u7528\u591a\u4e2a\u64cd\u4f5c\u7cfb\u7edf\u7ebf\u7a0b\u3002 goroutine\u548cOS\u7ebf\u7a0b\u662f\u591a\u5bf9\u591a\u7684\u5173\u7cfb\uff0c\u5373m:n\u3002m\u4e2agoroutine\u5206\u914d\u5230n\u4e2acpu\u4e0a\u53bb\u6267\u884c","title":"GOMAXPROCS"},{"location":"Golang/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#channel","text":"channel\u662f\u4e00\u79cd\u5f15\u7528\u7c7b\u578b channel\u672c\u8d28\u662f\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\u7684\u961f\u5217. channel\u662f\u5148\u8fdb\u5148\u51faFIFO,first in first out \u7ebf\u7a0b\u5b89\u5168,\u591agoroutine\u8bbf\u95ee\u65f6,\u4e0d\u9700\u8981\u52a0\u9501,channel\u672c\u8eab\u662f\u7ebf\u7a0b\u5b89\u5168\u7684 channel\u662f\u6709\u7c7b\u578b\u7684,\u4e00\u4e2astring\u7684channel\u53ea\u80fd\u653estring\u7c7b\u578b\u7684\u6570\u636e","title":"channel"},{"location":"Golang/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#_4","text":"var \u53d8\u91cf chan \u5143\u7d20\u7c7b\u578b var intChan chan int ( intChan\u7528\u4e8e\u5b58\u653eint\u6570\u636e ) var mapChan chan map [ int ] string var perChan chan Person var perChan2 chan * Persion","title":"\u58f0\u660e"},{"location":"Golang/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#_5","text":"channel\u662f\u5f15\u7528\u7c7b\u578b channel\u5fc5\u987b\u521d\u59cb\u5316\u624d\u80fd\u5199\u5165\u6570\u636e,\u5373\u4f7f\u7528\u524d\u9700\u8981\u5148make \u7ba1\u9053\u662f\u6709\u7c7b\u578b\u7684,intChan\u53ea\u80fd\u5199\u5165\u6574\u6570int","title":"\u8bf4\u660e"},{"location":"Golang/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#_6","text":"\u901a\u9053\u662f\u5f15\u7528\u7c7b\u578b,\u5373\u5176\u7a7a\u503c\u4e3anil var ch chan int fmt . Println ( ch ) // <nil> \u58f0\u660e\u901a\u9053\u540e,\u4f7f\u7528\u4e4b\u524d\u9700\u8981make\u521d\u59cb\u5316\u540e\u624d\u80fd\u4f7f\u7528. make ( chan \u5143\u7d20\u7c7b\u578b ,[ \u7f13\u51b2\u5927\u5c0f ]) ch4 := make ( chan int ) ch5 := make ( chan bool ) ch6 := make ( chan [] int ) channel\u7684\u7f13\u51b2\u5927\u5c0f\u53ef\u4ee5\u9009\u62e9\u5199\u6216\u4e0d\u5199.","title":"\u521d\u59cb\u5316"},{"location":"Golang/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#_7","text":"\u901a\u9053\u6709\u53d1\u9001\uff08send\uff09\u3001\u63a5\u6536(receive\uff09\u548c\u5173\u95ed\uff08close\uff09\u4e09\u79cd\u64cd\u4f5c\u3002 \u53d1\u9001\u548c\u63a5\u6536\u90fd\u4f7f\u7528 <- \u7b26\u53f7\u3002 \u5b9a\u4e49\u4e00\u4e2a\u901a\u9053 ch := make ( chan int )","title":"\u64cd\u4f5c"},{"location":"Golang/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#_8","text":"\u5c06\u4e00\u4e2a\u503c\u53d1\u9001\u5230\u901a\u9053\u4e2d\u3002 ch <- 10 // \u628a10\u53d1\u9001\u5230ch\u4e2d","title":"\u53d1\u9001"},{"location":"Golang/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#_9","text":"\u4ece\u4e00\u4e2a\u901a\u9053\u4e2d\u63a5\u6536\u503c\u3002 x := <- ch // \u4ecech\u4e2d\u63a5\u6536\u503c\u5e76\u8d4b\u503c\u7ed9\u53d8\u91cfx <- ch // \u4ecech\u4e2d\u63a5\u6536\u503c\uff0c\u5ffd\u7565\u7ed3\u679c","title":"\u63a5\u6536"},{"location":"Golang/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#_10","text":"\u6211\u4eec\u901a\u8fc7\u8c03\u7528\u5185\u7f6e\u7684 close \u51fd\u6570\u6765\u5173\u95ed\u901a\u9053\u3002 close ( ch ) \u5173\u4e8e\u5173\u95ed\u901a\u9053\u9700\u8981\u6ce8\u610f\u7684\u4e8b\u60c5\u662f\uff0c\u53ea\u6709\u5728\u901a\u77e5\u63a5\u6536\u65b9goroutine\u6240\u6709\u7684\u6570\u636e\u90fd\u53d1\u9001\u5b8c\u6bd5\u7684\u65f6\u5019\u624d\u9700\u8981\u5173\u95ed\u901a\u9053\u3002\u901a\u9053\u662f\u53ef\u4ee5\u88ab\u5783\u573e\u56de\u6536\u673a\u5236\u56de\u6536\u7684\uff0c\u5b83\u548c\u5173\u95ed\u6587\u4ef6\u662f\u4e0d\u4e00\u6837\u7684\uff0c\u5728\u7ed3\u675f\u64cd\u4f5c\u4e4b\u540e\u5173\u95ed\u6587\u4ef6\u662f\u5fc5\u987b\u8981\u505a\u7684\uff0c\u4f46\u5173\u95ed\u901a\u9053\u4e0d\u662f\u5fc5\u987b\u7684\u3002 \u5173\u95ed\u540e\u7684\u901a\u9053\u6709\u4ee5\u4e0b\u7279\u70b9\uff1a \u5bf9\u4e00\u4e2a\u5173\u95ed\u7684\u901a\u9053\u518d\u53d1\u9001\u503c\u5c31\u4f1a\u5bfc\u81f4panic\u3002 \u5bf9\u4e00\u4e2a\u5173\u95ed\u7684\u901a\u9053\u8fdb\u884c\u63a5\u6536\u4f1a\u4e00\u76f4\u83b7\u53d6\u503c\u76f4\u5230\u901a\u9053\u4e3a\u7a7a\u3002 \u5bf9\u4e00\u4e2a\u5173\u95ed\u7684\u5e76\u4e14\u6ca1\u6709\u503c\u7684\u901a\u9053\u6267\u884c\u63a5\u6536\u64cd\u4f5c\u4f1a\u5f97\u5230\u5bf9\u5e94\u7c7b\u578b\u7684\u96f6\u503c\u3002 \u5173\u95ed\u4e00\u4e2a\u5df2\u7ecf\u5173\u95ed\u7684\u901a\u9053\u4f1a\u5bfc\u81f4panic\u3002 \u4f7f\u7528\u5185\u7f6e\u51fd\u6570close\u53ef\u4ee5\u5173\u95edchannel,\u5f53channel\u5173\u95ed\u540e,\u5c31\u4e0d\u80fd\u518d\u5411channel\u5199\u6570\u636e\u4e86,\u4f46\u662f\u4f9d\u7136\u53ef\u4ee5\u4ece\u8be5channel\u8bfb\u53d6\u6570\u636e. \u7c7b\u4f3c\u4e8e\u6dfb\u52a0\u4e86\u5199\u9501,\u800c\u8bfb\u6ca1\u6709\u9650\u5236. close\u4e3a\u5185\u7f6e\u51fd\u6570,\u6548\u679c\u662f\u518d\u6700\u540e\u53d1\u9001\u7684\u503c\u88ab\u63a5\u6536\u540e\u505c\u6b62\u8be5\u901a\u9053.","title":"\u5173\u95ed"},{"location":"Golang/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#_11","text":"channel\u4e2d\u53ea\u80fd\u5b58\u653e\u6307\u5b9a\u6570\u636e\u7c7b\u578b,\u5982\u679c\u8981\u4f7f\u7528\u591a\u79cd\u6570\u636e\u7ed3\u6784,\u9700\u8981\u4f7f\u7528\u7a7a\u63a5\u53e3 channel\u6570\u636e\u653e\u6ee1cap\u540e\u4e0d\u53ef\u4ee5\u7ee7\u7eed\u5b58\u5165,\u62a5deadlock\u9519 \u5982\u679cchannel\u4e2d\u6570\u636e\u4e3a\u7a7a,\u7ee7\u7eed\u53d6\u503c,\u62a5deadlock\u9519","title":"\u6ce8\u610f:"},{"location":"Golang/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#_12","text":"\u65e0\u7f13\u51b2\u7684\u901a\u9053\u53c8\u79f0\u4e3a\u963b\u585e\u7684\u901a\u9053\u3002\u6211\u4eec\u6765\u770b\u4e00\u4e0b\u4e0b\u9762\u7684\u4ee3\u7801\uff1a func main () { ch := make ( chan int ) ch <- 10 fmt . Println ( \"\u53d1\u9001\u6210\u529f\" ) } \u4e0a\u9762\u8fd9\u6bb5\u4ee3\u7801\u80fd\u591f\u901a\u8fc7\u7f16\u8bd1\uff0c\u4f46\u662f\u6267\u884c\u7684\u65f6\u5019\u4f1a\u51fa\u73b0\u4ee5\u4e0b\u9519\u8bef\uff1a fatal error: all goroutines are asleep - deadlock! goroutine 1 [ chan send ] : main.main () .../src/github.com/Q1mi/studygo/day06/channel02/main.go:8 +0x54 \u4e3a\u4ec0\u4e48\u4f1a\u51fa\u73b0 deadlock \u9519\u8bef\u5462\uff1f \u56e0\u4e3a\u6211\u4eec\u4f7f\u7528 ch := make(chan int) \u521b\u5efa\u7684\u662f\u65e0\u7f13\u51b2\u7684\u901a\u9053\uff0c\u65e0\u7f13\u51b2\u7684\u901a\u9053\u53ea\u6709\u5728\u6709\u4eba\u63a5\u6536\u503c\u7684\u65f6\u5019\u624d\u80fd\u53d1\u9001\u503c\u3002\u5c31\u50cf\u4f60\u4f4f\u7684\u5c0f\u533a\u6ca1\u6709\u5feb\u9012\u67dc\u548c\u4ee3\u6536\u70b9\uff0c\u5feb\u9012\u5458\u7ed9\u4f60\u6253\u7535\u8bdd\u5fc5\u987b\u8981\u628a\u8fd9\u4e2a\u7269\u54c1\u9001\u5230\u4f60\u7684\u624b\u4e2d\uff0c\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u65e0\u7f13\u51b2\u7684\u901a\u9053\u5fc5\u987b\u6709\u63a5\u6536\u624d\u80fd\u53d1\u9001\u3002 \u4e0a\u9762\u7684\u4ee3\u7801\u4f1a\u963b\u585e\u5728 ch <- 10 \u8fd9\u4e00\u884c\u4ee3\u7801\u5f62\u6210\u6b7b\u9501\uff0c\u90a3\u5982\u4f55\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u5462\uff1f \u4e00\u79cd\u65b9\u6cd5\u662f\u542f\u7528\u4e00\u4e2a goroutine \u53bb\u63a5\u6536\u503c\uff0c\u4f8b\u5982\uff1a func recv ( c chan int ) { ret := <- c fmt . Println ( \"\u63a5\u6536\u6210\u529f\" , ret ) } func main () { ch := make ( chan int ) go recv ( ch ) // \u542f\u7528goroutine\u4ece\u901a\u9053\u63a5\u6536\u503c ch <- 10 fmt . Println ( \"\u53d1\u9001\u6210\u529f\" ) } \u65e0\u7f13\u51b2\u901a\u9053\u4e0a\u7684\u53d1\u9001\u64cd\u4f5c\u4f1a\u963b\u585e\uff0c\u76f4\u5230\u53e6\u4e00\u4e2a goroutine \u5728\u8be5\u901a\u9053\u4e0a\u6267\u884c\u63a5\u6536\u64cd\u4f5c\uff0c\u8fd9\u65f6\u503c\u624d\u80fd\u53d1\u9001\u6210\u529f\uff0c\u4e24\u4e2a goroutine \u5c06\u7ee7\u7eed\u6267\u884c\u3002\u76f8\u53cd\uff0c\u5982\u679c\u63a5\u6536\u64cd\u4f5c\u5148\u6267\u884c\uff0c\u63a5\u6536\u65b9\u7684goroutine\u5c06\u963b\u585e\uff0c\u76f4\u5230\u53e6\u4e00\u4e2a goroutine \u5728\u8be5\u901a\u9053\u4e0a\u53d1\u9001\u4e00\u4e2a\u503c\u3002 \u4f7f\u7528\u65e0\u7f13\u51b2\u901a\u9053\u8fdb\u884c\u901a\u4fe1\u5c06\u5bfc\u81f4\u53d1\u9001\u548c\u63a5\u6536\u7684 goroutine \u540c\u6b65\u5316\u3002\u56e0\u6b64\uff0c\u65e0\u7f13\u51b2\u901a\u9053\u4e5f\u88ab\u79f0\u4e3a \u540c\u6b65\u901a\u9053 \u3002","title":"\u65e0\u7f13\u51b2\u7684\u901a\u9053"},{"location":"Golang/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#_13","text":"\u65e0\u7f13\u51b2\u7684\u7ba1\u9053\u9ed8\u8ba4len\u548ccap\u90fd\u662f0 func main () { ch := make ( chan int ) fmt . Println ( len ( ch )) fmt . Println ( cap ( ch )) } >> > 0 0","title":"\u6ce8\u610f"},{"location":"Golang/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#_14","text":"\u89e3\u51b3\u4e0a\u9762\u95ee\u9898\u7684\u65b9\u6cd5\u8fd8\u6709\u4e00\u79cd\u5c31\u662f\u4f7f\u7528\u6709\u7f13\u51b2\u533a\u7684\u901a\u9053\u3002\u6211\u4eec\u53ef\u4ee5\u5728\u4f7f\u7528make\u51fd\u6570\u521d\u59cb\u5316\u901a\u9053\u7684\u65f6\u5019\u4e3a\u5176\u6307\u5b9a\u901a\u9053\u7684\u5bb9\u91cf\uff0c\u4f8b\u5982\uff1a func main () { ch := make ( chan int , 1 ) // \u521b\u5efa\u4e00\u4e2a\u5bb9\u91cf\u4e3a1\u7684\u6709\u7f13\u51b2\u533a\u901a\u9053 ch <- 10 fmt . Println ( \"\u53d1\u9001\u6210\u529f\" ) } \u53ea\u8981\u901a\u9053\u7684\u5bb9\u91cf\u5927\u4e8e\u96f6\uff0c\u90a3\u4e48\u8be5\u901a\u9053\u5c31\u662f\u6709\u7f13\u51b2\u7684\u901a\u9053\uff0c\u901a\u9053\u7684\u5bb9\u91cf\u8868\u793a\u901a\u9053\u4e2d\u80fd\u5b58\u653e\u5143\u7d20\u7684\u6570\u91cf\u3002\u5c31\u50cf\u4f60\u5c0f\u533a\u7684\u5feb\u9012\u67dc\u53ea\u6709\u90a3\u4e48\u4e2a\u591a\u683c\u5b50\uff0c\u683c\u5b50\u6ee1\u4e86\u5c31\u88c5\u4e0d\u4e0b\u4e86\uff0c\u5c31\u963b\u585e\u4e86\uff0c\u7b49\u5230\u522b\u4eba\u53d6\u8d70\u4e00\u4e2a\u5feb\u9012\u5458\u5c31\u80fd\u5f80\u91cc\u9762\u653e\u4e00\u4e2a\u3002 \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5185\u7f6e\u7684 len \u51fd\u6570\u83b7\u53d6\u901a\u9053\u5185\u5143\u7d20\u7684\u6570\u91cf\uff0c\u4f7f\u7528 cap \u51fd\u6570\u83b7\u53d6\u901a\u9053\u7684\u5bb9\u91cf\uff0c\u867d\u7136\u6211\u4eec\u5f88\u5c11\u4f1a\u8fd9\u4e48\u505a\u3002","title":"\u6709\u7f13\u51b2\u7684\u7ba1\u9053"},{"location":"Golang/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#channel_1","text":"package main import ( \"fmt\" ) type Cat struct { Name string Age int } func main () { //\u5b9a\u4e49\u4e00\u4e2a\u53ef\u4ee5\u5b58\u653e\u4efb\u610f\u6570\u636e\u7c7b\u578b\u7684\u7ba1\u9053 //var allChan chan interface{} allChan := make ( chan interface {}, 3 ) allChan <- 10 allChan <- \"agsol\" cat := Cat { \"tom\" , 4 } allChan <- cat //\u5982\u679c\u5e0c\u671b\u5f97\u5230channel\u4e2d\u7b2c\u4e09\u4e2a\u6570\u636e,\u9700\u8981\u5c06\u5176\u524d\u9762\u7684\u4e24\u4e2a\u6570\u636e\u5148\u63a8\u51fa //channel\u7684\u63a8\u51fa\u53ef\u4ee5\u6ca1\u6709\u53d8\u91cf\u63a5\u6536 <- allChan <- allChan newCat := <- allChan fmt . Printf ( \"newCat = %T,newCat=%v\\n\" , newCat , newCat ) // fmt.Printf(\"newCat.Name %v\", newCat.Name) //\u4e0a\u9762\u7684\u8f93\u51fa\u7c7b\u578b\u4e3a\u63a5\u53e3,\u65e0\u6cd5\u8fdb\u884c\u64cd\u4f5c,\u9700\u8981\u8fdb\u884c\u7c7b\u578b\u65ad\u8a00,\u7f16\u8bd1\u65e0\u6cd5\u901a\u8fc7 //\u4f7f\u7528\u7c7b\u578b\u65ad\u8a00 a := newCat .( Cat ) fmt . Printf ( \"newCat.Name %v\" , a . Name ) } >> > newCat = main . Cat , newCat ={ tom 4 } newCat . Name tom \u6ce8\u610f:newCat\u5728\u4ece\u7ba1\u9053\u4e2d\u63a8\u51fa\u7684\u65f6\u5019,\u6570\u636e\u7c7b\u578b\u4e3ainterface{},\u6240\u4ee5\u6ca1\u6709Name\u5c5e\u6027,\u9700\u8981\u63a5\u53e3\u53d6\u503c\u65f6\u8981\u4f7f\u7528\u7c7b\u578b\u65ad\u8a00.","title":"\u63a5\u6536\u7a7a\u63a5\u53e3\u7684channel"},{"location":"Golang/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#channel_2","text":"channel\u652f\u6301for-range\u7684\u65b9\u5f0f\u8fdb\u884c\u904d\u5386. \u5728\u904d\u5386\u8fc7\u7a0b\u4e2d,\u5982\u679cchannel\u6ca1\u6709\u5173\u95ed,\u5219\u4f1a\u62a5deadlock\u9519\u8bef \u5728\u904d\u5386\u8fc7\u7a0b\u4e2d,\u5982\u679cchannel\u5df2\u7ecf\u5173\u95ed,\u5219\u4f1a\u6b63\u5e38\u904d\u5386\u6570\u636e,\u904d\u5386\u5b8c\u6210\u540e,\u4f1a\u9000\u51fa\u904d\u5386. package main import ( \"fmt\" ) func main () { intChan2 := make ( chan int , 100 ) for i := 1 ; i < 100 ; i ++ { intChan2 <- i * 2 } //\u5728\u904d\u5386\u524d\u5173\u95ed\u7ba1\u9053 close ( intChan2 ) //\u904d\u5386 for v := range intChan2 { fmt . Println ( \"v=\" , v ) } } \u904d\u5386\u7ba1\u9053\u65f6\u4e0d\u80fd\u4f7f\u7528\u666e\u901a\u7684for\u5faa\u73af,\u56e0\u4e3a\u7ba1\u9053\u5185\u6570\u636e\u4e2a\u6570\u53d8\u5316,\u6240\u4ee5len\u65e0\u6cd5\u7cbe\u786e\u53d6\u503c \u904d\u5386\u524d\u8981\u5173\u95ed\u7ba1\u9053,\u5426\u5219\u5728\u904d\u5386\u5230\u5934\u4e4b\u540e,\u8fd8\u4f1a\u7ee7\u7eed\u904d\u5386,\u5bfc\u81f4\u62a5\u9519 fatal error: all goroutines are asleep - deadlock! ,\u6b64\u79cd\u505a\u6cd5\u867d\u7136\u6700\u540e\u62a5\u9519,\u4f46\u662f\u7ed3\u679c\u4f1a\u88ab\u904d\u5386\u51fa\u6765. \u4f7f\u7528 for range \u904d\u5386\u901a\u9053\uff0c\u5f53\u901a\u9053\u88ab\u5173\u95ed\u7684\u65f6\u5019\u5c31\u4f1a\u9000\u51fa for range \u3002","title":"channel\u7684\u904d\u5386"},{"location":"Golang/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#_15","text":"\u6709\u7684\u65f6\u5019\u6211\u4eec\u4f1a\u5c06\u901a\u9053\u4f5c\u4e3a\u53c2\u6570\u5728\u591a\u4e2a\u4efb\u52a1\u51fd\u6570\u95f4\u4f20\u9012\uff0c\u5f88\u591a\u65f6\u5019\u6211\u4eec\u5728\u4e0d\u540c\u7684\u4efb\u52a1\u51fd\u6570\u4e2d\u4f7f\u7528\u901a\u9053\u90fd\u4f1a\u5bf9\u5176\u8fdb\u884c\u9650\u5236\uff0c\u6bd4\u5982\u9650\u5236\u901a\u9053\u5728\u51fd\u6570\u4e2d\u53ea\u80fd\u53d1\u9001\u6216\u53ea\u80fd\u63a5\u6536\u3002 \u5728\u51fd\u6570\u7684\u53c2\u6570\u4e2d\u8bbe\u7f6e\u662f\u5426\u4e3a\u5355\u5411\u901a\u9053. Go\u8bed\u8a00\u4e2d\u63d0\u4f9b\u4e86**\u5355\u5411\u901a\u9053**\u6765\u5904\u7406\u8fd9\u79cd\u60c5\u51b5\u3002 //\u5355\u5411\u8fdb\u5165\u7ba1\u9053 func counter ( out chan <- int ) { for i := 0 ; i < 100 ; i ++ { out <- i } close ( out ) } //\u5355\u9879\u51fa\u7ba1\u9053 func printer ( in <- chan int ) { for i := range in { fmt . Println ( i ) } } \u5176\u4e2d\uff0c chan<- int \u662f\u4e00\u4e2a\u53ea\u5199\u5355\u5411\u901a\u9053\uff08\u53ea\u80fd\u5bf9\u5176\u5199\u5165int\u7c7b\u578b\u503c\uff09\uff0c\u53ef\u4ee5\u5bf9\u5176\u6267\u884c\u53d1\u9001\u64cd\u4f5c\u4f46\u662f\u4e0d\u80fd\u6267\u884c\u63a5\u6536\u64cd\u4f5c\uff1b <-chan int \u662f\u4e00\u4e2a\u53ea\u8bfb\u5355\u5411\u901a\u9053\uff08\u53ea\u80fd\u4ece\u5176\u8bfb\u53d6int\u7c7b\u578b\u503c\uff09\uff0c\u53ef\u4ee5\u5bf9\u5176\u6267\u884c\u63a5\u6536\u64cd\u4f5c\u4f46\u662f\u4e0d\u80fd\u6267\u884c\u53d1\u9001\u64cd\u4f5c\u3002 \u5728\u51fd\u6570\u4f20\u53c2\u53ca\u4efb\u4f55\u8d4b\u503c\u64cd\u4f5c\u4e2d\u53ef\u4ee5\u5c06\u53cc\u5411\u901a\u9053\u8f6c\u6362\u4e3a\u5355\u5411\u901a\u9053\uff0c\u4f46\u53cd\u8fc7\u6765\u662f\u4e0d\u53ef\u4ee5\u7684\u3002","title":"\u5355\u5411\u901a\u9053"},{"location":"Golang/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#channel_3","text":"\u6ee1\u4e86\u6216\u8005\u6ca1\u4e86\u5c31\u4f1a\u963b\u585e.","title":"channel\u7684\u963b\u585e\u673a\u5236"},{"location":"Golang/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#_16","text":"\u5173\u95ed\u5df2\u7ecf\u5173\u95ed\u7684channel\u4f1a\u5f15\u53d1panic","title":"\u901a\u9053\u5f02\u5e38\u603b\u7ed3"},{"location":"Golang/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#_17","text":"\u5f53\u5f00\u542f\u591a\u4e2a\u534f\u7a0b\u65f6,\u4e0d\u5e0c\u671b\u67d0\u4e00\u4e2a\u534f\u7a0b\u51fa\u73b0\u95ee\u9898\u5bfc\u81f4\u6574\u4f53\u4ee3\u7801\u7684panic. \u53ef\u4ee5\u4f7f\u7528defer+recover\u6765\u89e3\u51b3 package main import ( \"fmt\" \"time\" ) func sayHello () { for i := 0 ; i < 10 ; i ++ { time . Sleep ( time . Second ) fmt . Println ( \"hello world\" ) } } func test () { //\u4f7f\u7528defer+recover\u89e3\u51b3 defer func () { //\u6355\u83b7\u5f02\u5e38 if err := recover (); err != nil { fmt . Println ( \"test error\" , err ) } }() var myMap map [ int ] string myMap [ 0 ] = \"golang\" //\u56e0\u4e3a\u6ca1\u6709make,\u6240\u4ee5\u4f1a\u62a5\u9519 } func main () { go sayHello () go test () for i := 0 ; i < 10 ; i ++ { fmt . Println ( \"main ok\" , i ) time . Sleep ( time . Second ) } } defer \u5185\u5efa\u51fd\u6570,\u6240\u5728\u65b9\u6cd5\u91cc\u9000\u51fa\u65f6\u8c03\u7528\uff0c\u4e00\u4e2a\u65b9\u6cd5\u91cc\u82e5\u6709\u591a\u4e2adefer\u8bed\u53e5\uff0c\u5219\u5148\u58f0\u660e\u7684\u540e\u88ab\u8c03\u7528\uff0c\u4e00\u822c\u4e0erecover()\u51fd\u6570\u4e00\u8d77\u914d\u5408\u4f7f\u7528\uff0crecover()\u4e00\u822c\u7528\u4e8e\u6355\u6349panic\u629b\u51fa\u7684\u5f02\u5e38","title":"\u5f02\u5e38\u6355\u83b7"},{"location":"Golang/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#worker-poolgoroutine","text":"\u5728\u5de5\u4f5c\u4e2d\u6211\u4eec\u901a\u5e38\u4f1a\u4f7f\u7528\u53ef\u4ee5\u6307\u5b9a\u542f\u52a8\u7684goroutine\u6570\u91cf\u2013 worker pool \u6a21\u5f0f\uff0c\u63a7\u5236 goroutine \u7684\u6570\u91cf\uff0c\u9632\u6b62 goroutine \u6cc4\u6f0f\u548c\u66b4\u6da8\u3002 func worker ( id int , jobs <- chan int , results chan <- int ) { for j := range jobs { fmt . Printf ( \"worker:%d start job:%d\\n\" , id , j ) time . Sleep ( time . Second ) fmt . Printf ( \"worker:%d end job:%d\\n\" , id , j ) results <- j * 2 } } func main () { jobs := make ( chan int , 100 ) results := make ( chan int , 100 ) // \u5f00\u542f3\u4e2agoroutine for w := 1 ; w <= 3 ; w ++ { go worker ( w , jobs , results ) } // 5\u4e2a\u4efb\u52a1 for j := 1 ; j <= 5 ; j ++ { jobs <- j } close ( jobs ) // \u8f93\u51fa\u7ed3\u679c for a := 1 ; a <= 5 ; a ++ { <- results } }","title":"worker pool(goroutine\u6c60)"},{"location":"Golang/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#select","text":"\u5728\u67d0\u4e9b\u573a\u666f\u4e0b\u6211\u4eec\u9700\u8981\u540c\u65f6\u4ece\u591a\u4e2a\u901a\u9053\u63a5\u6536\u6570\u636e\u3002 Go\u5185\u7f6e\u4e86 select \u5173\u952e\u5b57\uff0c\u53ef\u4ee5\u540c\u65f6\u54cd\u5e94\u591a\u4e2a\u901a\u9053\u7684\u64cd\u4f5c\u3002 select \u7684\u4f7f\u7528\u7c7b\u4f3c\u4e8eswitch\u8bed\u53e5\uff0c\u5b83\u6709\u4e00\u7cfb\u5217case\u5206\u652f\u548c\u4e00\u4e2a\u9ed8\u8ba4\u7684\u5206\u652f\u3002\u6bcf\u4e2acase\u4f1a\u5bf9\u5e94\u4e00\u4e2a\u901a\u9053\u7684\u901a\u4fe1\uff08\u63a5\u6536\u6216\u53d1\u9001\uff09\u8fc7\u7a0b\u3002 select \u4f1a\u4e00\u76f4\u7b49\u5f85\uff0c\u76f4\u5230\u67d0\u4e2a case \u7684\u901a\u4fe1\u64cd\u4f5c\u5b8c\u6210\u65f6\uff0c\u5c31\u4f1a\u6267\u884c case \u5206\u652f\u5bf9\u5e94\u7684\u8bed\u53e5\u3002\u5177\u4f53\u683c\u5f0f\u5982\u4e0b\uff1a select { case <- ch1 : ... case data := <- ch2 : ... case ch3 <- data : ... default : \u9ed8\u8ba4\u64cd\u4f5c } \u4e3e\u4e2a\u5c0f\u4f8b\u5b50\u6765\u6f14\u793a\u4e0b select \u7684\u4f7f\u7528\uff1a func main () { ch := make ( chan int , 1 ) for i := 0 ; i < 10 ; i ++ { select { case x := <- ch : fmt . Println ( x ) case ch <- i : } } } \u4f7f\u7528 select \u8bed\u53e5\u80fd\u63d0\u9ad8\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\u3002 \u53ef\u5904\u7406\u4e00\u4e2a\u6216\u591a\u4e2achannel\u7684\u53d1\u9001/\u63a5\u6536\u64cd\u4f5c\u3002 \u5982\u679c\u591a\u4e2a case \u540c\u65f6\u6ee1\u8db3\uff0c select \u4f1a\u968f\u673a\u9009\u62e9\u4e00\u4e2a\u3002 \u5bf9\u4e8e\u6ca1\u6709 case \u7684 select{} \u4f1a\u4e00\u76f4\u7b49\u5f85\uff0c\u53ef\u7528\u4e8e\u963b\u585emain\u51fd\u6570\u3002","title":"select\u591a\u8def\u590d\u7528"},{"location":"Golang/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#_18","text":"package main import ( \"fmt\" \"time\" ) //\u7f16\u5199\u4e00\u989d\u51fd\u6570,\u8ba1\u7b971\u5230200\u5404\u4e2a\u6570\u7684\u9636\u4e58,\u5e76\u653e\u5165map\u79cd //\u542f\u52a8\u591a\u4e2a\u534f\u7a0b,\u5c06\u7edf\u8ba1\u7684\u7ed3\u679c\u653e\u5230map,\u6b64map\u5e94\u8be5\u662f\u4e00\u4e2a\u5168\u5c40\u7684 var ( myMap = make ( map [ int ] int , 10 ) ) //\u8ba1\u7b97n\u7684\u9636\u4e58,\u5c06\u7ed3\u679c\u653e\u5165map\u4e2d func test ( n int ) { res := 1 for i := 1 ; i <= n ; i ++ { res *= i } //\u5c06res\u7ed3\u679c\u653e\u5165myMap\u4e2d myMap [ n ] = res //\u4f1a\u89e6\u53d1fatal error: concurrent map writes\u9519\u8bef //\u89e6\u53d1\u4e86\u5199\u4fdd\u62a4 } func main () { //\u5f00\u542f\u591a\u4e2a\u534f\u7a0b\u5b8c\u6210\u4efb\u52a1 for i := 1 ; i <= 200 ; i ++ { go test ( i ) } time . Sleep ( time . Second * 10 ) //\u8f93\u51famap\u7ed3\u679c for i , v := range myMap { fmt . Printf ( \"map[%d]=%d\\n\" , i , v ) } } //go build -race main.go \u5f53\u51fa\u73b0\u8d44\u6e90\u7ade\u4e89\u7684\u65f6\u5019,race\u4f1a\u5c06\u4fe1\u606f\u6253\u5370\u51fa\u6765 //\u4f1a\u62a5Found 3 data race(s),\u8868\u793a\u4e09\u4e2a\u8d44\u6e90\u7ade\u4e89","title":"\u5e76\u53d1\u5b89\u5168\u548c\u9501"},{"location":"Golang/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#_19","text":"\u4e92\u65a5\u9501\u662f\u4e00\u79cd\u5e38\u7528\u7684\u63a7\u5236\u5171\u4eab\u8d44\u6e90\u8bbf\u95ee\u7684\u65b9\u6cd5\uff0c\u5b83\u80fd\u591f\u4fdd\u8bc1\u540c\u65f6\u53ea\u6709\u4e00\u4e2a goroutine \u53ef\u4ee5\u8bbf\u95ee\u5171\u4eab\u8d44\u6e90\u3002Go\u8bed\u8a00\u4e2d\u4f7f\u7528 sync \u5305\u7684 Mutex \u7c7b\u578b\u6765\u5b9e\u73b0\u4e92\u65a5\u9501\u3002 \u4f7f\u7528\u4e92\u65a5\u9501\u6765\u4fee\u590d\u4e0a\u9762\u4ee3\u7801\u7684\u95ee\u9898\uff1a var x int64 var wg sync . WaitGroup var lock sync . Mutex func add () { for i := 0 ; i < 5000 ; i ++ { lock . Lock () // \u52a0\u9501 x = x + 1 lock . Unlock () // \u89e3\u9501 } wg . Done () } func main () { wg . Add ( 2 ) go add () go add () wg . Wait () fmt . Println ( x ) } \u4f7f\u7528\u4e92\u65a5\u9501\u80fd\u591f\u4fdd\u8bc1\u540c\u4e00\u65f6\u95f4\u6709\u4e14\u53ea\u6709\u4e00\u4e2a goroutine \u8fdb\u5165\u4e34\u754c\u533a\uff0c\u5176\u4ed6\u7684 goroutine \u5219\u5728\u7b49\u5f85\u9501\uff1b\u5f53\u4e92\u65a5\u9501\u91ca\u653e\u540e\uff0c\u7b49\u5f85\u7684 goroutine \u624d\u53ef\u4ee5\u83b7\u53d6\u9501\u8fdb\u5165\u4e34\u754c\u533a\uff0c\u591a\u4e2a goroutine \u540c\u65f6\u7b49\u5f85\u4e00\u4e2a\u9501\u65f6\uff0c\u5524\u9192\u7684\u7b56\u7565\u662f\u968f\u673a\u7684\u3002","title":"\u4e92\u65a5\u9501"},{"location":"Golang/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#_20","text":"\u4e92\u65a5\u9501\u662f\u5b8c\u5168\u4e92\u65a5\u7684\uff0c\u4f46\u662f\u6709\u5f88\u591a\u5b9e\u9645\u7684\u573a\u666f\u4e0b\u662f\u8bfb\u591a\u5199\u5c11\u7684\uff0c\u5f53\u6211\u4eec\u5e76\u53d1\u7684\u53bb\u8bfb\u53d6\u4e00\u4e2a\u8d44\u6e90\u4e0d\u6d89\u53ca\u8d44\u6e90\u4fee\u6539\u7684\u65f6\u5019\u662f\u6ca1\u6709\u5fc5\u8981\u52a0\u9501\u7684\uff0c\u8fd9\u79cd\u573a\u666f\u4e0b\u4f7f\u7528\u8bfb\u5199\u9501\u662f\u66f4\u597d\u7684\u4e00\u79cd\u9009\u62e9\u3002\u8bfb\u5199\u9501\u5728Go\u8bed\u8a00\u4e2d\u4f7f\u7528 sync \u5305\u4e2d\u7684 RWMutex \u7c7b\u578b\u3002 \u8bfb\u5199\u9501\u5206\u4e3a\u4e24\u79cd\uff1a\u8bfb\u9501\u548c\u5199\u9501\u3002\u5f53\u4e00\u4e2agoroutine\u83b7\u53d6\u8bfb\u9501\u4e4b\u540e\uff0c\u5176\u4ed6\u7684 goroutine \u5982\u679c\u662f\u83b7\u53d6\u8bfb\u9501\u4f1a\u7ee7\u7eed\u83b7\u5f97\u9501\uff0c\u5982\u679c\u662f\u83b7\u53d6\u5199\u9501\u5c31\u4f1a\u7b49\u5f85\uff1b\u5f53\u4e00\u4e2a goroutine \u83b7\u53d6\u5199\u9501\u4e4b\u540e\uff0c\u5176\u4ed6\u7684 goroutine \u65e0\u8bba\u662f\u83b7\u53d6\u8bfb\u9501\u8fd8\u662f\u5199\u9501\u90fd\u4f1a\u7b49\u5f85\u3002 \u8bfb\u5199\u9501\u793a\u4f8b\uff1a var ( x int64 wg sync . WaitGroup lock sync . Mutex rwlock sync . RWMutex ) func write () { // lock.Lock() // \u52a0\u4e92\u65a5\u9501 rwlock . Lock () // \u52a0\u5199\u9501 x = x + 1 time . Sleep ( 10 * time . Millisecond ) // \u5047\u8bbe\u8bfb\u64cd\u4f5c\u8017\u65f610\u6beb\u79d2 rwlock . Unlock () // \u89e3\u5199\u9501 // lock.Unlock() // \u89e3\u4e92\u65a5\u9501 wg . Done () } func read () { // lock.Lock() // \u52a0\u4e92\u65a5\u9501 rwlock . RLock () // \u52a0\u8bfb\u9501 time . Sleep ( time . Millisecond ) // \u5047\u8bbe\u8bfb\u64cd\u4f5c\u8017\u65f61\u6beb\u79d2 rwlock . RUnlock () // \u89e3\u8bfb\u9501 // lock.Unlock() // \u89e3\u4e92\u65a5\u9501 wg . Done () } func main () { start := time . Now () for i := 0 ; i < 10 ; i ++ { wg . Add ( 1 ) go write () } for i := 0 ; i < 1000 ; i ++ { wg . Add ( 1 ) go read () } wg . Wait () end := time . Now () fmt . Println ( end . Sub ( start )) } \u9700\u8981\u6ce8\u610f\u7684\u662f\u8bfb\u5199\u9501\u975e\u5e38\u9002\u5408\u8bfb\u591a\u5199\u5c11\u7684\u573a\u666f\uff0c\u5982\u679c\u8bfb\u548c\u5199\u7684\u64cd\u4f5c\u5dee\u522b\u4e0d\u5927\uff0c\u8bfb\u5199\u9501\u7684\u4f18\u52bf\u5c31\u53d1\u6325\u4e0d\u51fa\u6765\u3002","title":"\u8bfb\u5199\u4e92\u65a5\u9501"},{"location":"Golang/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#syncwaitgroup","text":"\u5728\u4ee3\u7801\u4e2d\u751f\u786c\u7684\u4f7f\u7528 time.Sleep \u80af\u5b9a\u662f\u4e0d\u5408\u9002\u7684\uff0cGo\u8bed\u8a00\u4e2d\u53ef\u4ee5\u4f7f\u7528 sync.WaitGroup \u6765\u5b9e\u73b0\u5e76\u53d1\u4efb\u52a1\u7684\u540c\u6b65\u3002 sync.WaitGroup \u6709\u4ee5\u4e0b\u51e0\u4e2a\u65b9\u6cd5\uff1a \u65b9\u6cd5\u540d \u529f\u80fd (wg * WaitGroup) Add(delta int) \u8ba1\u6570\u5668+delta (wg *WaitGroup) Done() \u8ba1\u6570\u5668-1 (wg *WaitGroup) Wait() \u963b\u585e\u76f4\u5230\u8ba1\u6570\u5668\u53d8\u4e3a0 sync.WaitGroup \u5185\u90e8\u7ef4\u62a4\u7740\u4e00\u4e2a\u8ba1\u6570\u5668\uff0c\u8ba1\u6570\u5668\u7684\u503c\u53ef\u4ee5\u589e\u52a0\u548c\u51cf\u5c11\u3002\u4f8b\u5982\u5f53\u6211\u4eec\u542f\u52a8\u4e86N \u4e2a\u5e76\u53d1\u4efb\u52a1\u65f6\uff0c\u5c31\u5c06\u8ba1\u6570\u5668\u503c\u589e\u52a0N\u3002\u6bcf\u4e2a\u4efb\u52a1\u5b8c\u6210\u65f6\u901a\u8fc7\u8c03\u7528Done()\u65b9\u6cd5\u5c06\u8ba1\u6570\u5668\u51cf1\u3002\u901a\u8fc7\u8c03\u7528Wait()\u6765\u7b49\u5f85\u5e76\u53d1\u4efb\u52a1\u6267\u884c\u5b8c\uff0c\u5f53\u8ba1\u6570\u5668\u503c\u4e3a0\u65f6\uff0c\u8868\u793a\u6240\u6709\u5e76\u53d1\u4efb\u52a1\u5df2\u7ecf\u5b8c\u6210\u3002 \u6211\u4eec\u5229\u7528 sync.WaitGroup \u5c06\u4e0a\u9762\u7684\u4ee3\u7801\u4f18\u5316\u4e00\u4e0b\uff1a var wg sync . WaitGroup func hello () { defer wg . Done () fmt . Println ( \"Hello Goroutine!\" ) } func main () { wg . Add ( 1 ) go hello () // \u542f\u52a8\u53e6\u5916\u4e00\u4e2agoroutine\u53bb\u6267\u884chello\u51fd\u6570 fmt . Println ( \"main goroutine done!\" ) wg . Wait () } \u9700\u8981\u6ce8\u610f sync.WaitGroup \u662f\u4e00\u4e2a\u7ed3\u6784\u4f53\uff0c\u4f20\u9012\u7684\u65f6\u5019\u8981\u4f20\u9012\u6307\u9488\u3002","title":"sync.WaitGroup"},{"location":"Golang/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#_21","text":"\u4e0b\u9762\u662f\u501f\u52a9 sync.Once \u5b9e\u73b0\u7684\u5e76\u53d1\u5b89\u5168\u7684\u5355\u4f8b\u6a21\u5f0f\uff1a package singleton import ( \"sync\" ) type singleton struct {} var instance * singleton var once sync . Once func GetInstance () * singleton { once . Do ( func () { instance = & singleton {} }) return instance } sync.Once \u5176\u5b9e\u5185\u90e8\u5305\u542b\u4e00\u4e2a\u4e92\u65a5\u9501\u548c\u4e00\u4e2a\u5e03\u5c14\u503c\uff0c\u4e92\u65a5\u9501\u4fdd\u8bc1\u5e03\u5c14\u503c\u548c\u6570\u636e\u7684\u5b89\u5168\uff0c\u800c\u5e03\u5c14\u503c\u7528\u6765\u8bb0\u5f55\u521d\u59cb\u5316\u662f\u5426\u5b8c\u6210\u3002\u8fd9\u6837\u8bbe\u8ba1\u5c31\u80fd\u4fdd\u8bc1\u521d\u59cb\u5316\u64cd\u4f5c\u7684\u65f6\u5019\u662f\u5e76\u53d1\u5b89\u5168\u7684\u5e76\u4e14\u521d\u59cb\u5316\u64cd\u4f5c\u4e5f\u4e0d\u4f1a\u88ab\u6267\u884c\u591a\u6b21\u3002","title":"\u5e76\u53d1\u5b89\u5168\u7684\u5355\u4f8b\u6a21\u5f0f"},{"location":"Golang/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#syncmap","text":"Go\u8bed\u8a00\u4e2d\u5185\u7f6e\u7684map\u4e0d\u662f\u5e76\u53d1\u5b89\u5168\u7684\u3002\u8bf7\u770b\u4e0b\u9762\u7684\u793a\u4f8b\uff1a var m = make ( map [ string ] int ) func get ( key string ) int { return m [ key ] } func set ( key string , value int ) { m [ key ] = value } func main () { wg := sync . WaitGroup {} for i := 0 ; i < 20 ; i ++ { wg . Add ( 1 ) go func ( n int ) { key := strconv . Itoa ( n ) set ( key , n ) fmt . Printf ( \"k=:%v,v:=%v\\n\" , key , get ( key )) wg . Done () }( i ) } wg . Wait () } \u4e0a\u9762\u7684\u4ee3\u7801\u5f00\u542f\u5c11\u91cf\u51e0\u4e2a goroutine \u7684\u65f6\u5019\u53ef\u80fd\u6ca1\u4ec0\u4e48\u95ee\u9898\uff0c\u5f53\u5e76\u53d1\u591a\u4e86\u4e4b\u540e\u6267\u884c\u4e0a\u9762\u7684\u4ee3\u7801\u5c31\u4f1a\u62a5 fatal error: concurrent map writes \u9519\u8bef\u3002 \u50cf\u8fd9\u79cd\u573a\u666f\u4e0b\u5c31\u9700\u8981\u4e3amap\u52a0\u9501\u6765\u4fdd\u8bc1\u5e76\u53d1\u7684\u5b89\u5168\u6027\u4e86\uff0cGo\u8bed\u8a00\u7684 sync \u5305\u4e2d\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5f00\u7bb1\u5373\u7528\u7684\u5e76\u53d1\u5b89\u5168\u7248map\u2013 sync.Map \u3002\u5f00\u7bb1\u5373\u7528\u8868\u793a\u4e0d\u7528\u50cf\u5185\u7f6e\u7684map\u4e00\u6837\u4f7f\u7528make\u51fd\u6570\u521d\u59cb\u5316\u5c31\u80fd\u76f4\u63a5\u4f7f\u7528\u3002\u540c\u65f6 sync.Map \u5185\u7f6e\u4e86\u8bf8\u5982 Store \u3001 Load \u3001 LoadOrStore \u3001 Delete \u3001 Range \u7b49\u64cd\u4f5c\u65b9\u6cd5\u3002 var m = sync . Map {} func main () { wg := sync . WaitGroup {} for i := 0 ; i < 20 ; i ++ { wg . Add ( 1 ) go func ( n int ) { key := strconv . Itoa ( n ) m . Store ( key , n ) value , _ := m . Load ( key ) fmt . Printf ( \"k=:%v,v:=%v\\n\" , key , value ) wg . Done () }( i ) } wg . Wait () }","title":"sync.Map"},{"location":"Golang/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#_22","text":"\u4ee3\u7801\u4e2d\u7684\u52a0\u9501\u64cd\u4f5c\u56e0\u4e3a\u6d89\u53ca\u5185\u6838\u6001\u7684\u4e0a\u4e0b\u6587\u5207\u6362\u4f1a\u6bd4\u8f83\u8017\u65f6\u3001\u4ee3\u4ef7\u6bd4\u8f83\u9ad8\u3002\u9488\u5bf9\u57fa\u672c\u6570\u636e\u7c7b\u578b\u6211\u4eec\u8fd8\u53ef\u4ee5\u4f7f\u7528\u539f\u5b50\u64cd\u4f5c\u6765\u4fdd\u8bc1\u5e76\u53d1\u5b89\u5168\uff0c\u56e0\u4e3a\u539f\u5b50\u64cd\u4f5c\u662fGo\u8bed\u8a00\u63d0\u4f9b\u7684\u65b9\u6cd5\u5b83\u5728\u7528\u6237\u6001\u5c31\u53ef\u4ee5\u5b8c\u6210\uff0c\u56e0\u6b64\u6027\u80fd\u6bd4\u52a0\u9501\u64cd\u4f5c\u66f4\u597d\u3002Go\u8bed\u8a00\u4e2d\u539f\u5b50\u64cd\u4f5c\u7531\u5185\u7f6e\u7684\u6807\u51c6\u5e93 sync/atomic \u63d0\u4f9b\u3002","title":"\u539f\u5b50\u64cd\u4f5c"},{"location":"Golang/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#atomic","text":"\u65b9\u6cd5 \u89e3\u91ca func LoadInt32(addr *int32) (val int32) func LoadInt64(addr *int64) (val int64) func LoadUint32(addr *uint32) (val uint32) func LoadUint64(addr *uint64) (val uint64) func LoadUintptr(addr *uintptr) (val uintptr) func LoadPointer(addr *unsafe.Pointer) (val unsafe.Pointer) \u8bfb\u53d6\u64cd\u4f5c func StoreInt32(addr *int32, val int32) func StoreInt64(addr *int64, val int64) func StoreUint32(addr *uint32, val uint32) func StoreUint64(addr *uint64, val uint64) func StoreUintptr(addr *uintptr, val uintptr) func StorePointer(addr *unsafe.Pointer, val unsafe.Pointer) \u5199\u5165\u64cd\u4f5c func AddInt32(addr *int32, delta int32) (new int32) func AddInt64(addr *int64, delta int64) (new int64) func AddUint32(addr *uint32, delta uint32) (new uint32) func AddUint64(addr *uint64, delta uint64) (new uint64) func AddUintptr(addr *uintptr, delta uintptr) (new uintptr) \u4fee\u6539\u64cd\u4f5c func SwapInt32(addr *int32, new int32) (old int32) func SwapInt64(addr *int64, new int64) (old int64) func SwapUint32(addr *uint32, new uint32) (old uint32) func SwapUint64(addr *uint64, new uint64) (old uint64) func SwapUintptr(addr *uintptr, new uintptr) (old uintptr) func SwapPointer(addr *unsafe.Pointer, new unsafe.Pointer) (old unsafe.Pointer) \u4ea4\u6362\u64cd\u4f5c func CompareAndSwapInt32(addr *int32, old, new int32) (swapped bool) func CompareAndSwapInt64(addr *int64, old, new int64) (swapped bool) func CompareAndSwapUint32(addr *uint32, old, new uint32) (swapped bool) func CompareAndSwapUint64(addr *uint64, old, new uint64) (swapped bool) func CompareAndSwapUintptr(addr *uintptr, old, new uintptr) (swapped bool) func CompareAndSwapPointer(addr *unsafe.Pointer, old, new unsafe.Pointer) (swapped bool) \u6bd4\u8f83\u5e76\u4ea4\u6362\u64cd\u4f5c","title":"atomic\u5305"},{"location":"Golang/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#_23","text":"\u6211\u4eec\u586b\u5199\u4e00\u4e2a\u793a\u4f8b\u6765\u6bd4\u8f83\u4e0b\u4e92\u65a5\u9501\u548c\u539f\u5b50\u64cd\u4f5c\u7684\u6027\u80fd\u3002 package main import ( \"fmt\" \"sync\" \"sync/atomic\" \"time\" ) type Counter interface { Inc () Load () int64 } // \u666e\u901a\u7248 type CommonCounter struct { counter int64 } func ( c CommonCounter ) Inc () { c . counter ++ } func ( c CommonCounter ) Load () int64 { return c . counter } // \u4e92\u65a5\u9501\u7248 type MutexCounter struct { counter int64 lock sync . Mutex } func ( m * MutexCounter ) Inc () { m . lock . Lock () defer m . lock . Unlock () m . counter ++ } func ( m * MutexCounter ) Load () int64 { m . lock . Lock () defer m . lock . Unlock () return m . counter } // \u539f\u5b50\u64cd\u4f5c\u7248 type AtomicCounter struct { counter int64 } func ( a * AtomicCounter ) Inc () { atomic . AddInt64 ( & a . counter , 1 ) } func ( a * AtomicCounter ) Load () int64 { return atomic . LoadInt64 ( & a . counter ) } func test ( c Counter ) { var wg sync . WaitGroup start := time . Now () for i := 0 ; i < 1000 ; i ++ { wg . Add ( 1 ) go func () { c . Inc () wg . Done () }() } wg . Wait () end := time . Now () fmt . Println ( c . Load (), end . Sub ( start )) } func main () { c1 := CommonCounter {} // \u975e\u5e76\u53d1\u5b89\u5168 test ( c1 ) c2 := MutexCounter {} // \u4f7f\u7528\u4e92\u65a5\u9501\u5b9e\u73b0\u5e76\u53d1\u5b89\u5168 test ( & c2 ) c3 := AtomicCounter {} // \u5e76\u53d1\u5b89\u5168\u4e14\u6bd4\u4e92\u65a5\u9501\u6548\u7387\u66f4\u9ad8 test ( & c3 ) } atomic \u5305\u63d0\u4f9b\u4e86\u5e95\u5c42\u7684\u539f\u5b50\u7ea7\u5185\u5b58\u64cd\u4f5c\uff0c\u5bf9\u4e8e\u540c\u6b65\u7b97\u6cd5\u7684\u5b9e\u73b0\u5f88\u6709\u7528\u3002\u8fd9\u4e9b\u51fd\u6570\u5fc5\u987b\u8c28\u614e\u5730\u4fdd\u8bc1\u6b63\u786e\u4f7f\u7528\u3002\u9664\u4e86\u67d0\u4e9b\u7279\u6b8a\u7684\u5e95\u5c42\u5e94\u7528\uff0c\u4f7f\u7528\u901a\u9053\u6216\u8005sync\u5305\u7684\u51fd\u6570/\u7c7b\u578b\u5b9e\u73b0\u540c\u6b65\u66f4\u597d\u3002","title":"\u793a\u4f8b"},{"location":"Golang/%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/","text":"\u5f02\u5e38\u5904\u7406 \u00b6 \u9ed8\u8ba4\u60c5\u51b5\u4e0b,\u5f53\u53d1\u751f\u9519\u8bef\u540e(panic)\u540e,\u7a0b\u5e8f\u5c31\u4f1a\u9000\u51fa(\u5d29\u6e83). \u4f46\u662f\u6211\u4eec\u5e0c\u671b:\u9519\u8bef\u53d1\u751f\u540e,\u53ef\u4ee5\u6355\u6349\u5230\u9519\u8bef,\u5e76\u8fdb\u884c\u5904\u7406,\u4fdd\u8bc1\u7a0b\u5e8f\u53ef\u4ee5\u7ee7\u7eed\u6267\u884c,\u8fd8\u53ef\u4ee5\u7ed9\u7ba1\u7406\u5458\u4e00\u4e2a\u63d0\u793a\u4fe1\u606f. \u57fa\u672c\u8bed\u6cd5 \u00b6 defer,panic,recover defer \u00b6 \u5728\u672c\u672c\u51fd\u6570\u4e2d,defer\u5728\u5176\u4e0b\u65b9\u6240\u6709\u53ef\u6267\u884c\u4ee3\u7801\u6267\u884c\u540e\u518d\u6267\u884c. \u4e00\u4e2a\u65b9\u6cd5\u91cc\u82e5\u6709\u591a\u4e2adefer\u8bed\u53e5\uff0c\u5219\u5148\u58f0\u660e\u7684\u540e\u88ab\u8c03\u7528\uff0c panic \u00b6 \u624b\u52a8\u629b\u51fa\u5f02\u5e38,\u5176\u4e0b\u65b9\u4ee3\u7801\u4e0d\u6267\u884c recover \u00b6 \u6355\u83b7\u5f02\u5e38,\u5e76\u4f7f\u51fd\u6570\u7ee7\u7eed\u6267\u884c. \u5e38\u4e0edefer\u51fd\u6570\u8054\u5408\u4f7f\u7528,\u5982\u679crecover\u4e0d\u5728defer\u51fd\u6570\u4e2d,\u5219\u4e0d\u4f1a\u7ec8\u6b62\u7a0b\u5e8f\u5d29\u6e83. \u5728defer\u51fd\u6570\u4e2d\u8c03\u7528\u5219\u4f1a\u7ee7\u7eed\u5c06\u51fd\u6570\u6267\u884c\u5b8c\u6bd5. \u8bf4\u660e: \u00b6 Go\u4e2d\u53ef\u4ee5\u629b\u51fa\u4e00\u4e2apanic\u5f02\u5e38,\u7136\u540e\u5728defer\u4e2d\u901a\u8fc7\u5185\u7f6e\u51fd\u6570recover\u6355\u83b7\u8fd9\u4e2a\u5f02\u5e38,\u7136\u540e\u6b63\u5e38\u5904\u7406. \u4f8b: func test () { defer func (){ err := recover () if err != nil { fmt . Println ( \"err:\" , err ) fmt . Println ( \"send message to agsol\" ) } }() //\u4e5f\u53ef\u4ee5\u76f4\u63a5\u5c06err\u5b9a\u4e49\u653e\u5728if\u4e2d // defer func(){ // if err := recover(); err != nil { // fmt.Println(\"err:\",err) // fmt.Println(\"send message to agsol\") // } // }() num1 := 10 num2 := 0 res := num1 / num2 fmt . Println ( res ) } func main () { test () fmt . Println ( \"under\" ) } >> > err : runtime error : integer divide by zero under \u901a\u8fc7\u538b\u6808defer\u5ef6\u8fdf\u51fd\u6570\u8fdb\u884c\u5f02\u5e38\u6355\u83b7 \u597d\u5904 \u00b6 \u8fdb\u884c\u9519\u8bef\u5904\u7406\u540e,\u7a0b\u5e8f\u4e0d\u4f1a\u8f7b\u6613\u6302\u6389,\u52a0\u5165\u9884\u8b66\u4ee3\u7801,\u5c31\u53ef\u4ee5\u4f7f\u7a0b\u5e8f\u66f4\u52a0\u5065\u58ee. func test () { defer func (){ err := recover () if err != nil { fmt . Println ( \"err:\" , err ) //\u6a21\u62df\u5411\u7ba1\u7406\u5458\u53d1\u9001\u4fe1\u606f fmt . Println ( \"send message to agsol\" ) } }() num1 := 10 num2 := 0 res := num1 / num2 fmt . Println ( res ) } func main () { test () fmt . Println ( \"under\" ) } >> > err : runtime error : integer divide by zero send message to agsol under \u4f1a\u63d0\u524d\u542f\u52a8send message\u52a8\u4f5c \u81ea\u5b9a\u4e49\u9519\u8bef \u00b6 Go\u7a0b\u5e8f\u4e2d,\u652f\u6301\u81ea\u5b9a\u4e49\u9519\u8bef,\u4f7f\u7528errors.New\u548cpanic\u5185\u7f6e\u51fd\u6570. error.New(\"\u9519\u8bef\u8bf4\u660e\"),\u4f1a\u8fd4\u56de\u4e00\u4e2aerror\u7c7b\u578b\u7684\u503c,\u8868\u793a\u4e00\u4e2a\u9519\u8bef panic\u5185\u7f6e\u51fd\u6570,\u63a5\u53d7\u4e00\u4e2a\u7a7a\u63a5\u53e3\u7c7b\u578binterface{}\u7c7b\u578b\u7684\u503c(\u4e5f\u5c31\u662f\u4efb\u4f55\u503c)\u4f5c\u4e3a\u53c2\u6570.\u53ef\u4ee5\u63a5\u53d7error\u7c7b\u578b\u7684\u53d8\u91cf,\u8f93\u51fa\u9519\u8bef\u4fe1\u606f,\u5e76\u9000\u51fa\u7a0b\u5e8f. func readConf ( name string ) ( err error ) { if name == \"config.ini\" { return nil } else { return errors . New ( \"\u8bfb\u53d6\u6570\u636e\u9519\u8bef\" ) } } func test (){ err := readConf ( \"config.ini\" ) if err != nil { //\u53d1\u751f\u9519\u8bef,\u8f93\u51fa\u9519\u8bef\u5e76\u7ec8\u6b62\u7a0b\u5e8f panic ( err ) //panic\u4f1a\u6253\u5370\u9519\u8bef\u5e76\u7ec8\u6b62\u7a0b\u5e8f } fmt . Println ( \"test\u7ee7\u7eed\u6267\u884c...\" ) } func main () { test () fmt . Println ( \"main\u7ee7\u7eed\u6267\u884c...\" ) } >> > test\u7ee7\u7eed\u6267\u884c ... main\u7ee7\u7eed\u6267\u884c ... ----------------------------------------------------------------- func readConf ( name string ) ( err error ) { if name == \"config.ini\" { return nil } else { return errors . New ( \"\u8bfb\u53d6\u6570\u636e\u9519\u8bef\" ) } } func test (){ err := readConf ( \"config.\" ) if err != nil { //\u53d1\u751f\u9519\u8bef,\u8f93\u51fa\u9519\u8bef\u5e76\u7ec8\u6b62\u7a0b\u5e8f panic ( err ) //panic\u4f1a\u6253\u5370\u9519\u8bef\u5e76\u7ec8\u6b62\u7a0b\u5e8f } fmt . Println ( \"test\u7ee7\u7eed\u6267\u884c...\" ) } func main () { test () fmt . Println ( \"main\u7ee7\u7eed\u6267\u884c...\" ) } >> > panic : \u8bfb\u53d6\u6570\u636e\u9519\u8bef","title":"\u5f02\u5e38\u5904\u7406"},{"location":"Golang/%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/#_1","text":"\u9ed8\u8ba4\u60c5\u51b5\u4e0b,\u5f53\u53d1\u751f\u9519\u8bef\u540e(panic)\u540e,\u7a0b\u5e8f\u5c31\u4f1a\u9000\u51fa(\u5d29\u6e83). \u4f46\u662f\u6211\u4eec\u5e0c\u671b:\u9519\u8bef\u53d1\u751f\u540e,\u53ef\u4ee5\u6355\u6349\u5230\u9519\u8bef,\u5e76\u8fdb\u884c\u5904\u7406,\u4fdd\u8bc1\u7a0b\u5e8f\u53ef\u4ee5\u7ee7\u7eed\u6267\u884c,\u8fd8\u53ef\u4ee5\u7ed9\u7ba1\u7406\u5458\u4e00\u4e2a\u63d0\u793a\u4fe1\u606f.","title":"\u5f02\u5e38\u5904\u7406"},{"location":"Golang/%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/#_2","text":"defer,panic,recover","title":"\u57fa\u672c\u8bed\u6cd5"},{"location":"Golang/%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/#defer","text":"\u5728\u672c\u672c\u51fd\u6570\u4e2d,defer\u5728\u5176\u4e0b\u65b9\u6240\u6709\u53ef\u6267\u884c\u4ee3\u7801\u6267\u884c\u540e\u518d\u6267\u884c. \u4e00\u4e2a\u65b9\u6cd5\u91cc\u82e5\u6709\u591a\u4e2adefer\u8bed\u53e5\uff0c\u5219\u5148\u58f0\u660e\u7684\u540e\u88ab\u8c03\u7528\uff0c","title":"defer"},{"location":"Golang/%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/#panic","text":"\u624b\u52a8\u629b\u51fa\u5f02\u5e38,\u5176\u4e0b\u65b9\u4ee3\u7801\u4e0d\u6267\u884c","title":"panic"},{"location":"Golang/%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/#recover","text":"\u6355\u83b7\u5f02\u5e38,\u5e76\u4f7f\u51fd\u6570\u7ee7\u7eed\u6267\u884c. \u5e38\u4e0edefer\u51fd\u6570\u8054\u5408\u4f7f\u7528,\u5982\u679crecover\u4e0d\u5728defer\u51fd\u6570\u4e2d,\u5219\u4e0d\u4f1a\u7ec8\u6b62\u7a0b\u5e8f\u5d29\u6e83. \u5728defer\u51fd\u6570\u4e2d\u8c03\u7528\u5219\u4f1a\u7ee7\u7eed\u5c06\u51fd\u6570\u6267\u884c\u5b8c\u6bd5.","title":"recover"},{"location":"Golang/%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/#_3","text":"Go\u4e2d\u53ef\u4ee5\u629b\u51fa\u4e00\u4e2apanic\u5f02\u5e38,\u7136\u540e\u5728defer\u4e2d\u901a\u8fc7\u5185\u7f6e\u51fd\u6570recover\u6355\u83b7\u8fd9\u4e2a\u5f02\u5e38,\u7136\u540e\u6b63\u5e38\u5904\u7406. \u4f8b: func test () { defer func (){ err := recover () if err != nil { fmt . Println ( \"err:\" , err ) fmt . Println ( \"send message to agsol\" ) } }() //\u4e5f\u53ef\u4ee5\u76f4\u63a5\u5c06err\u5b9a\u4e49\u653e\u5728if\u4e2d // defer func(){ // if err := recover(); err != nil { // fmt.Println(\"err:\",err) // fmt.Println(\"send message to agsol\") // } // }() num1 := 10 num2 := 0 res := num1 / num2 fmt . Println ( res ) } func main () { test () fmt . Println ( \"under\" ) } >> > err : runtime error : integer divide by zero under \u901a\u8fc7\u538b\u6808defer\u5ef6\u8fdf\u51fd\u6570\u8fdb\u884c\u5f02\u5e38\u6355\u83b7","title":"\u8bf4\u660e:"},{"location":"Golang/%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/#_4","text":"\u8fdb\u884c\u9519\u8bef\u5904\u7406\u540e,\u7a0b\u5e8f\u4e0d\u4f1a\u8f7b\u6613\u6302\u6389,\u52a0\u5165\u9884\u8b66\u4ee3\u7801,\u5c31\u53ef\u4ee5\u4f7f\u7a0b\u5e8f\u66f4\u52a0\u5065\u58ee. func test () { defer func (){ err := recover () if err != nil { fmt . Println ( \"err:\" , err ) //\u6a21\u62df\u5411\u7ba1\u7406\u5458\u53d1\u9001\u4fe1\u606f fmt . Println ( \"send message to agsol\" ) } }() num1 := 10 num2 := 0 res := num1 / num2 fmt . Println ( res ) } func main () { test () fmt . Println ( \"under\" ) } >> > err : runtime error : integer divide by zero send message to agsol under \u4f1a\u63d0\u524d\u542f\u52a8send message\u52a8\u4f5c","title":"\u597d\u5904"},{"location":"Golang/%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/#_5","text":"Go\u7a0b\u5e8f\u4e2d,\u652f\u6301\u81ea\u5b9a\u4e49\u9519\u8bef,\u4f7f\u7528errors.New\u548cpanic\u5185\u7f6e\u51fd\u6570. error.New(\"\u9519\u8bef\u8bf4\u660e\"),\u4f1a\u8fd4\u56de\u4e00\u4e2aerror\u7c7b\u578b\u7684\u503c,\u8868\u793a\u4e00\u4e2a\u9519\u8bef panic\u5185\u7f6e\u51fd\u6570,\u63a5\u53d7\u4e00\u4e2a\u7a7a\u63a5\u53e3\u7c7b\u578binterface{}\u7c7b\u578b\u7684\u503c(\u4e5f\u5c31\u662f\u4efb\u4f55\u503c)\u4f5c\u4e3a\u53c2\u6570.\u53ef\u4ee5\u63a5\u53d7error\u7c7b\u578b\u7684\u53d8\u91cf,\u8f93\u51fa\u9519\u8bef\u4fe1\u606f,\u5e76\u9000\u51fa\u7a0b\u5e8f. func readConf ( name string ) ( err error ) { if name == \"config.ini\" { return nil } else { return errors . New ( \"\u8bfb\u53d6\u6570\u636e\u9519\u8bef\" ) } } func test (){ err := readConf ( \"config.ini\" ) if err != nil { //\u53d1\u751f\u9519\u8bef,\u8f93\u51fa\u9519\u8bef\u5e76\u7ec8\u6b62\u7a0b\u5e8f panic ( err ) //panic\u4f1a\u6253\u5370\u9519\u8bef\u5e76\u7ec8\u6b62\u7a0b\u5e8f } fmt . Println ( \"test\u7ee7\u7eed\u6267\u884c...\" ) } func main () { test () fmt . Println ( \"main\u7ee7\u7eed\u6267\u884c...\" ) } >> > test\u7ee7\u7eed\u6267\u884c ... main\u7ee7\u7eed\u6267\u884c ... ----------------------------------------------------------------- func readConf ( name string ) ( err error ) { if name == \"config.ini\" { return nil } else { return errors . New ( \"\u8bfb\u53d6\u6570\u636e\u9519\u8bef\" ) } } func test (){ err := readConf ( \"config.\" ) if err != nil { //\u53d1\u751f\u9519\u8bef,\u8f93\u51fa\u9519\u8bef\u5e76\u7ec8\u6b62\u7a0b\u5e8f panic ( err ) //panic\u4f1a\u6253\u5370\u9519\u8bef\u5e76\u7ec8\u6b62\u7a0b\u5e8f } fmt . Println ( \"test\u7ee7\u7eed\u6267\u884c...\" ) } func main () { test () fmt . Println ( \"main\u7ee7\u7eed\u6267\u884c...\" ) } >> > panic : \u8bfb\u53d6\u6570\u636e\u9519\u8bef","title":"\u81ea\u5b9a\u4e49\u9519\u8bef"},{"location":"Golang/%E6%8C%87%E9%92%88/","text":"\u6307\u9488 \u6307\u9488\u5730\u5740 \u6307\u9488\u7c7b\u578b \u8bed\u6cd5 \u6307\u9488\u53d6\u503c \u6ce8\u610f \u6307\u9488 \u00b6 \u6307\u9488,\u662f\u4e00\u4e2a\u6307\u5411\u6570\u636e\u5730\u5740\u7684\u6570\u636e\u7ed3\u6784. \u6307\u9488\u5730\u5740 \u00b6 \u4f7f\u7528 & \u53d6\u5740\u7b26\u5bf9\u53d8\u91cf\u8fdb\u884c\u53d6\u5730\u5740\u64cd\u4f5c. \u6307\u9488\u7c7b\u578b \u00b6 \u503c\u7c7b\u578b\u90fd\u6709\u5bf9\u5e94\u7684\u6307\u9488\u7c7b\u578b,\u6bd4\u5982 *int , \u8bed\u6cd5 \u00b6 ptr := & v v:\u88ab\u53d6\u5730\u5740\u7684\u53d8\u91cf,\u7c7b\u578b\u4e3aT. ptr:\u6307\u9488\u53d8\u91cf,\u79f0\u4e3aT\u7684\u6307\u9488 var i int = 30 var ptr * int = & i \u5176\u4e2d ptr\u662f\u4e00\u4e2a\u6307\u9488\u53d8\u91cf ptr\u7684\u7c7b\u578b\u662f * int\u6307\u9488 ptr\u672c\u8eab\u7684\u503c & i \u6307\u9488\u53d6\u503c \u00b6 \u4f7f\u7528 * \u53d6\u503c\u7b26\u5bf9\u6307\u9488\u53d8\u91cf\u8fdb\u884c\u53d6\u503c\u64cd\u4f5c. var i int = 30 var ptr * int = & i fmt . Printf ( \"%v\\n\" , i ) fmt . Printf ( \"%v\\n\" , * ptr ) >> > 30 >> > 30 \u6ce8\u610f \u00b6 Golang\u4e2d\u7684\u6307\u9488\u662f\u5b89\u5168\u6307\u9488.\u4e0d\u652f\u6301\u504f\u79fb\u548c\u8fd0\u7b97. \u6570\u7ec4\u7c7b\u578b\u652f\u6301\u6307\u9488\u76f4\u63a5\u64cd\u4f5c,go\u5185\u90e8\u4f18\u5316","title":"\u6307\u9488"},{"location":"Golang/%E6%8C%87%E9%92%88/#_1","text":"\u6307\u9488,\u662f\u4e00\u4e2a\u6307\u5411\u6570\u636e\u5730\u5740\u7684\u6570\u636e\u7ed3\u6784.","title":"\u6307\u9488"},{"location":"Golang/%E6%8C%87%E9%92%88/#_2","text":"\u4f7f\u7528 & \u53d6\u5740\u7b26\u5bf9\u53d8\u91cf\u8fdb\u884c\u53d6\u5730\u5740\u64cd\u4f5c.","title":"\u6307\u9488\u5730\u5740"},{"location":"Golang/%E6%8C%87%E9%92%88/#_3","text":"\u503c\u7c7b\u578b\u90fd\u6709\u5bf9\u5e94\u7684\u6307\u9488\u7c7b\u578b,\u6bd4\u5982 *int ,","title":"\u6307\u9488\u7c7b\u578b"},{"location":"Golang/%E6%8C%87%E9%92%88/#_4","text":"ptr := & v v:\u88ab\u53d6\u5730\u5740\u7684\u53d8\u91cf,\u7c7b\u578b\u4e3aT. ptr:\u6307\u9488\u53d8\u91cf,\u79f0\u4e3aT\u7684\u6307\u9488 var i int = 30 var ptr * int = & i \u5176\u4e2d ptr\u662f\u4e00\u4e2a\u6307\u9488\u53d8\u91cf ptr\u7684\u7c7b\u578b\u662f * int\u6307\u9488 ptr\u672c\u8eab\u7684\u503c & i","title":"\u8bed\u6cd5"},{"location":"Golang/%E6%8C%87%E9%92%88/#_5","text":"\u4f7f\u7528 * \u53d6\u503c\u7b26\u5bf9\u6307\u9488\u53d8\u91cf\u8fdb\u884c\u53d6\u503c\u64cd\u4f5c. var i int = 30 var ptr * int = & i fmt . Printf ( \"%v\\n\" , i ) fmt . Printf ( \"%v\\n\" , * ptr ) >> > 30 >> > 30","title":"\u6307\u9488\u53d6\u503c"},{"location":"Golang/%E6%8C%87%E9%92%88/#_6","text":"Golang\u4e2d\u7684\u6307\u9488\u662f\u5b89\u5168\u6307\u9488.\u4e0d\u652f\u6301\u504f\u79fb\u548c\u8fd0\u7b97. \u6570\u7ec4\u7c7b\u578b\u652f\u6301\u6307\u9488\u76f4\u63a5\u64cd\u4f5c,go\u5185\u90e8\u4f18\u5316","title":"\u6ce8\u610f"},{"location":"Golang/%E6%8E%A5%E5%8F%A3/","text":"\u63a5\u53e3Interface \u63a5\u53e3\u7c7b\u578b \u63a5\u53e3\u5b9a\u4e49 \u5b9e\u73b0\u63a5\u53e3\u7684\u6761\u4ef6 \u63a5\u53e3\u7c7b\u578b\u53d8\u91cf \u63a5\u6536\u5668\u7c7b\u578b\u5b9e\u73b0\u63a5\u53e3\u7684\u533a\u522b \u603b\u7ed3 \u7c7b\u578b\u4e0e\u63a5\u53e3\u4e4b\u95f4\u7684\u5173\u7cfb \u4e00\u4e2a\u7c7b\u578b\u53ef\u4ee5\u5b9e\u73b0\u591a\u4e2a\u63a5\u53e3 \u591a\u4e2a\u7c7b\u578b\u5b9e\u73b0\u540c\u4e00\u63a5\u53e3 \u63a5\u53e3\u5d4c\u5957 \u7a7a\u63a5\u53e3 \u5b9a\u4e49 \u5e94\u7528 \u4f5c\u4e3a\u51fd\u6570\u7684\u53c2\u6570 \u4f5c\u4e3amap\u7684value \u63a5\u53e3\u5e95\u5c42\u6a21\u578b \u7c7b\u578b\u65ad\u8a00 \u63a5\u53e3\u503c \u7c7b\u578b\u9009\u62e9 Python\u4e0eGolang\u4e2d\u63a5\u53e3\u7684\u533a\u522b \u7ec3\u4e60 \u5b9e\u8df5 \u6ce8\u610f\u4e8b\u9879: \u63a5\u53e3Interface \u00b6 Golang\u63d0\u5021\u9762\u5411\u63a5\u53e3\u7f16\u7a0b. interface\u662f\u4e00\u4e2a\u5f15\u7528\u7c7b\u578b,\u5982\u679c\u6ca1\u6709\u521d\u59cb\u5316\u5c31\u4f7f\u7528,\u5c31\u4f1a\u8f93\u51fanil \u63a5\u53e3\u5b9a\u4e49\u4e86\u4e00\u4e2a\u5bf9\u8c61\u7684\u884c\u4e3a\u89c4\u8303,\u53ea\u5b9a\u4e49\u89c4\u8303\u4e0d\u5b9e\u73b0,\u7531\u5177\u4f53\u7684\u5bf9\u8c61\u6765\u5b9e\u73b0\u89c4\u8303\u7684\u7ec6\u8282. \u63a5\u53e3\u7c7b\u578b \u00b6 Golang\u4e2d\u7684\u63a5\u53e3\u662f\u4e00\u79cd\u7c7b\u578b,\u4e00\u79cd\u62bd\u8c61\u7684\u7c7b\u578b. Interface\u662f\u4e00\u7ec4method\u7684\u96c6\u5408,\u662fduck-type programming\u7684\u4e00\u79cd\u4f53\u73b0.\u63a5\u53e3\u505a\u7684\u4e8b\u60c5\u5c31\u50cf\u662f\u5b9a\u4e49\u4e00\u4e2a\u534f\u8bae(\u89c4\u5219),\u53ea\u8981\u4e00\u4e2a\u52a8\u7269\u770b\u8d77\u6765\u50cf\u9e2d\u5b50,\u5403\u8d77\u6765\u50cf\u9e2d\u5b50,\u90a3\u5b83\u5c31\u662f\u4e00\u4e2a\u9e2d\u5b50,\u4e0d\u5173\u7cfb\u5c5e\u6027(\u6570\u636e),\u53ea\u5173\u5fc3\u884c\u4e3a(\u65b9\u6cd5). \u63a5\u53e3\u5b9a\u4e49 \u00b6 \u63a5\u53e3\u662f\u4e00\u79cd\u7c7b\u578b.\u5b9a\u4e49\u4e86\u4e00\u7ec4\u65b9\u6cd5,\u8fd9\u4e9b\u65b9\u6cd5\u4e0d\u9700\u8981\u5b9e\u73b0(\u5373\u4e0d\u9700\u8981\u7531\u65b9\u6cd5\u4f53),\u4e14==interface \u4e0d\u80fd\u5305\u542b\u4efb\u4f55\u53d8\u91cf==. \u6bcf\u4e2a\u63a5\u53e3\u7531\u6570\u4e2a\u65b9\u6cd5\u7ec4\u6210,\u63a5\u53e3\u7684\u5b9a\u4e49\u683c\u5f0f\u5982\u4e0b: type \u63a5\u53e3\u7c7b\u578b\u540d interface { method1 ( \u53c2\u6570\u5217\u88681 ) \u8fd4\u56de\u503c\u5217\u88681 method2 ( \u53c2\u6570\u5217\u88682 ) \u8fd4\u56de\u503c\u5217\u88682 ... } \u5176\u4e2d; \u63a5\u53e3\u540d:\u4f7f\u7528type\u5c06\u63a5\u53e3\u5b9a\u4e49\u4e3a\u81ea\u5b9a\u4e49\u7684\u7c7b\u578b\u540d.Go\u8bed\u8a00\u7684\u63a5\u53e3\u5728\u547d\u540d\u65f6,\u4e00\u822c\u4f1a\u5728\u5355\u8bcd\u540e\u9762\u52a0er,\u5982\u5199\u64cd\u4f5c\u7684\u63a5\u53e3\u53ebWriter.\u63a5\u53e3\u540d\u6700\u597d\u8981\u80fd\u7a81\u51fa\u8be5\u63a5\u53e3\u7684\u7c7b\u578b\u542b\u4e49. \u65b9\u6cd5\u540d:\u5f53\u65b9\u6cd5\u540d\u5468\u6893\u6728\u65f6\u5927\u5199\u4e14\u8fd9\u4e2a\u63a5\u53e3\u7c7b\u578b\u540d\u9996\u5b57\u6bcd\u4e5f\u662f\u5927\u5199\u7684\u65f6\u5019,\u8fd9\u4e2a\u65b9\u6cd5\u53ef\u4ee5\u88ab\u63a5\u53e3\u6240\u5728\u7684\u5305\u4e4b\u5916\u7684\u4ee3\u7801\u8bbf\u95ee.\u6bcf\u4e2amethod\u90fd\u662f\u4e00\u4e2a\u7c7b\u578b. \u53c2\u6570\u5217\u8868,\u8fd4\u56de\u503c\u5217\u8868:\u53c2\u6570\u5217\u8868\u548c\u8fd4\u56de\u503c\u5217\u8868\u4e2d\u7684\u53c2\u6570\u53d8\u91cf\u540d\u53ef\u4ee5\u7701\u7565.\u6bd4\u5982 type writer interface { Write ([] byte ) error } \u8fd9\u4e2a\u63a5\u53e3\u6211\u4eec\u4e0d\u77e5\u9053\u53ef\u4ee5\u505a\u4ec0\u4e48,\u4f46\u662f\u5e94\u8be5\u53ef\u4ee5\u901a\u8fc7Write\u65b9\u6cd5\u505a\u4e00\u4e9b\u4e8b\u60c5. \u63a5\u53e3\u91cc\u7684\u6240\u6709\u65b9\u6cd5\u90fd\u6ca1\u6709\u65b9\u6cd5\u4f53.\u5373\u63a5\u53e3\u7684\u65b9\u6cd5\u90fd\u662f\u6ca1\u6709\u5b9e\u73b0\u7684\u65b9\u6cd5.\u63a5\u53e3\u4f53\u73b0\u4e86\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u591a\u6001\u548c\u9ad8\u5185\u805a\u4f4e\u8026\u5408\u7684\u601d\u60f3. \u5b9e\u73b0\u63a5\u53e3\u7684\u6761\u4ef6 \u00b6 \u4e00\u4e2a\u5bf9\u8c61\u53ea\u8981\u5b9e\u73b0\u4e86\u63a5\u53e3\u4e2d\u7684\u5168\u90e8\u65b9\u6cd5.\u90a3\u4e48\u5c31\u5b9e\u73b0\u4e86\u8fd9\u4e2a\u63a5\u53e3. \u6362\u53e5\u8bdd\u8bf4,\u63a5\u53e3\u5c31\u662f\u4e00\u4e2a\u9700\u8981\u5b9e\u73b0\u7684\u65b9\u6cd5\u5217\u8868. //\u5b9a\u4e49\u4e00\u4e2aSayer\u63a5\u53e3 type Sayer interface { say () } //\u5b9a\u4e49dog\u548ccat\u4e24\u4e2a\u7ed3\u6784\u4f53 type dog struct {} type cat struct {} //\u7ed9dog\u548ccat\u5206\u522b\u5b9e\u73b0say\u65b9\u6cd5\u6765\u5b9e\u73b0Sayer\u63a5\u53e3 func ( d dog ) say (){ fmt . Println ( \"wang\" ) } func ( c cat ) say (){ fmt . Println ( \"miao\" ) } \u63a5\u53e3\u7c7b\u578b\u53d8\u91cf \u00b6 \u63a5\u53e3\u7c7b\u578b\u53d8\u91cf\u53ef\u4ee5\u5b58\u50a8\u6240\u6709\u5b9e\u73b0\u4e86\u8be5\u63a5\u53e3\u7684\u5b9e\u4f8b. package main import \"fmt\" //\u5b9a\u4e49\u4e00\u4e2a\u9e2d\u5b50\u63a5\u53e3(run\u65b9\u6cd5,swim\u65b9\u6cd5) type DuckInterface interface { run () swim () } //\u5199\u4e00\u4e2a\u5510\u8001\u9e2d\u7ed3\u6784\u4f53,\u7528\u6765\u5b9e\u73b0\u63a5\u53e3 type TDuck struct { name string age int } //\u5b9e\u73b0\u63a5\u53e3,\u53ea\u8981\u7ed3\u6784\u4f53\u7ed1\u5b9a\u4e86\u63a5\u53e3\u4e2d\u7684\u6240\u6709\u65b9\u6cd5,\u5c31\u53eb:\u7ed3\u6784\u4f53\u5b9e\u73b0\u4e86\u8be5\u63a5\u53e3 func ( t TDuck ) run () { fmt . Println ( \"TDuck run,name:\" , t . name ,) } func ( t TDuck ) swim () { fmt . Println ( \"TDuck swim,name:\" , t . name ,) } //\u5199\u4e00\u4e2a\u70e4\u9e2d\u7ed3\u6784\u4f53 type KDuck struct { name string age int } //\u5b9e\u73b0\u63a5\u53e3,\u53ea\u8981\u7ed3\u6784\u4f53\u7ed1\u5b9a\u4e86\u63a5\u53e3\u4e2d\u7684\u6240\u6709\u65b9\u6cd5,\u5c31\u53eb:\u7ed3\u6784\u4f53\u5b9e\u73b0\u4e86\u8be5\u63a5\u53e3 func ( k KDuck ) run () { fmt . Println ( \"KDuck run,name:\" , k . name ,) } func ( k KDuck ) swim () { fmt . Println ( \"KDuck swim,name:\" , k . name ,) } func main () { //\u5b9a\u4e49\u4e00\u4e2a\u9e2d\u5b50\u63a5\u53e3 var d1 DuckInterface d1 = TDuck { name : \"\u5510\u8001\u9e2d\" , age : 18 } var d2 DuckInterface d2 = KDuck { \"\u70e4\u9e2d\" , 3 } //\u5510\u8001\u9e2d\u7684run\u65b9\u6cd5 d1 . run () //\u8089\u9e2d\u7684run\u65b9\u6cd5 d2 . run () } \u63a5\u6536\u5668\u7c7b\u578b\u5b9e\u73b0\u63a5\u53e3\u7684\u533a\u522b \u00b6 \u63a5\u6536\u5668dog\u4e3a\u503c\u7c7b\u578b func ( d dog ) move (){ fmt . Println ( \"\u52a8\" ) } func main () { var x Mover var wangcai = dog {} // \u65fa\u8d22\u662fdog\u7c7b\u578b x = wangcai // x\u53ef\u4ee5\u63a5\u6536dog\u7c7b\u578b var fugui = & dog {} // \u5bcc\u8d35\u662f*dog\u7c7b\u578b x = fugui // x\u53ef\u4ee5\u63a5\u6536*dog\u7c7b\u578b x . move () } \u63a5\u6536\u5668\u4e3a\u6307\u9488\u7c7b\u578b func ( d * dog ) move () { fmt . Println ( \"\u72d7\u4f1a\u52a8\" ) } func main () { var x Mover var wangcai = dog {} // \u65fa\u8d22\u662fdog\u7c7b\u578b x = wangcai // x\u4e0d\u53ef\u4ee5\u63a5\u6536dog\u7c7b\u578b var fugui = & dog {} // \u5bcc\u8d35\u662f*dog\u7c7b\u578b x = fugui // x\u53ef\u4ee5\u63a5\u6536*dog\u7c7b\u578b } \u603b\u7ed3 \u00b6 \u5f53\u63a5\u6536\u5668\u4e3a\u503c\u7c7b\u578b\u7684\u65f6\u5019,\u4e0d\u7ba1receiver\u65f6\u503c\u7c7b\u578b\u8fd8\u662f\u6307\u9488\u7c7b\u578b\u90fd\u53ef\u4ee5\u8d4b\u503c\u7ed9\u63a5\u53e3\u53d8\u91cf. \u8fd9\u662fgo\u8bed\u8a00\u4e2d\u5bf9\u9635\u9635\u7c7b\u578b\u53d8\u91cf\u6c42\u503c\u7684\u8bed\u6cd5\u7cd6.fugui\u5185\u90e8\u4f1a\u81ea\u52a8\u6c42\u503c*fugui. \u5f53\u63a5\u6536\u5668\u7c7b\u578b\u4e3a\u6307\u9488\u7c7b\u578b\u7684\u65f6\u5019,\u4e0d\u80fd\u7ed9x\u4f20\u5165dog\u7c7b\u578b\u7684wangcai,\u6b64\u65f6x\u53ea\u80fd\u5b58\u50a8*dog\u7c7b\u578b\u7684\u503c. \u7c7b\u578b\u4e0e\u63a5\u53e3\u4e4b\u95f4\u7684\u5173\u7cfb \u00b6 \u4e00\u4e2a\u7c7b\u578b\u53ef\u4ee5\u5b9e\u73b0\u591a\u4e2a\u63a5\u53e3 \u00b6 \u4e00\u4e2a\u7c7b\u578b\u53ef\u4ee5\u540c\u65f6\u5b9e\u73b0\u591a\u4e2a\u63a5\u53e3,\u800c\u63a5\u53e3\u95f4\u5f7c\u6b64\u72ec\u7acb,\u4e0d\u77e5\u9053\u5bf9\u65b9\u7684\u5b9e\u73b0. \u591a\u4e2a\u7c7b\u578b\u5b9e\u73b0\u540c\u4e00\u63a5\u53e3 \u00b6 Go\u8bed\u8a00\u4e2d\u4e0d\u540c\u7684\u7c7b\u578b\u8fd8\u53ef\u4ee5\u5b9e\u73b0\u7edf\u4e00\u63a5\u53e3. \u63a5\u53e3\u5d4c\u5957 \u00b6 \u63a5\u53e3\u4e0e\u63a5\u53e3\u95f4\u53ef\u4ee5\u901a\u8fc7\u5d4c\u5957\u521b\u9020\u51fa\u65b0\u7684\u63a5\u53e3. type Sayer interface { say () } type Mover interface { move () } type animal interface { Sayer Mover } type cat struct { name string } func ( c cat ) say () { fmt . Println ( \"miao\" ) } func ( c cat ) move () { fmt . Println ( \"run\" ) } func main () { var x animal x = cat { name : \"tom\" } x . move () x . say () } >> > run miao \u63a5\u53e3\u5d4c\u5957\u7684\u65f6\u5019,\u540c\u6837\u8981\u6ee1\u8db3\u5b9e\u73b0\u6240\u6709\u63a5\u53e3,\u4e0d\u9700\u8981\u6307\u5b9a\u662f\u54ea\u4e2a\u63a5\u53e3,\u4f46\u662f\u8981\u5b9e\u73b0\u5168\u90e8\u65b9\u6cd5. \u7a7a\u63a5\u53e3 \u00b6 \u5b9a\u4e49 \u00b6 \u7a7a\u63a5\u53e3\u6307\u6ca1\u6709\u5b9a\u4e49\u4efb\u4f55\u65b9\u6cd5\u7684\u63a5\u53e3. \u56e0\u6b64\u4efb\u4f55\u7c7b\u578b\u90fd\u5b9e\u73b0\u4e86\u7a7a\u63a5\u53e3. \u7a7a\u63a5\u53e3\u7c7b\u578b\u7684\u53d8\u91cf\u53ef\u4ee5\u5b58\u50a8\u4efb\u610f\u7c7b\u578b\u7684\u53d8\u91cf. \u63a5\u53e3\u4e2d\u6ca1\u6709\u5b9a\u4e49\u4efb\u4f55\u9700\u8981\u5b9e\u73b0\u7684\u65b9\u6cd5\u65f6,\u8be5\u63a5\u53e3\u5c31\u662f\u4e00\u4e2a\u7a7a\u63a5\u53e3. //\u7a7a\u63a5\u53e3\u4e00\u822c\u4e0d\u9700\u8981\u63d0\u524d\u5b9a\u4e49 type test interface {} func main () { //\u5b9a\u4e49\u4e00\u4e2a\u7a7a\u63a5\u53e3\u53d8\u91cft var t interface {} t = \"hello\" fmt . Println ( t ) t = 111 fmt . Println ( t ) t = true fmt . Println ( t ) } >> > hello 111 true \u5e94\u7528 \u00b6 \u4f5c\u4e3a\u51fd\u6570\u7684\u53c2\u6570 \u00b6 \u4f7f\u7528\u7a7a\u63a5\u53e3\u5b9e\u73b0\u53ef\u4ee5\u63a5\u6536\u4efb\u610f\u7c7b\u578b\u7684\u51fd\u6570\u53c2\u6570 // \u7a7a\u63a5\u53e3\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570 func show ( a interface {}) { fmt . Printf ( \"type:%T value:%v\\n\" , a , a ) } \u4f5c\u4e3amap\u7684value \u00b6 \u4f7f\u7528\u7a7a\u63a5\u53e3\u5b9e\u73b0\u53ef\u4ee5\u4fdd\u5b58\u4efb\u610f\u503c\u7684\u5b57\u5178. // \u7a7a\u63a5\u53e3\u4f5c\u4e3amap\u503c var studentInfo = make ( map [ string ] interface {}) studentInfo [ \"name\" ] = \"agsol\" studentInfo [ \"age\" ] = 18 studentInfo [ \"married\" ] = false fmt . Println ( studentInfo ) \u63a5\u53e3\u5e95\u5c42\u6a21\u578b \u00b6 \u4e00\u4e2a\u63a5\u53e3\u7531\u4e24\u90e8\u5206\u7ec4\u6210,\u52a8\u6001\u7c7b\u578b\u7528\u6765\u5b58\u50a8\u6570\u636e\u7684\u6570\u636e\u7c7b\u578b,\u52a8\u6001\u503c\u7528\u6765\u5b58\u50a8\u6570\u636e\u7684\u503c. \u7c7b\u578b\u65ad\u8a00 \u00b6 \u53ef\u7528\u4e8e\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362 \u8bed\u6cd5\u683c\u5f0f:`x.(T) \u63a5\u53e3\u503c \u00b6 \u4e00\u4e2a\u63a5\u53e3\u7684\u503c(\u7b80\u79f0\u63a5\u53e3\u503c)\u662f\u7531 \u4e00\u4e2a\u5177\u4f53\u7c7b\u578b \u548c \u5177\u4f53\u7c7b\u578b\u7684\u503c \u4e24\u90e8\u5206\u7ec4\u6210\u7684.\u8fd9\u4e24\u90e8\u5206\u5206\u522b\u79f0\u4e3a\u63a5\u53e3\u7684 \u52a8\u6001\u7c7b\u578b \u548c \u52a8\u6001\u503c . var w io . Writer w = os . Stdout w = new ( bytes . Buffer ) w = nil \u60f3\u8981\u5224\u65ad\u7a7a\u63a5\u53e3\u4e2d\u7684\u503c,\u8fd9\u4e2a\u65f6\u5019\u5c31\u53ef\u4ee5\u4f7f\u7528\u7c7b\u578b\u65ad\u8a00. \u8bed\u6cd5\u683c\u5f0f: x.(T) \u5176\u4e2d\u200bx:\u8868\u793a\u7c7b\u578b\u4e3ainterface{}\u7684\u53d8\u91cf;T:\u8868\u793a\u65ad\u8a00x\u53ef\u80fd\u662f\u7684\u7c7b\u578b. \u8be5\u8bed\u6cd5\u8fd4\u56de\u4e24\u4e2a\u53c2\u6570,\u7b2c\u4e00\u4e2a\u53c2\u6570\u662fx\u8f6c\u5316\u4e3aT\u7c7b\u578b\u540e\u7684\u53d8\u91cf,\u7b2c\u4e8c\u4e2a\u503c\u662f\u4e00\u4e2a\u5e03\u5c14\u503c,\u82e5\u4e3atrue\u8868\u793a\u65ad\u8a00\u6210\u529f,\u4e3afalse\u8868\u793a\u65ad\u8a00\u5931\u8d25. \u5373\u5c06x\u8f6c\u6362\u4e3aT\u7c7b\u578b,\u5982\u679c\u53ef\u4ee5\u8f6c\u6362,\u8fd4\u56deT\u7c7b\u578b\u7684x\u548ctrue,\u5426\u5219\u8fd4\u56defalse. func main (){ //\u5b9a\u4e49\u4e86\u4e00\u4e2a\u7a7a\u63a5\u53e3 var x interface {} // x = \"hello world\" x = 123 v , ok := x .( string ) //\u53ef\u4ee5\u914d\u5408if-else\u6765\u8fdb\u884c\u65ad\u8a00\u7684\u5224\u65ad if ok { fmt . Println ( v ) } else { fmt . Println ( \"false\" ) } //\u672a\u77e5\u7c7b\u578b\u7684\u65f6\u5019,\u53ef\u4ee5\u4f7f\u7528switch\u65b9\u6cd5\u6765\u8fdb\u884c\u65ad\u8a00 switch v := t .( type ) { case string : fmt . Println ( \"is string\" , v ) case bool : fmt . Println ( \"is bool\" , v ) case int : fmt . Println ( \"is int\" , v ) default : fmt . Println ( \"\u731c\u4e0d\u5230\u4e86\" , v ) } } //\u5982\u679c\u65ad\u8a00\u6b63\u786e\u5373ok\u4e3atrue,v\u4e3a\u6e90\u6570\u636e\u503c //\u5982\u679c\u65ad\u8a00\u5931\u8d25\u5373ok\u4e3afalse,\u82e5\u6ca1\u4f7f\u7528\u53d8\u91cfok,\u5219\u629b\u5f02\u5e38 \u56e0\u4e3a\u7a7a\u63a5\u53e3\u53ef\u4ee5\u5b58\u50a8\u4efb\u610f\u7c7b\u578b\u503c\u7684\u7279\u70b9,\u6240\u4ee5\u7a7a\u63a5\u53e3\u5728go\u8bed\u8a00\u4e2d\u4f7f\u7528\u5341\u5206\u5e7f\u6cdb. \u6ce8\u610f: \u53ea\u6709\u5f53\u4e24\u4e2a\u6216\u4e24\u4e2a\u4ee5\u4e0a\u7684\u5177\u4f53\u7c7b\u578b\u5fc5\u987b\u4ee5\u76f8\u540c\u65b9\u5f0f\u8fdb\u884c\u5904\u7406\u65f6\u624d\u9700\u8981\u5b9a\u4e49\u63a5\u53e3. \u4e0d\u8981\u4e3a\u4e86\u63a5\u53e3\u800c\u5199\u63a5\u53e3,\u90a3\u6837\u53ea\u4f1a\u589e\u52a0\u4e0d\u5fc5\u8981\u7684\u62bd\u8c61.\u5bfc\u81f4\u4e0d\u5fc5\u8981\u7684\u8fd0\u884c\u65f6\u7684\u635f\u8017. \u7c7b\u578b\u9009\u62e9 \u00b6 t.(type)\u4f1a\u5c06\u63a5\u53e3\u7c7b\u578b\u7684\u6570\u636e\u8f6c\u6362\u6210\u5176\u672c\u8eab\u7684\u6570\u636e\u7c7b\u578b func test ( i interface {}) { switch i .( type ) { case int : fmt . Printf ( \"%T\\n\" , i ) case string : fmt . Printf ( \"%T\" , i ) } } func main () { var a int = 10 var b string = \"agsol\" test ( a ) test ( b ) } >> > int string Python\u4e0eGolang\u4e2d\u63a5\u53e3\u7684\u533a\u522b \u00b6 Python\u4e2d\u5b9e\u73b0\u63a5\u53e3\u901a\u8fc7\u9e2d\u5b50\u7c7b\u578b.\u81ea\u4e0b\u800c\u4e0a\u7684\u5b9e\u73b0,\u5373\u5148\u5b9e\u73b0\u4e86\u65b9\u6cd5,\u518d\u786e\u5b9a\u5b9e\u73b0\u4e86\u63a5\u53e3 Golang\u4e2d\u5b9e\u73b0\u63a5\u53e3,\u662f\u81ea\u4e0a\u800c\u4e0b\u7684\u5b9e\u73b0,\u5148\u89c4\u5b9a\u4e86\u9700\u8981\u5b9e\u73b0\u54ea\u4e9b\u65b9\u6cd5,\u518d\u5177\u4f53\u5b9e\u73b0\u63a5\u53e3\u4e2d\u7684\u65b9\u6cd5. \u7ec3\u4e60 \u00b6 \u9ad8\u5185\u805a\u4f4e\u8026\u5408\u601d\u60f3 type Usb interface { Start () Stop () } type Phone struct { name string } func ( p Phone ) Start () { fmt . Println ( \"\u624b\u673a\u5f00\u673a\" ) } func ( p Phone ) Stop () { fmt . Println ( \"\u624b\u673a\u5173\u673a\" ) } type Camera struct { name string } func ( c Camera ) Start () { fmt . Println ( \"\u76f8\u673a\u5f00\u673a\" ) } func ( c Camera ) Stop () { fmt . Println ( \"\u76f8\u673a\u5173\u673a\" ) } type Computer struct { } //\u5199\u4e00\u4e2aWorking\u65b9\u6cd5,\u63a5\u6536\u4e00\u4e2aUsb\u63a5\u53e3\u7c7b\u578b\u53d8\u91cf //\u53ea\u8981\u5b9e\u73b0\u4e86Usb\u63a5\u53e3,\u5c31\u662f\u5b9e\u73b0\u4e86Usb\u63a5\u53e3\u58f0\u660e\u7684\u65b9\u6cd5 func ( c Computer ) Working ( usb Usb ) { //\u901a\u8fc7Usb\u63a5\u53e3\u8c03\u7528start\u548cstop\u65b9\u6cd5 usb . Start () usb . Stop () } func main () { // var usbArr [3]Usb // usbArr[0] = Phone{\"xiaomi\"} // usbArr[1] = Phone{\"oppo\"} // usbArr[2] = Camera{\"sony\"} // fmt.Println(usbArr) computer := Computer {} phone := Phone {} camera := Camera {} computer . Working ( phone ) computer . Working ( camera ) } >> > \u624b\u673a\u5f00\u673a \u624b\u673a\u5173\u673a \u76f8\u673a\u5f00\u673a \u76f8\u673a\u5173\u673a \u5b9e\u8df5 \u00b6 \u5b9e\u73b0\u5bf9Hero\u7ed3\u6784\u4f53\u5207\u7247\u7684\u6392\u5e8f sort.Sort(data interface) package main import ( \"fmt\" \"math/rand\" \"sort\" ) //1.\u58f0\u660e\u4e00\u4e2aHero\u7ed3\u6784\u4f53 type Hero struct { Name string Age int } //2.\u58f0\u660e\u4e00\u4e2aHero\u7ed3\u6784\u4f53\u5207\u7247\u7c7b\u578b type HeroSlice [] Hero //3.\u5b9e\u73b0interface\u63a5\u53e3 func ( hs HeroSlice ) Len () int { return len ( hs ) } func ( hs HeroSlice ) Less ( i , j int ) bool { return hs [ i ]. Age < hs [ j ]. Age } func ( hs HeroSlice ) Swap ( i , j int ) { temp := hs [ i ] hs [ i ] = hs [ j ] hs [ j ] = temp } func main () { var heroes HeroSlice for i := 0 ; i < 5 ; i ++ { hero := Hero { Name : fmt . Sprintf ( \"\u82f1\u96c4~%d\" , rand . Intn ( 100 )), Age : rand . Intn ( 100 ), } heroes = append ( heroes , hero ) } //\u6392\u5e8f\u524d\u7684\u987a\u5e8f for _ , v := range heroes { fmt . Println ( v ) } //\u8c03\u7528sort.Sort\u65b9\u6cd5 sort . Sort ( heroes ) //\u6392\u5e8f\u540e\u7684\u987a\u5e8f for _ , v := range heroes { fmt . Println ( v ) } } >> > { \u82f1\u96c4 ~ 81 87 } { \u82f1\u96c4 ~ 47 59 } { \u82f1\u96c4 ~ 81 18 } { \u82f1\u96c4 ~ 25 40 } { \u82f1\u96c4 ~ 56 0 } { \u82f1\u96c4 ~ 56 0 } { \u82f1\u96c4 ~ 81 18 } { \u82f1\u96c4 ~ 25 40 } { \u82f1\u96c4 ~ 47 59 } { \u82f1\u96c4 ~ 81 87 } type Student struct {} func TypeJudge ( items ... interface {}) { for _ , x := range items { switch x .( type ) { case bool : fmt . Println ( \"bool\" ) case float32 : fmt . Println ( \"float32\" ) case float64 : fmt . Println ( \"float64\" ) case int , int32 , int64 : fmt . Println ( \"int\" ) case string : fmt . Println ( \"string\" ) case Student : fmt . Println ( \"Student\" ) case * Student : fmt . Println ( \"*Student\" ) } } } func main () { var n1 float32 = 1.1 var n2 float64 = 2.3 var n3 int32 = 32 var name string = \"tom\" stu1 := Student {} stu2 := & Student {} TypeJudge ( n1 , n2 , n3 , name , stu1 , stu2 ) } >> > float32 float64 int string Student * Student \u6ce8\u610f\u4e8b\u9879: \u00b6 \u53ea\u8981\u662f\u81ea\u5b9a\u4e49\u7c7b\u578b\u90fd\u53ef\u4ee5\u5b9e\u73b0\u63a5\u53e3,\u4e0d\u4ec5\u4ec5\u662f\u7ed3\u6784\u4f53,\u6bd4\u5982 type integer int \u4e5f\u53ef\u662f\u5b9a\u4e49\u81ea\u5df1\u7684\u63a5\u53e3 \u63a5\u53e3\u7684\u96f6\u503c\u662fnil,\u662f\u5f15\u7528\u7c7b\u578b.\u4f7f\u7528\u4e4b\u524d\u9700\u8981make","title":"\u63a5\u53e3"},{"location":"Golang/%E6%8E%A5%E5%8F%A3/#interface","text":"Golang\u63d0\u5021\u9762\u5411\u63a5\u53e3\u7f16\u7a0b. interface\u662f\u4e00\u4e2a\u5f15\u7528\u7c7b\u578b,\u5982\u679c\u6ca1\u6709\u521d\u59cb\u5316\u5c31\u4f7f\u7528,\u5c31\u4f1a\u8f93\u51fanil \u63a5\u53e3\u5b9a\u4e49\u4e86\u4e00\u4e2a\u5bf9\u8c61\u7684\u884c\u4e3a\u89c4\u8303,\u53ea\u5b9a\u4e49\u89c4\u8303\u4e0d\u5b9e\u73b0,\u7531\u5177\u4f53\u7684\u5bf9\u8c61\u6765\u5b9e\u73b0\u89c4\u8303\u7684\u7ec6\u8282.","title":"\u63a5\u53e3Interface"},{"location":"Golang/%E6%8E%A5%E5%8F%A3/#_1","text":"Golang\u4e2d\u7684\u63a5\u53e3\u662f\u4e00\u79cd\u7c7b\u578b,\u4e00\u79cd\u62bd\u8c61\u7684\u7c7b\u578b. Interface\u662f\u4e00\u7ec4method\u7684\u96c6\u5408,\u662fduck-type programming\u7684\u4e00\u79cd\u4f53\u73b0.\u63a5\u53e3\u505a\u7684\u4e8b\u60c5\u5c31\u50cf\u662f\u5b9a\u4e49\u4e00\u4e2a\u534f\u8bae(\u89c4\u5219),\u53ea\u8981\u4e00\u4e2a\u52a8\u7269\u770b\u8d77\u6765\u50cf\u9e2d\u5b50,\u5403\u8d77\u6765\u50cf\u9e2d\u5b50,\u90a3\u5b83\u5c31\u662f\u4e00\u4e2a\u9e2d\u5b50,\u4e0d\u5173\u7cfb\u5c5e\u6027(\u6570\u636e),\u53ea\u5173\u5fc3\u884c\u4e3a(\u65b9\u6cd5).","title":"\u63a5\u53e3\u7c7b\u578b"},{"location":"Golang/%E6%8E%A5%E5%8F%A3/#_2","text":"\u63a5\u53e3\u662f\u4e00\u79cd\u7c7b\u578b.\u5b9a\u4e49\u4e86\u4e00\u7ec4\u65b9\u6cd5,\u8fd9\u4e9b\u65b9\u6cd5\u4e0d\u9700\u8981\u5b9e\u73b0(\u5373\u4e0d\u9700\u8981\u7531\u65b9\u6cd5\u4f53),\u4e14==interface \u4e0d\u80fd\u5305\u542b\u4efb\u4f55\u53d8\u91cf==. \u6bcf\u4e2a\u63a5\u53e3\u7531\u6570\u4e2a\u65b9\u6cd5\u7ec4\u6210,\u63a5\u53e3\u7684\u5b9a\u4e49\u683c\u5f0f\u5982\u4e0b: type \u63a5\u53e3\u7c7b\u578b\u540d interface { method1 ( \u53c2\u6570\u5217\u88681 ) \u8fd4\u56de\u503c\u5217\u88681 method2 ( \u53c2\u6570\u5217\u88682 ) \u8fd4\u56de\u503c\u5217\u88682 ... } \u5176\u4e2d; \u63a5\u53e3\u540d:\u4f7f\u7528type\u5c06\u63a5\u53e3\u5b9a\u4e49\u4e3a\u81ea\u5b9a\u4e49\u7684\u7c7b\u578b\u540d.Go\u8bed\u8a00\u7684\u63a5\u53e3\u5728\u547d\u540d\u65f6,\u4e00\u822c\u4f1a\u5728\u5355\u8bcd\u540e\u9762\u52a0er,\u5982\u5199\u64cd\u4f5c\u7684\u63a5\u53e3\u53ebWriter.\u63a5\u53e3\u540d\u6700\u597d\u8981\u80fd\u7a81\u51fa\u8be5\u63a5\u53e3\u7684\u7c7b\u578b\u542b\u4e49. \u65b9\u6cd5\u540d:\u5f53\u65b9\u6cd5\u540d\u5468\u6893\u6728\u65f6\u5927\u5199\u4e14\u8fd9\u4e2a\u63a5\u53e3\u7c7b\u578b\u540d\u9996\u5b57\u6bcd\u4e5f\u662f\u5927\u5199\u7684\u65f6\u5019,\u8fd9\u4e2a\u65b9\u6cd5\u53ef\u4ee5\u88ab\u63a5\u53e3\u6240\u5728\u7684\u5305\u4e4b\u5916\u7684\u4ee3\u7801\u8bbf\u95ee.\u6bcf\u4e2amethod\u90fd\u662f\u4e00\u4e2a\u7c7b\u578b. \u53c2\u6570\u5217\u8868,\u8fd4\u56de\u503c\u5217\u8868:\u53c2\u6570\u5217\u8868\u548c\u8fd4\u56de\u503c\u5217\u8868\u4e2d\u7684\u53c2\u6570\u53d8\u91cf\u540d\u53ef\u4ee5\u7701\u7565.\u6bd4\u5982 type writer interface { Write ([] byte ) error } \u8fd9\u4e2a\u63a5\u53e3\u6211\u4eec\u4e0d\u77e5\u9053\u53ef\u4ee5\u505a\u4ec0\u4e48,\u4f46\u662f\u5e94\u8be5\u53ef\u4ee5\u901a\u8fc7Write\u65b9\u6cd5\u505a\u4e00\u4e9b\u4e8b\u60c5. \u63a5\u53e3\u91cc\u7684\u6240\u6709\u65b9\u6cd5\u90fd\u6ca1\u6709\u65b9\u6cd5\u4f53.\u5373\u63a5\u53e3\u7684\u65b9\u6cd5\u90fd\u662f\u6ca1\u6709\u5b9e\u73b0\u7684\u65b9\u6cd5.\u63a5\u53e3\u4f53\u73b0\u4e86\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u591a\u6001\u548c\u9ad8\u5185\u805a\u4f4e\u8026\u5408\u7684\u601d\u60f3.","title":"\u63a5\u53e3\u5b9a\u4e49"},{"location":"Golang/%E6%8E%A5%E5%8F%A3/#_3","text":"\u4e00\u4e2a\u5bf9\u8c61\u53ea\u8981\u5b9e\u73b0\u4e86\u63a5\u53e3\u4e2d\u7684\u5168\u90e8\u65b9\u6cd5.\u90a3\u4e48\u5c31\u5b9e\u73b0\u4e86\u8fd9\u4e2a\u63a5\u53e3. \u6362\u53e5\u8bdd\u8bf4,\u63a5\u53e3\u5c31\u662f\u4e00\u4e2a\u9700\u8981\u5b9e\u73b0\u7684\u65b9\u6cd5\u5217\u8868. //\u5b9a\u4e49\u4e00\u4e2aSayer\u63a5\u53e3 type Sayer interface { say () } //\u5b9a\u4e49dog\u548ccat\u4e24\u4e2a\u7ed3\u6784\u4f53 type dog struct {} type cat struct {} //\u7ed9dog\u548ccat\u5206\u522b\u5b9e\u73b0say\u65b9\u6cd5\u6765\u5b9e\u73b0Sayer\u63a5\u53e3 func ( d dog ) say (){ fmt . Println ( \"wang\" ) } func ( c cat ) say (){ fmt . Println ( \"miao\" ) }","title":"\u5b9e\u73b0\u63a5\u53e3\u7684\u6761\u4ef6"},{"location":"Golang/%E6%8E%A5%E5%8F%A3/#_4","text":"\u63a5\u53e3\u7c7b\u578b\u53d8\u91cf\u53ef\u4ee5\u5b58\u50a8\u6240\u6709\u5b9e\u73b0\u4e86\u8be5\u63a5\u53e3\u7684\u5b9e\u4f8b. package main import \"fmt\" //\u5b9a\u4e49\u4e00\u4e2a\u9e2d\u5b50\u63a5\u53e3(run\u65b9\u6cd5,swim\u65b9\u6cd5) type DuckInterface interface { run () swim () } //\u5199\u4e00\u4e2a\u5510\u8001\u9e2d\u7ed3\u6784\u4f53,\u7528\u6765\u5b9e\u73b0\u63a5\u53e3 type TDuck struct { name string age int } //\u5b9e\u73b0\u63a5\u53e3,\u53ea\u8981\u7ed3\u6784\u4f53\u7ed1\u5b9a\u4e86\u63a5\u53e3\u4e2d\u7684\u6240\u6709\u65b9\u6cd5,\u5c31\u53eb:\u7ed3\u6784\u4f53\u5b9e\u73b0\u4e86\u8be5\u63a5\u53e3 func ( t TDuck ) run () { fmt . Println ( \"TDuck run,name:\" , t . name ,) } func ( t TDuck ) swim () { fmt . Println ( \"TDuck swim,name:\" , t . name ,) } //\u5199\u4e00\u4e2a\u70e4\u9e2d\u7ed3\u6784\u4f53 type KDuck struct { name string age int } //\u5b9e\u73b0\u63a5\u53e3,\u53ea\u8981\u7ed3\u6784\u4f53\u7ed1\u5b9a\u4e86\u63a5\u53e3\u4e2d\u7684\u6240\u6709\u65b9\u6cd5,\u5c31\u53eb:\u7ed3\u6784\u4f53\u5b9e\u73b0\u4e86\u8be5\u63a5\u53e3 func ( k KDuck ) run () { fmt . Println ( \"KDuck run,name:\" , k . name ,) } func ( k KDuck ) swim () { fmt . Println ( \"KDuck swim,name:\" , k . name ,) } func main () { //\u5b9a\u4e49\u4e00\u4e2a\u9e2d\u5b50\u63a5\u53e3 var d1 DuckInterface d1 = TDuck { name : \"\u5510\u8001\u9e2d\" , age : 18 } var d2 DuckInterface d2 = KDuck { \"\u70e4\u9e2d\" , 3 } //\u5510\u8001\u9e2d\u7684run\u65b9\u6cd5 d1 . run () //\u8089\u9e2d\u7684run\u65b9\u6cd5 d2 . run () }","title":"\u63a5\u53e3\u7c7b\u578b\u53d8\u91cf"},{"location":"Golang/%E6%8E%A5%E5%8F%A3/#_5","text":"\u63a5\u6536\u5668dog\u4e3a\u503c\u7c7b\u578b func ( d dog ) move (){ fmt . Println ( \"\u52a8\" ) } func main () { var x Mover var wangcai = dog {} // \u65fa\u8d22\u662fdog\u7c7b\u578b x = wangcai // x\u53ef\u4ee5\u63a5\u6536dog\u7c7b\u578b var fugui = & dog {} // \u5bcc\u8d35\u662f*dog\u7c7b\u578b x = fugui // x\u53ef\u4ee5\u63a5\u6536*dog\u7c7b\u578b x . move () } \u63a5\u6536\u5668\u4e3a\u6307\u9488\u7c7b\u578b func ( d * dog ) move () { fmt . Println ( \"\u72d7\u4f1a\u52a8\" ) } func main () { var x Mover var wangcai = dog {} // \u65fa\u8d22\u662fdog\u7c7b\u578b x = wangcai // x\u4e0d\u53ef\u4ee5\u63a5\u6536dog\u7c7b\u578b var fugui = & dog {} // \u5bcc\u8d35\u662f*dog\u7c7b\u578b x = fugui // x\u53ef\u4ee5\u63a5\u6536*dog\u7c7b\u578b }","title":"\u63a5\u6536\u5668\u7c7b\u578b\u5b9e\u73b0\u63a5\u53e3\u7684\u533a\u522b"},{"location":"Golang/%E6%8E%A5%E5%8F%A3/#_6","text":"\u5f53\u63a5\u6536\u5668\u4e3a\u503c\u7c7b\u578b\u7684\u65f6\u5019,\u4e0d\u7ba1receiver\u65f6\u503c\u7c7b\u578b\u8fd8\u662f\u6307\u9488\u7c7b\u578b\u90fd\u53ef\u4ee5\u8d4b\u503c\u7ed9\u63a5\u53e3\u53d8\u91cf. \u8fd9\u662fgo\u8bed\u8a00\u4e2d\u5bf9\u9635\u9635\u7c7b\u578b\u53d8\u91cf\u6c42\u503c\u7684\u8bed\u6cd5\u7cd6.fugui\u5185\u90e8\u4f1a\u81ea\u52a8\u6c42\u503c*fugui. \u5f53\u63a5\u6536\u5668\u7c7b\u578b\u4e3a\u6307\u9488\u7c7b\u578b\u7684\u65f6\u5019,\u4e0d\u80fd\u7ed9x\u4f20\u5165dog\u7c7b\u578b\u7684wangcai,\u6b64\u65f6x\u53ea\u80fd\u5b58\u50a8*dog\u7c7b\u578b\u7684\u503c.","title":"\u603b\u7ed3"},{"location":"Golang/%E6%8E%A5%E5%8F%A3/#_7","text":"","title":"\u7c7b\u578b\u4e0e\u63a5\u53e3\u4e4b\u95f4\u7684\u5173\u7cfb"},{"location":"Golang/%E6%8E%A5%E5%8F%A3/#_8","text":"\u4e00\u4e2a\u7c7b\u578b\u53ef\u4ee5\u540c\u65f6\u5b9e\u73b0\u591a\u4e2a\u63a5\u53e3,\u800c\u63a5\u53e3\u95f4\u5f7c\u6b64\u72ec\u7acb,\u4e0d\u77e5\u9053\u5bf9\u65b9\u7684\u5b9e\u73b0.","title":"\u4e00\u4e2a\u7c7b\u578b\u53ef\u4ee5\u5b9e\u73b0\u591a\u4e2a\u63a5\u53e3"},{"location":"Golang/%E6%8E%A5%E5%8F%A3/#_9","text":"Go\u8bed\u8a00\u4e2d\u4e0d\u540c\u7684\u7c7b\u578b\u8fd8\u53ef\u4ee5\u5b9e\u73b0\u7edf\u4e00\u63a5\u53e3.","title":"\u591a\u4e2a\u7c7b\u578b\u5b9e\u73b0\u540c\u4e00\u63a5\u53e3"},{"location":"Golang/%E6%8E%A5%E5%8F%A3/#_10","text":"\u63a5\u53e3\u4e0e\u63a5\u53e3\u95f4\u53ef\u4ee5\u901a\u8fc7\u5d4c\u5957\u521b\u9020\u51fa\u65b0\u7684\u63a5\u53e3. type Sayer interface { say () } type Mover interface { move () } type animal interface { Sayer Mover } type cat struct { name string } func ( c cat ) say () { fmt . Println ( \"miao\" ) } func ( c cat ) move () { fmt . Println ( \"run\" ) } func main () { var x animal x = cat { name : \"tom\" } x . move () x . say () } >> > run miao \u63a5\u53e3\u5d4c\u5957\u7684\u65f6\u5019,\u540c\u6837\u8981\u6ee1\u8db3\u5b9e\u73b0\u6240\u6709\u63a5\u53e3,\u4e0d\u9700\u8981\u6307\u5b9a\u662f\u54ea\u4e2a\u63a5\u53e3,\u4f46\u662f\u8981\u5b9e\u73b0\u5168\u90e8\u65b9\u6cd5.","title":"\u63a5\u53e3\u5d4c\u5957"},{"location":"Golang/%E6%8E%A5%E5%8F%A3/#_11","text":"","title":"\u7a7a\u63a5\u53e3"},{"location":"Golang/%E6%8E%A5%E5%8F%A3/#_12","text":"\u7a7a\u63a5\u53e3\u6307\u6ca1\u6709\u5b9a\u4e49\u4efb\u4f55\u65b9\u6cd5\u7684\u63a5\u53e3. \u56e0\u6b64\u4efb\u4f55\u7c7b\u578b\u90fd\u5b9e\u73b0\u4e86\u7a7a\u63a5\u53e3. \u7a7a\u63a5\u53e3\u7c7b\u578b\u7684\u53d8\u91cf\u53ef\u4ee5\u5b58\u50a8\u4efb\u610f\u7c7b\u578b\u7684\u53d8\u91cf. \u63a5\u53e3\u4e2d\u6ca1\u6709\u5b9a\u4e49\u4efb\u4f55\u9700\u8981\u5b9e\u73b0\u7684\u65b9\u6cd5\u65f6,\u8be5\u63a5\u53e3\u5c31\u662f\u4e00\u4e2a\u7a7a\u63a5\u53e3. //\u7a7a\u63a5\u53e3\u4e00\u822c\u4e0d\u9700\u8981\u63d0\u524d\u5b9a\u4e49 type test interface {} func main () { //\u5b9a\u4e49\u4e00\u4e2a\u7a7a\u63a5\u53e3\u53d8\u91cft var t interface {} t = \"hello\" fmt . Println ( t ) t = 111 fmt . Println ( t ) t = true fmt . Println ( t ) } >> > hello 111 true","title":"\u5b9a\u4e49"},{"location":"Golang/%E6%8E%A5%E5%8F%A3/#_13","text":"","title":"\u5e94\u7528"},{"location":"Golang/%E6%8E%A5%E5%8F%A3/#_14","text":"\u4f7f\u7528\u7a7a\u63a5\u53e3\u5b9e\u73b0\u53ef\u4ee5\u63a5\u6536\u4efb\u610f\u7c7b\u578b\u7684\u51fd\u6570\u53c2\u6570 // \u7a7a\u63a5\u53e3\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570 func show ( a interface {}) { fmt . Printf ( \"type:%T value:%v\\n\" , a , a ) }","title":"\u4f5c\u4e3a\u51fd\u6570\u7684\u53c2\u6570"},{"location":"Golang/%E6%8E%A5%E5%8F%A3/#mapvalue","text":"\u4f7f\u7528\u7a7a\u63a5\u53e3\u5b9e\u73b0\u53ef\u4ee5\u4fdd\u5b58\u4efb\u610f\u503c\u7684\u5b57\u5178. // \u7a7a\u63a5\u53e3\u4f5c\u4e3amap\u503c var studentInfo = make ( map [ string ] interface {}) studentInfo [ \"name\" ] = \"agsol\" studentInfo [ \"age\" ] = 18 studentInfo [ \"married\" ] = false fmt . Println ( studentInfo )","title":"\u4f5c\u4e3amap\u7684value"},{"location":"Golang/%E6%8E%A5%E5%8F%A3/#_15","text":"\u4e00\u4e2a\u63a5\u53e3\u7531\u4e24\u90e8\u5206\u7ec4\u6210,\u52a8\u6001\u7c7b\u578b\u7528\u6765\u5b58\u50a8\u6570\u636e\u7684\u6570\u636e\u7c7b\u578b,\u52a8\u6001\u503c\u7528\u6765\u5b58\u50a8\u6570\u636e\u7684\u503c.","title":"\u63a5\u53e3\u5e95\u5c42\u6a21\u578b"},{"location":"Golang/%E6%8E%A5%E5%8F%A3/#_16","text":"\u53ef\u7528\u4e8e\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362 \u8bed\u6cd5\u683c\u5f0f:`x.(T)","title":"\u7c7b\u578b\u65ad\u8a00"},{"location":"Golang/%E6%8E%A5%E5%8F%A3/#_17","text":"\u4e00\u4e2a\u63a5\u53e3\u7684\u503c(\u7b80\u79f0\u63a5\u53e3\u503c)\u662f\u7531 \u4e00\u4e2a\u5177\u4f53\u7c7b\u578b \u548c \u5177\u4f53\u7c7b\u578b\u7684\u503c \u4e24\u90e8\u5206\u7ec4\u6210\u7684.\u8fd9\u4e24\u90e8\u5206\u5206\u522b\u79f0\u4e3a\u63a5\u53e3\u7684 \u52a8\u6001\u7c7b\u578b \u548c \u52a8\u6001\u503c . var w io . Writer w = os . Stdout w = new ( bytes . Buffer ) w = nil \u60f3\u8981\u5224\u65ad\u7a7a\u63a5\u53e3\u4e2d\u7684\u503c,\u8fd9\u4e2a\u65f6\u5019\u5c31\u53ef\u4ee5\u4f7f\u7528\u7c7b\u578b\u65ad\u8a00. \u8bed\u6cd5\u683c\u5f0f: x.(T) \u5176\u4e2d\u200bx:\u8868\u793a\u7c7b\u578b\u4e3ainterface{}\u7684\u53d8\u91cf;T:\u8868\u793a\u65ad\u8a00x\u53ef\u80fd\u662f\u7684\u7c7b\u578b. \u8be5\u8bed\u6cd5\u8fd4\u56de\u4e24\u4e2a\u53c2\u6570,\u7b2c\u4e00\u4e2a\u53c2\u6570\u662fx\u8f6c\u5316\u4e3aT\u7c7b\u578b\u540e\u7684\u53d8\u91cf,\u7b2c\u4e8c\u4e2a\u503c\u662f\u4e00\u4e2a\u5e03\u5c14\u503c,\u82e5\u4e3atrue\u8868\u793a\u65ad\u8a00\u6210\u529f,\u4e3afalse\u8868\u793a\u65ad\u8a00\u5931\u8d25. \u5373\u5c06x\u8f6c\u6362\u4e3aT\u7c7b\u578b,\u5982\u679c\u53ef\u4ee5\u8f6c\u6362,\u8fd4\u56deT\u7c7b\u578b\u7684x\u548ctrue,\u5426\u5219\u8fd4\u56defalse. func main (){ //\u5b9a\u4e49\u4e86\u4e00\u4e2a\u7a7a\u63a5\u53e3 var x interface {} // x = \"hello world\" x = 123 v , ok := x .( string ) //\u53ef\u4ee5\u914d\u5408if-else\u6765\u8fdb\u884c\u65ad\u8a00\u7684\u5224\u65ad if ok { fmt . Println ( v ) } else { fmt . Println ( \"false\" ) } //\u672a\u77e5\u7c7b\u578b\u7684\u65f6\u5019,\u53ef\u4ee5\u4f7f\u7528switch\u65b9\u6cd5\u6765\u8fdb\u884c\u65ad\u8a00 switch v := t .( type ) { case string : fmt . Println ( \"is string\" , v ) case bool : fmt . Println ( \"is bool\" , v ) case int : fmt . Println ( \"is int\" , v ) default : fmt . Println ( \"\u731c\u4e0d\u5230\u4e86\" , v ) } } //\u5982\u679c\u65ad\u8a00\u6b63\u786e\u5373ok\u4e3atrue,v\u4e3a\u6e90\u6570\u636e\u503c //\u5982\u679c\u65ad\u8a00\u5931\u8d25\u5373ok\u4e3afalse,\u82e5\u6ca1\u4f7f\u7528\u53d8\u91cfok,\u5219\u629b\u5f02\u5e38 \u56e0\u4e3a\u7a7a\u63a5\u53e3\u53ef\u4ee5\u5b58\u50a8\u4efb\u610f\u7c7b\u578b\u503c\u7684\u7279\u70b9,\u6240\u4ee5\u7a7a\u63a5\u53e3\u5728go\u8bed\u8a00\u4e2d\u4f7f\u7528\u5341\u5206\u5e7f\u6cdb. \u6ce8\u610f: \u53ea\u6709\u5f53\u4e24\u4e2a\u6216\u4e24\u4e2a\u4ee5\u4e0a\u7684\u5177\u4f53\u7c7b\u578b\u5fc5\u987b\u4ee5\u76f8\u540c\u65b9\u5f0f\u8fdb\u884c\u5904\u7406\u65f6\u624d\u9700\u8981\u5b9a\u4e49\u63a5\u53e3. \u4e0d\u8981\u4e3a\u4e86\u63a5\u53e3\u800c\u5199\u63a5\u53e3,\u90a3\u6837\u53ea\u4f1a\u589e\u52a0\u4e0d\u5fc5\u8981\u7684\u62bd\u8c61.\u5bfc\u81f4\u4e0d\u5fc5\u8981\u7684\u8fd0\u884c\u65f6\u7684\u635f\u8017.","title":"\u63a5\u53e3\u503c"},{"location":"Golang/%E6%8E%A5%E5%8F%A3/#_18","text":"t.(type)\u4f1a\u5c06\u63a5\u53e3\u7c7b\u578b\u7684\u6570\u636e\u8f6c\u6362\u6210\u5176\u672c\u8eab\u7684\u6570\u636e\u7c7b\u578b func test ( i interface {}) { switch i .( type ) { case int : fmt . Printf ( \"%T\\n\" , i ) case string : fmt . Printf ( \"%T\" , i ) } } func main () { var a int = 10 var b string = \"agsol\" test ( a ) test ( b ) } >> > int string","title":"\u7c7b\u578b\u9009\u62e9"},{"location":"Golang/%E6%8E%A5%E5%8F%A3/#pythongolang","text":"Python\u4e2d\u5b9e\u73b0\u63a5\u53e3\u901a\u8fc7\u9e2d\u5b50\u7c7b\u578b.\u81ea\u4e0b\u800c\u4e0a\u7684\u5b9e\u73b0,\u5373\u5148\u5b9e\u73b0\u4e86\u65b9\u6cd5,\u518d\u786e\u5b9a\u5b9e\u73b0\u4e86\u63a5\u53e3 Golang\u4e2d\u5b9e\u73b0\u63a5\u53e3,\u662f\u81ea\u4e0a\u800c\u4e0b\u7684\u5b9e\u73b0,\u5148\u89c4\u5b9a\u4e86\u9700\u8981\u5b9e\u73b0\u54ea\u4e9b\u65b9\u6cd5,\u518d\u5177\u4f53\u5b9e\u73b0\u63a5\u53e3\u4e2d\u7684\u65b9\u6cd5.","title":"Python\u4e0eGolang\u4e2d\u63a5\u53e3\u7684\u533a\u522b"},{"location":"Golang/%E6%8E%A5%E5%8F%A3/#_19","text":"\u9ad8\u5185\u805a\u4f4e\u8026\u5408\u601d\u60f3 type Usb interface { Start () Stop () } type Phone struct { name string } func ( p Phone ) Start () { fmt . Println ( \"\u624b\u673a\u5f00\u673a\" ) } func ( p Phone ) Stop () { fmt . Println ( \"\u624b\u673a\u5173\u673a\" ) } type Camera struct { name string } func ( c Camera ) Start () { fmt . Println ( \"\u76f8\u673a\u5f00\u673a\" ) } func ( c Camera ) Stop () { fmt . Println ( \"\u76f8\u673a\u5173\u673a\" ) } type Computer struct { } //\u5199\u4e00\u4e2aWorking\u65b9\u6cd5,\u63a5\u6536\u4e00\u4e2aUsb\u63a5\u53e3\u7c7b\u578b\u53d8\u91cf //\u53ea\u8981\u5b9e\u73b0\u4e86Usb\u63a5\u53e3,\u5c31\u662f\u5b9e\u73b0\u4e86Usb\u63a5\u53e3\u58f0\u660e\u7684\u65b9\u6cd5 func ( c Computer ) Working ( usb Usb ) { //\u901a\u8fc7Usb\u63a5\u53e3\u8c03\u7528start\u548cstop\u65b9\u6cd5 usb . Start () usb . Stop () } func main () { // var usbArr [3]Usb // usbArr[0] = Phone{\"xiaomi\"} // usbArr[1] = Phone{\"oppo\"} // usbArr[2] = Camera{\"sony\"} // fmt.Println(usbArr) computer := Computer {} phone := Phone {} camera := Camera {} computer . Working ( phone ) computer . Working ( camera ) } >> > \u624b\u673a\u5f00\u673a \u624b\u673a\u5173\u673a \u76f8\u673a\u5f00\u673a \u76f8\u673a\u5173\u673a","title":"\u7ec3\u4e60"},{"location":"Golang/%E6%8E%A5%E5%8F%A3/#_20","text":"\u5b9e\u73b0\u5bf9Hero\u7ed3\u6784\u4f53\u5207\u7247\u7684\u6392\u5e8f sort.Sort(data interface) package main import ( \"fmt\" \"math/rand\" \"sort\" ) //1.\u58f0\u660e\u4e00\u4e2aHero\u7ed3\u6784\u4f53 type Hero struct { Name string Age int } //2.\u58f0\u660e\u4e00\u4e2aHero\u7ed3\u6784\u4f53\u5207\u7247\u7c7b\u578b type HeroSlice [] Hero //3.\u5b9e\u73b0interface\u63a5\u53e3 func ( hs HeroSlice ) Len () int { return len ( hs ) } func ( hs HeroSlice ) Less ( i , j int ) bool { return hs [ i ]. Age < hs [ j ]. Age } func ( hs HeroSlice ) Swap ( i , j int ) { temp := hs [ i ] hs [ i ] = hs [ j ] hs [ j ] = temp } func main () { var heroes HeroSlice for i := 0 ; i < 5 ; i ++ { hero := Hero { Name : fmt . Sprintf ( \"\u82f1\u96c4~%d\" , rand . Intn ( 100 )), Age : rand . Intn ( 100 ), } heroes = append ( heroes , hero ) } //\u6392\u5e8f\u524d\u7684\u987a\u5e8f for _ , v := range heroes { fmt . Println ( v ) } //\u8c03\u7528sort.Sort\u65b9\u6cd5 sort . Sort ( heroes ) //\u6392\u5e8f\u540e\u7684\u987a\u5e8f for _ , v := range heroes { fmt . Println ( v ) } } >> > { \u82f1\u96c4 ~ 81 87 } { \u82f1\u96c4 ~ 47 59 } { \u82f1\u96c4 ~ 81 18 } { \u82f1\u96c4 ~ 25 40 } { \u82f1\u96c4 ~ 56 0 } { \u82f1\u96c4 ~ 56 0 } { \u82f1\u96c4 ~ 81 18 } { \u82f1\u96c4 ~ 25 40 } { \u82f1\u96c4 ~ 47 59 } { \u82f1\u96c4 ~ 81 87 } type Student struct {} func TypeJudge ( items ... interface {}) { for _ , x := range items { switch x .( type ) { case bool : fmt . Println ( \"bool\" ) case float32 : fmt . Println ( \"float32\" ) case float64 : fmt . Println ( \"float64\" ) case int , int32 , int64 : fmt . Println ( \"int\" ) case string : fmt . Println ( \"string\" ) case Student : fmt . Println ( \"Student\" ) case * Student : fmt . Println ( \"*Student\" ) } } } func main () { var n1 float32 = 1.1 var n2 float64 = 2.3 var n3 int32 = 32 var name string = \"tom\" stu1 := Student {} stu2 := & Student {} TypeJudge ( n1 , n2 , n3 , name , stu1 , stu2 ) } >> > float32 float64 int string Student * Student","title":"\u5b9e\u8df5"},{"location":"Golang/%E6%8E%A5%E5%8F%A3/#_21","text":"\u53ea\u8981\u662f\u81ea\u5b9a\u4e49\u7c7b\u578b\u90fd\u53ef\u4ee5\u5b9e\u73b0\u63a5\u53e3,\u4e0d\u4ec5\u4ec5\u662f\u7ed3\u6784\u4f53,\u6bd4\u5982 type integer int \u4e5f\u53ef\u662f\u5b9a\u4e49\u81ea\u5df1\u7684\u63a5\u53e3 \u63a5\u53e3\u7684\u96f6\u503c\u662fnil,\u662f\u5f15\u7528\u7c7b\u578b.\u4f7f\u7528\u4e4b\u524d\u9700\u8981make","title":"\u6ce8\u610f\u4e8b\u9879:"},{"location":"Golang/%E6%95%B0%E5%AD%97%E7%B1%BB%E5%9E%8B/","text":"\u6574\u6570\u7c7b\u578b \u6574\u6570\u7c7b\u578b\u5206\u7c7b \u6d6e\u70b9\u7c7b\u578b \u5c0f\u6570\u7c7b\u578b\u5206\u7c7b \u590d\u6570\u7c7b\u578b \u6574\u6570\u7c7b\u578b \u00b6 \u4e00\u4e2a\u5b57\u8282\u4e3a9\u4f4d,8\u4f4d\u4e2d\u7b2c\u4e00\u4e2a\u4f4d\u4e3a\u7b26\u53f7\u4f4d,1\u8868\u793a\u7b26\u53f7,\u6240\u4ee5\u6574\u6570\u5c11\u4e00\u4e2a\u6570 \u6574\u6570\u7c7b\u578b\u5206\u7c7b \u00b6 \u7c7b\u578b \u6709\u65e0\u7b26\u53f7 \u5360\u7528\u7a7a\u95f4 \u8868\u6570\u8303\u56f4 int8 \u6709 1\u5b57\u8282 -128~127 int16 \u6709 2\u5b57\u8282 -2**15~2**15-1 int32 \u6709 4\u5b57\u8282 -2**31~2**31-1 int64 \u6709 8\u5b57\u8282 -2**63~2**63-1 uint8 \u65e0 1\u5b57\u8282 0~255 uint16 \u65e0 2\u5b57\u8282 0~2**16-1 uint32 \u65e0 4\u5b57\u8282 0~2**32-1 uint64 \u65e0 8\u5b57\u8282 0~2**64-1 int \u6709 32\u4f4d\u7cfb\u7edf\u4e0a\u53604\u4e2a\u5b57\u8282int32,64\u4f4d\u673a\u5668\u4e0a\u53608\u4e2a\u5b57\u8282,int64 uint16 \u65e0 32\u4f4d\u53604\u4e2a\u5b57\u8282,64\u4f4d\u53608\u4e2a\u5b57\u8282 rune \u6709 \u8ddfint32\u4e00\u6837 \u7684\u522b\u540d \u7b49\u4ef7int32,\u8868\u793a\u4e00\u4e2aUnicode\u7801 byte \u65e0 \u8ddfuint8\u7b49\u4ef70~255 \u7684\u522b\u540d \u5f53\u8981\u5b58\u50a8\u5b57\u7b26\u65f6\u9009\u7528byte 8,16,32\u8868\u793a\u6bd4\u7279\u4f4d \u6ce8\u610f: \u5982int8\u7ed9\u4e86128 \u629b overflow \u5f02\u5e38 golang\u9ed8\u8ba4\u6574\u578b\u58f0\u660e\u4e3aint\u578b \u5728\u7a0b\u5e8f\u4e2d\u67e5\u770b\u67d0\u4e2a\u53d8\u91cf\u5360\u7528\u7684\u6570\u636e\u7c7b\u578b\u548c\u5b57\u8282\u5927\u5c0f import ( \"fmt\" \"unsafe\" ) fmt . Printf ( \"n1 \u7684\u7c7b\u578b %T \u5360\u7528\u7684\u5b57\u8282\u6570\u662f\" , n1 , unsafe . Sizeof ( n1 )) golang\u7a0b\u5e8f\u4e2d\u6574\u578b\u53d8\u91cf\u5728\u4f7f\u7528\u65f6,\u9075\u5faa\u4fdd\u5c0f\u4e0d\u4fdd\u5927\u7684\u539f\u5219.\u5373\u5728\u4fdd\u8bc1\u7a0b\u5e8f\u6b63\u5e38\u8fd0\u884c\u7684\u60c5\u51b5\u4e0b,\u5c3d\u91cf\u4f7f\u7528\u5360\u7528\u7a7a\u95f4\u5c0f\u7684\u6570\u636e\u7c7b\u578b. bit:\u8ba1\u7b97\u673a\u4e2d\u6700\u5c0f\u7684\u5b58\u50a8\u5355\u4f4d.byte:\u8ba1\u7b97\u673a\u4e2d\u57fa\u672c\u5b58\u50a8\u5355\u5143.1byte = 8bit \u6d6e\u70b9\u7c7b\u578b \u00b6 \u7528\u6d6e\u70b9\u7c7b\u578b\u6765\u8868\u793a\u4e00\u4e2a\u5c0f\u6570. \u5c0f\u6570\u7c7b\u578b\u5206\u7c7b \u00b6 \u7c7b\u578b|\u5360\u7528\u7a7a\u95f4|\u8868\u6570\u8303\u56f4 :-:|:-:|---|--- \u5355\u7cbe\u5ea6float32|1\u5b57\u8282|-128~127 \u53cc\u7cbe\u5ea6float64|1\u5b57\u8282|-128~127 \u6ce8\u610f: \u6d6e\u70b9\u6570\u5728\u673a\u5668\u4e2d\u5b58\u653e\u5f62\u5f0f:\u6d6e\u70b9\u6570=\u7b26\u53f7\u4f4d+\u6307\u6570\u4f4d+\u5c3e\u6570\u4f4d \u6d6e\u70b9\u6570\u90fd\u662f\u6709\u7b26\u53f7\u7684 \u5c3e\u6570\u4f4d\u90e8\u5206\u53ef\u80fd\u4e22\u5931,\u7cfb\u7edf\u4fdd\u5b58\u65f6\u5019\u5c31\u8bb0\u4e2a\u5927\u6982\u5728\u5b58\u50a8\u8fc7\u7a0b\u4e2d,\u7cbe\u5ea6\u4f1a\u6709\u4e22\u5931 golang\u6d6e\u70b9\u578b\u6709\u56fa\u5b9a\u7684\u8303\u56f4\u548c\u5b57\u6bb5\u957f\u5ea6,\u4e0d\u53d7OS\u5f71\u54cd. golang\u6d6e\u70b9\u578b\u9ed8\u8ba4\u58f0\u660e\u4f4dfloat64\u7c7b\u578b. 5.123e2 = 5.123 * (10**2) \u6d6e\u70b9\u6570\u4e5f\u53ef\u4ee5\u663e\u793a\u4e3a\u6574\u6570(\u770b\u8d77\u6765\u50cf\u6574\u6570) var n float32 func main () { n = 3 fmt . Printf ( \"%T,%v\" , n , n ) } >> > float32 , 3 \u590d\u6570\u7c7b\u578b \u00b6 package main import ( \"fmt\" ) func main () { c1 := complex ( 5 , 7 ) c2 := 8 + 27i cadd := c1 + c2 fmt . Println ( \"sum:\" , cadd ) cmul := c1 * c2 fmt . Println ( \"product:\" , cmul ) }","title":"\u6570\u5b57\u7c7b\u578b"},{"location":"Golang/%E6%95%B0%E5%AD%97%E7%B1%BB%E5%9E%8B/#_1","text":"\u4e00\u4e2a\u5b57\u8282\u4e3a9\u4f4d,8\u4f4d\u4e2d\u7b2c\u4e00\u4e2a\u4f4d\u4e3a\u7b26\u53f7\u4f4d,1\u8868\u793a\u7b26\u53f7,\u6240\u4ee5\u6574\u6570\u5c11\u4e00\u4e2a\u6570","title":"\u6574\u6570\u7c7b\u578b"},{"location":"Golang/%E6%95%B0%E5%AD%97%E7%B1%BB%E5%9E%8B/#_2","text":"\u7c7b\u578b \u6709\u65e0\u7b26\u53f7 \u5360\u7528\u7a7a\u95f4 \u8868\u6570\u8303\u56f4 int8 \u6709 1\u5b57\u8282 -128~127 int16 \u6709 2\u5b57\u8282 -2**15~2**15-1 int32 \u6709 4\u5b57\u8282 -2**31~2**31-1 int64 \u6709 8\u5b57\u8282 -2**63~2**63-1 uint8 \u65e0 1\u5b57\u8282 0~255 uint16 \u65e0 2\u5b57\u8282 0~2**16-1 uint32 \u65e0 4\u5b57\u8282 0~2**32-1 uint64 \u65e0 8\u5b57\u8282 0~2**64-1 int \u6709 32\u4f4d\u7cfb\u7edf\u4e0a\u53604\u4e2a\u5b57\u8282int32,64\u4f4d\u673a\u5668\u4e0a\u53608\u4e2a\u5b57\u8282,int64 uint16 \u65e0 32\u4f4d\u53604\u4e2a\u5b57\u8282,64\u4f4d\u53608\u4e2a\u5b57\u8282 rune \u6709 \u8ddfint32\u4e00\u6837 \u7684\u522b\u540d \u7b49\u4ef7int32,\u8868\u793a\u4e00\u4e2aUnicode\u7801 byte \u65e0 \u8ddfuint8\u7b49\u4ef70~255 \u7684\u522b\u540d \u5f53\u8981\u5b58\u50a8\u5b57\u7b26\u65f6\u9009\u7528byte 8,16,32\u8868\u793a\u6bd4\u7279\u4f4d \u6ce8\u610f: \u5982int8\u7ed9\u4e86128 \u629b overflow \u5f02\u5e38 golang\u9ed8\u8ba4\u6574\u578b\u58f0\u660e\u4e3aint\u578b \u5728\u7a0b\u5e8f\u4e2d\u67e5\u770b\u67d0\u4e2a\u53d8\u91cf\u5360\u7528\u7684\u6570\u636e\u7c7b\u578b\u548c\u5b57\u8282\u5927\u5c0f import ( \"fmt\" \"unsafe\" ) fmt . Printf ( \"n1 \u7684\u7c7b\u578b %T \u5360\u7528\u7684\u5b57\u8282\u6570\u662f\" , n1 , unsafe . Sizeof ( n1 )) golang\u7a0b\u5e8f\u4e2d\u6574\u578b\u53d8\u91cf\u5728\u4f7f\u7528\u65f6,\u9075\u5faa\u4fdd\u5c0f\u4e0d\u4fdd\u5927\u7684\u539f\u5219.\u5373\u5728\u4fdd\u8bc1\u7a0b\u5e8f\u6b63\u5e38\u8fd0\u884c\u7684\u60c5\u51b5\u4e0b,\u5c3d\u91cf\u4f7f\u7528\u5360\u7528\u7a7a\u95f4\u5c0f\u7684\u6570\u636e\u7c7b\u578b. bit:\u8ba1\u7b97\u673a\u4e2d\u6700\u5c0f\u7684\u5b58\u50a8\u5355\u4f4d.byte:\u8ba1\u7b97\u673a\u4e2d\u57fa\u672c\u5b58\u50a8\u5355\u5143.1byte = 8bit","title":"\u6574\u6570\u7c7b\u578b\u5206\u7c7b"},{"location":"Golang/%E6%95%B0%E5%AD%97%E7%B1%BB%E5%9E%8B/#_3","text":"\u7528\u6d6e\u70b9\u7c7b\u578b\u6765\u8868\u793a\u4e00\u4e2a\u5c0f\u6570.","title":"\u6d6e\u70b9\u7c7b\u578b"},{"location":"Golang/%E6%95%B0%E5%AD%97%E7%B1%BB%E5%9E%8B/#_4","text":"\u7c7b\u578b|\u5360\u7528\u7a7a\u95f4|\u8868\u6570\u8303\u56f4 :-:|:-:|---|--- \u5355\u7cbe\u5ea6float32|1\u5b57\u8282|-128~127 \u53cc\u7cbe\u5ea6float64|1\u5b57\u8282|-128~127 \u6ce8\u610f: \u6d6e\u70b9\u6570\u5728\u673a\u5668\u4e2d\u5b58\u653e\u5f62\u5f0f:\u6d6e\u70b9\u6570=\u7b26\u53f7\u4f4d+\u6307\u6570\u4f4d+\u5c3e\u6570\u4f4d \u6d6e\u70b9\u6570\u90fd\u662f\u6709\u7b26\u53f7\u7684 \u5c3e\u6570\u4f4d\u90e8\u5206\u53ef\u80fd\u4e22\u5931,\u7cfb\u7edf\u4fdd\u5b58\u65f6\u5019\u5c31\u8bb0\u4e2a\u5927\u6982\u5728\u5b58\u50a8\u8fc7\u7a0b\u4e2d,\u7cbe\u5ea6\u4f1a\u6709\u4e22\u5931 golang\u6d6e\u70b9\u578b\u6709\u56fa\u5b9a\u7684\u8303\u56f4\u548c\u5b57\u6bb5\u957f\u5ea6,\u4e0d\u53d7OS\u5f71\u54cd. golang\u6d6e\u70b9\u578b\u9ed8\u8ba4\u58f0\u660e\u4f4dfloat64\u7c7b\u578b. 5.123e2 = 5.123 * (10**2) \u6d6e\u70b9\u6570\u4e5f\u53ef\u4ee5\u663e\u793a\u4e3a\u6574\u6570(\u770b\u8d77\u6765\u50cf\u6574\u6570) var n float32 func main () { n = 3 fmt . Printf ( \"%T,%v\" , n , n ) } >> > float32 , 3","title":"\u5c0f\u6570\u7c7b\u578b\u5206\u7c7b"},{"location":"Golang/%E6%95%B0%E5%AD%97%E7%B1%BB%E5%9E%8B/#_5","text":"package main import ( \"fmt\" ) func main () { c1 := complex ( 5 , 7 ) c2 := 8 + 27i cadd := c1 + c2 fmt . Println ( \"sum:\" , cadd ) cmul := c1 * c2 fmt . Println ( \"product:\" , cmul ) }","title":"\u590d\u6570\u7c7b\u578b"},{"location":"Golang/%E6%95%B0%E7%BB%84/","text":"Array\u6570\u7ec4 \u6570\u7ec4\u5b9a\u4e49 \u6570\u7ec4\u7684\u521d\u59cb\u5316 \u65b9\u6cd5\u4e00 \u65b9\u6cd5\u4e8c \u65b9\u6cd5\u4e09 \u6570\u7ec4\u7684\u904d\u5386 \u65b9\u6cd5\u4e00 \u65b9\u6cd5\u4e8c \u6570\u7ec4\u7684\u4f7f\u7528 \u6570\u7ec4\u7684\u8bbf\u95ee \u6570\u7ec4\u7684\u4fee\u6539 \u591a\u7ef4\u6570\u7ec4 \u4e8c\u7ef4\u6570\u7ec4 \u5b9a\u4e49 \u4e8c\u7ef4\u6570\u7ec4\u7684\u5185\u5b58\u5e03\u5c40 \u4e8c\u7ef4\u6570\u7ec4\u7684\u904d\u5386 \u65b9\u6cd51:\u53cc\u5c42for\u5faa\u73af \u65b9\u6cd52:for...range\u5faa\u73af \u6570\u7ec4\u7684\u5185\u5b58\u5e03\u5c40 \u7ec6\u8282 \u7ec3\u4e60 Array\u6570\u7ec4 \u00b6 \u6570\u7ec4\u662f\u4e00\u79cd\u6570\u636e\u7c7b\u578b\u5143\u7d20\u7684\u96c6\u5408. Go\u4e2d,\u6570\u7ec4\u4ece\u58f0\u660e\u65f6\u5c31\u786e\u5b9a,\u4f7f\u7528\u65f6\u53ef\u4ee5\u4fee\u6539\u6570\u7ec4\u6210\u5458,\u4f46\u662f\u6570\u7ec4\u5927\u5c0f\u4e0d\u53ef\u53d8\u5316. \u6570\u7ec4\u53ef\u4ee5\u5b58\u653e\u591a\u4e2a\u540c\u4e00\u7c7b\u578b\u7684\u6570\u636e. Golang\u4e2d\u6570\u7ec4\u662f\u4e00\u79cd\u503c\u7c7b\u578b \u6570\u7ec4\u7684\u5927\u5c0f,\u662f\u8be5\u6570\u7ec4\u7c7b\u578b\u7684\u4e00\u90e8\u5206 \u6570\u7ec4\u5b9a\u4e49 \u00b6 var \u6570\u7ec4\u53d8\u91cf\u540d [\u5143\u7d20\u6570\u91cf] T var a [ 3 ] int \u6570\u7ec4\u7684\u957f\u5ea6\u5fc5\u987b\u662f\u5e38\u91cf,\u5e76\u4e14\u957f\u5ea6\u662f\u6570\u7ec4\u7c7b\u578b\u7684\u4e00\u90e8\u5206,\u4e00\u65e6\u5b9a\u4e49,\u957f\u5ea6\u5c31\u4e0d\u53ef\u4ee5\u6539\u53d8. [ 5 ] int \u548c [ 10 ] int \u662f\u4e0d\u540c\u7684\u7c7b\u578b \u6570\u7ec4\u53ef\u4ee5\u901a\u8fc7\u4e0b\u6807\u8fdb\u884c\u8bbf\u95ee,\u4e0b\u6807\u4ece0\u5f00\u59cb,\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u4e0b\u6807 len-1 ,\u8d8a\u754c\u8bbf\u95ee(\u4e0b\u6807\u5728\u5408\u6cd5\u8303\u56f4\u4e4b\u5916),\u89e6\u53d1\u8bbf\u95ee\u8d8a\u754c,\u4f1apanic. \u6570\u7ec4\u7684\u521d\u59cb\u5316 \u00b6 \u65b9\u6cd5\u4e00 \u00b6 \u521d\u59cb\u5316\u6570\u7ec4\u65f6\u53ef\u4ee5\u4f7f\u7528\u521d\u59cb\u5316\u5217\u8868\u6765\u8bbe\u7f6e\u6570\u7ec4\u5143\u7d20\u7684\u503c. func main (){ var testArray [ 3 ] int var numArray = [ 3 ] int { 1 , 2 } var cityArray = [ 3 ] string { \"beijng\" , \"shanghai\" , \"shenzhen\" } fmt . Println ( testArray ) fmt . Println ( numArray ) fmt . Println ( cityArray ) } >> > [ 0 0 0 ] [ 1 2 0 ] [ beijng shanghai shenzhen ] \u65b9\u6cd5\u4e8c \u00b6 \u53ef\u4ee5\u8ba9\u7f16\u8bd1\u5668\u6839\u636e\u521d\u59cb\u503c\u7684\u4e2a\u6570\u81ea\u884c\u63a8\u65ad\u6570\u7ec4\u7684\u957f\u5ea6. func main (){ var testArray [ 3 ] int var numArray = [ ... ] int { 1 , 2 } var cityArray = [ ... ] string { \"beijng\" , \"shanghai\" , \"shenzhen\" } fmt . Printf ( \"%v %T\\n\" , testArray , testArray ) fmt . Printf ( \"%v %T\\n\" , numArray , numArray ) fmt . Printf ( \"%v %T\\n\" , cityArray , cityArray ) } >> > [ 0 0 0 ] [ 3 ] int [ 1 2 ] [ 2 ] int [ beijng shanghai shenzhen ] [ 3 ] string \u65b9\u6cd5\u4e09 \u00b6 \u53ef\u4ee5\u4f7f\u7528\u6307\u5b9a\u7d22\u5f15\u503c\u7684\u65b9\u5f0f\u6765\u521d\u59cb\u5316\u6570\u7ec4 func main () { a := [ ... ] int { 1 : 1 , 3 : 5 } fmt . Printf ( \"%v %T\" , a , a ) } >> > [ 0 1 0 5 ] [ 4 ] int \u6570\u7ec4\u7684\u904d\u5386 \u00b6 \u65b9\u6cd5\u4e00 \u00b6 \u5728for\u4e2d\u904d\u5386 func main (){ var a = [ ... ] string { \"beijing\" , \"shanghai\" , \"shenzhen\" } for i := 0 ; i < len ( a ); i ++ { fmt . Println ( a [ i ]) } } >> > beijing shanghai shenzhen \u65b9\u6cd5\u4e8c \u00b6 \u5728for...range\u4e2d\u904d\u5386 func main (){ var a = [ ... ] string { \"beijing\" , \"shanghai\" , \"shenzhen\" } for index , value := range a { fmt . Println ( index , value ) } } >> > 0 beijing 1 shanghai 2 shenzhen \u6ce8\u610f: range\u5173\u952e\u5b57\u8f93\u51fa\u9700\u8981\u4e24\u4e2a\u53d8\u91cf\u6765\u63a5\u53d7,\u76f8\u5f53\u4e8ePython\u4e2denumerate,\u5982\u679c\u4e0d\u60f3\u8981\u7d22\u5f15\u53ef\u4ee5\u4f7f\u7528\u4e22\u5f03\u53d8\u91cf _ \u6765\u63a5\u6536. index\u548cvalue\u662f\u7ea6\u5b9a\u4fd7\u79f0\u7684\u7528\u6cd5,\u4e0d\u56fa\u5b9a \u5982\u679c\u53ea\u4f7f\u7528\u4e00\u4e2a\u53d8\u91cf\u63a5\u6536range\u7684\u8fd4\u56de\u503c,\u53ea\u4f1a\u8fd4\u56de\u7d22\u5f15. \u6570\u7ec4\u7684\u4f7f\u7528 \u00b6 \u6570\u7ec4\u7684\u8bbf\u95ee \u00b6 \u901a\u8fc7\u7d22\u5f15\u53d6\u503c func main (){ var a = [ ... ] string { \"beijing\" , \"shanghai\" , \"shenzhen\" } b := a [ 0 ] fmt . Println ( b ) } >> > beijing \u6570\u7ec4\u7684\u4fee\u6539 \u00b6 \u5982\u679c\u5c06\u6570\u7ec4\u91cc\u9762\u7684\u503c\u53d6\u51fa\u66f4\u6539\u5219\u6709\u6548 func main (){ var a = [ ... ] string { \"beijing\" , \"shanghai\" , \"shenzhen\" } a [ 2 ] = \"liaoning\" fmt . Println ( a ) } >> > [ beijing shanghai liaoning ] \u6ce8\u610f:\u6570\u7ec4\u65f6\u503c\u7c7b\u578b,\u6240\u4ee5\u5176\u62f7\u8d1d\u526f\u672c\u5747\u4e3a\u6df1\u62f7\u8d1d,\u66f4\u6539\u526f\u672c\u7684\u503c,\u4e0d\u4f1a\u5f71\u54cd\u539f\u503c func main (){ var a = [ ... ] string { \"beijing\" , \"shanghai\" , \"shenzhen\" } b := a b [ 2 ] = \"liaoning\" fmt . Println ( a , b ) } >> > [ beijing shanghai shenzhen ] [ beijing shanghai liaoning ] \u591a\u7ef4\u6570\u7ec4 \u00b6 Go\u4e2d\u652f\u6301\u591a\u7ef4\u6570\u7ec4,\u4e5f\u5c31\u662f\u6570\u7ec4\u7684\u5d4c\u5957 func main () { a := [ 3 ][ 2 ] int { { 11 , 12 }, { 21 , 22 }, { 31 , 32 }, } fmt . Printf ( \"%v %T\" , a , a ) } >> > [[ 11 12 ] [ 21 22 ] [ 31 32 ]] [ 3 ][ 2 ] int \u6ce8\u610f:\u591a\u7ef4\u6570\u7ec4\u53ea\u6709\u7b2c\u4e00\u5c42\u53ef\u4ee5\u4f7f\u7528 ... \u6765\u52a8\u6001\u5b9a\u4e49\u6570\u7ec4\u957f\u5ea6. \u4e8c\u7ef4\u6570\u7ec4 \u00b6 \u5b9a\u4e49 \u00b6 package main import ( \"fmt\" ) func main () { //\u58f0\u660e/\u521d\u59cb\u5316 var arr [ 4 ][ 5 ] int //\u8d4b\u503c/\u9ed8\u8ba4\u503c\u4e3a\u5168\u90e8\u90fd\u4e3a0 arr [ 1 ][ 2 ] = 1 arr [ 2 ][ 1 ] = 2 arr [ 2 ][ 3 ] = 3 for i := 0 ; i < 4 ; i ++ { for j := 0 ; j < 5 ; j ++ { fmt . Print ( arr [ i ][ j ], \" \" ) } fmt . Println () } } >> > 0 0 0 0 0 0 0 1 0 0 0 2 0 3 0 0 0 0 0 0 \u540c\u4e00\u7ef4\u6570\u7ec4 \u4e8c\u7ef4\u6570\u7ec4\u7684\u5185\u5b58\u5e03\u5c40 \u00b6 \u4ee5arr[2][3]\u4e3a\u4f8b func main (){ var arr [ 2 ][ 3 ] int arr [ 1 ][ 1 ]= 10 fmt . Println ( arr ) fmt . Printf ( \"a=%p\\n\" , & arr [ 0 ]) fmt . Printf ( \"%p\\n\" , & arr [ 0 ][ 0 ]) fmt . Printf ( \"b=%p\\n\" , & arr [ 1 ]) fmt . Printf ( \"%p\" , & arr [ 1 ][ 0 ]) } >> > [[ 0 0 0 ] [ 0 10 0 ]] a = 0xc000084060 0xc000084060 b = 0xc000084078 0xc000084078 \u5176\u4e2db=a+24,\u56e0\u4e3a\u4e00\u4e2a\u5217\u4e2d\u6709\u4e09\u4e2a\u5143\u7d20,\u4e00\u4e2aint8\u4e2a\u5b57\u8282,\u4e09\u516b\u4e8c\u5341\u56db. \u4e8c\u7ef4\u6570\u7ec4\u7684\u904d\u5386 \u00b6 \u65b9\u6cd51:\u53cc\u5c42for\u5faa\u73af \u00b6 func main () { var arr = [ 2 ][ 3 ] int {{ 1 , 2 , 3 },{ 4 , 5 , 6 }} for i := 0 ; i < len ( arr ); i ++ { for j := 0 ; j < len ( arr [ i ]); j ++ { fmt . Printf ( \"%v \" , arr [ i ][ j ]) } fmt . Println () } } >> > 1 2 3 4 5 6 \u65b9\u6cd52:for...range\u5faa\u73af \u00b6 func main () { var arr = [ 2 ][ 3 ] int {{ 1 , 2 , 3 },{ 4 , 5 , 6 }} for i , v1 := range arr { for j , v2 := range v1 { fmt . Printf ( \"arr[%v][%v]=%v \" , i , j , v2 ) } fmt . Println () } } >> > arr [ 0 ][ 0 ]= 1 arr [ 0 ][ 1 ]= 2 arr [ 0 ][ 2 ]= 3 arr [ 1 ][ 0 ]= 4 arr [ 1 ][ 1 ]= 5 arr [ 1 ][ 2 ]= 6 \u6570\u7ec4\u7684\u5185\u5b58\u5e03\u5c40 \u00b6 func main (){ a := [ 3 ] int { 1 , 2 , 3 } fmt . Printf ( \"%v %T\\n\" , a , a ) fmt . Printf ( \"%p %p %p %p\" , & a , & a [ 0 ], & a [ 1 ], & a [ 2 ]) } >> > [ 1 2 3 ] [ 3 ] int 0xc00000c3e0 0xc00000c3e0 0xc00000c3e8 0xc00000c3f0 \u6570\u7ec4\u540d\u7684\u5730\u5740\u5c31\u662f\u6570\u7ec4\u9996\u5143\u7d20\u5730\u5740\uff0c\u76f8\u90bb\u7684\u6570\u7ec4\u5143\u7d20\u7684\u5730\u5740\u76f8\u5dee\u4e00\u4e2a\u5143\u7d20\u6240\u5360\u7684\u5730\u5740\u957f\u5ea6\uff0c\u5373\u6570\u7ec4\u7684\u5b58\u50a8\u662f\u8fde\u7eed\u7684\u3002 \u5185\u5b58\u7684\u6700\u5c0f\u5355\u5143\u662f\u5b57\u8282\uff0c\u572864\u4f4d\u7cfb\u7edf\u4e2d\u4e00\u4e2aint\u53608\u4e2a\u5b57\u8282\uff0c\u6240\u4ee5var a [10]int\u7684\u6bcf\u4e2a\u5143\u7d20\u7684\u5185\u5b58\u5730\u5740\u76f8\u5dee8 \u7ec6\u8282 \u00b6 \u6570\u7ec4\u7684\u65f6\u591a\u4e2a\u76f8\u540c\u6570\u636e\u7c7b\u578b\u7684\u7ec4\u5408 \u6ca1\u6709\u7a7a\u6570\u7ec4,var arr []int \u8fd9\u662farr\u662f\u4e00\u4e2aslice\u5207\u7247\u7c7b\u578b, \u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u53ef\u4ee5\u662f\u4efb\u4f55\u6570\u636e\u7c7b\u578b,\u5305\u62ec\u503c\u7c7b\u578b\u548c\u5f15\u7528\u7c7b\u578b,\u4f46\u662f\u4e0d\u53ef\u4ee5\u6df7\u7528. \u6570\u7ec4\u521b\u5efa\u540e,\u5982\u679c\u6ca1\u6709\u8d4b\u503c,\u6709\u9ed8\u8ba4\u96f6\u503c \u6570\u636e\u7c7b\u578b \u9ed8\u8ba4\u503c \u6570\u503c\u7c7b\u578b\u6570\u7ec4 0 \u5b57\u7b26\u4e32\u6570\u7ec4 \"\" bool\u6570\u7ec4 false \u6570\u7ec4\u7684\u4f7f\u7528\u6b65\u9aa4 \u58f0\u660e\u6570\u7ec4\u5e76\u5f00\u8f9f\u5185\u5b58 \u7ed9\u6570\u7ec4\u5404\u4e2a\u5143\u7d20\u8d4b\u503c(\u9ed8\u8ba4\u96f6\u503c) \u4f7f\u7528\u6570\u7ec4 \u6570\u7ec4\u7684\u7d22\u5f15\u4ece0\u5f00\u59cb \u6570\u7ec4\u7d22\u5f15\u5982\u679c\u8d85\u51fa\u6307\u5b9a\u8303\u56f4,\u62a5panic,\u4e0d\u652f\u6301\u8d1f\u7d22\u5f15 \u5c0ftips, var a [ 3 ] int b := a [ 4 ] //\u62a5\u9519 \u8d85\u754c index := 4 c := a [ index ] //\u7f16\u8bd1\u5668\u4e0d\u62a5\u9519,\u53ea\u6709\u5728\u8fd0\u884c\u7684\u65f6\u5019\u624d\u4f1a\u62a5\u9519,\u8d85\u754c Go\u7684\u6570\u7ec4\u662f\u503c\u7c7b\u578b,\u9ed8\u8ba4\u662f\u503c\u4f20\u9012,\u76f4\u63a5\u8fdb\u884c\u503c\u62f7\u8d1d,\u6570\u636e\u95f4\u4e0d\u4f1a\u76f8\u4e92\u5f71\u54cd. \u5982\u679c\u5728\u5176\u4ed6\u51fd\u6570\u4e2d,\u53bb\u4fee\u6539\u539f\u6765\u7684\u6570\u7ec4,\u53ef\u4ee5\u4f7f\u7528\u5f15\u7528\u4f20\u9012 [n]*T \u8868\u793a\u6307\u9488\u6570\u7ec4 *[n]T \u8868\u793a\u6570\u7ec4\u6307\u9488 func test ( arr * [ 3 ] int ) { ( * arr )[ 0 ] = 666 } func main () { arr := [ 3 ] int { 11 , 22 , 33 } test ( & arr ) fmt . Println ( arr ) } >> > [ 666 22 33 ] \u51fd\u6570\u63a5\u6536\u53c2\u6570\u4e3a\u6570\u7ec4\u7684\u6307\u9488,\u5185\u90e8\u5c31\u53ef\u4ee5\u901a\u8fc7\u6570\u636e\u7684\u6307\u9488\u627e\u5230\u6570\u7ec4\u771f\u6b63\u7684\u503c,\u6765\u6539\u53d8\u6e90\u6570\u7ec4\u7684\u503c. \u957f\u5ea6\u662f\u6570\u7ec4\u7c7b\u578b\u7684\u4e00\u90e8\u5206,\u4e00\u65e6\u5b9a\u4e49,\u5c31\u4e0d\u53ef\u4fee\u6539. \u4e0d\u540c\u7684\u957f\u5ea6\u7684\u6570\u7ec4\u4e0d\u662f\u540c\u4e00\u79cd\u6570\u636e\u7c7b\u578b \u6570\u7ec4\u7c7b\u578b\u652f\u6301\u6307\u9488\u76f4\u63a5\u64cd\u4f5c,go\u5185\u90e8\u4f18\u5316 \u7ec3\u4e60 \u00b6 \u521b\u5efa\u4e00\u4e2abyte\u7c7b\u578b\u768426\u4e2a\u5143\u7d20\u7684\u6570\u7ec4,\u653e\u7f6eA~Z,\u4f7f\u7528for\u904d\u5386\u5143\u7d20\u5e76\u6253\u5370, func main () { var myChars [ 26 ] byte for i := 0 ; i < 26 ; i ++ { myChars [ i ] = 'A' + byte ( i ) //byte\u662f\u4e3a\u4e86\u8ba9int\u578bi\u5f3a\u8f6c\u4e3abyte\u7c7b\u578bi,\u624d\u53ef\u4ee5\u4e0e'A'\u76f8\u52a0 } for i := 0 ; i < 26 ; i ++ { fmt . Printf ( \"%c \" , myChars [ i ]) } } >> > A B C D E F G H I J K L M N O P Q R S T U V W X Y Z","title":"\u6570\u7ec4"},{"location":"Golang/%E6%95%B0%E7%BB%84/#array","text":"\u6570\u7ec4\u662f\u4e00\u79cd\u6570\u636e\u7c7b\u578b\u5143\u7d20\u7684\u96c6\u5408. Go\u4e2d,\u6570\u7ec4\u4ece\u58f0\u660e\u65f6\u5c31\u786e\u5b9a,\u4f7f\u7528\u65f6\u53ef\u4ee5\u4fee\u6539\u6570\u7ec4\u6210\u5458,\u4f46\u662f\u6570\u7ec4\u5927\u5c0f\u4e0d\u53ef\u53d8\u5316. \u6570\u7ec4\u53ef\u4ee5\u5b58\u653e\u591a\u4e2a\u540c\u4e00\u7c7b\u578b\u7684\u6570\u636e. Golang\u4e2d\u6570\u7ec4\u662f\u4e00\u79cd\u503c\u7c7b\u578b \u6570\u7ec4\u7684\u5927\u5c0f,\u662f\u8be5\u6570\u7ec4\u7c7b\u578b\u7684\u4e00\u90e8\u5206","title":"Array\u6570\u7ec4"},{"location":"Golang/%E6%95%B0%E7%BB%84/#_1","text":"var \u6570\u7ec4\u53d8\u91cf\u540d [\u5143\u7d20\u6570\u91cf] T var a [ 3 ] int \u6570\u7ec4\u7684\u957f\u5ea6\u5fc5\u987b\u662f\u5e38\u91cf,\u5e76\u4e14\u957f\u5ea6\u662f\u6570\u7ec4\u7c7b\u578b\u7684\u4e00\u90e8\u5206,\u4e00\u65e6\u5b9a\u4e49,\u957f\u5ea6\u5c31\u4e0d\u53ef\u4ee5\u6539\u53d8. [ 5 ] int \u548c [ 10 ] int \u662f\u4e0d\u540c\u7684\u7c7b\u578b \u6570\u7ec4\u53ef\u4ee5\u901a\u8fc7\u4e0b\u6807\u8fdb\u884c\u8bbf\u95ee,\u4e0b\u6807\u4ece0\u5f00\u59cb,\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u4e0b\u6807 len-1 ,\u8d8a\u754c\u8bbf\u95ee(\u4e0b\u6807\u5728\u5408\u6cd5\u8303\u56f4\u4e4b\u5916),\u89e6\u53d1\u8bbf\u95ee\u8d8a\u754c,\u4f1apanic.","title":"\u6570\u7ec4\u5b9a\u4e49"},{"location":"Golang/%E6%95%B0%E7%BB%84/#_2","text":"","title":"\u6570\u7ec4\u7684\u521d\u59cb\u5316"},{"location":"Golang/%E6%95%B0%E7%BB%84/#_3","text":"\u521d\u59cb\u5316\u6570\u7ec4\u65f6\u53ef\u4ee5\u4f7f\u7528\u521d\u59cb\u5316\u5217\u8868\u6765\u8bbe\u7f6e\u6570\u7ec4\u5143\u7d20\u7684\u503c. func main (){ var testArray [ 3 ] int var numArray = [ 3 ] int { 1 , 2 } var cityArray = [ 3 ] string { \"beijng\" , \"shanghai\" , \"shenzhen\" } fmt . Println ( testArray ) fmt . Println ( numArray ) fmt . Println ( cityArray ) } >> > [ 0 0 0 ] [ 1 2 0 ] [ beijng shanghai shenzhen ]","title":"\u65b9\u6cd5\u4e00"},{"location":"Golang/%E6%95%B0%E7%BB%84/#_4","text":"\u53ef\u4ee5\u8ba9\u7f16\u8bd1\u5668\u6839\u636e\u521d\u59cb\u503c\u7684\u4e2a\u6570\u81ea\u884c\u63a8\u65ad\u6570\u7ec4\u7684\u957f\u5ea6. func main (){ var testArray [ 3 ] int var numArray = [ ... ] int { 1 , 2 } var cityArray = [ ... ] string { \"beijng\" , \"shanghai\" , \"shenzhen\" } fmt . Printf ( \"%v %T\\n\" , testArray , testArray ) fmt . Printf ( \"%v %T\\n\" , numArray , numArray ) fmt . Printf ( \"%v %T\\n\" , cityArray , cityArray ) } >> > [ 0 0 0 ] [ 3 ] int [ 1 2 ] [ 2 ] int [ beijng shanghai shenzhen ] [ 3 ] string","title":"\u65b9\u6cd5\u4e8c"},{"location":"Golang/%E6%95%B0%E7%BB%84/#_5","text":"\u53ef\u4ee5\u4f7f\u7528\u6307\u5b9a\u7d22\u5f15\u503c\u7684\u65b9\u5f0f\u6765\u521d\u59cb\u5316\u6570\u7ec4 func main () { a := [ ... ] int { 1 : 1 , 3 : 5 } fmt . Printf ( \"%v %T\" , a , a ) } >> > [ 0 1 0 5 ] [ 4 ] int","title":"\u65b9\u6cd5\u4e09"},{"location":"Golang/%E6%95%B0%E7%BB%84/#_6","text":"","title":"\u6570\u7ec4\u7684\u904d\u5386"},{"location":"Golang/%E6%95%B0%E7%BB%84/#_7","text":"\u5728for\u4e2d\u904d\u5386 func main (){ var a = [ ... ] string { \"beijing\" , \"shanghai\" , \"shenzhen\" } for i := 0 ; i < len ( a ); i ++ { fmt . Println ( a [ i ]) } } >> > beijing shanghai shenzhen","title":"\u65b9\u6cd5\u4e00"},{"location":"Golang/%E6%95%B0%E7%BB%84/#_8","text":"\u5728for...range\u4e2d\u904d\u5386 func main (){ var a = [ ... ] string { \"beijing\" , \"shanghai\" , \"shenzhen\" } for index , value := range a { fmt . Println ( index , value ) } } >> > 0 beijing 1 shanghai 2 shenzhen \u6ce8\u610f: range\u5173\u952e\u5b57\u8f93\u51fa\u9700\u8981\u4e24\u4e2a\u53d8\u91cf\u6765\u63a5\u53d7,\u76f8\u5f53\u4e8ePython\u4e2denumerate,\u5982\u679c\u4e0d\u60f3\u8981\u7d22\u5f15\u53ef\u4ee5\u4f7f\u7528\u4e22\u5f03\u53d8\u91cf _ \u6765\u63a5\u6536. index\u548cvalue\u662f\u7ea6\u5b9a\u4fd7\u79f0\u7684\u7528\u6cd5,\u4e0d\u56fa\u5b9a \u5982\u679c\u53ea\u4f7f\u7528\u4e00\u4e2a\u53d8\u91cf\u63a5\u6536range\u7684\u8fd4\u56de\u503c,\u53ea\u4f1a\u8fd4\u56de\u7d22\u5f15.","title":"\u65b9\u6cd5\u4e8c"},{"location":"Golang/%E6%95%B0%E7%BB%84/#_9","text":"","title":"\u6570\u7ec4\u7684\u4f7f\u7528"},{"location":"Golang/%E6%95%B0%E7%BB%84/#_10","text":"\u901a\u8fc7\u7d22\u5f15\u53d6\u503c func main (){ var a = [ ... ] string { \"beijing\" , \"shanghai\" , \"shenzhen\" } b := a [ 0 ] fmt . Println ( b ) } >> > beijing","title":"\u6570\u7ec4\u7684\u8bbf\u95ee"},{"location":"Golang/%E6%95%B0%E7%BB%84/#_11","text":"\u5982\u679c\u5c06\u6570\u7ec4\u91cc\u9762\u7684\u503c\u53d6\u51fa\u66f4\u6539\u5219\u6709\u6548 func main (){ var a = [ ... ] string { \"beijing\" , \"shanghai\" , \"shenzhen\" } a [ 2 ] = \"liaoning\" fmt . Println ( a ) } >> > [ beijing shanghai liaoning ] \u6ce8\u610f:\u6570\u7ec4\u65f6\u503c\u7c7b\u578b,\u6240\u4ee5\u5176\u62f7\u8d1d\u526f\u672c\u5747\u4e3a\u6df1\u62f7\u8d1d,\u66f4\u6539\u526f\u672c\u7684\u503c,\u4e0d\u4f1a\u5f71\u54cd\u539f\u503c func main (){ var a = [ ... ] string { \"beijing\" , \"shanghai\" , \"shenzhen\" } b := a b [ 2 ] = \"liaoning\" fmt . Println ( a , b ) } >> > [ beijing shanghai shenzhen ] [ beijing shanghai liaoning ]","title":"\u6570\u7ec4\u7684\u4fee\u6539"},{"location":"Golang/%E6%95%B0%E7%BB%84/#_12","text":"Go\u4e2d\u652f\u6301\u591a\u7ef4\u6570\u7ec4,\u4e5f\u5c31\u662f\u6570\u7ec4\u7684\u5d4c\u5957 func main () { a := [ 3 ][ 2 ] int { { 11 , 12 }, { 21 , 22 }, { 31 , 32 }, } fmt . Printf ( \"%v %T\" , a , a ) } >> > [[ 11 12 ] [ 21 22 ] [ 31 32 ]] [ 3 ][ 2 ] int \u6ce8\u610f:\u591a\u7ef4\u6570\u7ec4\u53ea\u6709\u7b2c\u4e00\u5c42\u53ef\u4ee5\u4f7f\u7528 ... \u6765\u52a8\u6001\u5b9a\u4e49\u6570\u7ec4\u957f\u5ea6.","title":"\u591a\u7ef4\u6570\u7ec4"},{"location":"Golang/%E6%95%B0%E7%BB%84/#_13","text":"","title":"\u4e8c\u7ef4\u6570\u7ec4"},{"location":"Golang/%E6%95%B0%E7%BB%84/#_14","text":"package main import ( \"fmt\" ) func main () { //\u58f0\u660e/\u521d\u59cb\u5316 var arr [ 4 ][ 5 ] int //\u8d4b\u503c/\u9ed8\u8ba4\u503c\u4e3a\u5168\u90e8\u90fd\u4e3a0 arr [ 1 ][ 2 ] = 1 arr [ 2 ][ 1 ] = 2 arr [ 2 ][ 3 ] = 3 for i := 0 ; i < 4 ; i ++ { for j := 0 ; j < 5 ; j ++ { fmt . Print ( arr [ i ][ j ], \" \" ) } fmt . Println () } } >> > 0 0 0 0 0 0 0 1 0 0 0 2 0 3 0 0 0 0 0 0 \u540c\u4e00\u7ef4\u6570\u7ec4","title":"\u5b9a\u4e49"},{"location":"Golang/%E6%95%B0%E7%BB%84/#_15","text":"\u4ee5arr[2][3]\u4e3a\u4f8b func main (){ var arr [ 2 ][ 3 ] int arr [ 1 ][ 1 ]= 10 fmt . Println ( arr ) fmt . Printf ( \"a=%p\\n\" , & arr [ 0 ]) fmt . Printf ( \"%p\\n\" , & arr [ 0 ][ 0 ]) fmt . Printf ( \"b=%p\\n\" , & arr [ 1 ]) fmt . Printf ( \"%p\" , & arr [ 1 ][ 0 ]) } >> > [[ 0 0 0 ] [ 0 10 0 ]] a = 0xc000084060 0xc000084060 b = 0xc000084078 0xc000084078 \u5176\u4e2db=a+24,\u56e0\u4e3a\u4e00\u4e2a\u5217\u4e2d\u6709\u4e09\u4e2a\u5143\u7d20,\u4e00\u4e2aint8\u4e2a\u5b57\u8282,\u4e09\u516b\u4e8c\u5341\u56db.","title":"\u4e8c\u7ef4\u6570\u7ec4\u7684\u5185\u5b58\u5e03\u5c40"},{"location":"Golang/%E6%95%B0%E7%BB%84/#_16","text":"","title":"\u4e8c\u7ef4\u6570\u7ec4\u7684\u904d\u5386"},{"location":"Golang/%E6%95%B0%E7%BB%84/#1for","text":"func main () { var arr = [ 2 ][ 3 ] int {{ 1 , 2 , 3 },{ 4 , 5 , 6 }} for i := 0 ; i < len ( arr ); i ++ { for j := 0 ; j < len ( arr [ i ]); j ++ { fmt . Printf ( \"%v \" , arr [ i ][ j ]) } fmt . Println () } } >> > 1 2 3 4 5 6","title":"\u65b9\u6cd51:\u53cc\u5c42for\u5faa\u73af"},{"location":"Golang/%E6%95%B0%E7%BB%84/#2forrange","text":"func main () { var arr = [ 2 ][ 3 ] int {{ 1 , 2 , 3 },{ 4 , 5 , 6 }} for i , v1 := range arr { for j , v2 := range v1 { fmt . Printf ( \"arr[%v][%v]=%v \" , i , j , v2 ) } fmt . Println () } } >> > arr [ 0 ][ 0 ]= 1 arr [ 0 ][ 1 ]= 2 arr [ 0 ][ 2 ]= 3 arr [ 1 ][ 0 ]= 4 arr [ 1 ][ 1 ]= 5 arr [ 1 ][ 2 ]= 6","title":"\u65b9\u6cd52:for...range\u5faa\u73af"},{"location":"Golang/%E6%95%B0%E7%BB%84/#_17","text":"func main (){ a := [ 3 ] int { 1 , 2 , 3 } fmt . Printf ( \"%v %T\\n\" , a , a ) fmt . Printf ( \"%p %p %p %p\" , & a , & a [ 0 ], & a [ 1 ], & a [ 2 ]) } >> > [ 1 2 3 ] [ 3 ] int 0xc00000c3e0 0xc00000c3e0 0xc00000c3e8 0xc00000c3f0 \u6570\u7ec4\u540d\u7684\u5730\u5740\u5c31\u662f\u6570\u7ec4\u9996\u5143\u7d20\u5730\u5740\uff0c\u76f8\u90bb\u7684\u6570\u7ec4\u5143\u7d20\u7684\u5730\u5740\u76f8\u5dee\u4e00\u4e2a\u5143\u7d20\u6240\u5360\u7684\u5730\u5740\u957f\u5ea6\uff0c\u5373\u6570\u7ec4\u7684\u5b58\u50a8\u662f\u8fde\u7eed\u7684\u3002 \u5185\u5b58\u7684\u6700\u5c0f\u5355\u5143\u662f\u5b57\u8282\uff0c\u572864\u4f4d\u7cfb\u7edf\u4e2d\u4e00\u4e2aint\u53608\u4e2a\u5b57\u8282\uff0c\u6240\u4ee5var a [10]int\u7684\u6bcf\u4e2a\u5143\u7d20\u7684\u5185\u5b58\u5730\u5740\u76f8\u5dee8","title":"\u6570\u7ec4\u7684\u5185\u5b58\u5e03\u5c40"},{"location":"Golang/%E6%95%B0%E7%BB%84/#_18","text":"\u6570\u7ec4\u7684\u65f6\u591a\u4e2a\u76f8\u540c\u6570\u636e\u7c7b\u578b\u7684\u7ec4\u5408 \u6ca1\u6709\u7a7a\u6570\u7ec4,var arr []int \u8fd9\u662farr\u662f\u4e00\u4e2aslice\u5207\u7247\u7c7b\u578b, \u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u53ef\u4ee5\u662f\u4efb\u4f55\u6570\u636e\u7c7b\u578b,\u5305\u62ec\u503c\u7c7b\u578b\u548c\u5f15\u7528\u7c7b\u578b,\u4f46\u662f\u4e0d\u53ef\u4ee5\u6df7\u7528. \u6570\u7ec4\u521b\u5efa\u540e,\u5982\u679c\u6ca1\u6709\u8d4b\u503c,\u6709\u9ed8\u8ba4\u96f6\u503c \u6570\u636e\u7c7b\u578b \u9ed8\u8ba4\u503c \u6570\u503c\u7c7b\u578b\u6570\u7ec4 0 \u5b57\u7b26\u4e32\u6570\u7ec4 \"\" bool\u6570\u7ec4 false \u6570\u7ec4\u7684\u4f7f\u7528\u6b65\u9aa4 \u58f0\u660e\u6570\u7ec4\u5e76\u5f00\u8f9f\u5185\u5b58 \u7ed9\u6570\u7ec4\u5404\u4e2a\u5143\u7d20\u8d4b\u503c(\u9ed8\u8ba4\u96f6\u503c) \u4f7f\u7528\u6570\u7ec4 \u6570\u7ec4\u7684\u7d22\u5f15\u4ece0\u5f00\u59cb \u6570\u7ec4\u7d22\u5f15\u5982\u679c\u8d85\u51fa\u6307\u5b9a\u8303\u56f4,\u62a5panic,\u4e0d\u652f\u6301\u8d1f\u7d22\u5f15 \u5c0ftips, var a [ 3 ] int b := a [ 4 ] //\u62a5\u9519 \u8d85\u754c index := 4 c := a [ index ] //\u7f16\u8bd1\u5668\u4e0d\u62a5\u9519,\u53ea\u6709\u5728\u8fd0\u884c\u7684\u65f6\u5019\u624d\u4f1a\u62a5\u9519,\u8d85\u754c Go\u7684\u6570\u7ec4\u662f\u503c\u7c7b\u578b,\u9ed8\u8ba4\u662f\u503c\u4f20\u9012,\u76f4\u63a5\u8fdb\u884c\u503c\u62f7\u8d1d,\u6570\u636e\u95f4\u4e0d\u4f1a\u76f8\u4e92\u5f71\u54cd. \u5982\u679c\u5728\u5176\u4ed6\u51fd\u6570\u4e2d,\u53bb\u4fee\u6539\u539f\u6765\u7684\u6570\u7ec4,\u53ef\u4ee5\u4f7f\u7528\u5f15\u7528\u4f20\u9012 [n]*T \u8868\u793a\u6307\u9488\u6570\u7ec4 *[n]T \u8868\u793a\u6570\u7ec4\u6307\u9488 func test ( arr * [ 3 ] int ) { ( * arr )[ 0 ] = 666 } func main () { arr := [ 3 ] int { 11 , 22 , 33 } test ( & arr ) fmt . Println ( arr ) } >> > [ 666 22 33 ] \u51fd\u6570\u63a5\u6536\u53c2\u6570\u4e3a\u6570\u7ec4\u7684\u6307\u9488,\u5185\u90e8\u5c31\u53ef\u4ee5\u901a\u8fc7\u6570\u636e\u7684\u6307\u9488\u627e\u5230\u6570\u7ec4\u771f\u6b63\u7684\u503c,\u6765\u6539\u53d8\u6e90\u6570\u7ec4\u7684\u503c. \u957f\u5ea6\u662f\u6570\u7ec4\u7c7b\u578b\u7684\u4e00\u90e8\u5206,\u4e00\u65e6\u5b9a\u4e49,\u5c31\u4e0d\u53ef\u4fee\u6539. \u4e0d\u540c\u7684\u957f\u5ea6\u7684\u6570\u7ec4\u4e0d\u662f\u540c\u4e00\u79cd\u6570\u636e\u7c7b\u578b \u6570\u7ec4\u7c7b\u578b\u652f\u6301\u6307\u9488\u76f4\u63a5\u64cd\u4f5c,go\u5185\u90e8\u4f18\u5316","title":"\u7ec6\u8282"},{"location":"Golang/%E6%95%B0%E7%BB%84/#_19","text":"\u521b\u5efa\u4e00\u4e2abyte\u7c7b\u578b\u768426\u4e2a\u5143\u7d20\u7684\u6570\u7ec4,\u653e\u7f6eA~Z,\u4f7f\u7528for\u904d\u5386\u5143\u7d20\u5e76\u6253\u5370, func main () { var myChars [ 26 ] byte for i := 0 ; i < 26 ; i ++ { myChars [ i ] = 'A' + byte ( i ) //byte\u662f\u4e3a\u4e86\u8ba9int\u578bi\u5f3a\u8f6c\u4e3abyte\u7c7b\u578bi,\u624d\u53ef\u4ee5\u4e0e'A'\u76f8\u52a0 } for i := 0 ; i < 26 ; i ++ { fmt . Printf ( \"%c \" , myChars [ i ]) } } >> > A B C D E F G H I J K L M N O P Q R S T U V W X Y Z","title":"\u7ec3\u4e60"},{"location":"Golang/%E6%A0%87%E8%AF%86%E7%AC%A6%E5%8F%8A%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/","text":"\u6807\u8bc6\u7b26 \u6807\u8bc6\u7b26\u6982\u5ff5 \u547d\u540d\u89c4\u5219 \u6ce8\u610f\u4e8b\u9879 \u5173\u952e\u5b57 \u6570\u636e\u7c7b\u578b \u57fa\u672c\u6570\u636e\u7c7b\u578b \u6d3e\u751f/\u590d\u6742\u7c7b\u578b: \u57fa\u672c\u6570\u636e\u7c7b\u578b\u7684\u9ed8\u8ba4\u503c \u57fa\u672c\u6570\u636e\u7c7b\u578b\u7684\u8f6c\u6362 \u503c\u7c7b\u578b\u548c\u5f15\u7528\u7c7b\u578b \u5e38\u89c1\u7684\u503c\u7c7b\u578b\u548c\u5f15\u7528\u7c7b\u578b \u503c\u7c7b\u578b \u5f15\u7528\u7c7b\u578b \u4f7f\u7528\u7279\u70b9 \u503c\u7c7b\u578b \u5f15\u7528\u7c7b\u578b \u6570\u636e\u7c7b\u578b\u548c\u5185\u5b58\u7ba1\u7406 \u81ea\u5b9a\u4e49\u6570\u636e\u7c7b\u578b \u57fa\u672c\u8bed\u6cd5 \u7c7b\u578b\u522b\u540d \u7c7b\u578b\u5b9a\u4e49\u548c\u7c7b\u578b\u522b\u540d\u7684\u533a\u522b new\u548cmake new make new\u4e0emake\u7684\u533a\u522b \u6807\u8bc6\u7b26 \u00b6 \u6807\u8bc6\u7b26\u6982\u5ff5 \u00b6 Golang\u5bf9\u5404\u79cd\u53d8\u91cf,\u65b9\u6cd5\u7b49\u547d\u540d\u65f6\u4f7f\u7528\u7684\u5b57\u7b26\u5e8f\u5217\u79f0\u4e4b\u4e3a\u6807\u8bc6\u7b26. \u547d\u540d\u89c4\u5219 \u00b6 Go\u8bed\u8a00\u4e2d\u6807\u8bc6\u7b26\u7531\u5b57\u6bcd,\u6570\u5b57,\u4e0b\u5212\u7ebf\u7ec4\u6210,\u4e14\u6570\u5b57\u4e0d\u80fd\u5f00\u5934. \u4e25\u683c\u533a\u5206\u5927\u5c0f\u5199. _ \u4e0b\u5212\u7ebf\u5728Go\u4e2d\u662f\u4e00\u4e2a\u7279\u6b8a\u7684\u6807\u8bc6\u7b26,\u6210\u4e3a\u7a7a\u6807\u8bc6\u7b26,\u53ef\u4ee5\u4ee3\u8868\u4efb\u4f55\u5176\u4ed6\u7684\u6807\u8bc6\u7b26,\u4f46\u662f\u5b83\u5bf9\u5e94\u7684\u503c\u4f1a\u88ab\u5ffd\u7565.\u6240\u4ee5\u53ea\u80fd\u4f5c\u4e3a\u5360\u4f4d\u7b26\u4f7f\u7528,\u4e0d\u80fd\u4f5c\u4e3a\u6807\u8bc6\u7b26\u4f7f\u7528. \u4e0d\u80fd\u4ee5\u7cfb\u7edf\u4fdd\u7559\u5173\u952e\u5b57(\u4e00\u517125\u4e2a)\u4f5c\u4e3a\u8868\u793a\u7b26,\u6bd4\u5982break,if \u7b49 \u6587\u4ef6\u540d\u63a8\u8350\u4f7f\u7528\u4e0b\u5212\u7ebf\u547d\u540d\u65b9\u5f0f \u6ce8\u610f\u4e8b\u9879 \u00b6 \u5305\u540d:\u4fdd\u6301package\u7684\u540d\u5b57\u5c3d\u91cf\u548c\u76ee\u5f55\u6587\u4ef6\u5939\u4fdd\u6301\u4e00\u81f4,\u5c3d\u91cf\u91c7\u7528\u6709\u610f\u4e49\u7684\u5305\u540d,\u7b80\u77ed,\u4e0d\u8981\u548c\u6807\u51c6\u5e93\u51b2\u7a81. \u53d8\u91cf\u540d,\u51fd\u6570\u540d,\u5e38\u91cf\u540d:\u91c7\u7528\u9a7c\u5cf0\u4f53 \u5982\u679c\u53d8\u91cf\u540d,\u51fd\u6570\u540d,\u5e38\u91cf\u540d\u9996\u5b57\u6bcd\u5927\u5199,\u5219\u53ef\u4ee5\u88ab\u5176\u4ed6\u7684\u5305\u8bbf\u95ee;\u5982\u679c\u9996\u5b57\u6bcd\u5c0f\u5199,\u5219\u53ea\u80fd\u5728\u672c\u5305\u4e2d\u4f7f\u7528(\u6ce8\u610f:\u53ef\u4ee5\u7b80\u5355\u7406\u89e3\u6210,\u9996\u5b57\u6bcd\u5927\u5199\u65f6\u516c\u5f00\u7684,\u9996\u5b57\u6bcd\u5c0f\u5199\u65f6\u79c1\u6709\u7684,),golang\u4e2d\u6ca1\u6709public,private\u5173\u952e\u5b57. \u5173\u952e\u5b57 \u00b6 \u5173\u952e\u5b57\u59cb\u6307\u7f16\u7a0b\u8bed\u8a00\u4e2d\u9884\u5148\u5b9a\u4e49\u597d\u7684\u5177\u6709\u7279\u6b8a\u610f\u4e49\u7684\u6807\u8bc6\u7b26,\u5173\u952e\u5b57\u548c\u4fdd\u7559\u5b57\u90fd\u4e0d\u5efa\u8bae\u7528\u4f5c\u53d8\u91cf\u540d. Go\u670925\u4e2a\u4fdd\u7559\u5173\u952e\u5b57\u548c37\u4e2a\u9884\u5b9a\u4e49\u6807\u8bc6\u7b26,\u5176\u4e2d\u5305\u62ec\u57fa\u7840\u6570\u636e\u7c7b\u578b\u548c\u7cfb\u7edf\u5185\u5d4c\u51fd\u6570. 25\u4e2a\u4fdd\u7559\u5173\u952e\u5b57,\u4e0d\u80fd\u7528\u4e8e\u81ea\u5b9a\u4e49\u53d8\u91cf\u540d,\u53ea\u80fd\u5728\u7279\u5b9a\u8bed\u6cd5\u4e2d\u4f7f\u7528. break default func interface select case defer go map struct chan else goto package switch const fallthrough if range type continue for import return var \u4ee5\u53ca37\u4e2a\u4fdd\u7559\u5173\u952e\u5b57,\u4e3b\u8981\u5bf9\u5e94\u5185\u5efa\u7684\u5e38\u91cf,\u7c7b\u578b\u548c\u51fd\u6570 Constants : true false iota nil Types : int int8 int16 int32 int64 uint uint8 uint16 uint32 uint64 uintptr float32 float64 complex128 complex64 bool byte rune string error Functions : make len cap new append copy close delete complex real imag panic recover \u6570\u636e\u7c7b\u578b \u00b6 \u57fa\u672c\u6570\u636e\u7c7b\u578b \u00b6 \u6570\u5b57\u7c7b\u578b:\u6574\u6570\u7c7b\u578b(int,int8,int16,int32,int64,uint,uint8,uint16,uint32,uint64,byte) ,\u6d6e\u70b9\u578b(float32,float64,) int8\u4e00\u4e2a\u5b57\u82828\u4f4d,int16\u4e24\u4e2a\u5b57\u8282,\u4e00\u6b21\u7c7b\u63a8 uint\u8868\u793a\u65e0\u7b26\u53f7 byte\u4e00\u4e2a\u5b57\u8282 float32\u76f8\u5f53\u4e8e\u5355\u7cbe\u5ea6,float64\u76f8\u5f53\u4e8e\u53cc\u7cbe\u5ea6 \u5b57\u7b26\u4e32\u7c7b\u578b:string(\u5b98\u65b9\u5f52\u6863) \u5e03\u5c14\u578b:true \u6216 false \u5b57\u7b26\u578b:\u6ca1\u6709\u4e13\u95e8\u7684\u5b57\u7b26\u578b,\u4f7f\u7528byte\u6765\u4fdd\u5b58\u5355\u4e2aascii\u4e2d\u7684\u5b57\u7b26(\u4e00\u4e2a\u6c49\u5b57\u4e09\u4e2a\u5b57\u8282,byte\u5b58\u4e0d\u8fdb\u53bb) rune : \u5c31\u662fint32\u7684\u522b\u540d \u8868\u793a\u4e00\u4e2aUnicode\u7801\u70b9,\u53ef\u4ee5\u5b58\u4e2d\u6587 complex64 complex128 \u590d\u6570 \u6d3e\u751f/\u590d\u6742\u7c7b\u578b: \u00b6 \u6307\u9488\u7c7b\u578b(pointer) \u6570\u7ec4\u7c7b\u578b \u7ed3\u6784\u4f53\u7c7b\u578b(struct) \u6709\u70b9\u50cfclass \u7ba1\u9053\u7c7b\u578b(channel) \u591a\u5e76\u53d1\u65f6\u7528 \u51fd\u6570\u7c7b\u578b \u5207\u7247\u7c7b\u578b(slice) \u52a8\u6001\u6570\u7ec4 \u63a5\u53e3\u7c7b\u578b(interface) map\u7c7b\u578b \u7c7b\u4f3c\u96c6\u5408 \u57fa\u672c\u6570\u636e\u7c7b\u578b\u7684\u9ed8\u8ba4\u503c \u00b6 go\u4e2d,\u6570\u636e\u7c7b\u578b\u90fd\u6709\u4e00\u4e2a\u9ed8\u8ba4\u503c,\u5f53\u58f0\u660e\u53d8\u91cf\u800c\u672a\u521d\u59cb\u5316(\u8d4b\u503c)\u65f6,\u5c31\u4f1a\u4f7f\u7528\u9ed8\u8ba4\u503c.\u9ed8\u8ba4\u503c\u4e5f\u53eb\u96f6\u503c. \u6ca1\u6709\u5f00\u8f9f\u8fc7\u5185\u5b58\u7a7a\u95f4\u7684\u6307\u9488\u7c7b\u578b.\u9ed8\u8ba4\u503c\u5747\u4e3a nil . \u6570\u636e\u7c7b\u578b \u9ed8\u8ba4\u503c \u6574\u578b 0 \u6d6e\u70b9\u578b 0.000.. \u5b57\u7b26\u4e32 \"\" \u5e03\u5c14\u7c7b\u578b false nil:\u6307\u9488,map,slice, \u7ed3\u6784\u4f53\u662f\u4e00\u4e2a\u503c\u7c7b\u578b,\u5176\u96f6\u503c\u662f\u5c5e\u6027\u7684\u96f6\u503c. \u57fa\u672c\u6570\u636e\u7c7b\u578b\u7684\u8f6c\u6362 \u00b6 go\u5728\u4e0d\u540c\u7c7b\u578b\u7684\u53d8\u91cf\u4e4b\u95f4\u8d4b\u503c\u65f6\u9700\u8981\u663e\u793a\u8f6c\u8f6c\u6362,\u4e5f\u5c31\u662f\u4e0d\u80fd\u81ea\u52a8\u8f6c\u6362.(\u9ad8\u4f4e\u7cbe\u5ea6\u4e4b\u95f4\u7684\u8f6c\u6362\u4e5f\u4e0d\u53ef\u4ee5) //\u4e0b\u9762\u4f1a\u62a5\u9519 var i int32 = 100 var j float32 = i //\u8fd9\u6837\u5c31\u4e0d\u4f1a\u62a5\u9519 var j float32 = float32 ( i ) \u6ce8\u610f: Go\u4e2d,\u6570\u636e\u7c7b\u578b\u7684\u8f6c\u6362\u53ef\u4ee5\u4ece\u8868\u793a\u8303\u56f4\u5c0f\u7684\u2192\u8868\u793a\u8303\u56f4\u5927,\u4e5f\u53ef\u4ee5\u4ece\u8303\u56f4\u5927\u2192\u8303\u56f4\u5c0f \u88ab\u8f6c\u6362\u7684\u65f6==\u53d8\u91cf\u5b58\u50a8\u7684\u6570\u636e==(\u5373\u503c),\u53d8\u91cf\u672c\u8eab\u7684\u6570\u636e\u7c7b\u578b\u5e76\u6ca1\u6709\u53d8\u5316. \u8f6c\u6362\u4e2d,\u5c06int64\u8f6c\u6362\u6210int8,\u7f16\u8bd1\u65f6\u4e0d\u4f1a\u62a5\u9519,\u53ea\u662f\u8f6c\u6362\u7684\u7ed3\u679c\u65f6\u6309\u6ea2\u51fa\u5904\u7406,\u4e0e\u671f\u671b\u503c\u4e0d\u540c.\u6240\u4ee5\u5728\u8f6c\u6362\u65f6,\u4e00\u5b9a\u8981\u6ce8\u610f\u8303\u56f4. //\u9519\u98981 func main (){ var n1 int32 = 12 var n2 int64 var n3 int8 n2 = n1 + 10 //\u62a5\u9519:n1\u65f6int32,10\u4e5f\u4f1a\u81ea\u52a8\u7f16\u7a0bint32,\u548c\u4e5f\u4e3aint32,\u4f46\u662fn2\u662fint64,\u6240\u4ee5\u62a5\u9519 n3 = n1 + 20 //\u540c\u7406 } //\u6539\u6b63 n2 = int64 ( n1 ) + 10 n3 = int64 ( n1 ) + 20 //\u9519\u98982 func main (){ var n1 int32 = 12 var n3 int8 var n4 int8 n4 = int8 ( n1 ) + 127 //\u7f16\u8bd1\u6ca1\u95ee\u9898,\u4f46\u662f\u6700\u7ec8\u7ed3\u679c\u4f1a\u6ea2\u51fa n3 = int8 ( n1 ) + 128 // 128\u8d85\u51faint8,\u7f16\u8bd1\u4e0d\u8fc7 } \u503c\u7c7b\u578b\u548c\u5f15\u7528\u7c7b\u578b \u00b6 \u5e38\u89c1\u7684\u503c\u7c7b\u578b\u548c\u5f15\u7528\u7c7b\u578b \u00b6 \u503c\u7c7b\u578b \u00b6 \u57fa\u672c\u6570\u636e\u7c7b\u578bint\u7cfb\u5217,float\u7cfb\u5217,bool,string,\u6570\u7ec4\u548c\u7ed3\u6784\u4f53struct \u5f15\u7528\u7c7b\u578b \u00b6 \u6307\u9488,\u5207\u7247slice,map,\u7ba1\u9053chan,interface\u7b49\u90fd\u662f\u5f15\u7528\u7c7b\u578b \u4f7f\u7528\u7279\u70b9 \u00b6 \u503c\u7c7b\u578b \u00b6 \u53d8\u91cf\u76f4\u63a5\u5b58\u50a8\u503c,\u5185\u5b58==\u901a\u5e38==\u5728\u6808\u4e2d\u5206\u914d \u5f15\u7528\u7c7b\u578b \u00b6 \u53d8\u91cf\u5b58\u50a8\u7684\u662f\u4e00\u4e2a\u5730\u5740,\u8fd9\u4e2a\u5730\u5740\u5bf9\u5e94\u7684\u7a7a\u95f4\u624d\u662f\u771f\u6b63\u5b58\u50a8\u6570\u636e\u503c,\u5185\u5b58==\u901a\u5e38==\u5728\u5806\u4e0a\u5206\u914d,\u5f53\u6ca1\u6709\u4efb\u4f55\u53d8\u91cf\u5f15\u7528\u8fd9\u4e2a\u5730\u5740\u65f6,\u8be5\u5730\u5740\u5bf9\u5e94\u7684\u6570\u636e\u7a7a\u95f4\u5c31\u6210\u4e3a\u4e00\u4e2a\u5783\u573e,\u7531GC\u6765\u56de\u6536. golang\u4e2d\u5b58\u5728\u9003\u9038\u5206\u6790,\u6240\u4ee5\u4e0a\u8ff0\u4e3a\u901a\u5e38\u60c5\u51b5,\u4e5f\u4f1a\u51fa\u73b0\u503c\u7c7b\u578b\u8dd1\u5230\u5806\u4e2d\u6216\u8005\u5f15\u7528\u7c7b\u578b\u8dd1\u5230\u6808\u4e2d\u7684\u60c5\u51b5. \u6570\u636e\u7c7b\u578b\u548c\u5185\u5b58\u7ba1\u7406 \u00b6 go\u4e2d\u5b58\u5728\u9003\u9038\u5206\u6790,\u6240\u4ee5\u6ca1\u6709\u7edd\u5bf9\u7684\u6570\u636e\u5b58\u653e\u5728\u5806\u533a\u8fd8\u662f\u6808\u533a\u7684\u8bf4\u6cd5. \u5806\u533a\u548c\u6808\u533a\u7684\u5206\u914d,\u4e0d\u662f\u7269\u7406\u4e0a\u7684\u5206\u914d,\u800c\u662f\u903b\u8f91\u4e0a\u7684\u5206\u914d go\u5c06\u5185\u5b58\u5728\u903b\u8f91\u4e0a\u5206\u4e3a\u4e09\u5757\u533a\u57df(\u6808\u533a,\u5806\u533a,\u4ee3\u7801\u533a) \u57fa\u672c\u6570\u636e\u7c7b\u578b\u4e00\u822c\u5206\u914d\u5230\u6808\u533a \u5f15\u7528\u6570\u636e\u7c7b\u578b\u4e00\u822c\u5206\u914d\u5230\u5806\u533a(map,\u5207\u7247) \u4ee3\u7801\u672c\u8eab\u5b58\u653e\u5728\u4ee3\u7801\u533a \u81ea\u5b9a\u4e49\u6570\u636e\u7c7b\u578b \u00b6 \u4e3a\u4e86\u7b80\u5316\u6570\u636e\u7c7b\u578b\u5b9a\u4e49,Go\u652f\u6301\u81ea\u5b9a\u4e49\u6570\u636e\u7c7b\u578b \u57fa\u672c\u8bed\u6cd5 \u00b6 type \u81ea\u5b9a\u4e49\u6570\u636e\u636e\u7c7b\u578b\u540d \u6570\u636e\u7c7b\u578b //\u53ef\u4ee5\u7406\u89e3\u4e3a \u4e00\u4e2a\u522b\u540d type myint int //\u8fd9\u65f6myint \u5c31\u7b49\u4ef7\u4e8eint\u6765\u4f7f\u7528\u4e86,\u76f8\u5f53\u4e8e\u90fd\u662fint\u7c7b\u578b,\u4f46\u662fgo\u8ba4\u4e3a\u8fd9\u662f\u4e24\u79cd\u6570\u636e\u7c7b\u578b type mySum func ( int , int ) int //\u8fd9\u65f6mySum\u5c31\u7b49\u4ef7\u4e00\u4e2a\u51fd\u6570\u7c7b\u578bfunc(int ,int) int \u6ce8\u610f:\u8fd9\u65f6\u7684myint\u548cint\u5728go\u4e2d\u8fd8\u662f\u4e24\u4e2a\u6570\u636e\u7c7b\u578b, \u901a\u8fc7type\u5173\u952e\u5b57\u7684\u5b9a\u4e49,MyInt\u5c31\u662f\u4e00\u79cd\u65b0\u7684\u7c7b\u578b,\u5177\u6709int\u7684\u7279\u6027. //\u8bc1\u660e type myInt int var num1 myInt var num2 int num1 = 40 num2 = num1 //\u8fd9\u91cc\u4f1a\u62a5\u9519\u54e6,\u56e0\u4e3ago\u8ba4\u4e3amyInt\u548cint\u4e0d\u662f\u540c\u4e00\u79cd\u6570\u636e\u7c7b\u578b,\u4e0d\u80fd\u8d4b\u503c fmt . Println ( \"num1 = \" , num1 ) //\u5982\u4f55\u6539:\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362 num2 = int ( num1 ) \u7c7b\u578b\u522b\u540d \u00b6 Go1.9\u7248\u672c\u65b0\u589e\u7684\u529f\u80fd. \u7c7b\u578b\u522b\u540d\u7684\u89c4\u5b9a:TypeAlias\u53ea\u662fType\u7684\u522b\u540d,\u672c\u8d28\u4e0a\u662f\u540c\u4e00\u4e2a\u7c7b\u578b. type TypeAlias = Type \u6bd4\u5982\u4e4b\u524d\u7684rune\u548cbyte\u5c31\u662f\u7c7b\u578b\u522b\u540d type byte = uint8 type rune = int32 \u7c7b\u578b\u5b9a\u4e49\u548c\u7c7b\u578b\u522b\u540d\u7684\u533a\u522b \u00b6 \u8868\u9762\u4e0a\u53ea\u662f\u5dee\u4e86\u4e00\u4e2a\u7b49\u53f7 = type NewInt int type MyInt = int func main () { var a NewInt var b MyInt fmt . Printf ( \"type of a: %T\\n\" , a ) fmt . Printf ( \"type of b: %T\\n\" , b ) } >> > type of a : main . NewInt type of b : int \u901a\u8fc7\u7ed3\u679c\u53ef\u4ee5\u770b\u5230,\u7c7b\u578b\u5b9a\u4e49\u662f\u751f\u6210\u4e86main\u5305\u4e0b\u7684\u4e00\u4e2a\u65b0\u7684\u7c7b\u578b,\u800c\u7c7b\u578b\u522b\u540d\u53ea\u662f\u5728\u4ee3\u7801\u4e2d\u5b58\u5728,\u7f16\u8bd1\u5b8c\u6210\u65f6\u4e0d\u4f1a\u5b58\u5728MyInt\u7c7b\u578b. new\u548cmake \u00b6 go\u4e2d,\u5bf9\u4e8e\u5f15\u7528\u7c7b\u578b,\u5728\u4f7f\u7528\u7684\u65f6\u5019\u4e0d\u4ec5\u8981\u58f0\u660e,\u8fd8\u8981\u4e3a\u5176\u5206\u914d\u5185\u5b58\u7a7a\u95f4,\u5426\u5219\u65e0\u6cd5\u4f7f\u7528. \u800c\u503c\u7c7b\u578b\u7684\u58f0\u660e\u4e0d\u9700\u8981\u5206\u914d\u5185\u5b58\u7a7a\u95f4,\u56e0\u4e3a\u5728\u58f0\u660e\u7684\u65f6\u5019\u5df2\u7ecf\u9ed8\u8ba4\u5206\u914d\u597d\u4e86\u5185\u5b58\u7a7a\u95f4. new \u00b6 new\u662f\u4e00\u4e2a\u5185\u7f6e\u51fd\u6570. func new ( Type ) * Type Type\u8868\u793a\u7c7b\u578b\uff0cnew\u51fd\u6570\u53ea\u63a5\u53d7\u4e00\u4e2a\u53c2\u6570\uff0c\u8fd9\u4e2a\u53c2\u6570\u662f\u4e00\u4e2a\u7c7b\u578b *Type\u8868\u793a\u7c7b\u578b\u6307\u9488\uff0cnew\u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u6307\u5411\u8be5\u7c7b\u578b\u5185\u5b58\u5730\u5740\u7684\u6307\u9488\u3002 \u4f7f\u7528new\u51fd\u6570\u5f97\u5230\u7684\u662f\u4e00\u4e2a\u7c7b\u578b\u7684\u6307\u9488\uff0c\u5e76\u4e14\u8be5\u6307\u9488\u5bf9\u5e94\u7684\u503c\u4e3a\u8be5\u7c7b\u578b\u7684\u96f6\u503c\u3002 func main () { a := new ( int ) b := new ( bool ) fmt . Printf ( \"%T\\n\" , a ) // *int fmt . Printf ( \"%T\\n\" , b ) // *bool fmt . Println ( * a ) // 0 fmt . Println ( * b ) // false } make \u00b6 make\u4e5f\u662f\u7528\u4e8e\u5185\u5b58\u5206\u914d\u7684\uff0c\u533a\u522b\u4e8enew\uff0c\u5b83\u53ea\u7528\u4e8eslice\u3001map\u4ee5\u53cachan\u7684\u5185\u5b58\u521b\u5efa\uff0c\u800c\u4e14\u5b83\u8fd4\u56de\u7684\u7c7b\u578b\u5c31\u662f\u8fd9\u4e09\u4e2a\u7c7b\u578b\u672c\u8eab\uff0c\u800c\u4e0d\u662f\u4ed6\u4eec\u7684\u6307\u9488\u7c7b\u578b\uff0c\u56e0\u4e3a\u8fd9\u4e09\u79cd\u7c7b\u578b\u5c31\u662f\u5f15\u7528\u7c7b\u578b\uff0c\u6240\u4ee5\u5c31\u6ca1\u6709\u5fc5\u8981\u8fd4\u56de\u4ed6\u4eec\u7684\u6307\u9488\u4e86\u3002 func make ( t Type , size ... IntegerType ) Type \u5728\u4f7f\u7528slice\u3001map\u4ee5\u53cachannel\u7684\u65f6\u5019\uff0c\u90fd\u9700\u8981\u4f7f\u7528make\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u7136\u540e\u624d\u53ef\u4ee5\u5bf9\u5b83\u4eec\u8fdb\u884c\u64cd\u4f5c\u3002 new\u4e0emake\u7684\u533a\u522b \u00b6 \u4e8c\u8005\u90fd\u662f\u7528\u6765\u505a\u5185\u5b58\u5206\u914d\u7684\u3002 make\u53ea\u7528\u4e8eslice\u3001map\u4ee5\u53cachannel\u7684\u521d\u59cb\u5316\uff0c\u8fd4\u56de\u7684\u8fd8\u662f\u8fd9\u4e09\u4e2a\u5f15\u7528\u7c7b\u578b\u672c\u8eab\uff1b \u800cnew\u7528\u4e8e\u7c7b\u578b\u7684\u5185\u5b58\u5206\u914d\uff0c\u5e76\u4e14\u5185\u5b58\u5bf9\u5e94\u7684\u503c\u4e3a\u7c7b\u578b\u96f6\u503c\uff0c\u8fd4\u56de\u7684\u662f\u6307\u5411\u7c7b\u578b\u7684\u6307\u9488\u3002","title":"\u6807\u8bc6\u7b26\u53ca\u6570\u636e\u7c7b\u578b"},{"location":"Golang/%E6%A0%87%E8%AF%86%E7%AC%A6%E5%8F%8A%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_1","text":"","title":"\u6807\u8bc6\u7b26"},{"location":"Golang/%E6%A0%87%E8%AF%86%E7%AC%A6%E5%8F%8A%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_2","text":"Golang\u5bf9\u5404\u79cd\u53d8\u91cf,\u65b9\u6cd5\u7b49\u547d\u540d\u65f6\u4f7f\u7528\u7684\u5b57\u7b26\u5e8f\u5217\u79f0\u4e4b\u4e3a\u6807\u8bc6\u7b26.","title":"\u6807\u8bc6\u7b26\u6982\u5ff5"},{"location":"Golang/%E6%A0%87%E8%AF%86%E7%AC%A6%E5%8F%8A%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_3","text":"Go\u8bed\u8a00\u4e2d\u6807\u8bc6\u7b26\u7531\u5b57\u6bcd,\u6570\u5b57,\u4e0b\u5212\u7ebf\u7ec4\u6210,\u4e14\u6570\u5b57\u4e0d\u80fd\u5f00\u5934. \u4e25\u683c\u533a\u5206\u5927\u5c0f\u5199. _ \u4e0b\u5212\u7ebf\u5728Go\u4e2d\u662f\u4e00\u4e2a\u7279\u6b8a\u7684\u6807\u8bc6\u7b26,\u6210\u4e3a\u7a7a\u6807\u8bc6\u7b26,\u53ef\u4ee5\u4ee3\u8868\u4efb\u4f55\u5176\u4ed6\u7684\u6807\u8bc6\u7b26,\u4f46\u662f\u5b83\u5bf9\u5e94\u7684\u503c\u4f1a\u88ab\u5ffd\u7565.\u6240\u4ee5\u53ea\u80fd\u4f5c\u4e3a\u5360\u4f4d\u7b26\u4f7f\u7528,\u4e0d\u80fd\u4f5c\u4e3a\u6807\u8bc6\u7b26\u4f7f\u7528. \u4e0d\u80fd\u4ee5\u7cfb\u7edf\u4fdd\u7559\u5173\u952e\u5b57(\u4e00\u517125\u4e2a)\u4f5c\u4e3a\u8868\u793a\u7b26,\u6bd4\u5982break,if \u7b49 \u6587\u4ef6\u540d\u63a8\u8350\u4f7f\u7528\u4e0b\u5212\u7ebf\u547d\u540d\u65b9\u5f0f","title":"\u547d\u540d\u89c4\u5219"},{"location":"Golang/%E6%A0%87%E8%AF%86%E7%AC%A6%E5%8F%8A%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_4","text":"\u5305\u540d:\u4fdd\u6301package\u7684\u540d\u5b57\u5c3d\u91cf\u548c\u76ee\u5f55\u6587\u4ef6\u5939\u4fdd\u6301\u4e00\u81f4,\u5c3d\u91cf\u91c7\u7528\u6709\u610f\u4e49\u7684\u5305\u540d,\u7b80\u77ed,\u4e0d\u8981\u548c\u6807\u51c6\u5e93\u51b2\u7a81. \u53d8\u91cf\u540d,\u51fd\u6570\u540d,\u5e38\u91cf\u540d:\u91c7\u7528\u9a7c\u5cf0\u4f53 \u5982\u679c\u53d8\u91cf\u540d,\u51fd\u6570\u540d,\u5e38\u91cf\u540d\u9996\u5b57\u6bcd\u5927\u5199,\u5219\u53ef\u4ee5\u88ab\u5176\u4ed6\u7684\u5305\u8bbf\u95ee;\u5982\u679c\u9996\u5b57\u6bcd\u5c0f\u5199,\u5219\u53ea\u80fd\u5728\u672c\u5305\u4e2d\u4f7f\u7528(\u6ce8\u610f:\u53ef\u4ee5\u7b80\u5355\u7406\u89e3\u6210,\u9996\u5b57\u6bcd\u5927\u5199\u65f6\u516c\u5f00\u7684,\u9996\u5b57\u6bcd\u5c0f\u5199\u65f6\u79c1\u6709\u7684,),golang\u4e2d\u6ca1\u6709public,private\u5173\u952e\u5b57.","title":"\u6ce8\u610f\u4e8b\u9879"},{"location":"Golang/%E6%A0%87%E8%AF%86%E7%AC%A6%E5%8F%8A%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_5","text":"\u5173\u952e\u5b57\u59cb\u6307\u7f16\u7a0b\u8bed\u8a00\u4e2d\u9884\u5148\u5b9a\u4e49\u597d\u7684\u5177\u6709\u7279\u6b8a\u610f\u4e49\u7684\u6807\u8bc6\u7b26,\u5173\u952e\u5b57\u548c\u4fdd\u7559\u5b57\u90fd\u4e0d\u5efa\u8bae\u7528\u4f5c\u53d8\u91cf\u540d. Go\u670925\u4e2a\u4fdd\u7559\u5173\u952e\u5b57\u548c37\u4e2a\u9884\u5b9a\u4e49\u6807\u8bc6\u7b26,\u5176\u4e2d\u5305\u62ec\u57fa\u7840\u6570\u636e\u7c7b\u578b\u548c\u7cfb\u7edf\u5185\u5d4c\u51fd\u6570. 25\u4e2a\u4fdd\u7559\u5173\u952e\u5b57,\u4e0d\u80fd\u7528\u4e8e\u81ea\u5b9a\u4e49\u53d8\u91cf\u540d,\u53ea\u80fd\u5728\u7279\u5b9a\u8bed\u6cd5\u4e2d\u4f7f\u7528. break default func interface select case defer go map struct chan else goto package switch const fallthrough if range type continue for import return var \u4ee5\u53ca37\u4e2a\u4fdd\u7559\u5173\u952e\u5b57,\u4e3b\u8981\u5bf9\u5e94\u5185\u5efa\u7684\u5e38\u91cf,\u7c7b\u578b\u548c\u51fd\u6570 Constants : true false iota nil Types : int int8 int16 int32 int64 uint uint8 uint16 uint32 uint64 uintptr float32 float64 complex128 complex64 bool byte rune string error Functions : make len cap new append copy close delete complex real imag panic recover","title":"\u5173\u952e\u5b57"},{"location":"Golang/%E6%A0%87%E8%AF%86%E7%AC%A6%E5%8F%8A%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_6","text":"","title":"\u6570\u636e\u7c7b\u578b"},{"location":"Golang/%E6%A0%87%E8%AF%86%E7%AC%A6%E5%8F%8A%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_7","text":"\u6570\u5b57\u7c7b\u578b:\u6574\u6570\u7c7b\u578b(int,int8,int16,int32,int64,uint,uint8,uint16,uint32,uint64,byte) ,\u6d6e\u70b9\u578b(float32,float64,) int8\u4e00\u4e2a\u5b57\u82828\u4f4d,int16\u4e24\u4e2a\u5b57\u8282,\u4e00\u6b21\u7c7b\u63a8 uint\u8868\u793a\u65e0\u7b26\u53f7 byte\u4e00\u4e2a\u5b57\u8282 float32\u76f8\u5f53\u4e8e\u5355\u7cbe\u5ea6,float64\u76f8\u5f53\u4e8e\u53cc\u7cbe\u5ea6 \u5b57\u7b26\u4e32\u7c7b\u578b:string(\u5b98\u65b9\u5f52\u6863) \u5e03\u5c14\u578b:true \u6216 false \u5b57\u7b26\u578b:\u6ca1\u6709\u4e13\u95e8\u7684\u5b57\u7b26\u578b,\u4f7f\u7528byte\u6765\u4fdd\u5b58\u5355\u4e2aascii\u4e2d\u7684\u5b57\u7b26(\u4e00\u4e2a\u6c49\u5b57\u4e09\u4e2a\u5b57\u8282,byte\u5b58\u4e0d\u8fdb\u53bb) rune : \u5c31\u662fint32\u7684\u522b\u540d \u8868\u793a\u4e00\u4e2aUnicode\u7801\u70b9,\u53ef\u4ee5\u5b58\u4e2d\u6587 complex64 complex128 \u590d\u6570","title":"\u57fa\u672c\u6570\u636e\u7c7b\u578b"},{"location":"Golang/%E6%A0%87%E8%AF%86%E7%AC%A6%E5%8F%8A%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_8","text":"\u6307\u9488\u7c7b\u578b(pointer) \u6570\u7ec4\u7c7b\u578b \u7ed3\u6784\u4f53\u7c7b\u578b(struct) \u6709\u70b9\u50cfclass \u7ba1\u9053\u7c7b\u578b(channel) \u591a\u5e76\u53d1\u65f6\u7528 \u51fd\u6570\u7c7b\u578b \u5207\u7247\u7c7b\u578b(slice) \u52a8\u6001\u6570\u7ec4 \u63a5\u53e3\u7c7b\u578b(interface) map\u7c7b\u578b \u7c7b\u4f3c\u96c6\u5408","title":"\u6d3e\u751f/\u590d\u6742\u7c7b\u578b:"},{"location":"Golang/%E6%A0%87%E8%AF%86%E7%AC%A6%E5%8F%8A%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_9","text":"go\u4e2d,\u6570\u636e\u7c7b\u578b\u90fd\u6709\u4e00\u4e2a\u9ed8\u8ba4\u503c,\u5f53\u58f0\u660e\u53d8\u91cf\u800c\u672a\u521d\u59cb\u5316(\u8d4b\u503c)\u65f6,\u5c31\u4f1a\u4f7f\u7528\u9ed8\u8ba4\u503c.\u9ed8\u8ba4\u503c\u4e5f\u53eb\u96f6\u503c. \u6ca1\u6709\u5f00\u8f9f\u8fc7\u5185\u5b58\u7a7a\u95f4\u7684\u6307\u9488\u7c7b\u578b.\u9ed8\u8ba4\u503c\u5747\u4e3a nil . \u6570\u636e\u7c7b\u578b \u9ed8\u8ba4\u503c \u6574\u578b 0 \u6d6e\u70b9\u578b 0.000.. \u5b57\u7b26\u4e32 \"\" \u5e03\u5c14\u7c7b\u578b false nil:\u6307\u9488,map,slice, \u7ed3\u6784\u4f53\u662f\u4e00\u4e2a\u503c\u7c7b\u578b,\u5176\u96f6\u503c\u662f\u5c5e\u6027\u7684\u96f6\u503c.","title":"\u57fa\u672c\u6570\u636e\u7c7b\u578b\u7684\u9ed8\u8ba4\u503c"},{"location":"Golang/%E6%A0%87%E8%AF%86%E7%AC%A6%E5%8F%8A%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_10","text":"go\u5728\u4e0d\u540c\u7c7b\u578b\u7684\u53d8\u91cf\u4e4b\u95f4\u8d4b\u503c\u65f6\u9700\u8981\u663e\u793a\u8f6c\u8f6c\u6362,\u4e5f\u5c31\u662f\u4e0d\u80fd\u81ea\u52a8\u8f6c\u6362.(\u9ad8\u4f4e\u7cbe\u5ea6\u4e4b\u95f4\u7684\u8f6c\u6362\u4e5f\u4e0d\u53ef\u4ee5) //\u4e0b\u9762\u4f1a\u62a5\u9519 var i int32 = 100 var j float32 = i //\u8fd9\u6837\u5c31\u4e0d\u4f1a\u62a5\u9519 var j float32 = float32 ( i ) \u6ce8\u610f: Go\u4e2d,\u6570\u636e\u7c7b\u578b\u7684\u8f6c\u6362\u53ef\u4ee5\u4ece\u8868\u793a\u8303\u56f4\u5c0f\u7684\u2192\u8868\u793a\u8303\u56f4\u5927,\u4e5f\u53ef\u4ee5\u4ece\u8303\u56f4\u5927\u2192\u8303\u56f4\u5c0f \u88ab\u8f6c\u6362\u7684\u65f6==\u53d8\u91cf\u5b58\u50a8\u7684\u6570\u636e==(\u5373\u503c),\u53d8\u91cf\u672c\u8eab\u7684\u6570\u636e\u7c7b\u578b\u5e76\u6ca1\u6709\u53d8\u5316. \u8f6c\u6362\u4e2d,\u5c06int64\u8f6c\u6362\u6210int8,\u7f16\u8bd1\u65f6\u4e0d\u4f1a\u62a5\u9519,\u53ea\u662f\u8f6c\u6362\u7684\u7ed3\u679c\u65f6\u6309\u6ea2\u51fa\u5904\u7406,\u4e0e\u671f\u671b\u503c\u4e0d\u540c.\u6240\u4ee5\u5728\u8f6c\u6362\u65f6,\u4e00\u5b9a\u8981\u6ce8\u610f\u8303\u56f4. //\u9519\u98981 func main (){ var n1 int32 = 12 var n2 int64 var n3 int8 n2 = n1 + 10 //\u62a5\u9519:n1\u65f6int32,10\u4e5f\u4f1a\u81ea\u52a8\u7f16\u7a0bint32,\u548c\u4e5f\u4e3aint32,\u4f46\u662fn2\u662fint64,\u6240\u4ee5\u62a5\u9519 n3 = n1 + 20 //\u540c\u7406 } //\u6539\u6b63 n2 = int64 ( n1 ) + 10 n3 = int64 ( n1 ) + 20 //\u9519\u98982 func main (){ var n1 int32 = 12 var n3 int8 var n4 int8 n4 = int8 ( n1 ) + 127 //\u7f16\u8bd1\u6ca1\u95ee\u9898,\u4f46\u662f\u6700\u7ec8\u7ed3\u679c\u4f1a\u6ea2\u51fa n3 = int8 ( n1 ) + 128 // 128\u8d85\u51faint8,\u7f16\u8bd1\u4e0d\u8fc7 }","title":"\u57fa\u672c\u6570\u636e\u7c7b\u578b\u7684\u8f6c\u6362"},{"location":"Golang/%E6%A0%87%E8%AF%86%E7%AC%A6%E5%8F%8A%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_11","text":"","title":"\u503c\u7c7b\u578b\u548c\u5f15\u7528\u7c7b\u578b"},{"location":"Golang/%E6%A0%87%E8%AF%86%E7%AC%A6%E5%8F%8A%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_12","text":"","title":"\u5e38\u89c1\u7684\u503c\u7c7b\u578b\u548c\u5f15\u7528\u7c7b\u578b"},{"location":"Golang/%E6%A0%87%E8%AF%86%E7%AC%A6%E5%8F%8A%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_13","text":"\u57fa\u672c\u6570\u636e\u7c7b\u578bint\u7cfb\u5217,float\u7cfb\u5217,bool,string,\u6570\u7ec4\u548c\u7ed3\u6784\u4f53struct","title":"\u503c\u7c7b\u578b"},{"location":"Golang/%E6%A0%87%E8%AF%86%E7%AC%A6%E5%8F%8A%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_14","text":"\u6307\u9488,\u5207\u7247slice,map,\u7ba1\u9053chan,interface\u7b49\u90fd\u662f\u5f15\u7528\u7c7b\u578b","title":"\u5f15\u7528\u7c7b\u578b"},{"location":"Golang/%E6%A0%87%E8%AF%86%E7%AC%A6%E5%8F%8A%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_15","text":"","title":"\u4f7f\u7528\u7279\u70b9"},{"location":"Golang/%E6%A0%87%E8%AF%86%E7%AC%A6%E5%8F%8A%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_16","text":"\u53d8\u91cf\u76f4\u63a5\u5b58\u50a8\u503c,\u5185\u5b58==\u901a\u5e38==\u5728\u6808\u4e2d\u5206\u914d","title":"\u503c\u7c7b\u578b"},{"location":"Golang/%E6%A0%87%E8%AF%86%E7%AC%A6%E5%8F%8A%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_17","text":"\u53d8\u91cf\u5b58\u50a8\u7684\u662f\u4e00\u4e2a\u5730\u5740,\u8fd9\u4e2a\u5730\u5740\u5bf9\u5e94\u7684\u7a7a\u95f4\u624d\u662f\u771f\u6b63\u5b58\u50a8\u6570\u636e\u503c,\u5185\u5b58==\u901a\u5e38==\u5728\u5806\u4e0a\u5206\u914d,\u5f53\u6ca1\u6709\u4efb\u4f55\u53d8\u91cf\u5f15\u7528\u8fd9\u4e2a\u5730\u5740\u65f6,\u8be5\u5730\u5740\u5bf9\u5e94\u7684\u6570\u636e\u7a7a\u95f4\u5c31\u6210\u4e3a\u4e00\u4e2a\u5783\u573e,\u7531GC\u6765\u56de\u6536. golang\u4e2d\u5b58\u5728\u9003\u9038\u5206\u6790,\u6240\u4ee5\u4e0a\u8ff0\u4e3a\u901a\u5e38\u60c5\u51b5,\u4e5f\u4f1a\u51fa\u73b0\u503c\u7c7b\u578b\u8dd1\u5230\u5806\u4e2d\u6216\u8005\u5f15\u7528\u7c7b\u578b\u8dd1\u5230\u6808\u4e2d\u7684\u60c5\u51b5.","title":"\u5f15\u7528\u7c7b\u578b"},{"location":"Golang/%E6%A0%87%E8%AF%86%E7%AC%A6%E5%8F%8A%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_18","text":"go\u4e2d\u5b58\u5728\u9003\u9038\u5206\u6790,\u6240\u4ee5\u6ca1\u6709\u7edd\u5bf9\u7684\u6570\u636e\u5b58\u653e\u5728\u5806\u533a\u8fd8\u662f\u6808\u533a\u7684\u8bf4\u6cd5. \u5806\u533a\u548c\u6808\u533a\u7684\u5206\u914d,\u4e0d\u662f\u7269\u7406\u4e0a\u7684\u5206\u914d,\u800c\u662f\u903b\u8f91\u4e0a\u7684\u5206\u914d go\u5c06\u5185\u5b58\u5728\u903b\u8f91\u4e0a\u5206\u4e3a\u4e09\u5757\u533a\u57df(\u6808\u533a,\u5806\u533a,\u4ee3\u7801\u533a) \u57fa\u672c\u6570\u636e\u7c7b\u578b\u4e00\u822c\u5206\u914d\u5230\u6808\u533a \u5f15\u7528\u6570\u636e\u7c7b\u578b\u4e00\u822c\u5206\u914d\u5230\u5806\u533a(map,\u5207\u7247) \u4ee3\u7801\u672c\u8eab\u5b58\u653e\u5728\u4ee3\u7801\u533a","title":"\u6570\u636e\u7c7b\u578b\u548c\u5185\u5b58\u7ba1\u7406"},{"location":"Golang/%E6%A0%87%E8%AF%86%E7%AC%A6%E5%8F%8A%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_19","text":"\u4e3a\u4e86\u7b80\u5316\u6570\u636e\u7c7b\u578b\u5b9a\u4e49,Go\u652f\u6301\u81ea\u5b9a\u4e49\u6570\u636e\u7c7b\u578b","title":"\u81ea\u5b9a\u4e49\u6570\u636e\u7c7b\u578b"},{"location":"Golang/%E6%A0%87%E8%AF%86%E7%AC%A6%E5%8F%8A%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_20","text":"type \u81ea\u5b9a\u4e49\u6570\u636e\u636e\u7c7b\u578b\u540d \u6570\u636e\u7c7b\u578b //\u53ef\u4ee5\u7406\u89e3\u4e3a \u4e00\u4e2a\u522b\u540d type myint int //\u8fd9\u65f6myint \u5c31\u7b49\u4ef7\u4e8eint\u6765\u4f7f\u7528\u4e86,\u76f8\u5f53\u4e8e\u90fd\u662fint\u7c7b\u578b,\u4f46\u662fgo\u8ba4\u4e3a\u8fd9\u662f\u4e24\u79cd\u6570\u636e\u7c7b\u578b type mySum func ( int , int ) int //\u8fd9\u65f6mySum\u5c31\u7b49\u4ef7\u4e00\u4e2a\u51fd\u6570\u7c7b\u578bfunc(int ,int) int \u6ce8\u610f:\u8fd9\u65f6\u7684myint\u548cint\u5728go\u4e2d\u8fd8\u662f\u4e24\u4e2a\u6570\u636e\u7c7b\u578b, \u901a\u8fc7type\u5173\u952e\u5b57\u7684\u5b9a\u4e49,MyInt\u5c31\u662f\u4e00\u79cd\u65b0\u7684\u7c7b\u578b,\u5177\u6709int\u7684\u7279\u6027. //\u8bc1\u660e type myInt int var num1 myInt var num2 int num1 = 40 num2 = num1 //\u8fd9\u91cc\u4f1a\u62a5\u9519\u54e6,\u56e0\u4e3ago\u8ba4\u4e3amyInt\u548cint\u4e0d\u662f\u540c\u4e00\u79cd\u6570\u636e\u7c7b\u578b,\u4e0d\u80fd\u8d4b\u503c fmt . Println ( \"num1 = \" , num1 ) //\u5982\u4f55\u6539:\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362 num2 = int ( num1 )","title":"\u57fa\u672c\u8bed\u6cd5"},{"location":"Golang/%E6%A0%87%E8%AF%86%E7%AC%A6%E5%8F%8A%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_21","text":"Go1.9\u7248\u672c\u65b0\u589e\u7684\u529f\u80fd. \u7c7b\u578b\u522b\u540d\u7684\u89c4\u5b9a:TypeAlias\u53ea\u662fType\u7684\u522b\u540d,\u672c\u8d28\u4e0a\u662f\u540c\u4e00\u4e2a\u7c7b\u578b. type TypeAlias = Type \u6bd4\u5982\u4e4b\u524d\u7684rune\u548cbyte\u5c31\u662f\u7c7b\u578b\u522b\u540d type byte = uint8 type rune = int32","title":"\u7c7b\u578b\u522b\u540d"},{"location":"Golang/%E6%A0%87%E8%AF%86%E7%AC%A6%E5%8F%8A%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_22","text":"\u8868\u9762\u4e0a\u53ea\u662f\u5dee\u4e86\u4e00\u4e2a\u7b49\u53f7 = type NewInt int type MyInt = int func main () { var a NewInt var b MyInt fmt . Printf ( \"type of a: %T\\n\" , a ) fmt . Printf ( \"type of b: %T\\n\" , b ) } >> > type of a : main . NewInt type of b : int \u901a\u8fc7\u7ed3\u679c\u53ef\u4ee5\u770b\u5230,\u7c7b\u578b\u5b9a\u4e49\u662f\u751f\u6210\u4e86main\u5305\u4e0b\u7684\u4e00\u4e2a\u65b0\u7684\u7c7b\u578b,\u800c\u7c7b\u578b\u522b\u540d\u53ea\u662f\u5728\u4ee3\u7801\u4e2d\u5b58\u5728,\u7f16\u8bd1\u5b8c\u6210\u65f6\u4e0d\u4f1a\u5b58\u5728MyInt\u7c7b\u578b.","title":"\u7c7b\u578b\u5b9a\u4e49\u548c\u7c7b\u578b\u522b\u540d\u7684\u533a\u522b"},{"location":"Golang/%E6%A0%87%E8%AF%86%E7%AC%A6%E5%8F%8A%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#newmake","text":"go\u4e2d,\u5bf9\u4e8e\u5f15\u7528\u7c7b\u578b,\u5728\u4f7f\u7528\u7684\u65f6\u5019\u4e0d\u4ec5\u8981\u58f0\u660e,\u8fd8\u8981\u4e3a\u5176\u5206\u914d\u5185\u5b58\u7a7a\u95f4,\u5426\u5219\u65e0\u6cd5\u4f7f\u7528. \u800c\u503c\u7c7b\u578b\u7684\u58f0\u660e\u4e0d\u9700\u8981\u5206\u914d\u5185\u5b58\u7a7a\u95f4,\u56e0\u4e3a\u5728\u58f0\u660e\u7684\u65f6\u5019\u5df2\u7ecf\u9ed8\u8ba4\u5206\u914d\u597d\u4e86\u5185\u5b58\u7a7a\u95f4.","title":"new\u548cmake"},{"location":"Golang/%E6%A0%87%E8%AF%86%E7%AC%A6%E5%8F%8A%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#new","text":"new\u662f\u4e00\u4e2a\u5185\u7f6e\u51fd\u6570. func new ( Type ) * Type Type\u8868\u793a\u7c7b\u578b\uff0cnew\u51fd\u6570\u53ea\u63a5\u53d7\u4e00\u4e2a\u53c2\u6570\uff0c\u8fd9\u4e2a\u53c2\u6570\u662f\u4e00\u4e2a\u7c7b\u578b *Type\u8868\u793a\u7c7b\u578b\u6307\u9488\uff0cnew\u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u6307\u5411\u8be5\u7c7b\u578b\u5185\u5b58\u5730\u5740\u7684\u6307\u9488\u3002 \u4f7f\u7528new\u51fd\u6570\u5f97\u5230\u7684\u662f\u4e00\u4e2a\u7c7b\u578b\u7684\u6307\u9488\uff0c\u5e76\u4e14\u8be5\u6307\u9488\u5bf9\u5e94\u7684\u503c\u4e3a\u8be5\u7c7b\u578b\u7684\u96f6\u503c\u3002 func main () { a := new ( int ) b := new ( bool ) fmt . Printf ( \"%T\\n\" , a ) // *int fmt . Printf ( \"%T\\n\" , b ) // *bool fmt . Println ( * a ) // 0 fmt . Println ( * b ) // false }","title":"new"},{"location":"Golang/%E6%A0%87%E8%AF%86%E7%AC%A6%E5%8F%8A%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#make","text":"make\u4e5f\u662f\u7528\u4e8e\u5185\u5b58\u5206\u914d\u7684\uff0c\u533a\u522b\u4e8enew\uff0c\u5b83\u53ea\u7528\u4e8eslice\u3001map\u4ee5\u53cachan\u7684\u5185\u5b58\u521b\u5efa\uff0c\u800c\u4e14\u5b83\u8fd4\u56de\u7684\u7c7b\u578b\u5c31\u662f\u8fd9\u4e09\u4e2a\u7c7b\u578b\u672c\u8eab\uff0c\u800c\u4e0d\u662f\u4ed6\u4eec\u7684\u6307\u9488\u7c7b\u578b\uff0c\u56e0\u4e3a\u8fd9\u4e09\u79cd\u7c7b\u578b\u5c31\u662f\u5f15\u7528\u7c7b\u578b\uff0c\u6240\u4ee5\u5c31\u6ca1\u6709\u5fc5\u8981\u8fd4\u56de\u4ed6\u4eec\u7684\u6307\u9488\u4e86\u3002 func make ( t Type , size ... IntegerType ) Type \u5728\u4f7f\u7528slice\u3001map\u4ee5\u53cachannel\u7684\u65f6\u5019\uff0c\u90fd\u9700\u8981\u4f7f\u7528make\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u7136\u540e\u624d\u53ef\u4ee5\u5bf9\u5b83\u4eec\u8fdb\u884c\u64cd\u4f5c\u3002","title":"make"},{"location":"Golang/%E6%A0%87%E8%AF%86%E7%AC%A6%E5%8F%8A%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#newmake_1","text":"\u4e8c\u8005\u90fd\u662f\u7528\u6765\u505a\u5185\u5b58\u5206\u914d\u7684\u3002 make\u53ea\u7528\u4e8eslice\u3001map\u4ee5\u53cachannel\u7684\u521d\u59cb\u5316\uff0c\u8fd4\u56de\u7684\u8fd8\u662f\u8fd9\u4e09\u4e2a\u5f15\u7528\u7c7b\u578b\u672c\u8eab\uff1b \u800cnew\u7528\u4e8e\u7c7b\u578b\u7684\u5185\u5b58\u5206\u914d\uff0c\u5e76\u4e14\u5185\u5b58\u5bf9\u5e94\u7684\u503c\u4e3a\u7c7b\u578b\u96f6\u503c\uff0c\u8fd4\u56de\u7684\u662f\u6307\u5411\u7c7b\u578b\u7684\u6307\u9488\u3002","title":"new\u4e0emake\u7684\u533a\u522b"},{"location":"Golang/%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/","text":"\u987a\u5e8f\u63a7\u5236 \u5206\u652f\u63a7\u5236 \u5355\u5206\u652f \u53cc\u5206\u652f \u591a\u5206\u652f \u5d4c\u5957\u5206\u652f switch\u5206\u652f\u7ed3\u6784 switch\u4e8eif\u7684\u6bd4\u8f83 \u5faa\u73af\u63a7\u5236 for\u5faa\u73af\u63a7\u5236 \u57fa\u672c\u8bed\u6cd5 \u6ce8\u610f\u4e8b\u9879 \u5b57\u7b26\u4e32\u904d\u5386 \u65b9\u6cd51\u4f20\u7edf\u65b9\u5f0f, \u65b9\u6cd52 for...range\u65b9\u6cd5(\u952e\u503c\u5faa\u73af) while do...while \u5faa\u73af\u5d4c\u5957 break continue \u8df3\u8f6c\u63a7\u5236\u8bed\u53e5goto \u8df3\u51fa\u63a7\u5236\u8bed\u53e5return \u987a\u5e8f\u63a7\u5236 \u00b6 \u7a0b\u5e8f\u4ece\u4e0a\u81f3\u4e0b\u9010\u884c\u7684\u6267\u884c,\u4e2d\u95f4\u6ca1\u6709\u4efb\u4f55\u7684\u5224\u65ad\u548c\u8df3\u8f6c. \u5206\u652f\u63a7\u5236 \u00b6 \u5355\u5206\u652f,\u53cc\u5206\u652f,\u591a\u5206\u652f \u5176\u4e2d: \u6761\u4ef6\u8868\u8fbe\u5f0f\u53ef\u4ee5\u7528\u5c0f\u62ec\u53f7\u62ec\u8d77\u6765,\u4e5f\u53ef\u4ee5\u4e0d\u5199,\u5efa\u8bae\u4e0d\u5199,\u56e0\u4e3a\u4f5c\u8005\u6e90\u7801\u5c31\u8fd9\u4e48\u5199\u7684 else\u4e0d\u53ef\u4ee5\u6362\u884c \u8868\u8fbe\u5f0f\u90e8\u5206\u4e0d\u53ef\u4ee5\u662f\u8d4b\u503c\u8bed\u53e5,\u4e00\u5b9a\u8981\u662f\u6761\u4ef6\u8bed\u53e5(\u5373true,\u6216false), if b = bool ... \u8bed\u6cd5\u62a5\u9519 if \u540e\u7684\u6761\u4ef6\u6761\u4ef6\u8868\u8fbe\u5f0f\u4e5f\u53ef\u4ee5\u4f7f\u7528()\u62ec\u8d77\u6765 \u5355\u5206\u652f \u00b6 if \u6761\u4ef6\u8868\u8fbe\u5f0f { \u6267\u884c\u4ee3\u7801\u5757 } \u5f53\u6761\u4ef6\u8868\u8fbe\u5f0f\u4e3atrue\u65f6\u6267\u884c\u4ee3\u7801\u5757 \u4e5f\u53ef\u4ee5\u5728\u6761\u4ef6\u4e4b\u524d\u8d4b\u503c if age := 18 ; age > 18 { fmt . Println ( \"be responsible for your behavior\" ) } \u53cc\u5206\u652f \u00b6 if \u6761\u4ef6\u8868\u8fbe\u5f0f { \u4ee3\u7801\u57571 } else { //else\u4e0d\u80fd\u653e\u5230\u4e0b\u4e00\u884c \u4ee3\u7801\u57572 } var age int fmt . Println ( \"age:\" ) fmt . Scanln ( & age ) if age > 18 { fmt . Println ( \"1\" ) } else { fmt . Println ( \"2\" ) } \u591a\u5206\u652f \u00b6 if \u6761\u4ef6\u8868\u8fbe\u5f0f1 { \u4ee3\u7801\u57571 } else if \u6761\u4ef6\u8868\u8fbe\u5f0f2 { \u4ee3\u7801\u57572 } ... . } else { \u4ee3\u7801\u57573 } \u5176\u4e2d\u6700\u540e\u4e00\u4e2aelse\u53ef\u4ee5\u4e0d\u5b58\u5728 \u5d4c\u5957\u5206\u652f \u00b6 \u5728\u4e00\u4e2a\u5206\u652f\u7ed3\u6784\u4e2d\u53c8\u5d4c\u5957\u4e86\u53e6\u4e00\u4e2a\u5b8c\u6574\u7684\u5206\u652f\u7ed3\u6784,\u91cc\u9762\u7684\u5206\u652f\u7684\u7ed3\u6784\u79f0\u4e4b\u4e3a\u5185\u5c42\u5206\u652f,\u5916\u9762\u7684\u5206\u652f\u79f0\u4e4b\u4e3a\u5916\u5c42\u5206\u652f. \u5efa\u8bae\u6700\u591a\u4e0d\u8d85\u8fc7\u4e09\u5c42 switch\u5206\u652f\u7ed3\u6784 \u00b6 switch\u8bed\u53e5\u7528\u4e8e\u57fa\u4e8e\u4e0d\u540c\u6761\u4ef6\u6267\u884c\u7684\u4e0d\u540c\u52a8\u4f5c,\u6bcf\u4e00\u4e2acase\u5206\u652f\u90fd\u662f\u552f\u4e00\u7684,\u4ece\u4e0a\u5230\u4e0b\u9010\u4e00\u6d4b\u8bd5,\u76f4\u5230\u5339\u914d\u4e3a\u6b62.\u90fd\u6267\u884c\u4e0d\u5230,\u6267\u884c\u9ed8\u8ba4\u5206\u652f. case\u5339\u914d\u9879\u540e\u9762\u4e0d\u9700\u8981\u52a0break \u7528switch\u7684\u8868\u8fbe\u5f0f\u4e8ecase\u7684\u8868\u8fbe\u5f0f\u5bf9\u6bd4 case\u540e\u7684\u8868\u8fbe\u5f0f\u53ef\u4ee5\u6709\u591a\u4e2a,\u7528\u9017\u53f7 , \u9694\u5f00 \u57fa\u672c\u8bed\u6cd5 switch \u8868\u8fbe\u5f0f { case \u8868\u8fbe\u5f0f1 , \u8868\u8fbe\u5f0f2 , ... : //\u8868\u793a\u5339\u914d\u5230\u8868\u8fbe\u5f0f1\u6216\u80052\u90fd\u5df2\u6267\u884c \u8bed\u53e5\u57571 case \u8868\u8fbe\u5f0f3 , \u8868\u8fbe\u5f0f4 , ... : \u8bed\u53e5\u57572 . . . default : \u8bed\u53e5\u5757 } \u7ec3\u4e60: //\u6309\u8f93\u5165\u8f6c\u6362\u4e3a\u661f\u671f\u8f93\u51fa var key byte fmt . Println ( \"enter a byte:\" ) fmt . Scanf ( \"%c\" , & key ) switch key { case 'a' : fmt . Println ( \"monday\" ) case 'b' : fmt . Println ( \"tuesday\" ) case 'c' : fmt . Println ( \"wednesday\" ) case 'd' : fmt . Println ( \"thursday\" ) case 'e' : fmt . Println ( \"friday\" ) case 'f' : fmt . Println ( \"saturday\" ) case 'g' : fmt . Println ( \"sunday\" ) default : fmt . Println ( \"cnm\" ) } \u7ec6\u8282\u8ba8\u8bba case/switch\u540e\u662f\u4e00\u4e2a\u8868\u8fbe\u5f0f.(\u5e38\u91cf\u503c,\u53d8\u91cf,\u4e00\u4e2a\u6709\u8fd4\u56de\u503c\u7684\u51fd\u6570\u90fd\u53ef\u4ee5) case\u540e\u7684\u5404\u4e2a\u8868\u8fbe\u5f0f\u7684\u503c\u7684\u6570\u636e\u7c7b\u578b,\u5fc5\u987b\u548cswitch\u7684\u8868\u8fbe\u5f0f\u6570\u636e\u7c7b\u578b\u4e00\u81f4. case\u540e\u9762\u53ef\u4ee5\u5e26\u591a\u4e2a\u8868\u8fbe\u5f0f,\u4f7f\u7528\u9017\u53f7\u95f4\u9694.case \u8868\u8fbe\u5f0f1,\u8868\u8fbe\u5f0f2.... switch n1 { case n2 , 10 , 5 : // \u53ea\u8981\u5339\u914d\u5230\u4efb\u610f\u4e00\u4e2a\u7b26\u5408\u7684\u5c31\u4f1a\u6267\u884c\u4e0b\u9762\u7684\u8bed\u53e5 fmt . Println ( \"123\" ) case\u540e\u9762\u7684\u8868\u8fbe\u5f0f\u5982\u679c\u662f\u5e38\u91cf\u503c(\u5b57\u9762\u5e38\u91cf),\u5219\u8981\u6c42\u4e0d\u80fd\u91cd\u590d.\u4f46\u662f\u5982\u679c\u662f\u503c\u76f8\u540c\u7684\u53d8\u91cf,golang\u65e0\u6cd5\u68c0\u6d4b\u51fa\u6765,\u53ef\u4ee5\u9a97\u8fc7\u7f16\u8bd1\u5668. case\u540e\u9762\u4e0d\u9700\u8981\u5e26break,\u7a0b\u5e8f\u5339\u914d\u5230\u4e00\u4e2acase\u540e\u5c31\u4f1a\u6267\u884c\u5bf9\u5e94\u7684\u4ee3\u7801\u5757,\u7136\u540e\u9000\u51faswitch,\u5982\u679c\u90fd\u6267\u884c\u4e0d\u5230,\u6267\u884cdefault default\u8bed\u53e5\u4e0d\u662f\u5fc5\u987b\u7684. switch\u540e\u4e5f\u53ef\u4ee5\u4e0d\u5e26\u8868\u8fbe\u5f0f,\u7c7b\u4f3cif--else\u5206\u652f\u6765\u4f7f\u7528. switch\u540e\u4e5f\u53ef\u4ee5\u76f4\u63a5\u58f0\u660e\u53d8\u91cf.\u5206\u53f7\u7ed3\u675f,\u4e0d\u63a8\u8350\u4f7f\u7528. switch grade := 90 ;{ case grade > 90 : fmt . Println ( \"great\" ) case grade > 70 : fmt . Println ( \"ok\" ) } switch \u7a7f\u900f-fallthrough,\u5728case\u8bed\u53e5\u5757\u540e\u52a0fallthrough,\u5219\u4f1a\u7ee7\u7eed\u6267\u884c\u4e0b\u4e00\u4e2acase,\u65e0\u8bba\u4e0b\u4e00\u4e2acase\u662f\u5426\u6ee1\u8db3,\u4e5f\u53ebswitch\u7a7f\u900f. var num int = 10 switch num { case 10 : fmt . Println ( \"1\" ) fallthrough case 20 : fmt . Println ( \"2\" ) fallthrough // \u9ed8\u8ba4\u7a7f\u900f\u4e00\u5c42 case 30 : fmt . Println ( \"3\" ) } Type Switch:switch\u8bed\u53e5\u8fd8\u53ef\u4ee5\u88ab\u7528\u4e8etype_switch\u6765\u5224\u65ad\u67d0\u4e2ainterface\u53d8\u91cf\u4e2d\u5b9e\u9645\u6307\u5411\u7684\u53d8\u91cf\u7c7b\u578b. switch\u4e8eif\u7684\u6bd4\u8f83 \u00b6 \u5224\u65ad==\u5177\u4f53\u6570\u503c\u4e0d\u591a==,\u4e14\u7b26\u5408\u6574\u6570,\u6d6e\u70b9\u6570,\u5b57\u7b26,\u5b57\u7b26\u4e32\u8fd9\u51e0\u79cd\u7c7b\u578b, \u6761\u4ef6\u6bd4\u8f83\u5c11 ,\u4f7f\u7528switch,\u7b80\u6d01\u9ad8\u6548 ==\u5bf9\u533a\u95f4\u7684\u5224\u65ad==\u548c\u7ed3\u679c\u4e3abool\u7c7b\u578b\u7684\u5224\u65ad,\u4f7f\u7528if,if\u7684\u4f7f\u7528\u8303\u56f4\u66f4\u5e7f. \u5faa\u73af\u63a7\u5236 \u00b6 for\u5faa\u73af\u63a7\u5236 \u00b6 \u57fa\u672c\u8bed\u6cd5 \u00b6 for \u5faa\u73af\u53d8\u91cf\u521d\u59cb\u5316 ; \u5faa\u73af\u6761\u4ef6 ; \u5faa\u73af\u53d8\u91cf\u8fed\u4ee3 { \u5faa\u73af\u8bed\u53e5 } ---------------------- for \u5faa\u73af\u5224\u65ad\u6761\u4ef6 { \u5faa\u73af\u6267\u884c\u8bed\u53e5 //\u53d8\u91cf\u58f0\u660e\u521d\u59cb\u5316\u548c\u53d8\u91cf\u8fed\u4ee3\u53ef\u4ee5\u5199\u5230\u5176\u4ed6\u4f4d\u7f6e } ---------------------- for { // \u7b49\u4ef7\u4e8efor;;{} \u662f\u4e00\u4e2a\u65e0\u7ebf\u5faa\u73af,\u901a\u5e38\u914d\u5408break\u4f7f\u7528 \u5faa\u73af\u6267\u884c\u8bed\u53e5 } for i := 1 ; i < 10 ; i ++ { fmt . Println ( \"i\" ) } fmt . Println ( i ) //\u62a5\u9519,\u5916\u90e8\u65e0\u6cd5\u4f7f\u7528undefined i -------------------------------------------- for i := 0 ; i < 20 ; i += 2 { //\u4e5f\u53ef\u4ee5\u81ea\u5df1\u5b9a\u4e49step fmt . Println ( i ) } \u6ce8\u610f\u4e8b\u9879 \u00b6 for\u540e\u8bed\u53e5\u987a\u5e8f\u4e0d\u53ef\u53d8 for\u5faa\u73af\u4e2d\u58f0\u660e\u7684\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u53ea\u5728for\u5faa\u73af\u4e2d.\u5916\u90e8\u65e0\u6cd5\u4f7f\u7528 \u5faa\u73af\u6761\u4ef6\u4e00\u5b9a\u662f\u4e2abool\u503c \u53d8\u91cf\u58f0\u660e\u521d\u59cb\u5316\u548c\u53d8\u91cf\u8fed\u4ee3\u53ef\u4ee5\u5199\u5230\u5176\u4ed6\u4f4d\u7f6e j := 1 for j < 10 { fmt . Println ( j ) j ++ } Golang\u63d0\u4f9bfor-range\u7684\u65b9\u5f0f.\u53ef\u4ee5\u65b9\u4fbf\u904d\u5386\u5b57\u7b26\u4e32\u548c\u6570\u7ec4, for\u540e\u9762\u7684\u6761\u4ef6\u6267\u884c\u987a\u5e8f,i:=1 \u2192i<10\u2192\u5faa\u73af\u4f53 \u2192 i++ \u2192 i<10 ..... for\u4e4b\u540e,{}\u4e4b\u524d\u7684\u8bed\u53e5\u4e0d\u80fd\u7528()\u62ec\u8d77\u6765 for\u540e\u7684\u8bed\u53e5\u5206\u4e09\u90e8\u5206,\u6bcf\u90e8\u5206\u90fd\u53ef\u7701\u7565,\u6839\u636e\u5b9e\u9645\u9700\u6c42\u800c\u5b9a. \u5b57\u7b26\u4e32\u904d\u5386 \u00b6 \u65b9\u6cd51\u4f20\u7edf\u65b9\u5f0f, \u00b6 var str string = \"hello,word\" for i := 0 ; i < len ( str ); i ++ { fmt . Printf ( \"%c\\n\" , str [ i ]) } \u6ce8\u610f:\u6b64\u65b9\u6cd5\u662f\u6309\u7167\u5b57\u8282\u6765\u904d\u5386\u7684,\u6c49\u5b57\u4f1a\u51fa\u73b0\u4e71\u7801, \u89e3\u51b3,\u9700\u8981\u5c06 str\u8f6c\u6210 []\u5207\u7247 \u6765\u89e3\u51b3 var str string = \"\u4e00\u5f80\u65e0\u524d\u864e\u5c71\u884c\" str2 := [] rune ( str ) for i := 0 ; i < len ( str2 ); i ++ { fmt . Printf ( \"%c\\n\" , str2 [ i ]) } \u65b9\u6cd52 for...range\u65b9\u6cd5(\u952e\u503c\u5faa\u73af) \u00b6 \u6309\u7167\u5b57\u7b26\u7684\u65b9\u5f0f\u904d\u5386 \u5982\u679c\u4e0d\u60f3\u8981\u7d22\u5f15\u503c,\u53ef\u4ee5\u4f7f\u7528 _ \u4e0b\u5212\u7ebf\u63a5\u66ff\u8868\u793a\u4e22\u5f03\u53d8\u91cf var str string = \"hello,word\u4e0a\u6d77\" for index , val := range str { fmt . Printf ( \"%d,%c\\n\" , index , val ) } >> > 0 , h 1 , e 2 , l 3 , l 4 , o 5 ,, 6 , w 7 , o 8 , r 9 , d 10 , \u4e0a 13 , \u6d77 // \u6ce8\u610f:index10\u4e4b\u540e\u76f4\u63a5\u53d8\u4e3a13,\u8bf4\u660e\u4e00\u4e2a\u6c49\u5b57\u5360\u4e09\u4e2a\u5b57\u7b26 \u5c0f\u7ec3\u4e60 //\u683c\u5f0f\u5316\u5faa\u73af\u6253\u5370 var n int = 6 for i := 0 ; i <= n ; i ++ { fmt . Printf ( \"%v + %v = %v\\n\" , i , n - i , n ) } while \u00b6 \u5148\u5224\u65ad\u518d\u505a Go\u4e2d\u6ca1\u6709whle\u548cdo,,,while\u8bed\u6cd5,\u53ef\u4ee5\u901a\u8fc7for\u5faa\u73af\u6765\u5b9e\u73b0\u5176\u4f7f\u7528\u6548\u679c. for\u5faa\u73af\u5b9e\u73b0while\u7684\u6548\u679c for { if \u5faa\u73af\u6761\u4ef6\u8868\u8fbe\u5f0f { break // \u8df3\u51fafor\u5faa\u73af } \u5faa\u73af\u8bed\u53e5 \u5faa\u73af\u53d8\u91cf\u8fed\u4ee3 } \u8bf4\u660e:\u4f7f\u7528\u6b7b\u5faa\u73affor,\u5728\u5185\u90e8\u8fdb\u884c\u8fed\u4ee3\u548c\u5faa\u73af\u8bed\u53e5,\u7528if\u5224\u65ad\u6765\u63a7\u5236\u6b7b\u5faa\u73af\u7684\u7ed3\u675f. break\u6765\u7ed3\u675ffor\u5faa\u73af //\u8f93\u516510\u53e5hello world while\u5b9e\u73b0 var i int = 0 for { if i == 10 { break } fmt . Println ( \"hello world\" ) i ++ } do...while \u00b6 \u5148\u505a\u518d\u5224\u65ad for \u5b9e\u73b0do...while for { \u5faa\u73af\u8bed\u53e5 \u5faa\u73af\u53d8\u91cf\u8fed\u4ee3 if \u5faa\u73af\u6761\u4ef6 { break } } \u8bf4\u660e: \u5148\u5faa\u73af,\u518d\u5224\u65ad,\u56e0\u6b64\u81f3\u5c11\u6267\u884c\u4e00\u6b21 \u5f53\u5faa\u73af\u6210\u7acb\u540e,\u6267\u884cbreak,\u8df3\u51fafor\u5faa\u73af,\u7ed3\u675f\u5faa\u73af //\u8f93\u516510\u53e5hello world do...while\u5b9e\u73b0 var i int = 0 for { fmt . Println ( \"hello world\" ) i ++ if i == 10 { break } } \u5faa\u73af\u5d4c\u5957 \u00b6 \u5c06\u4e00\u4e2a\u5faa\u73af\u653e\u5230\u53e6\u4e00\u4e2a\u5faa\u73af\u4f53\u5185,\u5c31\u5f62\u6210\u4e86\u5d4c\u5957\u5faa\u73af,\u5916\u5c42\u7684for\u79f0\u4e3a\u5916\u5c42\u5faa\u73af,\u5185\u5c42\u7684for\u79f0\u4e3a\u5185\u5c42\u5faa\u73af. \u5efa\u8bae\u4e0d\u8d85\u8fc73\u5c42 \u8bbe\u5916\u5c42\u5faa\u73afm\u6b21,\u5185\u5c42\u5faa\u73afn\u6b21,\u5219\u5185\u5c42\u5faa\u73af\u4f53\u5b9e\u9645\u4e0a\u9700\u8981\u6267\u884cm*n= mn\u6b21 \u672c\u8d28:\u5c06\u5185\u5c42\u5faa\u73af\u5f53\u6210\u5916\u5c42\u5faa\u73af\u7684\u5faa\u73af\u4f53 //\u6253\u5370\u8f93\u5165\u6570\u5b57\u7684\u7a7a\u5fc3\u91d1\u5b50\u5854 var totalLevel int fmt . Print ( \"enter a digit:\" ) fmt . Scanln ( & totalLevel ) for i := 1 ; i <= totalLevel ; i ++ { //\u6253\u5370*\u524d\u5148\u6253\u5370\u7a7a\u683c for k := 1 ; k <= totalLevel - i ; k ++ { fmt . Print ( \" \" ) } //j\u8868\u793a\u6bcf\u5c42\u6253\u5370\u591a\u5c11* for j := 1 ; j <= 2 * i - 1 ; j ++ { if j == 1 || j == 2 * i - 1 || i == totalLevel { fmt . Print ( \"*\" ) } else { fmt . Print ( \" \" ) } } fmt . Println () } \u5148\u6613\u540e\u96be,\u5148\u6b7b\u540e\u6d3b //\u4e5d\u4e5d\u4e58\u6cd5\u8868 for i := 1 ; i <= 9 ; i ++ { for j := 1 ; j <= i ; j ++ { fmt . Printf ( \"%v * %v = %v\\t\" , j , i , j * i ) } fmt . Println () } #python\u7684\u4e5d\u4e5d\u4e58\u6cd5\u8868 \\t\u5236\u8868\u7b26\u7684\u5c0f\u6280\u5de7 for i in range ( 9 ): for j in range ( i ): print ( f \"{j+1} * {i} = {(j+1)*i}\" , end = ' \\t ' ) print () break \u00b6 \u7ec8\u6b62\u5faa\u73af break\u8bed\u53e5\u5728\u591a\u5c42\u5d4c\u5957\u7684\u8bed\u53e5\u5757\u4e2d\u65f6,\u53ef\u4ee5\u901a\u8fc7\u6807\u7b7e\u6307\u660e\u8981\u7ec8\u6b62\u7684\u662f\u54ea\u4e00\u5c42\u8bed\u53e5\u5757 label1 :{ label2 :{ label3 :{ break label2 } //a } //b } //c \u4e0d\u5199,\u9ed8\u8ba4\u7ec8\u6b62\u672c\u5c42\u5faa\u73af,\u5373break\u540e\u5230a,\u5982\u52a0label2,\u5219\u8df3\u5230b,label1\u5c31\u8df3\u5230c //\u4f8b\u5b50 label1 : //\u8bbe\u7f6e\u4e00\u4e2a\u6807\u7b7e for i := 0 ; i < 4 ; i ++ { for j := 0 ; j < 10 ; j ++ { if j == 2 { break label1 } fmt . Print ( \"j=\" , j ) } fmt . Print ( \"i=\" , i ) } >> > o 1 continue \u00b6 \u8df3\u51fa\u672c\u6b21\u5faa\u73af,\u5f00\u59cb\u4e0b\u4e00\u6b21\u5faa\u73af continue\u8bed\u53e5\u51fa\u73b0\u5728\u591a\u5c42\u5d4c\u5957\u7684\u5faa\u73af\u8bed\u53e5\u4e2d\u65f6,\u53ef\u4ee5\u901a\u8fc7\u6807\u7b7e\u6307\u660e\u8981\u8df3\u8fc7\u7684\u65f6\u54ea\u4e00\u5c42\u5faa\u73af,\u89c4\u5219\u540cbreak \u8df3\u8f6c\u63a7\u5236\u8bed\u53e5goto \u00b6 \u6c47\u7f16\u8bed\u8a00\u4e2d\u4f7f\u7528\u6bd4\u8f83\u591a,\u9ad8\u7ea7\u8bed\u8a00\u7528\u7684\u6bd4\u8f83\u5c11. Go\u8bed\u8a00\u7684goto\u8bed\u53e5\u53ef\u4ee5\u65e0\u6761\u4ef6\u7684\u8f6c\u79fb\u5230\u7a0b\u5e8f\u4e2d\u6307\u5b9a\u7684\u884c. goto\u8bed\u53e5\u901a\u5e38\u4e0e\u6761\u4ef6\u8bed\u53e5\u914d\u5408\u4f7f\u7528,\u53ef\u4ee5\u7528\u6765\u5b9e\u73b0\u6761\u4ef6\u8f6c\u79fb,\u8df3\u51fa\u5faa\u73af\u4f53\u7b49\u529f\u80fd. \u5728Go\u7a0b\u5e8f\u8bbe\u8ba1\u4e2d,\u4e0d\u63a8\u8350\u4f7f\u7528goto\u8bed\u53e5,\u907f\u514d\u9020\u6210\u7a0b\u5e8f\u7684\u6df7\u4e71,\u4f7f\u7406\u89e3\u548c\u8c03\u8bd5\u4ea7\u751f\u56f0\u96be.. goto label .. label : statement \u8df3\u51fa\u63a7\u5236\u8bed\u53e5return \u00b6 \u8df3\u51fa\u6240\u5728\u7684\u51fd\u6570\u6216\u65b9\u6cd5 \u5982\u679creturn\u65f6\u5728\u666e\u901a\u7684\u51fd\u6570,\u5219\u8868\u793a\u8df3\u51fa\u8be5\u51fd\u6570,\u5373\u4e0d\u518d\u6267\u884creturn\u540e\u9762\u7684\u4ee3\u7801. \u5982\u679creturn\u65f6\u5728main\u51fd\u6570\u4e2d,\u7ec8\u6b62main\u4e3b\u51fd\u6570,\u5c31\u662f\u7ec8\u6b62\u7a0b\u5e8f","title":"\u6d41\u7a0b\u63a7\u5236"},{"location":"Golang/%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/#_1","text":"\u7a0b\u5e8f\u4ece\u4e0a\u81f3\u4e0b\u9010\u884c\u7684\u6267\u884c,\u4e2d\u95f4\u6ca1\u6709\u4efb\u4f55\u7684\u5224\u65ad\u548c\u8df3\u8f6c.","title":"\u987a\u5e8f\u63a7\u5236"},{"location":"Golang/%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/#_2","text":"\u5355\u5206\u652f,\u53cc\u5206\u652f,\u591a\u5206\u652f \u5176\u4e2d: \u6761\u4ef6\u8868\u8fbe\u5f0f\u53ef\u4ee5\u7528\u5c0f\u62ec\u53f7\u62ec\u8d77\u6765,\u4e5f\u53ef\u4ee5\u4e0d\u5199,\u5efa\u8bae\u4e0d\u5199,\u56e0\u4e3a\u4f5c\u8005\u6e90\u7801\u5c31\u8fd9\u4e48\u5199\u7684 else\u4e0d\u53ef\u4ee5\u6362\u884c \u8868\u8fbe\u5f0f\u90e8\u5206\u4e0d\u53ef\u4ee5\u662f\u8d4b\u503c\u8bed\u53e5,\u4e00\u5b9a\u8981\u662f\u6761\u4ef6\u8bed\u53e5(\u5373true,\u6216false), if b = bool ... \u8bed\u6cd5\u62a5\u9519 if \u540e\u7684\u6761\u4ef6\u6761\u4ef6\u8868\u8fbe\u5f0f\u4e5f\u53ef\u4ee5\u4f7f\u7528()\u62ec\u8d77\u6765","title":"\u5206\u652f\u63a7\u5236"},{"location":"Golang/%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/#_3","text":"if \u6761\u4ef6\u8868\u8fbe\u5f0f { \u6267\u884c\u4ee3\u7801\u5757 } \u5f53\u6761\u4ef6\u8868\u8fbe\u5f0f\u4e3atrue\u65f6\u6267\u884c\u4ee3\u7801\u5757 \u4e5f\u53ef\u4ee5\u5728\u6761\u4ef6\u4e4b\u524d\u8d4b\u503c if age := 18 ; age > 18 { fmt . Println ( \"be responsible for your behavior\" ) }","title":"\u5355\u5206\u652f"},{"location":"Golang/%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/#_4","text":"if \u6761\u4ef6\u8868\u8fbe\u5f0f { \u4ee3\u7801\u57571 } else { //else\u4e0d\u80fd\u653e\u5230\u4e0b\u4e00\u884c \u4ee3\u7801\u57572 } var age int fmt . Println ( \"age:\" ) fmt . Scanln ( & age ) if age > 18 { fmt . Println ( \"1\" ) } else { fmt . Println ( \"2\" ) }","title":"\u53cc\u5206\u652f"},{"location":"Golang/%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/#_5","text":"if \u6761\u4ef6\u8868\u8fbe\u5f0f1 { \u4ee3\u7801\u57571 } else if \u6761\u4ef6\u8868\u8fbe\u5f0f2 { \u4ee3\u7801\u57572 } ... . } else { \u4ee3\u7801\u57573 } \u5176\u4e2d\u6700\u540e\u4e00\u4e2aelse\u53ef\u4ee5\u4e0d\u5b58\u5728","title":"\u591a\u5206\u652f"},{"location":"Golang/%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/#_6","text":"\u5728\u4e00\u4e2a\u5206\u652f\u7ed3\u6784\u4e2d\u53c8\u5d4c\u5957\u4e86\u53e6\u4e00\u4e2a\u5b8c\u6574\u7684\u5206\u652f\u7ed3\u6784,\u91cc\u9762\u7684\u5206\u652f\u7684\u7ed3\u6784\u79f0\u4e4b\u4e3a\u5185\u5c42\u5206\u652f,\u5916\u9762\u7684\u5206\u652f\u79f0\u4e4b\u4e3a\u5916\u5c42\u5206\u652f. \u5efa\u8bae\u6700\u591a\u4e0d\u8d85\u8fc7\u4e09\u5c42","title":"\u5d4c\u5957\u5206\u652f"},{"location":"Golang/%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/#switch","text":"switch\u8bed\u53e5\u7528\u4e8e\u57fa\u4e8e\u4e0d\u540c\u6761\u4ef6\u6267\u884c\u7684\u4e0d\u540c\u52a8\u4f5c,\u6bcf\u4e00\u4e2acase\u5206\u652f\u90fd\u662f\u552f\u4e00\u7684,\u4ece\u4e0a\u5230\u4e0b\u9010\u4e00\u6d4b\u8bd5,\u76f4\u5230\u5339\u914d\u4e3a\u6b62.\u90fd\u6267\u884c\u4e0d\u5230,\u6267\u884c\u9ed8\u8ba4\u5206\u652f. case\u5339\u914d\u9879\u540e\u9762\u4e0d\u9700\u8981\u52a0break \u7528switch\u7684\u8868\u8fbe\u5f0f\u4e8ecase\u7684\u8868\u8fbe\u5f0f\u5bf9\u6bd4 case\u540e\u7684\u8868\u8fbe\u5f0f\u53ef\u4ee5\u6709\u591a\u4e2a,\u7528\u9017\u53f7 , \u9694\u5f00 \u57fa\u672c\u8bed\u6cd5 switch \u8868\u8fbe\u5f0f { case \u8868\u8fbe\u5f0f1 , \u8868\u8fbe\u5f0f2 , ... : //\u8868\u793a\u5339\u914d\u5230\u8868\u8fbe\u5f0f1\u6216\u80052\u90fd\u5df2\u6267\u884c \u8bed\u53e5\u57571 case \u8868\u8fbe\u5f0f3 , \u8868\u8fbe\u5f0f4 , ... : \u8bed\u53e5\u57572 . . . default : \u8bed\u53e5\u5757 } \u7ec3\u4e60: //\u6309\u8f93\u5165\u8f6c\u6362\u4e3a\u661f\u671f\u8f93\u51fa var key byte fmt . Println ( \"enter a byte:\" ) fmt . Scanf ( \"%c\" , & key ) switch key { case 'a' : fmt . Println ( \"monday\" ) case 'b' : fmt . Println ( \"tuesday\" ) case 'c' : fmt . Println ( \"wednesday\" ) case 'd' : fmt . Println ( \"thursday\" ) case 'e' : fmt . Println ( \"friday\" ) case 'f' : fmt . Println ( \"saturday\" ) case 'g' : fmt . Println ( \"sunday\" ) default : fmt . Println ( \"cnm\" ) } \u7ec6\u8282\u8ba8\u8bba case/switch\u540e\u662f\u4e00\u4e2a\u8868\u8fbe\u5f0f.(\u5e38\u91cf\u503c,\u53d8\u91cf,\u4e00\u4e2a\u6709\u8fd4\u56de\u503c\u7684\u51fd\u6570\u90fd\u53ef\u4ee5) case\u540e\u7684\u5404\u4e2a\u8868\u8fbe\u5f0f\u7684\u503c\u7684\u6570\u636e\u7c7b\u578b,\u5fc5\u987b\u548cswitch\u7684\u8868\u8fbe\u5f0f\u6570\u636e\u7c7b\u578b\u4e00\u81f4. case\u540e\u9762\u53ef\u4ee5\u5e26\u591a\u4e2a\u8868\u8fbe\u5f0f,\u4f7f\u7528\u9017\u53f7\u95f4\u9694.case \u8868\u8fbe\u5f0f1,\u8868\u8fbe\u5f0f2.... switch n1 { case n2 , 10 , 5 : // \u53ea\u8981\u5339\u914d\u5230\u4efb\u610f\u4e00\u4e2a\u7b26\u5408\u7684\u5c31\u4f1a\u6267\u884c\u4e0b\u9762\u7684\u8bed\u53e5 fmt . Println ( \"123\" ) case\u540e\u9762\u7684\u8868\u8fbe\u5f0f\u5982\u679c\u662f\u5e38\u91cf\u503c(\u5b57\u9762\u5e38\u91cf),\u5219\u8981\u6c42\u4e0d\u80fd\u91cd\u590d.\u4f46\u662f\u5982\u679c\u662f\u503c\u76f8\u540c\u7684\u53d8\u91cf,golang\u65e0\u6cd5\u68c0\u6d4b\u51fa\u6765,\u53ef\u4ee5\u9a97\u8fc7\u7f16\u8bd1\u5668. case\u540e\u9762\u4e0d\u9700\u8981\u5e26break,\u7a0b\u5e8f\u5339\u914d\u5230\u4e00\u4e2acase\u540e\u5c31\u4f1a\u6267\u884c\u5bf9\u5e94\u7684\u4ee3\u7801\u5757,\u7136\u540e\u9000\u51faswitch,\u5982\u679c\u90fd\u6267\u884c\u4e0d\u5230,\u6267\u884cdefault default\u8bed\u53e5\u4e0d\u662f\u5fc5\u987b\u7684. switch\u540e\u4e5f\u53ef\u4ee5\u4e0d\u5e26\u8868\u8fbe\u5f0f,\u7c7b\u4f3cif--else\u5206\u652f\u6765\u4f7f\u7528. switch\u540e\u4e5f\u53ef\u4ee5\u76f4\u63a5\u58f0\u660e\u53d8\u91cf.\u5206\u53f7\u7ed3\u675f,\u4e0d\u63a8\u8350\u4f7f\u7528. switch grade := 90 ;{ case grade > 90 : fmt . Println ( \"great\" ) case grade > 70 : fmt . Println ( \"ok\" ) } switch \u7a7f\u900f-fallthrough,\u5728case\u8bed\u53e5\u5757\u540e\u52a0fallthrough,\u5219\u4f1a\u7ee7\u7eed\u6267\u884c\u4e0b\u4e00\u4e2acase,\u65e0\u8bba\u4e0b\u4e00\u4e2acase\u662f\u5426\u6ee1\u8db3,\u4e5f\u53ebswitch\u7a7f\u900f. var num int = 10 switch num { case 10 : fmt . Println ( \"1\" ) fallthrough case 20 : fmt . Println ( \"2\" ) fallthrough // \u9ed8\u8ba4\u7a7f\u900f\u4e00\u5c42 case 30 : fmt . Println ( \"3\" ) } Type Switch:switch\u8bed\u53e5\u8fd8\u53ef\u4ee5\u88ab\u7528\u4e8etype_switch\u6765\u5224\u65ad\u67d0\u4e2ainterface\u53d8\u91cf\u4e2d\u5b9e\u9645\u6307\u5411\u7684\u53d8\u91cf\u7c7b\u578b.","title":"switch\u5206\u652f\u7ed3\u6784"},{"location":"Golang/%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/#switchif","text":"\u5224\u65ad==\u5177\u4f53\u6570\u503c\u4e0d\u591a==,\u4e14\u7b26\u5408\u6574\u6570,\u6d6e\u70b9\u6570,\u5b57\u7b26,\u5b57\u7b26\u4e32\u8fd9\u51e0\u79cd\u7c7b\u578b, \u6761\u4ef6\u6bd4\u8f83\u5c11 ,\u4f7f\u7528switch,\u7b80\u6d01\u9ad8\u6548 ==\u5bf9\u533a\u95f4\u7684\u5224\u65ad==\u548c\u7ed3\u679c\u4e3abool\u7c7b\u578b\u7684\u5224\u65ad,\u4f7f\u7528if,if\u7684\u4f7f\u7528\u8303\u56f4\u66f4\u5e7f.","title":"switch\u4e8eif\u7684\u6bd4\u8f83"},{"location":"Golang/%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/#_7","text":"","title":"\u5faa\u73af\u63a7\u5236"},{"location":"Golang/%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/#for","text":"","title":"for\u5faa\u73af\u63a7\u5236"},{"location":"Golang/%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/#_8","text":"for \u5faa\u73af\u53d8\u91cf\u521d\u59cb\u5316 ; \u5faa\u73af\u6761\u4ef6 ; \u5faa\u73af\u53d8\u91cf\u8fed\u4ee3 { \u5faa\u73af\u8bed\u53e5 } ---------------------- for \u5faa\u73af\u5224\u65ad\u6761\u4ef6 { \u5faa\u73af\u6267\u884c\u8bed\u53e5 //\u53d8\u91cf\u58f0\u660e\u521d\u59cb\u5316\u548c\u53d8\u91cf\u8fed\u4ee3\u53ef\u4ee5\u5199\u5230\u5176\u4ed6\u4f4d\u7f6e } ---------------------- for { // \u7b49\u4ef7\u4e8efor;;{} \u662f\u4e00\u4e2a\u65e0\u7ebf\u5faa\u73af,\u901a\u5e38\u914d\u5408break\u4f7f\u7528 \u5faa\u73af\u6267\u884c\u8bed\u53e5 } for i := 1 ; i < 10 ; i ++ { fmt . Println ( \"i\" ) } fmt . Println ( i ) //\u62a5\u9519,\u5916\u90e8\u65e0\u6cd5\u4f7f\u7528undefined i -------------------------------------------- for i := 0 ; i < 20 ; i += 2 { //\u4e5f\u53ef\u4ee5\u81ea\u5df1\u5b9a\u4e49step fmt . Println ( i ) }","title":"\u57fa\u672c\u8bed\u6cd5"},{"location":"Golang/%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/#_9","text":"for\u540e\u8bed\u53e5\u987a\u5e8f\u4e0d\u53ef\u53d8 for\u5faa\u73af\u4e2d\u58f0\u660e\u7684\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u53ea\u5728for\u5faa\u73af\u4e2d.\u5916\u90e8\u65e0\u6cd5\u4f7f\u7528 \u5faa\u73af\u6761\u4ef6\u4e00\u5b9a\u662f\u4e2abool\u503c \u53d8\u91cf\u58f0\u660e\u521d\u59cb\u5316\u548c\u53d8\u91cf\u8fed\u4ee3\u53ef\u4ee5\u5199\u5230\u5176\u4ed6\u4f4d\u7f6e j := 1 for j < 10 { fmt . Println ( j ) j ++ } Golang\u63d0\u4f9bfor-range\u7684\u65b9\u5f0f.\u53ef\u4ee5\u65b9\u4fbf\u904d\u5386\u5b57\u7b26\u4e32\u548c\u6570\u7ec4, for\u540e\u9762\u7684\u6761\u4ef6\u6267\u884c\u987a\u5e8f,i:=1 \u2192i<10\u2192\u5faa\u73af\u4f53 \u2192 i++ \u2192 i<10 ..... for\u4e4b\u540e,{}\u4e4b\u524d\u7684\u8bed\u53e5\u4e0d\u80fd\u7528()\u62ec\u8d77\u6765 for\u540e\u7684\u8bed\u53e5\u5206\u4e09\u90e8\u5206,\u6bcf\u90e8\u5206\u90fd\u53ef\u7701\u7565,\u6839\u636e\u5b9e\u9645\u9700\u6c42\u800c\u5b9a.","title":"\u6ce8\u610f\u4e8b\u9879"},{"location":"Golang/%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/#_10","text":"","title":"\u5b57\u7b26\u4e32\u904d\u5386"},{"location":"Golang/%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/#1","text":"var str string = \"hello,word\" for i := 0 ; i < len ( str ); i ++ { fmt . Printf ( \"%c\\n\" , str [ i ]) } \u6ce8\u610f:\u6b64\u65b9\u6cd5\u662f\u6309\u7167\u5b57\u8282\u6765\u904d\u5386\u7684,\u6c49\u5b57\u4f1a\u51fa\u73b0\u4e71\u7801, \u89e3\u51b3,\u9700\u8981\u5c06 str\u8f6c\u6210 []\u5207\u7247 \u6765\u89e3\u51b3 var str string = \"\u4e00\u5f80\u65e0\u524d\u864e\u5c71\u884c\" str2 := [] rune ( str ) for i := 0 ; i < len ( str2 ); i ++ { fmt . Printf ( \"%c\\n\" , str2 [ i ]) }","title":"\u65b9\u6cd51\u4f20\u7edf\u65b9\u5f0f,"},{"location":"Golang/%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/#2-forrange","text":"\u6309\u7167\u5b57\u7b26\u7684\u65b9\u5f0f\u904d\u5386 \u5982\u679c\u4e0d\u60f3\u8981\u7d22\u5f15\u503c,\u53ef\u4ee5\u4f7f\u7528 _ \u4e0b\u5212\u7ebf\u63a5\u66ff\u8868\u793a\u4e22\u5f03\u53d8\u91cf var str string = \"hello,word\u4e0a\u6d77\" for index , val := range str { fmt . Printf ( \"%d,%c\\n\" , index , val ) } >> > 0 , h 1 , e 2 , l 3 , l 4 , o 5 ,, 6 , w 7 , o 8 , r 9 , d 10 , \u4e0a 13 , \u6d77 // \u6ce8\u610f:index10\u4e4b\u540e\u76f4\u63a5\u53d8\u4e3a13,\u8bf4\u660e\u4e00\u4e2a\u6c49\u5b57\u5360\u4e09\u4e2a\u5b57\u7b26 \u5c0f\u7ec3\u4e60 //\u683c\u5f0f\u5316\u5faa\u73af\u6253\u5370 var n int = 6 for i := 0 ; i <= n ; i ++ { fmt . Printf ( \"%v + %v = %v\\n\" , i , n - i , n ) }","title":"\u65b9\u6cd52 for...range\u65b9\u6cd5(\u952e\u503c\u5faa\u73af)"},{"location":"Golang/%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/#while","text":"\u5148\u5224\u65ad\u518d\u505a Go\u4e2d\u6ca1\u6709whle\u548cdo,,,while\u8bed\u6cd5,\u53ef\u4ee5\u901a\u8fc7for\u5faa\u73af\u6765\u5b9e\u73b0\u5176\u4f7f\u7528\u6548\u679c. for\u5faa\u73af\u5b9e\u73b0while\u7684\u6548\u679c for { if \u5faa\u73af\u6761\u4ef6\u8868\u8fbe\u5f0f { break // \u8df3\u51fafor\u5faa\u73af } \u5faa\u73af\u8bed\u53e5 \u5faa\u73af\u53d8\u91cf\u8fed\u4ee3 } \u8bf4\u660e:\u4f7f\u7528\u6b7b\u5faa\u73affor,\u5728\u5185\u90e8\u8fdb\u884c\u8fed\u4ee3\u548c\u5faa\u73af\u8bed\u53e5,\u7528if\u5224\u65ad\u6765\u63a7\u5236\u6b7b\u5faa\u73af\u7684\u7ed3\u675f. break\u6765\u7ed3\u675ffor\u5faa\u73af //\u8f93\u516510\u53e5hello world while\u5b9e\u73b0 var i int = 0 for { if i == 10 { break } fmt . Println ( \"hello world\" ) i ++ }","title":"while"},{"location":"Golang/%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/#dowhile","text":"\u5148\u505a\u518d\u5224\u65ad for \u5b9e\u73b0do...while for { \u5faa\u73af\u8bed\u53e5 \u5faa\u73af\u53d8\u91cf\u8fed\u4ee3 if \u5faa\u73af\u6761\u4ef6 { break } } \u8bf4\u660e: \u5148\u5faa\u73af,\u518d\u5224\u65ad,\u56e0\u6b64\u81f3\u5c11\u6267\u884c\u4e00\u6b21 \u5f53\u5faa\u73af\u6210\u7acb\u540e,\u6267\u884cbreak,\u8df3\u51fafor\u5faa\u73af,\u7ed3\u675f\u5faa\u73af //\u8f93\u516510\u53e5hello world do...while\u5b9e\u73b0 var i int = 0 for { fmt . Println ( \"hello world\" ) i ++ if i == 10 { break } }","title":"do...while"},{"location":"Golang/%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/#_11","text":"\u5c06\u4e00\u4e2a\u5faa\u73af\u653e\u5230\u53e6\u4e00\u4e2a\u5faa\u73af\u4f53\u5185,\u5c31\u5f62\u6210\u4e86\u5d4c\u5957\u5faa\u73af,\u5916\u5c42\u7684for\u79f0\u4e3a\u5916\u5c42\u5faa\u73af,\u5185\u5c42\u7684for\u79f0\u4e3a\u5185\u5c42\u5faa\u73af. \u5efa\u8bae\u4e0d\u8d85\u8fc73\u5c42 \u8bbe\u5916\u5c42\u5faa\u73afm\u6b21,\u5185\u5c42\u5faa\u73afn\u6b21,\u5219\u5185\u5c42\u5faa\u73af\u4f53\u5b9e\u9645\u4e0a\u9700\u8981\u6267\u884cm*n= mn\u6b21 \u672c\u8d28:\u5c06\u5185\u5c42\u5faa\u73af\u5f53\u6210\u5916\u5c42\u5faa\u73af\u7684\u5faa\u73af\u4f53 //\u6253\u5370\u8f93\u5165\u6570\u5b57\u7684\u7a7a\u5fc3\u91d1\u5b50\u5854 var totalLevel int fmt . Print ( \"enter a digit:\" ) fmt . Scanln ( & totalLevel ) for i := 1 ; i <= totalLevel ; i ++ { //\u6253\u5370*\u524d\u5148\u6253\u5370\u7a7a\u683c for k := 1 ; k <= totalLevel - i ; k ++ { fmt . Print ( \" \" ) } //j\u8868\u793a\u6bcf\u5c42\u6253\u5370\u591a\u5c11* for j := 1 ; j <= 2 * i - 1 ; j ++ { if j == 1 || j == 2 * i - 1 || i == totalLevel { fmt . Print ( \"*\" ) } else { fmt . Print ( \" \" ) } } fmt . Println () } \u5148\u6613\u540e\u96be,\u5148\u6b7b\u540e\u6d3b //\u4e5d\u4e5d\u4e58\u6cd5\u8868 for i := 1 ; i <= 9 ; i ++ { for j := 1 ; j <= i ; j ++ { fmt . Printf ( \"%v * %v = %v\\t\" , j , i , j * i ) } fmt . Println () } #python\u7684\u4e5d\u4e5d\u4e58\u6cd5\u8868 \\t\u5236\u8868\u7b26\u7684\u5c0f\u6280\u5de7 for i in range ( 9 ): for j in range ( i ): print ( f \"{j+1} * {i} = {(j+1)*i}\" , end = ' \\t ' ) print ()","title":"\u5faa\u73af\u5d4c\u5957"},{"location":"Golang/%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/#break","text":"\u7ec8\u6b62\u5faa\u73af break\u8bed\u53e5\u5728\u591a\u5c42\u5d4c\u5957\u7684\u8bed\u53e5\u5757\u4e2d\u65f6,\u53ef\u4ee5\u901a\u8fc7\u6807\u7b7e\u6307\u660e\u8981\u7ec8\u6b62\u7684\u662f\u54ea\u4e00\u5c42\u8bed\u53e5\u5757 label1 :{ label2 :{ label3 :{ break label2 } //a } //b } //c \u4e0d\u5199,\u9ed8\u8ba4\u7ec8\u6b62\u672c\u5c42\u5faa\u73af,\u5373break\u540e\u5230a,\u5982\u52a0label2,\u5219\u8df3\u5230b,label1\u5c31\u8df3\u5230c //\u4f8b\u5b50 label1 : //\u8bbe\u7f6e\u4e00\u4e2a\u6807\u7b7e for i := 0 ; i < 4 ; i ++ { for j := 0 ; j < 10 ; j ++ { if j == 2 { break label1 } fmt . Print ( \"j=\" , j ) } fmt . Print ( \"i=\" , i ) } >> > o 1","title":"break"},{"location":"Golang/%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/#continue","text":"\u8df3\u51fa\u672c\u6b21\u5faa\u73af,\u5f00\u59cb\u4e0b\u4e00\u6b21\u5faa\u73af continue\u8bed\u53e5\u51fa\u73b0\u5728\u591a\u5c42\u5d4c\u5957\u7684\u5faa\u73af\u8bed\u53e5\u4e2d\u65f6,\u53ef\u4ee5\u901a\u8fc7\u6807\u7b7e\u6307\u660e\u8981\u8df3\u8fc7\u7684\u65f6\u54ea\u4e00\u5c42\u5faa\u73af,\u89c4\u5219\u540cbreak","title":"continue"},{"location":"Golang/%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/#goto","text":"\u6c47\u7f16\u8bed\u8a00\u4e2d\u4f7f\u7528\u6bd4\u8f83\u591a,\u9ad8\u7ea7\u8bed\u8a00\u7528\u7684\u6bd4\u8f83\u5c11. Go\u8bed\u8a00\u7684goto\u8bed\u53e5\u53ef\u4ee5\u65e0\u6761\u4ef6\u7684\u8f6c\u79fb\u5230\u7a0b\u5e8f\u4e2d\u6307\u5b9a\u7684\u884c. goto\u8bed\u53e5\u901a\u5e38\u4e0e\u6761\u4ef6\u8bed\u53e5\u914d\u5408\u4f7f\u7528,\u53ef\u4ee5\u7528\u6765\u5b9e\u73b0\u6761\u4ef6\u8f6c\u79fb,\u8df3\u51fa\u5faa\u73af\u4f53\u7b49\u529f\u80fd. \u5728Go\u7a0b\u5e8f\u8bbe\u8ba1\u4e2d,\u4e0d\u63a8\u8350\u4f7f\u7528goto\u8bed\u53e5,\u907f\u514d\u9020\u6210\u7a0b\u5e8f\u7684\u6df7\u4e71,\u4f7f\u7406\u89e3\u548c\u8c03\u8bd5\u4ea7\u751f\u56f0\u96be.. goto label .. label : statement","title":"\u8df3\u8f6c\u63a7\u5236\u8bed\u53e5goto"},{"location":"Golang/%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/#return","text":"\u8df3\u51fa\u6240\u5728\u7684\u51fd\u6570\u6216\u65b9\u6cd5 \u5982\u679creturn\u65f6\u5728\u666e\u901a\u7684\u51fd\u6570,\u5219\u8868\u793a\u8df3\u51fa\u8be5\u51fd\u6570,\u5373\u4e0d\u518d\u6267\u884creturn\u540e\u9762\u7684\u4ee3\u7801. \u5982\u679creturn\u65f6\u5728main\u51fd\u6570\u4e2d,\u7ec8\u6b62main\u4e3b\u51fd\u6570,\u5c31\u662f\u7ec8\u6b62\u7a0b\u5e8f","title":"\u8df3\u51fa\u63a7\u5236\u8bed\u53e5return"},{"location":"Golang/%E7%BB%93%E6%9E%84%E4%BD%93/","text":"\u7ed3\u6784\u4f53 \u58f0\u660e \u7ed3\u6784\u4f53\u7684\u5b57\u6bb5\\\u5c5e\u6027 \u7ed3\u6784\u4f53\u521d\u59cb\u5316 \u4f7f\u7528\u952e\u503c\u5bf9\u521d\u59cb\u5316 \u4f7f\u7528\u503c\u7684\u5217\u8868\u521d\u59cb\u5316 \u533f\u540d\u7ed3\u6784\u4f53 \u7ed3\u6784\u4f53\u7684\u5b9e\u4f8b\u5316 \u57fa\u672c\u5b9e\u4f8b\u5316 \u533f\u540d\u5b9e\u4f8b\u5316 \u521b\u5efa\u6307\u9488\u7c7b\u578b\u7ed3\u6784\u4f53 \u53d6\u5740\u5bf9\u7ed3\u6784\u4f53\u8fdb\u884c\u5b9e\u4f8b\u5316 \u7ed3\u6784\u4f53\u7684\u5185\u5b58\u5e03\u5c40 \u7ed3\u6784\u4f53\u5b57\u6bb5\u7684\u53ef\u89c1\u6027 \u7ed3\u6784\u4f53\u76f8\u7b49\u6027 \u6ce8\u610f \u6848\u4f8b \u7ed3\u6784\u4f53 \u00b6 Go\u8bed\u8a00\u4e2d\u6ca1\u6709\u201c\u7c7b\u201d\u7684\u6982\u5ff5\uff0c\u4e5f\u4e0d\u652f\u6301\u201c\u7c7b\u201d\u7684\u7ee7\u627f\u7b49\u9762\u5411\u5bf9\u8c61\u7684\u6982\u5ff5\u3002Go\u8bed\u8a00\u4e2d\u901a\u8fc7\u7ed3\u6784\u4f53\u7684\u5185\u5d4c\u518d\u914d\u5408\u63a5\u53e3\u6bd4\u9762\u5411\u5bf9\u8c61\u5177\u6709\u66f4\u9ad8\u7684\u6269\u5c55\u6027\u548c\u7075\u6d3b\u6027\u3002 \u58f0\u660e \u00b6 \u4f7f\u7528type\u548cstruct\u5173\u952e\u5b57\u6765\u5b9a\u4e49\u7ed3\u6784\u4f53. type \u7c7b\u578b\u540d struct { \u5b57\u6bb5\u540d \u5b57\u6bb5\u7c7b\u578b \u5b57\u6bb5\u540d \u5b57\u6bb5\u7c7b\u578b ... } \u6ce8\u610f: \u7c7b\u578b\u540d:\u6807\u8bc6\u81ea\u5b9a\u4e49\u7ed3\u6784\u4f53\u7684\u540d\u79f0,\u5728\u540c\u4e00\u4e2a\u5305\u5185\u4e0d\u53ef\u91cd\u590d(\u65e0\u6cd5\u91cd\u6784) \u5b57\u6bb5\u540d:\u6807\u8bc6\u7ed3\u6784\u4f53\u5b57\u6bb5\u7684\u540d\u5b57,\u7ed3\u6784\u4f53\u4e2d\u5b57\u6bb5\u540d\u5fc5\u987b\u552f\u4e00. \u5b57\u6bb5\u7c7b\u578b:\u8868\u793a\u7ed3\u6784\u4f53\u7684\u5177\u4f53\u7c7b\u578b. //\u6bd4\u5982\u5b9a\u4e49\u4e00\u4e2a\u4eba\u7ed3\u6784\u4f53 type person struct { name , city string // \u540c\u7c7b\u578b\u7684\u5b57\u6bb5\u4e5f\u53ef\u4ee5\u5199\u5728\u540c\u4e00\u884c gender string age int8 } \u7ed3\u6784\u4f53\u7684\u5b57\u6bb5\\\u5c5e\u6027 \u00b6 \u5b57\u6bb5\u58f0\u660e\u8bed\u6cd5\u540c\u53d8\u91cf: \u5b57\u6bb5\u540d \u5b57\u6bb5\u7c7b\u578b \u5b57\u6bb5\u7c7b\u578b\u53ef\u4ee5\u4e3a:\u57fa\u672c\u7c7b\u578b,\u6570\u7ec4\u6216\u8005\u5f15\u7528\u7c7b\u578b \u5728\u521b\u5efa\u4e00\u4e2a\u7ed3\u6784\u4f53\u53d8\u91cf\u540e,\u5982\u679c\u6ca1\u6709\u8d4b\u503c,\u90fd\u4f1a\u5bf9\u5e94\u7ed9\u8be5\u6570\u636e\u7ed3\u6784\u7684\u9ed8\u8ba4\u503c(\u96f6\u503c),\u5176\u4e2d\u6307\u9488,slice,\u548cmap\u7684\u96f6\u503c\u662fnil,\u9700\u8981\u5148make\u624d\u53ef\u4ee5\u4f7f\u7528. type Person struct { Name string Age int Score [ 5 ] float64 ptr * int slice [] int map1 map [ string ] string } func main () { var p1 Person fmt . Println ( p1 ) if p1 . ptr == nil { fmt . Println ( \"ptr\" ) } if p1 . slice == nil { fmt . Println ( \"slice\" ) } if p1 . map1 == nil { fmt . Println ( \"map1\" ) } p1 . slice = make ([] int , 3 ) p1 . slice [ 0 ] = 23 p1 . map1 = make ( map [ string ] string ) p1 . map1 [ \"key1\" ] = \"value1\" fmt . Println ( p1 ) } >> > { 0 [ 0 0 0 0 0 ] < nil > [] map []} ptr slice map1 { 0 [ 0 0 0 0 0 ] < nil > [ 23 0 0 ] map [ key1 : value1 ]} \u4e0d\u540c\u7ed3\u6784\u4f53\u53d8\u91cf\u5b57\u6bb5\u662f\u72ec\u7acb\u7684,\u4e92\u8865\u5f71\u54cd,\u4e00\u4e2a\u7ed3\u6784\u4f53\u53d8\u91cf\u5b57\u6bb5\u7684\u66f4\u6539,\u4e0d\u5f71\u54cd\u53e6\u4e00\u4e2a\u5bf9\u8c61,\u5373\u7ed3\u6784\u4f53\u662f\u503c\u7c7b\u578b. \u7ed3\u6784\u4f53\u521d\u59cb\u5316 \u00b6 \u6ca1\u6709\u521d\u59cb\u5316\u7684\u7ed3\u6784\u4f53,\u5176\u6210\u5458\u53d8\u91cf\u90fd\u662f\u5bf9\u5e94\u5176\u7c7b\u578b\u7684\u96f6\u503c. type person struct { name string city string age int8 } func main () { var p1 person fmt . Printf ( \"p1:%#v\" , p1 ) } >> > p1 : main . person { name : \"\" , city : \"\" , age : 0 } \u6ce8\u610f:\u6307\u9488,slice\u548cmap\u7684\u96f6\u503c\u90fd\u662fnil,\u5373\u8fd8\u6ca1\u6709\u5206\u6d3e\u7a7a\u95f4,\u6ca1\u6cd5\u7528 \u4f7f\u7528\u952e\u503c\u5bf9\u521d\u59cb\u5316 \u00b6 \u952e\u5bf9\u5e94\u7ed3\u6784\u4f53\u7684\u5b57\u6bb5,\u503c\u5bf9\u5e94\u8be5\u5b57\u6bb5\u7684\u521d\u59cb\u503c, \u82e5\u4f7f\u7528\u8fd9\u79cd\u65b9\u6cd5,\u6bcf\u4e2a\u5b57\u6bb5\u540e\u90fd\u5fc5\u987b\u52a0 , type person struct { name string city string age int8 } func main () { p1 := person { name : \"james\" , city : \"london\" , age : 30 , } fmt . Printf ( \"p1=%#v\" , p1 ) } >> > p1 = main . person { name : \"james\" , city : \"london\" , age : 30 } \u4e5f\u53ef\u4ee5\u76f4\u63a5\u751f\u6210\u6307\u9488\u7c7b\u578b\u7684\u7ed3\u6784\u4f53 type person struct { name string city string age int8 } func main () { p1 := & person { name : \"james\" , city : \"london\" , age : 30 , } fmt . Printf ( \"p1=%#v\" , p1 ) } >> > p1 = & main . person { name : \"james\" , city : \"london\" , age : 30 } \u4f7f\u7528\u503c\u7684\u5217\u8868\u521d\u59cb\u5316 \u00b6 \u521d\u59cb\u5316\u7ed3\u6784\u4f53\u7684\u65f6\u5019\u53ef\u4ee5\u7b80\u5199,\u4e5f\u5c31\u662f\u521d\u59cb\u5316\u7684\u65f6\u5019\u4e0d\u5199\u952e,\u76f4\u63a5\u5199\u503c type person struct { name string city string age int8 } func main () { p1 := person { \"james\" , \"london\" , 30 , } fmt . Printf ( \"p1=%#v\" , p1 ) } >> > p1 = main . person { name : \"james\" , city : \"london\" , age : 30 } ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ type Stu struct { Name string Age int } func main () { var stu1 = Stu { \"agsol\" , 19 } stu2 := Stu { \"tom\" , 20 } fmt . Println ( stu1 , stu2 ) } >> > { agsol 19 } { tom 20 } \u6307\u9488\u7c7b\u578b\u540c\u7406 type person struct { name string city string age int8 } func main () { p1 := & person { \"james\" , \"london\" , 30 , } fmt . Printf ( \"p1=%#v\" , p1 ) } >> > p1 = & main . person { name : \"james\" , city : \"london\" , age : 30 } ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ type Stu struct { Name string Age int } func main () { var stu1 = & Stu { \"agsol\" , 19 } stu2 := & Stu { \"tom\" , 20 } fmt . Println ( stu1 , stu2 ) fmt . Println ( * stu1 , * stu2 ) } >> > & { agsol 19 } & { tom 20 } { agsol 19 } { tom 20 } \u4f7f\u7528\u952e\u503c\u5bf9\u65b9\u5f0f\u521d\u59cb\u5316\u7684\u65f6\u5019,\u8981\u6ce8\u610f: \u5fc5\u987b\u521d\u59cb\u5316\u7ed3\u6784\u4f53\u7684\u6240\u6709\u5b57\u6bb5 \u521d\u59cb\u503c\u7684\u586b\u5145\u987a\u5e8f\u5fc5\u987b\u4e0e\u5b57\u6bb5\u5728\u7ed3\u6784\u4f53\u4e2d\u58f0\u660e\u987a\u5e8f\u4e00\u81f4. \u8be5\u65b9\u5f0f\u4e0d\u53ef\u4ee5\u4e0e\u952e\u503c\u5bf9\u521d\u59cb\u5316\u65b9\u5f0f\u6df7\u7528. \u533f\u540d\u7ed3\u6784\u4f53 \u00b6 a := struct { name string age int sex int }{ age : 18 } fmt . Println ( a . age ) \u5728\u51fd\u6570\u7ea2\u53ea\u7528\u4e00\u6b21\u7684\u65f6\u5019\u4f7f\u7528. \u7ed3\u6784\u4f53\u7684\u5b9e\u4f8b\u5316 \u00b6 \u53ea\u6709\u5f53\u7ed3\u6784\u4f53\u5b9e\u4f8b\u5316\u65f6,\u624d\u4f1a\u771f\u6b63\u7684\u5206\u914d\u5185\u5b58.\u4e5f\u5c31\u662f\u8bf4\u5fc5\u987b\u5b9e\u4f8b\u5316\u540e\u624d\u80fd\u4f7f\u7528i\u7ed3\u6784\u4f53\u7684\u5b57\u6bb5. \u7ed3\u6784\u4f53\u672c\u8eab\u4e5f\u662f\u4e00\u79cd\u6570\u636e\u7c7b\u578b,\u53ef\u4ee5\u50cf\u58f0\u660e\u5185\u7f6e\u7c7b\u578b\u4e00\u6837\u4f7f\u7528var\u5173\u952e\u5b57\u58f0\u660e\u7ed3\u6784\u4f53\u7c7b\u578b. var \u7ed3\u6784\u4f53\u5b9e\u4f8b \u7ed3\u6784\u4f53\u7c7b\u578b \u57fa\u672c\u5b9e\u4f8b\u5316 \u00b6 type person struct { name , city string gender string age int8 } func main () { var p1 person p1 . name = \"agsol\" p1 . city = \"shagnhai\" p1 . gender = \"male\" fmt . Println ( p1 ) } >> > { agsol shagnhai male 0 } ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ func main () { var p1 person p1 . name = \"agsol\" p1 . city = \"shagnhai\" p1 . age = 1 fmt . Println ( p1 ) fmt . Println ( p1 . name ) } >> > { agsol shagnhai 1 } agsol \u521d\u59cb\u5316\u540e\u4f1a\u7ed9\u9ed8\u8ba4\u503c,int8\u9ed8\u8ba4\u503c0 \u4e5f\u53ef\u4ee5\u901a\u8fc7 . \u6765\u8bbf\u95ee\u7ed3\u6784\u4f53\u7684\u5b57\u6bb5. \u533f\u540d\u5b9e\u4f8b\u5316 \u00b6 \u5728\u5b9a\u4e49\u4e00\u4e9b\u4e34\u65f6\u6570\u636e\u7ed3\u6784\u65f6\u8fd8\u53ef\u4ee5\u4f7f\u7528\u533f\u540d\u5b9e\u4f8b\u5316. func main () { var user struct { Name string Age int } user . Name = \"agsol\" user . Age = 3 fmt . Println ( user ) } >> > { agsol 3 } \u521b\u5efa\u6307\u9488\u7c7b\u578b\u7ed3\u6784\u4f53 \u00b6 \u53ef\u4ee5\u4f7f\u7528new\u5173\u952e\u5b57\u5bf9\u7ed3\u6784\u4f53\u8fdb\u884c\u5b9e\u4f8b\u5316,\u5f97\u5230\u7684\u662f\u7ed3\u6784\u4f53\u7684\u6307\u9488. type person struct { name , city string gender string age int8 } func main () { var p1 = new ( person ) fmt . Printf ( \"type:%T\\n\" , p1 ) fmt . Printf ( \"value:%#v\\n\" , p1 ) p1 . name = \"tom\" p1 . age = 18 fmt . Println ( * p1 ) fmt . Println ( p1 ) } >> > type : * main . person value : & main . person { name : \"\" , city : \"\" , gender : \"\" , age : 0 } { tom 18 } & { tom 18 } \u6b64\u65f6p1\u662f\u4e00\u4e2a\u6307\u9488\u5bf9\u8c61,\u53d6\u503c\u53ef\u4ee5\u4f7f\u7528 * ,printf\u4e2d\u53ef\u662f\u4f7f\u7528 %#v \u6765\u8fdb\u884c\u952e\u503c\u5bf9\u8f93\u51fa \u53d6\u5740\u5bf9\u7ed3\u6784\u4f53\u8fdb\u884c\u5b9e\u4f8b\u5316 \u00b6 \u4f7f\u7528 & \u5bf9\u7ed3\u6784\u4f53\u8fdb\u884c\u53d6\u5730\u5740\u64cd\u4f5c\u76f8\u5f53\u4e8e\u5bf9\u8be5\u7ed3\u6784\u4f53\u7c7b\u578b\u8fdb\u884c\u4e86\u4e00\u6b21new\u7684\u5b9e\u4f8b\u5316\u64cd\u4f5c. type person struct { name string city string age int8 } func main () { p1 := & person {} fmt . Printf ( \"%T\\n\" , p1 ) fmt . Printf ( \"p1=%#v\\n\" , p1 ) fmt . Printf ( \"p1=%#v\\n\" , * p1 ) p1 . name = \"jerry\" //\u7b49\u4ef7\u4e8e(*p1).name = \"jerry\" p1 . city = \"cy\" p1 . age = 20 fmt . Printf ( \"p1=%#v\\n\" , p1 ) fmt . Printf ( \"p1=%#v\\n\" , * p1 ) } >> > * main . person p1 = & main . person { name : \"\" , city : \"\" , age : 0 } p1 = main . person { name : \"\" , city : \"\" , age : 0 } p1 = & main . person { name : \"jerry\" , city : \"cy\" , age : 20 } p1 = main . person { name : \"jerry\" , city : \"cy\" , age : 20 } new\u5f97\u5230\u7684\u662f\u7ed3\u6784\u4f53\u6307\u9488,\u5176\u4e2dp1.name=\"jerry\"\u5728\u5e95\u5c42\u662f(*p1).name=\"jerrry\",\u662fGo\u8bed\u8a00\u5e2e\u5fd9\u5b9e\u73b0\u7684\u8bed\u6cd5\u7cd6 \u7ed3\u6784\u4f53\u7684\u5185\u5b58\u5e03\u5c40 \u00b6 \u7ed3\u6784\u4f53\u5360\u7528\u4e00\u5757\u8fde\u7eed\u7684\u5185\u5b58 type test struct { a int8 b int8 c int8 d int8 } func main () { n := test { 1 , 2 , 3 , 4 , } fmt . Printf ( \"n.a:%p\\n\" , & n . a ) fmt . Printf ( \"n.b:%p\\n\" , & n . b ) fmt . Printf ( \"n.c:%p\\n\" , & n . c ) fmt . Printf ( \"n.d:%p\\n\" , & n . d ) } >> > n . a : 0xc0000100a0 n . b : 0xc0000100a1 n . c : 0xc0000100a2 n . d : 0xc0000100a3 \u8fd9\u662fgo\u8bed\u8a00\u4e2d\u7684\u5185\u5b58\u5bf9\u9f50\u673a\u5236 https://segmentfault.com/a/1190000017527311?utm_campaign=studygolang.com&utm_medium=studygolang.com&utm_source=studygolang.com \u7ed3\u6784\u4f53\u5b57\u6bb5\u7684\u53ef\u89c1\u6027 \u00b6 \u7ed3\u6784\u4f53\u4e2d\u5b57\u6bb5\u5927\u5199\u5f00\u5934\u8868\u793a\u53ef\u516c\u5f00\u8bbf\u95ee\uff0c\u5c0f\u5199\u8868\u793a\u79c1\u6709\uff08\u4ec5\u5728\u5b9a\u4e49\u5f53\u524d\u7ed3\u6784\u4f53\u7684\u5305\u4e2d\u53ef\u8bbf\u95ee\uff09\u3002 \u7ed3\u6784\u4f53\u76f8\u7b49\u6027 \u00b6 \u7ed3\u6784\u4f53\u662f\u503c\u7c7b\u578b\u3002 \u5982\u679c\u5b83\u7684\u6bcf\u4e00\u4e2a\u5b57\u6bb5\u90fd\u662f\u53ef\u6bd4\u8f83\u7684\uff0c\u5219\u8be5\u7ed3\u6784\u4f53\u4e5f\u662f\u53ef\u6bd4\u8f83\u7684\u3002 \u5982\u679c\u4e24\u4e2a\u7ed3\u6784\u4f53\u53d8\u91cf\u7684\u5bf9\u5e94\u5b57\u6bb5\u76f8\u7b49\uff0c\u5219\u8fd9\u4e24\u4e2a\u53d8\u91cf\u4e5f\u662f\u76f8\u7b49\u7684. \u5982\u679c\u7ed3\u6784\u4f53\u5305\u542b\u4e0d\u53ef\u6bd4\u8f83\u7684\u5b57\u6bb5\uff0c\u5219\u7ed3\u6784\u4f53\u53d8\u91cf\u4e5f\u4e0d\u53ef\u6bd4\u8f83\u3002 \u6ce8\u610f \u00b6 \u7ed3\u6784\u4f53\u662f\u503c\u7c7b\u578b.\u5176\u96f6\u503c,\u662f\u5c5e\u6027\u7684\u96f6\u503c. \u7ed3\u6784\u4f53\u7684\u81ea\u5df1\u7684\u5b57\u6bb5\u5728\u5185\u5b58\u4e2d\u662f\u8fde\u7eed\u7684. \u7ed3\u6784\u4f53\u8fdb\u884ctype\u91cd\u65b0\u5b9a\u4e49(\u76f8\u5f53\u4e8e\u53d6\u522b\u540d),golang\u8ba4\u4e3a\u662f\u65b0\u7684\u6570\u636e\u7c7b\u578b,\u4f46\u662f\u76f8\u4e92\u95f4\u53ef\u4ee5\u5f3a\u8f6c,\u5f3a\u8f6c\u9700\u8981\u4e24\u4e2a\u7ed3\u6784\u4f53\u7ed3\u6784\u5b8c\u5168\u4e00\u81f4. //2\u548c3\u7684\u4e3e\u4f8b type A struct { Num int } type B struct { Num int // Name string } func main () { var a A var b B a = A ( b ) fmt . Println ( a , b ) } struct\u7684\u6bcf\u4e2a\u5b57\u6bb5\u4e0a,\u53ef\u4ee5\u5199\u4e0a\u4e00\u4e2atag,\u8be5tag\u53ef\u4ee5\u901a\u8fc7\u53cd\u5c04\u673a\u5236\u83b7\u53d6,\u5e38\u89c1\u7684\u4f7f\u7528\u573a\u666f\u5c31\u662f\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316. type Monster struct { Name string `json:\"name\"` //`json:\"name\"`\u6551\u8d4estruct tag Age int `json:\"age\"` Skill string `json:\"skill\"` } func main () { monster := Monster { \"cow\" , 500 , \"jiao\" } //\u5c06monster\u5e8f\u5217\u5316\u6210\u4e00\u4e2ajson\u5b57\u7b26\u4e32 jsonMonster , err := json . Marshal ( monster ) if err != nil { fmt . Println ( \"error\" ) } // fmt.Println(jsonMonster) //\u8fd4\u56de\u4e00\u4e2a[]byte\u5207\u7247 fmt . Println ( string ( jsonMonster )) } >> > { \"name\" : \"cow\" , \"age\" : 500 , \"skill\" : \"jiao\" } \u56e0\u4e3a\u4f7f\u7528\u4e86json,\u76f8\u5f53\u4e8e\u5728json\u5305\u4e2d\u4f7f\u7528\u4e86\u672c\u5305\u4e2d\u7684Monster,\u5982\u679c\u5b57\u6bb5\u540d\u4e0d\u5927\u5199,json\u5c31\u65e0\u6cd5\u5f15\u7528,\u4e3a\u4e86\u8ba9\u524d\u53f0\u66f4\u8212\u670d\u7684\u63a5\u6536,\u53ef\u4ee5\u4f7f\u7528tag\u65b9\u6cd5\u8ba9\u8f93\u51fa\u503c\u53d8\u4e3atag\u503c,\u4e0d\u5199tag,\u9ed8\u8ba4\u8f93\u51fa\u539f\u5b57\u6bb5\u540d. tag\u662f\u7ed3\u6784i\u63d0\u7684\u5143\u4fe1\u606f,\u53ef\u4ee5\u5728\u8fd0\u884c\u7684\u65f6\u5019\u901a\u8fc7\u53cd\u5c04\u7684\u673a\u5236\u8bfb\u53d6\u51fa\u6765.tag\u5728\u7ed3\u6784\u4f53\u5b57\u6bb5\u7684\u540e\u65b9,\u4f7f\u7528\u4e00\u5bf9\u53cd\u5f15\u53f7\u5305\u88f9\u8d77\u6765. \u6ce8\u610f: \u7ed3\u6784\u4f53\u6807\u7b7e\u7531\u4e00\u4e2a\u6216\u591a\u4e2a\u952e\u503c\u5bf9\u7ec4\u6210.\u952e\u4e0e\u503c\u4f7f\u7528 : \u9694\u5f00,\u503c\u7528 \"\" \u62ec\u8d77\u6765.\u952e\u503c\u4e4b\u95f4\u4f7f\u7528\u4e00\u4e2a\u7a7a\u683c\u5206\u5f00. \u4e3a\u7ed3\u6784\u4f53\u7f16\u5199tag\u65f6,\u5fc5\u987b\u4e25\u683c\u9075\u5b88\u952e\u503c\u5bf9\u7684\u89c4\u5219,\u7ed3\u6784\u4f53\u6807\u7b7e\u7684\u89e3\u6790\u4ee3\u7801\u7684\u5bb9\u9519\u80fd\u529b\u6bd4\u8f83\u5dee,\u4e00\u65e6\u683c\u5f0f\u9519\u8bef,\u7f16\u8bd1\u548c\u8fd0\u884c\u90fd\u4e0d\u4f1a\u63d0\u793a\u9519\u8bef,\u4f46\u662f\u901a\u8fc7\u53cd\u5c04\u53c8\u65e0\u6cd5\u6b63\u786e\u53d6\u503c.\u6bd4\u5982;\u4e0d\u8981\u5728key\u548cvalue\u4e4b\u95f4\u6dfb\u52a0\u7a7a\u683c. \u6848\u4f8b \u00b6 1) \u4e00\u4e2a\u666f\u533a\u6839\u636e\u6e38\u4eba\u7684\u5e74\u9f84\u6536\u53d6\u4e0d\u540c\u4ef7\u683c\u7684\u95e8\u7968\uff0c\u6bd4\u5982\u5e74\u9f84\u5927\u4e8e 18\uff0c\u6536\u8d39 20 \u5143\uff0c\u5176\u5b83\u60c5\u51b5\u95e8\u7968\u514d \u8d39. 2) \u8bf7\u7f16\u5199 Visitor \u7ed3\u6784\u4f53\uff0c\u6839\u636e\u5e74\u9f84\u6bb5\u51b3\u5b9a\u80fd\u591f\u8d2d\u4e70\u7684\u95e8\u7968\u4ef7\u683c\u5e76\u8f93\u51fa type Vister struct { Name string Age int } func ( v * Vister ) shouPrice () { if v . Age >= 90 || v . Age <= 12 { fmt . Println ( \"can't in \" ) return } if v . Age > 18 { fmt . Printf ( \"name of vister is %v age is %v price is 20\\n\" , v . Name , v . Age ) } else { fmt . Printf ( \"name of vister is %v age is %v free\\n\" , v . Name , v . Age ) } } func main () { var v Vister for { fmt . Println ( \"name please:\" ) fmt . Scanln ( & v . Name ) if v . Name == \"n\" { fmt . Println ( \"quit\" ) break } fmt . Println ( \"age please:\" ) fmt . Scanln ( & v . Age ) v . shouPrice () } }","title":"\u7ed3\u6784\u4f53"},{"location":"Golang/%E7%BB%93%E6%9E%84%E4%BD%93/#_1","text":"Go\u8bed\u8a00\u4e2d\u6ca1\u6709\u201c\u7c7b\u201d\u7684\u6982\u5ff5\uff0c\u4e5f\u4e0d\u652f\u6301\u201c\u7c7b\u201d\u7684\u7ee7\u627f\u7b49\u9762\u5411\u5bf9\u8c61\u7684\u6982\u5ff5\u3002Go\u8bed\u8a00\u4e2d\u901a\u8fc7\u7ed3\u6784\u4f53\u7684\u5185\u5d4c\u518d\u914d\u5408\u63a5\u53e3\u6bd4\u9762\u5411\u5bf9\u8c61\u5177\u6709\u66f4\u9ad8\u7684\u6269\u5c55\u6027\u548c\u7075\u6d3b\u6027\u3002","title":"\u7ed3\u6784\u4f53"},{"location":"Golang/%E7%BB%93%E6%9E%84%E4%BD%93/#_2","text":"\u4f7f\u7528type\u548cstruct\u5173\u952e\u5b57\u6765\u5b9a\u4e49\u7ed3\u6784\u4f53. type \u7c7b\u578b\u540d struct { \u5b57\u6bb5\u540d \u5b57\u6bb5\u7c7b\u578b \u5b57\u6bb5\u540d \u5b57\u6bb5\u7c7b\u578b ... } \u6ce8\u610f: \u7c7b\u578b\u540d:\u6807\u8bc6\u81ea\u5b9a\u4e49\u7ed3\u6784\u4f53\u7684\u540d\u79f0,\u5728\u540c\u4e00\u4e2a\u5305\u5185\u4e0d\u53ef\u91cd\u590d(\u65e0\u6cd5\u91cd\u6784) \u5b57\u6bb5\u540d:\u6807\u8bc6\u7ed3\u6784\u4f53\u5b57\u6bb5\u7684\u540d\u5b57,\u7ed3\u6784\u4f53\u4e2d\u5b57\u6bb5\u540d\u5fc5\u987b\u552f\u4e00. \u5b57\u6bb5\u7c7b\u578b:\u8868\u793a\u7ed3\u6784\u4f53\u7684\u5177\u4f53\u7c7b\u578b. //\u6bd4\u5982\u5b9a\u4e49\u4e00\u4e2a\u4eba\u7ed3\u6784\u4f53 type person struct { name , city string // \u540c\u7c7b\u578b\u7684\u5b57\u6bb5\u4e5f\u53ef\u4ee5\u5199\u5728\u540c\u4e00\u884c gender string age int8 }","title":"\u58f0\u660e"},{"location":"Golang/%E7%BB%93%E6%9E%84%E4%BD%93/#_3","text":"\u5b57\u6bb5\u58f0\u660e\u8bed\u6cd5\u540c\u53d8\u91cf: \u5b57\u6bb5\u540d \u5b57\u6bb5\u7c7b\u578b \u5b57\u6bb5\u7c7b\u578b\u53ef\u4ee5\u4e3a:\u57fa\u672c\u7c7b\u578b,\u6570\u7ec4\u6216\u8005\u5f15\u7528\u7c7b\u578b \u5728\u521b\u5efa\u4e00\u4e2a\u7ed3\u6784\u4f53\u53d8\u91cf\u540e,\u5982\u679c\u6ca1\u6709\u8d4b\u503c,\u90fd\u4f1a\u5bf9\u5e94\u7ed9\u8be5\u6570\u636e\u7ed3\u6784\u7684\u9ed8\u8ba4\u503c(\u96f6\u503c),\u5176\u4e2d\u6307\u9488,slice,\u548cmap\u7684\u96f6\u503c\u662fnil,\u9700\u8981\u5148make\u624d\u53ef\u4ee5\u4f7f\u7528. type Person struct { Name string Age int Score [ 5 ] float64 ptr * int slice [] int map1 map [ string ] string } func main () { var p1 Person fmt . Println ( p1 ) if p1 . ptr == nil { fmt . Println ( \"ptr\" ) } if p1 . slice == nil { fmt . Println ( \"slice\" ) } if p1 . map1 == nil { fmt . Println ( \"map1\" ) } p1 . slice = make ([] int , 3 ) p1 . slice [ 0 ] = 23 p1 . map1 = make ( map [ string ] string ) p1 . map1 [ \"key1\" ] = \"value1\" fmt . Println ( p1 ) } >> > { 0 [ 0 0 0 0 0 ] < nil > [] map []} ptr slice map1 { 0 [ 0 0 0 0 0 ] < nil > [ 23 0 0 ] map [ key1 : value1 ]} \u4e0d\u540c\u7ed3\u6784\u4f53\u53d8\u91cf\u5b57\u6bb5\u662f\u72ec\u7acb\u7684,\u4e92\u8865\u5f71\u54cd,\u4e00\u4e2a\u7ed3\u6784\u4f53\u53d8\u91cf\u5b57\u6bb5\u7684\u66f4\u6539,\u4e0d\u5f71\u54cd\u53e6\u4e00\u4e2a\u5bf9\u8c61,\u5373\u7ed3\u6784\u4f53\u662f\u503c\u7c7b\u578b.","title":"\u7ed3\u6784\u4f53\u7684\u5b57\u6bb5\\\u5c5e\u6027"},{"location":"Golang/%E7%BB%93%E6%9E%84%E4%BD%93/#_4","text":"\u6ca1\u6709\u521d\u59cb\u5316\u7684\u7ed3\u6784\u4f53,\u5176\u6210\u5458\u53d8\u91cf\u90fd\u662f\u5bf9\u5e94\u5176\u7c7b\u578b\u7684\u96f6\u503c. type person struct { name string city string age int8 } func main () { var p1 person fmt . Printf ( \"p1:%#v\" , p1 ) } >> > p1 : main . person { name : \"\" , city : \"\" , age : 0 } \u6ce8\u610f:\u6307\u9488,slice\u548cmap\u7684\u96f6\u503c\u90fd\u662fnil,\u5373\u8fd8\u6ca1\u6709\u5206\u6d3e\u7a7a\u95f4,\u6ca1\u6cd5\u7528","title":"\u7ed3\u6784\u4f53\u521d\u59cb\u5316"},{"location":"Golang/%E7%BB%93%E6%9E%84%E4%BD%93/#_5","text":"\u952e\u5bf9\u5e94\u7ed3\u6784\u4f53\u7684\u5b57\u6bb5,\u503c\u5bf9\u5e94\u8be5\u5b57\u6bb5\u7684\u521d\u59cb\u503c, \u82e5\u4f7f\u7528\u8fd9\u79cd\u65b9\u6cd5,\u6bcf\u4e2a\u5b57\u6bb5\u540e\u90fd\u5fc5\u987b\u52a0 , type person struct { name string city string age int8 } func main () { p1 := person { name : \"james\" , city : \"london\" , age : 30 , } fmt . Printf ( \"p1=%#v\" , p1 ) } >> > p1 = main . person { name : \"james\" , city : \"london\" , age : 30 } \u4e5f\u53ef\u4ee5\u76f4\u63a5\u751f\u6210\u6307\u9488\u7c7b\u578b\u7684\u7ed3\u6784\u4f53 type person struct { name string city string age int8 } func main () { p1 := & person { name : \"james\" , city : \"london\" , age : 30 , } fmt . Printf ( \"p1=%#v\" , p1 ) } >> > p1 = & main . person { name : \"james\" , city : \"london\" , age : 30 }","title":"\u4f7f\u7528\u952e\u503c\u5bf9\u521d\u59cb\u5316"},{"location":"Golang/%E7%BB%93%E6%9E%84%E4%BD%93/#_6","text":"\u521d\u59cb\u5316\u7ed3\u6784\u4f53\u7684\u65f6\u5019\u53ef\u4ee5\u7b80\u5199,\u4e5f\u5c31\u662f\u521d\u59cb\u5316\u7684\u65f6\u5019\u4e0d\u5199\u952e,\u76f4\u63a5\u5199\u503c type person struct { name string city string age int8 } func main () { p1 := person { \"james\" , \"london\" , 30 , } fmt . Printf ( \"p1=%#v\" , p1 ) } >> > p1 = main . person { name : \"james\" , city : \"london\" , age : 30 } ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ type Stu struct { Name string Age int } func main () { var stu1 = Stu { \"agsol\" , 19 } stu2 := Stu { \"tom\" , 20 } fmt . Println ( stu1 , stu2 ) } >> > { agsol 19 } { tom 20 } \u6307\u9488\u7c7b\u578b\u540c\u7406 type person struct { name string city string age int8 } func main () { p1 := & person { \"james\" , \"london\" , 30 , } fmt . Printf ( \"p1=%#v\" , p1 ) } >> > p1 = & main . person { name : \"james\" , city : \"london\" , age : 30 } ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ type Stu struct { Name string Age int } func main () { var stu1 = & Stu { \"agsol\" , 19 } stu2 := & Stu { \"tom\" , 20 } fmt . Println ( stu1 , stu2 ) fmt . Println ( * stu1 , * stu2 ) } >> > & { agsol 19 } & { tom 20 } { agsol 19 } { tom 20 } \u4f7f\u7528\u952e\u503c\u5bf9\u65b9\u5f0f\u521d\u59cb\u5316\u7684\u65f6\u5019,\u8981\u6ce8\u610f: \u5fc5\u987b\u521d\u59cb\u5316\u7ed3\u6784\u4f53\u7684\u6240\u6709\u5b57\u6bb5 \u521d\u59cb\u503c\u7684\u586b\u5145\u987a\u5e8f\u5fc5\u987b\u4e0e\u5b57\u6bb5\u5728\u7ed3\u6784\u4f53\u4e2d\u58f0\u660e\u987a\u5e8f\u4e00\u81f4. \u8be5\u65b9\u5f0f\u4e0d\u53ef\u4ee5\u4e0e\u952e\u503c\u5bf9\u521d\u59cb\u5316\u65b9\u5f0f\u6df7\u7528.","title":"\u4f7f\u7528\u503c\u7684\u5217\u8868\u521d\u59cb\u5316"},{"location":"Golang/%E7%BB%93%E6%9E%84%E4%BD%93/#_7","text":"a := struct { name string age int sex int }{ age : 18 } fmt . Println ( a . age ) \u5728\u51fd\u6570\u7ea2\u53ea\u7528\u4e00\u6b21\u7684\u65f6\u5019\u4f7f\u7528.","title":"\u533f\u540d\u7ed3\u6784\u4f53"},{"location":"Golang/%E7%BB%93%E6%9E%84%E4%BD%93/#_8","text":"\u53ea\u6709\u5f53\u7ed3\u6784\u4f53\u5b9e\u4f8b\u5316\u65f6,\u624d\u4f1a\u771f\u6b63\u7684\u5206\u914d\u5185\u5b58.\u4e5f\u5c31\u662f\u8bf4\u5fc5\u987b\u5b9e\u4f8b\u5316\u540e\u624d\u80fd\u4f7f\u7528i\u7ed3\u6784\u4f53\u7684\u5b57\u6bb5. \u7ed3\u6784\u4f53\u672c\u8eab\u4e5f\u662f\u4e00\u79cd\u6570\u636e\u7c7b\u578b,\u53ef\u4ee5\u50cf\u58f0\u660e\u5185\u7f6e\u7c7b\u578b\u4e00\u6837\u4f7f\u7528var\u5173\u952e\u5b57\u58f0\u660e\u7ed3\u6784\u4f53\u7c7b\u578b. var \u7ed3\u6784\u4f53\u5b9e\u4f8b \u7ed3\u6784\u4f53\u7c7b\u578b","title":"\u7ed3\u6784\u4f53\u7684\u5b9e\u4f8b\u5316"},{"location":"Golang/%E7%BB%93%E6%9E%84%E4%BD%93/#_9","text":"type person struct { name , city string gender string age int8 } func main () { var p1 person p1 . name = \"agsol\" p1 . city = \"shagnhai\" p1 . gender = \"male\" fmt . Println ( p1 ) } >> > { agsol shagnhai male 0 } ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ func main () { var p1 person p1 . name = \"agsol\" p1 . city = \"shagnhai\" p1 . age = 1 fmt . Println ( p1 ) fmt . Println ( p1 . name ) } >> > { agsol shagnhai 1 } agsol \u521d\u59cb\u5316\u540e\u4f1a\u7ed9\u9ed8\u8ba4\u503c,int8\u9ed8\u8ba4\u503c0 \u4e5f\u53ef\u4ee5\u901a\u8fc7 . \u6765\u8bbf\u95ee\u7ed3\u6784\u4f53\u7684\u5b57\u6bb5.","title":"\u57fa\u672c\u5b9e\u4f8b\u5316"},{"location":"Golang/%E7%BB%93%E6%9E%84%E4%BD%93/#_10","text":"\u5728\u5b9a\u4e49\u4e00\u4e9b\u4e34\u65f6\u6570\u636e\u7ed3\u6784\u65f6\u8fd8\u53ef\u4ee5\u4f7f\u7528\u533f\u540d\u5b9e\u4f8b\u5316. func main () { var user struct { Name string Age int } user . Name = \"agsol\" user . Age = 3 fmt . Println ( user ) } >> > { agsol 3 }","title":"\u533f\u540d\u5b9e\u4f8b\u5316"},{"location":"Golang/%E7%BB%93%E6%9E%84%E4%BD%93/#_11","text":"\u53ef\u4ee5\u4f7f\u7528new\u5173\u952e\u5b57\u5bf9\u7ed3\u6784\u4f53\u8fdb\u884c\u5b9e\u4f8b\u5316,\u5f97\u5230\u7684\u662f\u7ed3\u6784\u4f53\u7684\u6307\u9488. type person struct { name , city string gender string age int8 } func main () { var p1 = new ( person ) fmt . Printf ( \"type:%T\\n\" , p1 ) fmt . Printf ( \"value:%#v\\n\" , p1 ) p1 . name = \"tom\" p1 . age = 18 fmt . Println ( * p1 ) fmt . Println ( p1 ) } >> > type : * main . person value : & main . person { name : \"\" , city : \"\" , gender : \"\" , age : 0 } { tom 18 } & { tom 18 } \u6b64\u65f6p1\u662f\u4e00\u4e2a\u6307\u9488\u5bf9\u8c61,\u53d6\u503c\u53ef\u4ee5\u4f7f\u7528 * ,printf\u4e2d\u53ef\u662f\u4f7f\u7528 %#v \u6765\u8fdb\u884c\u952e\u503c\u5bf9\u8f93\u51fa","title":"\u521b\u5efa\u6307\u9488\u7c7b\u578b\u7ed3\u6784\u4f53"},{"location":"Golang/%E7%BB%93%E6%9E%84%E4%BD%93/#_12","text":"\u4f7f\u7528 & \u5bf9\u7ed3\u6784\u4f53\u8fdb\u884c\u53d6\u5730\u5740\u64cd\u4f5c\u76f8\u5f53\u4e8e\u5bf9\u8be5\u7ed3\u6784\u4f53\u7c7b\u578b\u8fdb\u884c\u4e86\u4e00\u6b21new\u7684\u5b9e\u4f8b\u5316\u64cd\u4f5c. type person struct { name string city string age int8 } func main () { p1 := & person {} fmt . Printf ( \"%T\\n\" , p1 ) fmt . Printf ( \"p1=%#v\\n\" , p1 ) fmt . Printf ( \"p1=%#v\\n\" , * p1 ) p1 . name = \"jerry\" //\u7b49\u4ef7\u4e8e(*p1).name = \"jerry\" p1 . city = \"cy\" p1 . age = 20 fmt . Printf ( \"p1=%#v\\n\" , p1 ) fmt . Printf ( \"p1=%#v\\n\" , * p1 ) } >> > * main . person p1 = & main . person { name : \"\" , city : \"\" , age : 0 } p1 = main . person { name : \"\" , city : \"\" , age : 0 } p1 = & main . person { name : \"jerry\" , city : \"cy\" , age : 20 } p1 = main . person { name : \"jerry\" , city : \"cy\" , age : 20 } new\u5f97\u5230\u7684\u662f\u7ed3\u6784\u4f53\u6307\u9488,\u5176\u4e2dp1.name=\"jerry\"\u5728\u5e95\u5c42\u662f(*p1).name=\"jerrry\",\u662fGo\u8bed\u8a00\u5e2e\u5fd9\u5b9e\u73b0\u7684\u8bed\u6cd5\u7cd6","title":"\u53d6\u5740\u5bf9\u7ed3\u6784\u4f53\u8fdb\u884c\u5b9e\u4f8b\u5316"},{"location":"Golang/%E7%BB%93%E6%9E%84%E4%BD%93/#_13","text":"\u7ed3\u6784\u4f53\u5360\u7528\u4e00\u5757\u8fde\u7eed\u7684\u5185\u5b58 type test struct { a int8 b int8 c int8 d int8 } func main () { n := test { 1 , 2 , 3 , 4 , } fmt . Printf ( \"n.a:%p\\n\" , & n . a ) fmt . Printf ( \"n.b:%p\\n\" , & n . b ) fmt . Printf ( \"n.c:%p\\n\" , & n . c ) fmt . Printf ( \"n.d:%p\\n\" , & n . d ) } >> > n . a : 0xc0000100a0 n . b : 0xc0000100a1 n . c : 0xc0000100a2 n . d : 0xc0000100a3 \u8fd9\u662fgo\u8bed\u8a00\u4e2d\u7684\u5185\u5b58\u5bf9\u9f50\u673a\u5236 https://segmentfault.com/a/1190000017527311?utm_campaign=studygolang.com&utm_medium=studygolang.com&utm_source=studygolang.com","title":"\u7ed3\u6784\u4f53\u7684\u5185\u5b58\u5e03\u5c40"},{"location":"Golang/%E7%BB%93%E6%9E%84%E4%BD%93/#_14","text":"\u7ed3\u6784\u4f53\u4e2d\u5b57\u6bb5\u5927\u5199\u5f00\u5934\u8868\u793a\u53ef\u516c\u5f00\u8bbf\u95ee\uff0c\u5c0f\u5199\u8868\u793a\u79c1\u6709\uff08\u4ec5\u5728\u5b9a\u4e49\u5f53\u524d\u7ed3\u6784\u4f53\u7684\u5305\u4e2d\u53ef\u8bbf\u95ee\uff09\u3002","title":"\u7ed3\u6784\u4f53\u5b57\u6bb5\u7684\u53ef\u89c1\u6027"},{"location":"Golang/%E7%BB%93%E6%9E%84%E4%BD%93/#_15","text":"\u7ed3\u6784\u4f53\u662f\u503c\u7c7b\u578b\u3002 \u5982\u679c\u5b83\u7684\u6bcf\u4e00\u4e2a\u5b57\u6bb5\u90fd\u662f\u53ef\u6bd4\u8f83\u7684\uff0c\u5219\u8be5\u7ed3\u6784\u4f53\u4e5f\u662f\u53ef\u6bd4\u8f83\u7684\u3002 \u5982\u679c\u4e24\u4e2a\u7ed3\u6784\u4f53\u53d8\u91cf\u7684\u5bf9\u5e94\u5b57\u6bb5\u76f8\u7b49\uff0c\u5219\u8fd9\u4e24\u4e2a\u53d8\u91cf\u4e5f\u662f\u76f8\u7b49\u7684. \u5982\u679c\u7ed3\u6784\u4f53\u5305\u542b\u4e0d\u53ef\u6bd4\u8f83\u7684\u5b57\u6bb5\uff0c\u5219\u7ed3\u6784\u4f53\u53d8\u91cf\u4e5f\u4e0d\u53ef\u6bd4\u8f83\u3002","title":"\u7ed3\u6784\u4f53\u76f8\u7b49\u6027"},{"location":"Golang/%E7%BB%93%E6%9E%84%E4%BD%93/#_16","text":"\u7ed3\u6784\u4f53\u662f\u503c\u7c7b\u578b.\u5176\u96f6\u503c,\u662f\u5c5e\u6027\u7684\u96f6\u503c. \u7ed3\u6784\u4f53\u7684\u81ea\u5df1\u7684\u5b57\u6bb5\u5728\u5185\u5b58\u4e2d\u662f\u8fde\u7eed\u7684. \u7ed3\u6784\u4f53\u8fdb\u884ctype\u91cd\u65b0\u5b9a\u4e49(\u76f8\u5f53\u4e8e\u53d6\u522b\u540d),golang\u8ba4\u4e3a\u662f\u65b0\u7684\u6570\u636e\u7c7b\u578b,\u4f46\u662f\u76f8\u4e92\u95f4\u53ef\u4ee5\u5f3a\u8f6c,\u5f3a\u8f6c\u9700\u8981\u4e24\u4e2a\u7ed3\u6784\u4f53\u7ed3\u6784\u5b8c\u5168\u4e00\u81f4. //2\u548c3\u7684\u4e3e\u4f8b type A struct { Num int } type B struct { Num int // Name string } func main () { var a A var b B a = A ( b ) fmt . Println ( a , b ) } struct\u7684\u6bcf\u4e2a\u5b57\u6bb5\u4e0a,\u53ef\u4ee5\u5199\u4e0a\u4e00\u4e2atag,\u8be5tag\u53ef\u4ee5\u901a\u8fc7\u53cd\u5c04\u673a\u5236\u83b7\u53d6,\u5e38\u89c1\u7684\u4f7f\u7528\u573a\u666f\u5c31\u662f\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316. type Monster struct { Name string `json:\"name\"` //`json:\"name\"`\u6551\u8d4estruct tag Age int `json:\"age\"` Skill string `json:\"skill\"` } func main () { monster := Monster { \"cow\" , 500 , \"jiao\" } //\u5c06monster\u5e8f\u5217\u5316\u6210\u4e00\u4e2ajson\u5b57\u7b26\u4e32 jsonMonster , err := json . Marshal ( monster ) if err != nil { fmt . Println ( \"error\" ) } // fmt.Println(jsonMonster) //\u8fd4\u56de\u4e00\u4e2a[]byte\u5207\u7247 fmt . Println ( string ( jsonMonster )) } >> > { \"name\" : \"cow\" , \"age\" : 500 , \"skill\" : \"jiao\" } \u56e0\u4e3a\u4f7f\u7528\u4e86json,\u76f8\u5f53\u4e8e\u5728json\u5305\u4e2d\u4f7f\u7528\u4e86\u672c\u5305\u4e2d\u7684Monster,\u5982\u679c\u5b57\u6bb5\u540d\u4e0d\u5927\u5199,json\u5c31\u65e0\u6cd5\u5f15\u7528,\u4e3a\u4e86\u8ba9\u524d\u53f0\u66f4\u8212\u670d\u7684\u63a5\u6536,\u53ef\u4ee5\u4f7f\u7528tag\u65b9\u6cd5\u8ba9\u8f93\u51fa\u503c\u53d8\u4e3atag\u503c,\u4e0d\u5199tag,\u9ed8\u8ba4\u8f93\u51fa\u539f\u5b57\u6bb5\u540d. tag\u662f\u7ed3\u6784i\u63d0\u7684\u5143\u4fe1\u606f,\u53ef\u4ee5\u5728\u8fd0\u884c\u7684\u65f6\u5019\u901a\u8fc7\u53cd\u5c04\u7684\u673a\u5236\u8bfb\u53d6\u51fa\u6765.tag\u5728\u7ed3\u6784\u4f53\u5b57\u6bb5\u7684\u540e\u65b9,\u4f7f\u7528\u4e00\u5bf9\u53cd\u5f15\u53f7\u5305\u88f9\u8d77\u6765. \u6ce8\u610f: \u7ed3\u6784\u4f53\u6807\u7b7e\u7531\u4e00\u4e2a\u6216\u591a\u4e2a\u952e\u503c\u5bf9\u7ec4\u6210.\u952e\u4e0e\u503c\u4f7f\u7528 : \u9694\u5f00,\u503c\u7528 \"\" \u62ec\u8d77\u6765.\u952e\u503c\u4e4b\u95f4\u4f7f\u7528\u4e00\u4e2a\u7a7a\u683c\u5206\u5f00. \u4e3a\u7ed3\u6784\u4f53\u7f16\u5199tag\u65f6,\u5fc5\u987b\u4e25\u683c\u9075\u5b88\u952e\u503c\u5bf9\u7684\u89c4\u5219,\u7ed3\u6784\u4f53\u6807\u7b7e\u7684\u89e3\u6790\u4ee3\u7801\u7684\u5bb9\u9519\u80fd\u529b\u6bd4\u8f83\u5dee,\u4e00\u65e6\u683c\u5f0f\u9519\u8bef,\u7f16\u8bd1\u548c\u8fd0\u884c\u90fd\u4e0d\u4f1a\u63d0\u793a\u9519\u8bef,\u4f46\u662f\u901a\u8fc7\u53cd\u5c04\u53c8\u65e0\u6cd5\u6b63\u786e\u53d6\u503c.\u6bd4\u5982;\u4e0d\u8981\u5728key\u548cvalue\u4e4b\u95f4\u6dfb\u52a0\u7a7a\u683c.","title":"\u6ce8\u610f"},{"location":"Golang/%E7%BB%93%E6%9E%84%E4%BD%93/#_17","text":"1) \u4e00\u4e2a\u666f\u533a\u6839\u636e\u6e38\u4eba\u7684\u5e74\u9f84\u6536\u53d6\u4e0d\u540c\u4ef7\u683c\u7684\u95e8\u7968\uff0c\u6bd4\u5982\u5e74\u9f84\u5927\u4e8e 18\uff0c\u6536\u8d39 20 \u5143\uff0c\u5176\u5b83\u60c5\u51b5\u95e8\u7968\u514d \u8d39. 2) \u8bf7\u7f16\u5199 Visitor \u7ed3\u6784\u4f53\uff0c\u6839\u636e\u5e74\u9f84\u6bb5\u51b3\u5b9a\u80fd\u591f\u8d2d\u4e70\u7684\u95e8\u7968\u4ef7\u683c\u5e76\u8f93\u51fa type Vister struct { Name string Age int } func ( v * Vister ) shouPrice () { if v . Age >= 90 || v . Age <= 12 { fmt . Println ( \"can't in \" ) return } if v . Age > 18 { fmt . Printf ( \"name of vister is %v age is %v price is 20\\n\" , v . Name , v . Age ) } else { fmt . Printf ( \"name of vister is %v age is %v free\\n\" , v . Name , v . Age ) } } func main () { var v Vister for { fmt . Println ( \"name please:\" ) fmt . Scanln ( & v . Name ) if v . Name == \"n\" { fmt . Println ( \"quit\" ) break } fmt . Println ( \"age please:\" ) fmt . Scanln ( & v . Age ) v . shouPrice () } }","title":"\u6848\u4f8b"},{"location":"Golang/%E7%BB%93%E6%9E%84%E4%BD%93%E7%9A%84%E5%8C%BF%E5%90%8D%E5%AD%97%E6%AE%B5/","text":"\u7ed3\u6784\u4f53\u7684\u533f\u540d\u5b57\u6bb5 \u5d4c\u5957\u7ed3\u6784\u4f53 \u666e\u901a\u5d4c\u5957 \u5d4c\u5957\u533f\u540d\u7ed3\u6784\u4f53 \u5d4c\u5957\u7ed3\u6784\u4f53\u7684\u5b57\u6bb5\u5b57\u6bb5\u540d\u51b2\u7a81 \u63d0\u5347\u5b57\u6bb5 \u7ed3\u6784\u4f53\u7684\u533f\u540d\u5b57\u6bb5 \u00b6 \u7ed3\u6784\u4f53\u5141\u8bb8\u5176\u6210\u5458\u5b57\u6bb5\u5728\u58f0\u660e\u65f6\u6ca1\u6709\u5b57\u6bb5\u540d\u800c\u53ea\u6709\u7c7b\u578b,\u8fd9\u79cd\u6ca1\u6709\u540d\u5b57\u7684\u5b57\u6bb5\u5c31\u79f0\u4e3a\u533f\u540d\u5b57\u6bb5. type Person struct { string int } func main () { p1 := Person { \"agsol\" , 20 } fmt . Printf ( \"%#v\\n\" , p1 ) fmt . Println ( p1 . string , p1 . int ) } >> > main . Person { string : \"agsol\" , int : 20 } agsol 20 \u533f\u540d\u5b57\u6bb5\u9ed8\u8ba4\u91c7\u7528\u7c7b\u578b\u540d\u4f5c\u4e3a\u5b57\u6bb5\u540d,\u7ed3\u6784\u4f53\u8981\u6c42\u5b57\u6bb5\u540d\u5fc5\u987b\u552f\u4e00,\u56e0\u6b64\u4e00\u4e2a\u7ed3\u6784\u4f53\u4e2d\u540c\u7c7b\u578b\u7684\u533f\u540d\u5b57\u6bb5\u53ea\u80fd\u6709\u4e00\u4e2a. \u5d4c\u5957\u7ed3\u6784\u4f53 \u00b6 \u666e\u901a\u5d4c\u5957 \u00b6 \u4e00\u4e2a\u7ed3\u6784\u4f53\u4e2d\u53ef\u4ee5\u5d4c\u5957\u5305\u542b\u53e6\u4e00\u4e2a\u7ed3\u6784\u4f53\u6216\u7ed3\u6784\u4f53\u6307\u9488 type Address struct { Province string City string } type User struct { Name string Gender string Address Address } func main () { user1 := User { Name : \"agsol\" , Gender : \"male\" , Address : Address { Province : \"liaoming\" , City : \"cy\" , }, } fmt . Println ( user1 ) fmt . Printf ( \"%#v\" , user1 ) } >> > { agsol male { liaoming cy }} main . User { Name : \"agsol\" , Gender : \"male\" , Address : main . Address { Province : \"liaoming\" , City : \"cy\" }} \u5d4c\u5957\u533f\u540d\u7ed3\u6784\u4f53 \u00b6 type Address struct { Province string City string } type User struct { Name string Gender string Address // \u533f\u540d\u7ed3\u6784\u4f53 } func main () { var user2 User user2 . Name = \"agsol\" user2 . Gender = \"male\" user2 . Address . Province = \"liaoming\" //\u901a\u8fc7\u533f\u540d\u7ed3\u6784\u4f53.\u5b57\u6bb5\u540d\u8bbf\u95ee user2 . City = \"cy\" //\u76f4\u63a5\u8bbf\u95ee\u533f\u540d\u7ed3\u6784\u4f53\u7684\u5b57\u6bb5\u540d fmt . Printf ( \"user2=%#v\\n\" , user2 ) } >> > user2 = main . User { Name : \"agsol\" , Gender : \"male\" , Address : main . Address { Province : \"liaoming\" , City : \"cy\" }} \u5f53\u8bbf\u95ee\u7ed3\u6784\u4f53\u6210\u5458\u65f6\u4f1a\u4f18\u5148\u5728\u7ed3\u6784\u4f53\u4e2d\u67e5\u627e\u8be5\u5b57\u6bb5,\u627e\u4e0d\u5230\u518d\u53bb\u533f\u540d\u7ed3\u6784\u4f53\u4e2d\u67e5\u627e. \u5d4c\u5957\u7ed3\u6784\u4f53\u7684\u5b57\u6bb5\u5b57\u6bb5\u540d\u51b2\u7a81 \u00b6 \u5f53\u5d4c\u5957\u7ed3\u6784\u4f53\u5185\u90e8\u5b58\u5728\u76f8\u540c\u5b57\u6bb5\u540d\u65f6,\u4e3a\u4e86\u907f\u514d\u6b67\u4e49\u9700\u8981\u6307\u5b9a\u5177\u4f53\u7684\u5185\u5d4c\u7ed3\u6784\u4f53\u7684\u5b57\u6bb5. //Address \u5730\u5740\u7ed3\u6784\u4f53 type Address struct { Province string City string CreateTime string } //Email \u90ae\u7bb1\u7ed3\u6784\u4f53 type Email struct { Account string CreateTime string } //User \u7528\u6237\u7ed3\u6784\u4f53 type User struct { Name string Gender string Address Email } func main () { var user3 User user3 . Name = \"agsol\" user3 . Gender = \"male\" // user3.CreateTime = \"2019\" //ambiguous selector user3.CreateTime user3 . Address . CreateTime = \"2000\" //\u6307\u5b9aAddress\u7ed3\u6784\u4f53\u4e2d\u7684CreateTime user3 . Email . CreateTime = \"2000\" //\u6307\u5b9aEmail\u7ed3\u6784\u4f53\u4e2d\u7684CreateTime } \u63d0\u5347\u5b57\u6bb5 \u00b6 Go\u4e2d\u4f7f\u7528\u7ed3\u6784\u4f53\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u5176\u4ed6\u8bed\u8a00\u4e2d\u7684\u9762\u5411\u5bf9\u8c61\u7684\u7ee7\u627f. \u901a\u8fc7\u533f\u540d\u5b57\u6bb5\u7684\u63d0\u5347\u5b57\u6bb5\u6765\u5b9e\u73b0. \u533f\u540d\u5b57\u6bb5\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\u540c\u65f6\u63d0\u5347 \u53ea\u63d0\u5347\u4e0d\u91cd\u540d\u5b57\u6bb5\u548c\u65b9\u6cd5 type Animal struct { name string } func ( a * Animal ) move (){ fmt . Printf ( \"%s can move\\n\" , a . name ) } type Dog struct { Age int * Animal //\u901a\u8fc7\u5d4c\u5957\u533f\u540d\u7ed3\u6784\u4f53\u5b9e\u73b0\u7ee7\u627f } func ( d * Dog ) bark (){ fmt . Printf ( \"%s can bark\" , d . name ) } func main () { d1 := & Dog { Age : 4 , Animal : & Animal { name : \"spark\" , }, } d1 . move () d1 . bark () } >> > spark can move spark can bark \u533f\u540d\u5b57\u6bb5\u662f\u5b9e\u73b0\u7ee7\u627f\u7684\u65b9\u6cd5,","title":"\u7ed3\u6784\u4f53\u7684\u533f\u540d\u5b57\u6bb5"},{"location":"Golang/%E7%BB%93%E6%9E%84%E4%BD%93%E7%9A%84%E5%8C%BF%E5%90%8D%E5%AD%97%E6%AE%B5/#_1","text":"\u7ed3\u6784\u4f53\u5141\u8bb8\u5176\u6210\u5458\u5b57\u6bb5\u5728\u58f0\u660e\u65f6\u6ca1\u6709\u5b57\u6bb5\u540d\u800c\u53ea\u6709\u7c7b\u578b,\u8fd9\u79cd\u6ca1\u6709\u540d\u5b57\u7684\u5b57\u6bb5\u5c31\u79f0\u4e3a\u533f\u540d\u5b57\u6bb5. type Person struct { string int } func main () { p1 := Person { \"agsol\" , 20 } fmt . Printf ( \"%#v\\n\" , p1 ) fmt . Println ( p1 . string , p1 . int ) } >> > main . Person { string : \"agsol\" , int : 20 } agsol 20 \u533f\u540d\u5b57\u6bb5\u9ed8\u8ba4\u91c7\u7528\u7c7b\u578b\u540d\u4f5c\u4e3a\u5b57\u6bb5\u540d,\u7ed3\u6784\u4f53\u8981\u6c42\u5b57\u6bb5\u540d\u5fc5\u987b\u552f\u4e00,\u56e0\u6b64\u4e00\u4e2a\u7ed3\u6784\u4f53\u4e2d\u540c\u7c7b\u578b\u7684\u533f\u540d\u5b57\u6bb5\u53ea\u80fd\u6709\u4e00\u4e2a.","title":"\u7ed3\u6784\u4f53\u7684\u533f\u540d\u5b57\u6bb5"},{"location":"Golang/%E7%BB%93%E6%9E%84%E4%BD%93%E7%9A%84%E5%8C%BF%E5%90%8D%E5%AD%97%E6%AE%B5/#_2","text":"","title":"\u5d4c\u5957\u7ed3\u6784\u4f53"},{"location":"Golang/%E7%BB%93%E6%9E%84%E4%BD%93%E7%9A%84%E5%8C%BF%E5%90%8D%E5%AD%97%E6%AE%B5/#_3","text":"\u4e00\u4e2a\u7ed3\u6784\u4f53\u4e2d\u53ef\u4ee5\u5d4c\u5957\u5305\u542b\u53e6\u4e00\u4e2a\u7ed3\u6784\u4f53\u6216\u7ed3\u6784\u4f53\u6307\u9488 type Address struct { Province string City string } type User struct { Name string Gender string Address Address } func main () { user1 := User { Name : \"agsol\" , Gender : \"male\" , Address : Address { Province : \"liaoming\" , City : \"cy\" , }, } fmt . Println ( user1 ) fmt . Printf ( \"%#v\" , user1 ) } >> > { agsol male { liaoming cy }} main . User { Name : \"agsol\" , Gender : \"male\" , Address : main . Address { Province : \"liaoming\" , City : \"cy\" }}","title":"\u666e\u901a\u5d4c\u5957"},{"location":"Golang/%E7%BB%93%E6%9E%84%E4%BD%93%E7%9A%84%E5%8C%BF%E5%90%8D%E5%AD%97%E6%AE%B5/#_4","text":"type Address struct { Province string City string } type User struct { Name string Gender string Address // \u533f\u540d\u7ed3\u6784\u4f53 } func main () { var user2 User user2 . Name = \"agsol\" user2 . Gender = \"male\" user2 . Address . Province = \"liaoming\" //\u901a\u8fc7\u533f\u540d\u7ed3\u6784\u4f53.\u5b57\u6bb5\u540d\u8bbf\u95ee user2 . City = \"cy\" //\u76f4\u63a5\u8bbf\u95ee\u533f\u540d\u7ed3\u6784\u4f53\u7684\u5b57\u6bb5\u540d fmt . Printf ( \"user2=%#v\\n\" , user2 ) } >> > user2 = main . User { Name : \"agsol\" , Gender : \"male\" , Address : main . Address { Province : \"liaoming\" , City : \"cy\" }} \u5f53\u8bbf\u95ee\u7ed3\u6784\u4f53\u6210\u5458\u65f6\u4f1a\u4f18\u5148\u5728\u7ed3\u6784\u4f53\u4e2d\u67e5\u627e\u8be5\u5b57\u6bb5,\u627e\u4e0d\u5230\u518d\u53bb\u533f\u540d\u7ed3\u6784\u4f53\u4e2d\u67e5\u627e.","title":"\u5d4c\u5957\u533f\u540d\u7ed3\u6784\u4f53"},{"location":"Golang/%E7%BB%93%E6%9E%84%E4%BD%93%E7%9A%84%E5%8C%BF%E5%90%8D%E5%AD%97%E6%AE%B5/#_5","text":"\u5f53\u5d4c\u5957\u7ed3\u6784\u4f53\u5185\u90e8\u5b58\u5728\u76f8\u540c\u5b57\u6bb5\u540d\u65f6,\u4e3a\u4e86\u907f\u514d\u6b67\u4e49\u9700\u8981\u6307\u5b9a\u5177\u4f53\u7684\u5185\u5d4c\u7ed3\u6784\u4f53\u7684\u5b57\u6bb5. //Address \u5730\u5740\u7ed3\u6784\u4f53 type Address struct { Province string City string CreateTime string } //Email \u90ae\u7bb1\u7ed3\u6784\u4f53 type Email struct { Account string CreateTime string } //User \u7528\u6237\u7ed3\u6784\u4f53 type User struct { Name string Gender string Address Email } func main () { var user3 User user3 . Name = \"agsol\" user3 . Gender = \"male\" // user3.CreateTime = \"2019\" //ambiguous selector user3.CreateTime user3 . Address . CreateTime = \"2000\" //\u6307\u5b9aAddress\u7ed3\u6784\u4f53\u4e2d\u7684CreateTime user3 . Email . CreateTime = \"2000\" //\u6307\u5b9aEmail\u7ed3\u6784\u4f53\u4e2d\u7684CreateTime }","title":"\u5d4c\u5957\u7ed3\u6784\u4f53\u7684\u5b57\u6bb5\u5b57\u6bb5\u540d\u51b2\u7a81"},{"location":"Golang/%E7%BB%93%E6%9E%84%E4%BD%93%E7%9A%84%E5%8C%BF%E5%90%8D%E5%AD%97%E6%AE%B5/#_6","text":"Go\u4e2d\u4f7f\u7528\u7ed3\u6784\u4f53\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u5176\u4ed6\u8bed\u8a00\u4e2d\u7684\u9762\u5411\u5bf9\u8c61\u7684\u7ee7\u627f. \u901a\u8fc7\u533f\u540d\u5b57\u6bb5\u7684\u63d0\u5347\u5b57\u6bb5\u6765\u5b9e\u73b0. \u533f\u540d\u5b57\u6bb5\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\u540c\u65f6\u63d0\u5347 \u53ea\u63d0\u5347\u4e0d\u91cd\u540d\u5b57\u6bb5\u548c\u65b9\u6cd5 type Animal struct { name string } func ( a * Animal ) move (){ fmt . Printf ( \"%s can move\\n\" , a . name ) } type Dog struct { Age int * Animal //\u901a\u8fc7\u5d4c\u5957\u533f\u540d\u7ed3\u6784\u4f53\u5b9e\u73b0\u7ee7\u627f } func ( d * Dog ) bark (){ fmt . Printf ( \"%s can bark\" , d . name ) } func main () { d1 := & Dog { Age : 4 , Animal : & Animal { name : \"spark\" , }, } d1 . move () d1 . bark () } >> > spark can move spark can bark \u533f\u540d\u5b57\u6bb5\u662f\u5b9e\u73b0\u7ee7\u627f\u7684\u65b9\u6cd5,","title":"\u63d0\u5347\u5b57\u6bb5"},{"location":"Golang/%E7%BB%93%E6%9E%84%E4%BD%93%E7%9A%84%E6%96%B9%E6%B3%95/","text":"\u7ed3\u6784\u4f53\u7684\u65b9\u6cd5 \u6784\u9020\u51fd\u6570 \u5de5\u5382\u6a21\u5f0f \u666e\u901a\u5bfc\u5305 \u5de5\u5382\u6a21\u5f0f \u65b9\u6cd5\u548c\u63a5\u6536\u5668 \u5b9a\u4e49 \u503c\u7c7b\u578b\u7684\u63a5\u6536\u5668 \u6307\u9488\u7c7b\u578b\u7684\u63a5\u6536\u5668 \u4ec0\u4e48\u65f6\u5019\u8981\u4f7f\u7528\u6307\u9488\u7c7b\u578b\u7684\u63a5\u6536\u5668 \u4efb\u610f\u7c7b\u578b\u6dfb\u52a0\u65b9\u6cd5 \u65b9\u6cd5\u7684\u8c03\u7528\u548c\u4f20\u53c2\u673a\u5236 \u8bf4\u660e \u65b9\u6cd5\u4e0e\u51fd\u6570\u7684\u533a\u522b \u7ec6\u8282 \u7ec3\u4e60 \u7ed3\u6784\u4f53\u7684\u65b9\u6cd5 \u00b6 Go\u4e2d\u7684\u65b9\u6cd5\u662f\u4f5c\u7528\u5728\u6307\u5b9a\u7684\u6570\u636e\u7c7b\u578b\u4e0a\u7684,\u5373\u548c\u6307\u5b9a\u7684\u6570\u636e\u7c7b\u578b\u7ed1\u5b9a,\u56e0\u6b64\u81ea\u5b9a\u4e49\u7c7b\u578b\u90fd\u53ef\u4ee5\u7531\u65b9\u6cd5,\u800c\u4e0d\u4ec5\u4ec5\u662fstruct. \u6784\u9020\u51fd\u6570 \u00b6 Go\u8bed\u8a00\u4e2d\u6ca1\u6709\u6784\u9020\u51fd\u6570,\u53ef\u4ee5\u81ea\u5df1\u5b9e\u73b0.\u4e3a\u4e86\u9632\u6b62\u7ed3\u6784\u4f53\u6bd4\u8f83\u590d\u6742\u9020\u6210\u7684\u503c\u62f7\u8d1d\u5f00\u9500\u592a\u5927,\u8fd9\u4e2a\u6784\u9020\u51fd\u6570\u8fd4\u56de\u7684\u662f\u7ed3\u6784\u4f53\u7684\u6307\u9488\u7c7b\u578b. type Person struct { name string city string age int8 } func newPerson ( name , city string , age int8 ) * Person { return & Person { name : name , city : city , age : age , } } func main () { p1 := newPerson ( \"agsol\" , \"cy\" , 90 ) //\u8c03\u7528\u6784\u9020\u51fd\u6570 fmt . Printf ( \"%#v\\n\" , * p1 ) fmt . Printf ( \"%#v\\n\" , p1 ) } >> > main . Person { name : \"agsol\" , city : \"cy\" , age : 90 } & main . Person { name : \"agsol\" , city : \"cy\" , age : 90 } \u5de5\u5382\u6a21\u5f0f \u00b6 \u5f53\u5bfc\u5305\u65f6\u5019,\u88ab\u5bfc\u5165\u5305\u4e2d\u7684\u53d8\u91cf\u540d\u5982\u679c\u662f\u5c0f\u5199\u5b57\u6bcd\u5f00\u5934,\u90a3\u5c31\u65e0\u6cd5\u5728\u4e3b\u5305\u4e2d\u4f7f\u7528,\u5de5\u5382\u6a21\u5f0f\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898. \u666e\u901a\u5bfc\u5305 \u00b6 model.go package model //\u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784\u4f53 type Student struct { Name string Score float64 } main.go package main import ( \"fmt\" \"gocode/day08/factory/model\" ) func main () { var stu = model . Student { Name : \"tom\" , Score : 34.9 , } fmt . Println ( stu ) } \u5de5\u5382\u6a21\u5f0f \u00b6 \u5f53\u88ab\u5bfc\u5165\u5305\u4e2d\u53d8\u91cf\u540d\u4ee5\u5c0f\u5199\u5b57\u6bcd\u5f00\u5934\u65f6 model.go package model //\u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784\u4f53 type student struct { Name string Score float64 } func NewStudent ( n string , s float64 ) * student { return & student { Name : n , Score : s , } } main.go package main import ( \"fmt\" \"gocode/day08/factory/model\" ) func main () { var stu = model . NewStudent ( \"agsol\" , 99.9 ) fmt . Println ( stu , * stu ) } \u6ce8\u610f:\u5982\u679c\u5176\u4ed6\u5305\u8981\u662f\u7528\u8fd9\u4e2a\u7ed3\u6784\u4f53,\u90a3\u4e48\u8fd9\u4e2a\u7ed3\u6784\u4f53\u7684\u5b57\u6bb5\u4e5f\u9700\u8981\u662f\u5927\u5199,\u6bd4\u5982\u4e0a\u8ff0\u4ee3\u7801\u4e2d,\u5982\u679c\u5c06Name\u6539\u4e3aname\u8fd0\u884c,stu.name,\u5219\u629bundefine\u5f02\u5e38. stu.score undefined (cannot refer to unexported field or method score) \u65b9\u6cd5\u548c\u63a5\u6536\u5668 \u00b6 Go\u8bed\u8a00\u4e2d\u7684\u65b9\u6cd5(Method)\u662f\u4e00\u79cd\u4f5c\u7528\u4e8e\u7279\u5b9a\u7c7b\u578b\u53d8\u91cf\u7684\u51fd\u6570.\u8fd9\u4e2d\u7279\u5b9a\u7c7b\u578b\u7684\u53d8\u91cf\u53eb\u505a\u63a5\u6536\u5668(Receiver).\u63a5\u6536\u5668\u7684\u6982\u5ff5\u7c7b\u4f3c\u5176\u4ed6\u8bed\u8a00\u4e2d\u7684this\u6216\u8005self. \u5b9a\u4e49 \u00b6 func ( \u63a5\u6536\u5668\u53d8\u91cfreceicer \u63a5\u6536\u5668\u7c7b\u578btype ) \u65b9\u6cd5\u540dmethodName ( \u53c2\u6570\u5217\u8868 ) ( \u8fd4\u56de\u53c2\u6570 ) { \u51fd\u6570\u4f53 return \u8fd4\u56de\u503c //\u975e\u5fc5\u987b } \u5176\u4e2d: \u63a5\u6536\u5668\u53d8\u91cf:\u63a5\u6536\u5668\u4e2d\u7684\u53c2\u6570\u53d8\u91cf\u540d\u5728\u547d\u540d\u65f6,\u5b98\u65b9\u5efa\u8bae\u4f7f\u7528\u63a5\u6536\u5668\u7c7b\u578b\u540d\u7684\u7b2c\u4e00\u4e2a\u5c0f\u5199\u5b57\u6bcd,\u800c\u4e0d\u662fself\u6216\u8005this\u4e4b\u7c7b\u7684\u547d\u540d.\u6bd4\u5982:Person\u7c7b\u578b\u7684\u63a5\u6536\u5668\u53d8\u91cf\u540d\u5e94\u8be5\u547d\u540d\u4e3ap,Connector\u7c7b\u578b\u7684\u63a5\u6536\u5668\u53d8\u91cf\u5e94\u8be5\u547d\u540d\u4e3ac\u7b49. \u63a5\u6536\u5668\u53d8\u91cf\u5c31\u76f8\u5f53\u4e8e\u4e00\u4e2a\u5f62\u53c2 \u63a5\u6536\u5668\u7c7b\u578b:\u63a5\u6536\u5668\u7c7b\u578b\u548c\u53c2\u6570\u7c7b\u4f3c,\u53ef\u4ee5\u662f\u6307\u9488\u7c7b\u578b\u548c\u975e\u6307\u9488\u7c7b\u578b. \u63a5\u6536\u5668\u7c7b\u578b\u6807\u8bc6\u4e86\u5f62\u53c2\u7684\u7c7b\u578b \u65b9\u6cd5\u540d,\u53c2\u6570\u5217\u8868,\u8fd4\u56de\u53c2\u6570:\u5177\u4f53\u683c\u5f0f\u4e0e\u51fd\u6570\u5b9a\u4e49\u76f8\u540c. type Person struct { name string city string age int8 } //newPerson \u662fperson\u7684\u6784\u9020\u51fd\u6570 func newPerson ( name string , age int8 ) * Person { return & Person { name : name , age : age , } } //Dream\u662fPerson\u7684\u4e00\u4e2a\u65b9\u6cd5 func ( p Person ) Dream () { fmt . Printf ( \"%s\u7684\u68a6\u60f3\" , p . name ) } func main () { p1 := newPerson ( \"agsol\" , 20 ) p1 . Dream () } >> > agsol\u7684\u68a6\u60f3 \u65b9\u6cd5\u4e0e\u6784\u9020\u51fd\u6570\u7684\u533a\u522b\u662f,\u51fd\u6570\u4e0d\u5c5e\u4e8e\u4efb\u4f55\u7c7b\u578b,\u65b9\u6cd5\u5c5e\u4e8e\u7279\u5b9a\u7684\u7c7b\u578b. \u503c\u7c7b\u578b\u7684\u63a5\u6536\u5668 \u00b6 \u5f53\u65b9\u6cd5\u4f5c\u7528\u4e8e\u503c\u7c7b\u578b\u63a5\u6536\u5668\u65f6,go\u8bed\u8a00\u4f1a\u5728\u4ee3\u7801\u8fd0\u884c\u65f6\u5c06\u63a5\u6536\u5668\u7684\u503c\u8d4b\u503c\u4e00\u4efd.\u5728\u503c\u7c7b\u578b\u63a5\u6536\u5668\u7684\u65b9\u6cd5\u4e2d\u53ef\u4ee5\u83b7\u53d6\u63a5\u6536\u5668\u7684\u6210\u5458\u503c,\u4f46\u662f\u4fee\u6539\u64cd\u4f5c\u53ea\u9488\u5bf9\u526f\u672c,\u65e0\u6cd5\u4e0b\u5c31\u8be5\u63a5\u6536\u5668\u53d8\u91cf\u672c\u8eab. type Person struct { name string city string age int8 } func newPerson ( name string , age int8 ) * Person { return & Person { name : name , age : age , } } func ( p Person ) SetAge2 ( newAge int8 ) { p . age = newAge } func main () { p1 := newPerson ( \"agsol\" , 20 ) fmt . Println ( p1 . age ) p1 . SetAge2 ( 30 ) //\u7b49\u4ef7\u4e8e(*p1).SetAge2(30) fmt . Println ( p1 . age ) } >> > 20 20 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ type Person struct { Name string } func ( p Person ) test () { p . Name = \"jack\" fmt . Println ( \"in test\" , p . Name ) } func main () { var p1 Person p1 . Name = \"tom\" p1 . test () fmt . Println ( \"in main\" , p1 . Name ) } >> > in test jack in main tom \u54ea\u4e2aPerson\u5b9e\u4f8b\u8c03\u7528\u8fd9\u4e2a\u65b9\u6cd5,p\u5c31\u662f\u662f\u54ea\u4e2aPerson\u5b9e\u4f8b\u7684\u526f\u672c,\u8fd9\u70b9\u548c\u51fd\u6570\u4f20\u53c2\u975e\u5e38\u76f8\u4f3c. \u6307\u9488\u7c7b\u578b\u7684\u63a5\u6536\u5668 \u00b6 \u6307\u9488\u7c7b\u578b\u7684\u63a5\u53d7\u8005\u7531\u4e00\u4e2a\u7ed3\u6784\u4f53\u7684\u6307\u9488\u7ec4\u6210,\u7531\u4e8e\u6307\u9488\u7684\u7279\u6027.\u8c03\u7528\u65b9\u6cd5\u65f6\u4fee\u6539\u63a5\u6536\u5668\u6307\u9488\u7684\u4efb\u610f\u6210\u5458\u53d8\u91cf,\u5728\u65b9\u6cd5\u7ed3\u675f\u540e,\u4fee\u6539\u90fd\u662f\u6709\u6548\u7684.\u8fd9\u79cd\u65b9\u6cd5\u5c31\u7c7b\u4f3c\u5176\u4ed6\u8bed\u8a00\u4e2d\u7684this\u6216\u8005self. type Person struct { name string city string age int8 } //newPerson \u662fperson\u7684\u6784\u9020\u51fd\u6570 func newPerson ( name string , age int8 ) * Person { return & Person { name : name , age : age , } } //\u4f7f\u7528\u6307\u9488\u63a5\u6536\u5668\u7684\u65b9\u6cd5 func ( p * Person ) SetAge ( newAge int8 ) { p . age = newAge // \u7b49\u4ef7\u4e8e(&p).name = newAge } func main () { p1 := newPerson ( \"agsol\" , 20 ) fmt . Println ( p1 . age ) //\u8c03\u7528\u8be5\u65b9\u6cd5 p1 . SetAge ( 30 ) fmt . Println ( p1 . age ) } ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ type Person struct { Name string Age int } func ( p * Person ) test () { p . Age = 30 fmt . Printf ( \"%v\\n\" , p ) fmt . Printf ( \"%p\\n\" , p ) } func main () { p1 := Person { \"agsol\" , 19 } p1 . test () fmt . Printf ( \"%p\\n\" , & p1 ) } >> > & { agsol 30 } 0xc0000044a0 //\u6307\u9488\u63a5\u6536\u5668,\u662f\u540c\u4e00\u4e2a\u5730\u5740\u7684\u53d8\u91cf 0xc0000044a0 \u4ec0\u4e48\u65f6\u5019\u8981\u4f7f\u7528\u6307\u9488\u7c7b\u578b\u7684\u63a5\u6536\u5668 \u00b6 \u9700\u8981\u4fee\u6539\u63a5\u6536\u5668\u4e2d\u7684\u503c \u63a5\u6536\u5668\u65f6\u62f7\u8d1d\u4ee3\u4ef7\u6bd4\u8f83\u5927\u7684\u5bf9\u8c61 \u4fdd\u8bc1\u4e00\u81f4\u6027,\u5982\u679c\u6709\u67d0\u4e2a\u65b9\u6cd5\u4f7f\u7528\u4e86\u6307\u9488\u63a5\u6536\u5668,\u90a3\u4e48\u5176\u4ed6\u7684\u65b9\u6cd5\u4e5f\u5e94\u8be5\u4f7f\u7528\u6307\u9488\u63a5\u6536\u5668. \u76f8\u5bf9\u6765\u8bf4,\u6307\u9488\u7c7b\u578b\u7684\u63a5\u6536\u5668\u66f4\u5e38\u7528,\u56e0\u4e3a\u53ef\u4ee5\u63d0\u9ad8\u6548\u7387. \u4efb\u610f\u7c7b\u578b\u6dfb\u52a0\u65b9\u6cd5 \u00b6 Go\u8bed\u8a00\u4e2d,\u63a5\u6536\u5668\u7684\u7c7b\u578b\u53ef\u4ee5\u662f\u4efb\u4f55\u7c7b\u578b.\u4e0d\u4ec5\u4ec5\u662f\u7ed3\u6784\u4f53,\u4efb\u4f55\u7c7b\u578b\u90fd\u53ef\u4ee5\u62e5\u6709\u65b9\u6cd5.\u6bd4\u5982\u7ed9\u5185\u7f6eint\u7c7b\u578b\u5b9a\u4e49\u81ea\u5b9a\u4e49\u4e00\u4e2a\u65b0\u7684\u7c7b\u578b,\u7136\u540e\u4e3a\u81ea\u5b9a\u4e49\u7684\u7c7b\u578b\u6dfb\u52a0\u65b9\u6cd5. type MyInt int func ( m MyInt ) SayHello (){ fmt . Println ( \"hello\" ) } func main () { var m1 MyInt m1 . SayHello () m1 = 100 fmt . Printf ( \"%#v %T\\n\" , m1 , m1 ) } >> > hello 100 main . MyInt \u6ce8\u610f:\u4e0d\u80fd\u7ed9\u522b\u7684\u5305\u7684\u7c7b\u578b\u5b9a\u4e49\u65b9\u6cd5,\u53ea\u80fd\u5728\u5305\u5185\u4f7f\u7528. \u65b9\u6cd5\u7684\u8c03\u7528\u548c\u4f20\u53c2\u673a\u5236 \u00b6 \u65b9\u6cd5\u7684\u8c03\u7528\u548c\u4f20\u53c2\u673a\u5236\u4e0e\u51fd\u6570\u57fa\u672c\u4e00\u81f4,\u4e0d\u4e00\u6837\u7684\u662f,\u5728\u65b9\u6cd5\u8c03\u7528\u7684\u65f6\u5019,\u4f1a\u5c06\u8c03\u7528\u65b9\u6cd5\u7684\u5b9e\u4f8b\u5f53\u4f5c\u5b9e\u53c2\u4f20\u9012\u7ed9\u65b9\u6cd5. \u8bf4\u660e \u00b6 \u5728\u901a\u8fc7\u4e00\u4e2a\u5b9e\u4f8b\u53bb\u8c03\u7528\u65b9\u6cd5\u65f6,\u5176\u8c03\u7528\u673a\u5236\u4e8e\u51fd\u6570\u4e00\u81f4. \u4e0d\u540c\u70b9:\u5f53\u5b9e\u4f8b\u8c03\u7528\u65b9\u6cd5\u65f6,\u8be5\u5b9e\u4f8b\u672c\u8eab\u4e5f\u4f1a\u4f5c\u4e3a\u4e00\u4e2a\u53c2\u6570\u4f20\u9012\u5230\u65b9\u6cd5\u4e2d.(\u5982\u679c\u5b9e\u4f8b\u65f6\u503c\u7c7b\u578b,\u5c31\u8fdb\u884c\u65b9\u6cd5\u7684\u62f7\u8d1d,\u5982\u679c\u5b9e\u4f8b\u662f\u5f15\u7528\u7c7b\u578b,\u5219\u8fdb\u884c\u5730\u5740\u62f7\u8d1d.) \u65b9\u6cd5\u4e0e\u51fd\u6570\u7684\u533a\u522b \u00b6 \u8c03\u7528\u65b9\u5f0f\u4e0d\u540c \u51fd\u6570\u7684\u8c03\u7528\u65b9\u5f0f: \u51fd\u6570\u540d(\u5b9e\u53c2\u5217\u8868) \u65b9\u6cd5\u7684\u8c03\u7528\u65b9\u5f0f: \u53d8\u91cf.\u65b9\u6cd5\u540d(\u5b9e\u53c2\u5217\u8868) \u5bf9\u4e8e\u666e\u901a\u51fd\u6570,\u63a5\u6536\u5668\u4e3a\u503c\u7c7b\u7c7b\u578b\u65f6.\u4e0d\u80fd\u5c06\u6307\u9488\u7c7b\u578b\u7684\u6570\u636e\u76f4\u63a5\u4f20\u9012,\u53cd\u4e4b\u4ea6\u7136. \u5bf9\u4e8e\u65b9\u6cd5(\u6bd4\u5982struct\u7684\u65b9\u6cd5),\u63a5\u6536\u5668\u4e3a\u503c\u7c7b\u578b\u65f6,\u53ef\u4ee5\u76f4\u63a5\u7528\u6307\u9488\u7c7b\u578b\u7684\u5b9e\u4f8b\u8c03\u7528\u65b9\u6cd5,\u53cd\u8fc7\u6765\u4e5f\u540c\u6837\u53ef\u4ee5. \u603b\u7ed3: \u4e0d\u7ba1\u8c03\u7528\u5f62\u5f0f\u5982\u4f55,\u771f\u6b63\u51b3\u5b9a\u65f6\u503c\u62f7\u8d1d\u8fd8\u662f\u5730\u5740\u62f7\u8d1d,\u770b\u8fd9\u4e2a\u65b9\u6cd5\u4e0e\u54ea\u4e2a\u7c7b\u578b\u7ed1\u5b9a.\u8c03\u7528\u7684\u65f6\u5019\u4f20\u5165\u6307\u9488\u6216\u662f\u503c\u7c7b\u578b,\u7f16\u8bd1\u5668\u4f1a\u6709\u4f18\u5316,\u81ea\u52a8\u68c0\u6d4breceiver\u7684\u7c7b\u578b,\u81ea\u5b9a\u53d8\u6210\u5176\u9700\u8981\u7684\u7c7b\u578b. \u65b9\u6cd5\u4e2d\u5b9e\u9645\u4f20\u5165\u7684\u6570\u636e\u7c7b\u578b\u4e0e\u63a5\u6536\u5668\u6570\u636e\u7c7b\u578b\u4e00\u81f4,\u4f46\u662f\u4f20\u5165\u503c\u7c7b\u578b\u6216\u8005\u6307\u9488\u7c7b\u578b\u90fd\u53ef\u4ee5\u8bc6\u522b,\u662fgo\u7684\u8bed\u6cd5\u7cd6. \u51fd\u6570\u4e2d,\u6309\u5f62\u53c2\u7684\u6570\u636e\u7c7b\u578b\u8fdb\u884c\u4f20\u503c,\u6570\u636e\u7c7b\u578b\u4e0d\u4e00\u81f4,\u62a5\u9519. \u7ec6\u8282 \u00b6 ==\u65b9\u6cd5==\u7684\u8bbf\u95ee\u63a7\u5236\u8303\u56f4\u7684\u89c4\u5219,\u4e0e\u51fd\u6570\u4e00\u6837.\u65b9\u6cd5\u540d\u9996\u5b57\u6bcd\u5c0f\u5199,\u53ea\u80fd\u5728\u672c\u5305\u8bbf\u95ee,\u65b9\u6cd5\u9996\u5b57\u6bcd\u5927\u5199,\u53ef\u4ee5\u5728\u672c\u5305\u548c\u5176\u4ed6\u5305\u8bbf\u95ee.\u6ce8\u610f,\u662f\u65b9\u6cd5\u540d!!! \u5982\u679c\u4e00\u4e2a\u7c7b\u578b\u5b9e\u73b0\u4e86String()\u8fd9\u4e2a\u65b9\u6cd5,\u90a3\u4e48fmt.Println\u9ed8\u8ba4\u4f1a\u8c03\u7528\u8fd9\u4e2a\u5b9e\u4f8b\u7684String()\u8fdb\u884c\u8f93\u51fa.\u800c\u4e0d\u4f1a\u8f93\u51fa\u5bf9\u8c61\u5185\u5bb9 type Person struct { Name string Age int } func ( p Person ) String () string { return \"aaa\" } func main () { p1 := Person { \"agsol\" , 19 } fmt . Printf ( \"%#v,%v\\n\" , p1 , p1 ) fmt . Println ( p1 ) } >> > main . Person { Name : \"agsol\" , Age : 19 }, aaa aaa \u7ec3\u4e60 \u00b6 \u7f16\u5199\u4e00\u4e2a\u65b9\u6cd5\u7b97\u8be5\u77e9\u5f62\u7684\u9762\u79ef(\u53ef\u4ee5\u63a5\u6536\u957f len\uff0c\u548c\u5bbd width)\uff0c \u5c06\u5176\u4f5c\u4e3a\u65b9\u6cd5\u8fd4\u56de\u503c\u3002\u5728 main \u65b9\u6cd5\u4e2d\u8c03\u7528\u8be5\u65b9\u6cd5\uff0c\u63a5\u6536\u8fd4\u56de\u7684\u9762\u79ef\u503c\u5e76\u6253\u5370\u3002 type MethodUtils struct { } func ( mu MethodUtils ) areas ( m , n float64 ) float64 { return m * n } func main () { var mu1 MethodUtils res := mu1 . areas ( 2.5 , 4.0 ) fmt . Println ( res ) } >> > 10 \u200b \u8bf4\u660e:\u7ed3\u6784\u4f53\u4e5f\u53ef\u4ee5\u4e3a\u7a7a \u7f16\u5199\u65b9\u6cd5\uff1a\u5224\u65ad\u4e00\u4e2a\u6570\u662f\u5947\u6570\u8fd8\u662f\u5076\u6570 type MethodUtils struct { } func ( mu * MethodUtils ) Judge ( m int ) { if m % 2 == 0 { fmt . Println ( \"even number\" ) } else { fmt . Println ( \"odd number\" ) } } func main () { var mu1 MethodUtils // (&mu1).Judge(8)\u7b49\u4ef7\u4e8e\u4e0b\u9762\u7684\u65b9\u5f0f mu1 . Judge ( 8 ) } >> > even number","title":"\u7ed3\u6784\u4f53\u7684\u65b9\u6cd5"},{"location":"Golang/%E7%BB%93%E6%9E%84%E4%BD%93%E7%9A%84%E6%96%B9%E6%B3%95/#_1","text":"Go\u4e2d\u7684\u65b9\u6cd5\u662f\u4f5c\u7528\u5728\u6307\u5b9a\u7684\u6570\u636e\u7c7b\u578b\u4e0a\u7684,\u5373\u548c\u6307\u5b9a\u7684\u6570\u636e\u7c7b\u578b\u7ed1\u5b9a,\u56e0\u6b64\u81ea\u5b9a\u4e49\u7c7b\u578b\u90fd\u53ef\u4ee5\u7531\u65b9\u6cd5,\u800c\u4e0d\u4ec5\u4ec5\u662fstruct.","title":"\u7ed3\u6784\u4f53\u7684\u65b9\u6cd5"},{"location":"Golang/%E7%BB%93%E6%9E%84%E4%BD%93%E7%9A%84%E6%96%B9%E6%B3%95/#_2","text":"Go\u8bed\u8a00\u4e2d\u6ca1\u6709\u6784\u9020\u51fd\u6570,\u53ef\u4ee5\u81ea\u5df1\u5b9e\u73b0.\u4e3a\u4e86\u9632\u6b62\u7ed3\u6784\u4f53\u6bd4\u8f83\u590d\u6742\u9020\u6210\u7684\u503c\u62f7\u8d1d\u5f00\u9500\u592a\u5927,\u8fd9\u4e2a\u6784\u9020\u51fd\u6570\u8fd4\u56de\u7684\u662f\u7ed3\u6784\u4f53\u7684\u6307\u9488\u7c7b\u578b. type Person struct { name string city string age int8 } func newPerson ( name , city string , age int8 ) * Person { return & Person { name : name , city : city , age : age , } } func main () { p1 := newPerson ( \"agsol\" , \"cy\" , 90 ) //\u8c03\u7528\u6784\u9020\u51fd\u6570 fmt . Printf ( \"%#v\\n\" , * p1 ) fmt . Printf ( \"%#v\\n\" , p1 ) } >> > main . Person { name : \"agsol\" , city : \"cy\" , age : 90 } & main . Person { name : \"agsol\" , city : \"cy\" , age : 90 }","title":"\u6784\u9020\u51fd\u6570"},{"location":"Golang/%E7%BB%93%E6%9E%84%E4%BD%93%E7%9A%84%E6%96%B9%E6%B3%95/#_3","text":"\u5f53\u5bfc\u5305\u65f6\u5019,\u88ab\u5bfc\u5165\u5305\u4e2d\u7684\u53d8\u91cf\u540d\u5982\u679c\u662f\u5c0f\u5199\u5b57\u6bcd\u5f00\u5934,\u90a3\u5c31\u65e0\u6cd5\u5728\u4e3b\u5305\u4e2d\u4f7f\u7528,\u5de5\u5382\u6a21\u5f0f\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898.","title":"\u5de5\u5382\u6a21\u5f0f"},{"location":"Golang/%E7%BB%93%E6%9E%84%E4%BD%93%E7%9A%84%E6%96%B9%E6%B3%95/#_4","text":"model.go package model //\u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784\u4f53 type Student struct { Name string Score float64 } main.go package main import ( \"fmt\" \"gocode/day08/factory/model\" ) func main () { var stu = model . Student { Name : \"tom\" , Score : 34.9 , } fmt . Println ( stu ) }","title":"\u666e\u901a\u5bfc\u5305"},{"location":"Golang/%E7%BB%93%E6%9E%84%E4%BD%93%E7%9A%84%E6%96%B9%E6%B3%95/#_5","text":"\u5f53\u88ab\u5bfc\u5165\u5305\u4e2d\u53d8\u91cf\u540d\u4ee5\u5c0f\u5199\u5b57\u6bcd\u5f00\u5934\u65f6 model.go package model //\u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784\u4f53 type student struct { Name string Score float64 } func NewStudent ( n string , s float64 ) * student { return & student { Name : n , Score : s , } } main.go package main import ( \"fmt\" \"gocode/day08/factory/model\" ) func main () { var stu = model . NewStudent ( \"agsol\" , 99.9 ) fmt . Println ( stu , * stu ) } \u6ce8\u610f:\u5982\u679c\u5176\u4ed6\u5305\u8981\u662f\u7528\u8fd9\u4e2a\u7ed3\u6784\u4f53,\u90a3\u4e48\u8fd9\u4e2a\u7ed3\u6784\u4f53\u7684\u5b57\u6bb5\u4e5f\u9700\u8981\u662f\u5927\u5199,\u6bd4\u5982\u4e0a\u8ff0\u4ee3\u7801\u4e2d,\u5982\u679c\u5c06Name\u6539\u4e3aname\u8fd0\u884c,stu.name,\u5219\u629bundefine\u5f02\u5e38. stu.score undefined (cannot refer to unexported field or method score)","title":"\u5de5\u5382\u6a21\u5f0f"},{"location":"Golang/%E7%BB%93%E6%9E%84%E4%BD%93%E7%9A%84%E6%96%B9%E6%B3%95/#_6","text":"Go\u8bed\u8a00\u4e2d\u7684\u65b9\u6cd5(Method)\u662f\u4e00\u79cd\u4f5c\u7528\u4e8e\u7279\u5b9a\u7c7b\u578b\u53d8\u91cf\u7684\u51fd\u6570.\u8fd9\u4e2d\u7279\u5b9a\u7c7b\u578b\u7684\u53d8\u91cf\u53eb\u505a\u63a5\u6536\u5668(Receiver).\u63a5\u6536\u5668\u7684\u6982\u5ff5\u7c7b\u4f3c\u5176\u4ed6\u8bed\u8a00\u4e2d\u7684this\u6216\u8005self.","title":"\u65b9\u6cd5\u548c\u63a5\u6536\u5668"},{"location":"Golang/%E7%BB%93%E6%9E%84%E4%BD%93%E7%9A%84%E6%96%B9%E6%B3%95/#_7","text":"func ( \u63a5\u6536\u5668\u53d8\u91cfreceicer \u63a5\u6536\u5668\u7c7b\u578btype ) \u65b9\u6cd5\u540dmethodName ( \u53c2\u6570\u5217\u8868 ) ( \u8fd4\u56de\u53c2\u6570 ) { \u51fd\u6570\u4f53 return \u8fd4\u56de\u503c //\u975e\u5fc5\u987b } \u5176\u4e2d: \u63a5\u6536\u5668\u53d8\u91cf:\u63a5\u6536\u5668\u4e2d\u7684\u53c2\u6570\u53d8\u91cf\u540d\u5728\u547d\u540d\u65f6,\u5b98\u65b9\u5efa\u8bae\u4f7f\u7528\u63a5\u6536\u5668\u7c7b\u578b\u540d\u7684\u7b2c\u4e00\u4e2a\u5c0f\u5199\u5b57\u6bcd,\u800c\u4e0d\u662fself\u6216\u8005this\u4e4b\u7c7b\u7684\u547d\u540d.\u6bd4\u5982:Person\u7c7b\u578b\u7684\u63a5\u6536\u5668\u53d8\u91cf\u540d\u5e94\u8be5\u547d\u540d\u4e3ap,Connector\u7c7b\u578b\u7684\u63a5\u6536\u5668\u53d8\u91cf\u5e94\u8be5\u547d\u540d\u4e3ac\u7b49. \u63a5\u6536\u5668\u53d8\u91cf\u5c31\u76f8\u5f53\u4e8e\u4e00\u4e2a\u5f62\u53c2 \u63a5\u6536\u5668\u7c7b\u578b:\u63a5\u6536\u5668\u7c7b\u578b\u548c\u53c2\u6570\u7c7b\u4f3c,\u53ef\u4ee5\u662f\u6307\u9488\u7c7b\u578b\u548c\u975e\u6307\u9488\u7c7b\u578b. \u63a5\u6536\u5668\u7c7b\u578b\u6807\u8bc6\u4e86\u5f62\u53c2\u7684\u7c7b\u578b \u65b9\u6cd5\u540d,\u53c2\u6570\u5217\u8868,\u8fd4\u56de\u53c2\u6570:\u5177\u4f53\u683c\u5f0f\u4e0e\u51fd\u6570\u5b9a\u4e49\u76f8\u540c. type Person struct { name string city string age int8 } //newPerson \u662fperson\u7684\u6784\u9020\u51fd\u6570 func newPerson ( name string , age int8 ) * Person { return & Person { name : name , age : age , } } //Dream\u662fPerson\u7684\u4e00\u4e2a\u65b9\u6cd5 func ( p Person ) Dream () { fmt . Printf ( \"%s\u7684\u68a6\u60f3\" , p . name ) } func main () { p1 := newPerson ( \"agsol\" , 20 ) p1 . Dream () } >> > agsol\u7684\u68a6\u60f3 \u65b9\u6cd5\u4e0e\u6784\u9020\u51fd\u6570\u7684\u533a\u522b\u662f,\u51fd\u6570\u4e0d\u5c5e\u4e8e\u4efb\u4f55\u7c7b\u578b,\u65b9\u6cd5\u5c5e\u4e8e\u7279\u5b9a\u7684\u7c7b\u578b.","title":"\u5b9a\u4e49"},{"location":"Golang/%E7%BB%93%E6%9E%84%E4%BD%93%E7%9A%84%E6%96%B9%E6%B3%95/#_8","text":"\u5f53\u65b9\u6cd5\u4f5c\u7528\u4e8e\u503c\u7c7b\u578b\u63a5\u6536\u5668\u65f6,go\u8bed\u8a00\u4f1a\u5728\u4ee3\u7801\u8fd0\u884c\u65f6\u5c06\u63a5\u6536\u5668\u7684\u503c\u8d4b\u503c\u4e00\u4efd.\u5728\u503c\u7c7b\u578b\u63a5\u6536\u5668\u7684\u65b9\u6cd5\u4e2d\u53ef\u4ee5\u83b7\u53d6\u63a5\u6536\u5668\u7684\u6210\u5458\u503c,\u4f46\u662f\u4fee\u6539\u64cd\u4f5c\u53ea\u9488\u5bf9\u526f\u672c,\u65e0\u6cd5\u4e0b\u5c31\u8be5\u63a5\u6536\u5668\u53d8\u91cf\u672c\u8eab. type Person struct { name string city string age int8 } func newPerson ( name string , age int8 ) * Person { return & Person { name : name , age : age , } } func ( p Person ) SetAge2 ( newAge int8 ) { p . age = newAge } func main () { p1 := newPerson ( \"agsol\" , 20 ) fmt . Println ( p1 . age ) p1 . SetAge2 ( 30 ) //\u7b49\u4ef7\u4e8e(*p1).SetAge2(30) fmt . Println ( p1 . age ) } >> > 20 20 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ type Person struct { Name string } func ( p Person ) test () { p . Name = \"jack\" fmt . Println ( \"in test\" , p . Name ) } func main () { var p1 Person p1 . Name = \"tom\" p1 . test () fmt . Println ( \"in main\" , p1 . Name ) } >> > in test jack in main tom \u54ea\u4e2aPerson\u5b9e\u4f8b\u8c03\u7528\u8fd9\u4e2a\u65b9\u6cd5,p\u5c31\u662f\u662f\u54ea\u4e2aPerson\u5b9e\u4f8b\u7684\u526f\u672c,\u8fd9\u70b9\u548c\u51fd\u6570\u4f20\u53c2\u975e\u5e38\u76f8\u4f3c.","title":"\u503c\u7c7b\u578b\u7684\u63a5\u6536\u5668"},{"location":"Golang/%E7%BB%93%E6%9E%84%E4%BD%93%E7%9A%84%E6%96%B9%E6%B3%95/#_9","text":"\u6307\u9488\u7c7b\u578b\u7684\u63a5\u53d7\u8005\u7531\u4e00\u4e2a\u7ed3\u6784\u4f53\u7684\u6307\u9488\u7ec4\u6210,\u7531\u4e8e\u6307\u9488\u7684\u7279\u6027.\u8c03\u7528\u65b9\u6cd5\u65f6\u4fee\u6539\u63a5\u6536\u5668\u6307\u9488\u7684\u4efb\u610f\u6210\u5458\u53d8\u91cf,\u5728\u65b9\u6cd5\u7ed3\u675f\u540e,\u4fee\u6539\u90fd\u662f\u6709\u6548\u7684.\u8fd9\u79cd\u65b9\u6cd5\u5c31\u7c7b\u4f3c\u5176\u4ed6\u8bed\u8a00\u4e2d\u7684this\u6216\u8005self. type Person struct { name string city string age int8 } //newPerson \u662fperson\u7684\u6784\u9020\u51fd\u6570 func newPerson ( name string , age int8 ) * Person { return & Person { name : name , age : age , } } //\u4f7f\u7528\u6307\u9488\u63a5\u6536\u5668\u7684\u65b9\u6cd5 func ( p * Person ) SetAge ( newAge int8 ) { p . age = newAge // \u7b49\u4ef7\u4e8e(&p).name = newAge } func main () { p1 := newPerson ( \"agsol\" , 20 ) fmt . Println ( p1 . age ) //\u8c03\u7528\u8be5\u65b9\u6cd5 p1 . SetAge ( 30 ) fmt . Println ( p1 . age ) } ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ type Person struct { Name string Age int } func ( p * Person ) test () { p . Age = 30 fmt . Printf ( \"%v\\n\" , p ) fmt . Printf ( \"%p\\n\" , p ) } func main () { p1 := Person { \"agsol\" , 19 } p1 . test () fmt . Printf ( \"%p\\n\" , & p1 ) } >> > & { agsol 30 } 0xc0000044a0 //\u6307\u9488\u63a5\u6536\u5668,\u662f\u540c\u4e00\u4e2a\u5730\u5740\u7684\u53d8\u91cf 0xc0000044a0","title":"\u6307\u9488\u7c7b\u578b\u7684\u63a5\u6536\u5668"},{"location":"Golang/%E7%BB%93%E6%9E%84%E4%BD%93%E7%9A%84%E6%96%B9%E6%B3%95/#_10","text":"\u9700\u8981\u4fee\u6539\u63a5\u6536\u5668\u4e2d\u7684\u503c \u63a5\u6536\u5668\u65f6\u62f7\u8d1d\u4ee3\u4ef7\u6bd4\u8f83\u5927\u7684\u5bf9\u8c61 \u4fdd\u8bc1\u4e00\u81f4\u6027,\u5982\u679c\u6709\u67d0\u4e2a\u65b9\u6cd5\u4f7f\u7528\u4e86\u6307\u9488\u63a5\u6536\u5668,\u90a3\u4e48\u5176\u4ed6\u7684\u65b9\u6cd5\u4e5f\u5e94\u8be5\u4f7f\u7528\u6307\u9488\u63a5\u6536\u5668. \u76f8\u5bf9\u6765\u8bf4,\u6307\u9488\u7c7b\u578b\u7684\u63a5\u6536\u5668\u66f4\u5e38\u7528,\u56e0\u4e3a\u53ef\u4ee5\u63d0\u9ad8\u6548\u7387.","title":"\u4ec0\u4e48\u65f6\u5019\u8981\u4f7f\u7528\u6307\u9488\u7c7b\u578b\u7684\u63a5\u6536\u5668"},{"location":"Golang/%E7%BB%93%E6%9E%84%E4%BD%93%E7%9A%84%E6%96%B9%E6%B3%95/#_11","text":"Go\u8bed\u8a00\u4e2d,\u63a5\u6536\u5668\u7684\u7c7b\u578b\u53ef\u4ee5\u662f\u4efb\u4f55\u7c7b\u578b.\u4e0d\u4ec5\u4ec5\u662f\u7ed3\u6784\u4f53,\u4efb\u4f55\u7c7b\u578b\u90fd\u53ef\u4ee5\u62e5\u6709\u65b9\u6cd5.\u6bd4\u5982\u7ed9\u5185\u7f6eint\u7c7b\u578b\u5b9a\u4e49\u81ea\u5b9a\u4e49\u4e00\u4e2a\u65b0\u7684\u7c7b\u578b,\u7136\u540e\u4e3a\u81ea\u5b9a\u4e49\u7684\u7c7b\u578b\u6dfb\u52a0\u65b9\u6cd5. type MyInt int func ( m MyInt ) SayHello (){ fmt . Println ( \"hello\" ) } func main () { var m1 MyInt m1 . SayHello () m1 = 100 fmt . Printf ( \"%#v %T\\n\" , m1 , m1 ) } >> > hello 100 main . MyInt \u6ce8\u610f:\u4e0d\u80fd\u7ed9\u522b\u7684\u5305\u7684\u7c7b\u578b\u5b9a\u4e49\u65b9\u6cd5,\u53ea\u80fd\u5728\u5305\u5185\u4f7f\u7528.","title":"\u4efb\u610f\u7c7b\u578b\u6dfb\u52a0\u65b9\u6cd5"},{"location":"Golang/%E7%BB%93%E6%9E%84%E4%BD%93%E7%9A%84%E6%96%B9%E6%B3%95/#_12","text":"\u65b9\u6cd5\u7684\u8c03\u7528\u548c\u4f20\u53c2\u673a\u5236\u4e0e\u51fd\u6570\u57fa\u672c\u4e00\u81f4,\u4e0d\u4e00\u6837\u7684\u662f,\u5728\u65b9\u6cd5\u8c03\u7528\u7684\u65f6\u5019,\u4f1a\u5c06\u8c03\u7528\u65b9\u6cd5\u7684\u5b9e\u4f8b\u5f53\u4f5c\u5b9e\u53c2\u4f20\u9012\u7ed9\u65b9\u6cd5.","title":"\u65b9\u6cd5\u7684\u8c03\u7528\u548c\u4f20\u53c2\u673a\u5236"},{"location":"Golang/%E7%BB%93%E6%9E%84%E4%BD%93%E7%9A%84%E6%96%B9%E6%B3%95/#_13","text":"\u5728\u901a\u8fc7\u4e00\u4e2a\u5b9e\u4f8b\u53bb\u8c03\u7528\u65b9\u6cd5\u65f6,\u5176\u8c03\u7528\u673a\u5236\u4e8e\u51fd\u6570\u4e00\u81f4. \u4e0d\u540c\u70b9:\u5f53\u5b9e\u4f8b\u8c03\u7528\u65b9\u6cd5\u65f6,\u8be5\u5b9e\u4f8b\u672c\u8eab\u4e5f\u4f1a\u4f5c\u4e3a\u4e00\u4e2a\u53c2\u6570\u4f20\u9012\u5230\u65b9\u6cd5\u4e2d.(\u5982\u679c\u5b9e\u4f8b\u65f6\u503c\u7c7b\u578b,\u5c31\u8fdb\u884c\u65b9\u6cd5\u7684\u62f7\u8d1d,\u5982\u679c\u5b9e\u4f8b\u662f\u5f15\u7528\u7c7b\u578b,\u5219\u8fdb\u884c\u5730\u5740\u62f7\u8d1d.)","title":"\u8bf4\u660e"},{"location":"Golang/%E7%BB%93%E6%9E%84%E4%BD%93%E7%9A%84%E6%96%B9%E6%B3%95/#_14","text":"\u8c03\u7528\u65b9\u5f0f\u4e0d\u540c \u51fd\u6570\u7684\u8c03\u7528\u65b9\u5f0f: \u51fd\u6570\u540d(\u5b9e\u53c2\u5217\u8868) \u65b9\u6cd5\u7684\u8c03\u7528\u65b9\u5f0f: \u53d8\u91cf.\u65b9\u6cd5\u540d(\u5b9e\u53c2\u5217\u8868) \u5bf9\u4e8e\u666e\u901a\u51fd\u6570,\u63a5\u6536\u5668\u4e3a\u503c\u7c7b\u7c7b\u578b\u65f6.\u4e0d\u80fd\u5c06\u6307\u9488\u7c7b\u578b\u7684\u6570\u636e\u76f4\u63a5\u4f20\u9012,\u53cd\u4e4b\u4ea6\u7136. \u5bf9\u4e8e\u65b9\u6cd5(\u6bd4\u5982struct\u7684\u65b9\u6cd5),\u63a5\u6536\u5668\u4e3a\u503c\u7c7b\u578b\u65f6,\u53ef\u4ee5\u76f4\u63a5\u7528\u6307\u9488\u7c7b\u578b\u7684\u5b9e\u4f8b\u8c03\u7528\u65b9\u6cd5,\u53cd\u8fc7\u6765\u4e5f\u540c\u6837\u53ef\u4ee5. \u603b\u7ed3: \u4e0d\u7ba1\u8c03\u7528\u5f62\u5f0f\u5982\u4f55,\u771f\u6b63\u51b3\u5b9a\u65f6\u503c\u62f7\u8d1d\u8fd8\u662f\u5730\u5740\u62f7\u8d1d,\u770b\u8fd9\u4e2a\u65b9\u6cd5\u4e0e\u54ea\u4e2a\u7c7b\u578b\u7ed1\u5b9a.\u8c03\u7528\u7684\u65f6\u5019\u4f20\u5165\u6307\u9488\u6216\u662f\u503c\u7c7b\u578b,\u7f16\u8bd1\u5668\u4f1a\u6709\u4f18\u5316,\u81ea\u52a8\u68c0\u6d4breceiver\u7684\u7c7b\u578b,\u81ea\u5b9a\u53d8\u6210\u5176\u9700\u8981\u7684\u7c7b\u578b. \u65b9\u6cd5\u4e2d\u5b9e\u9645\u4f20\u5165\u7684\u6570\u636e\u7c7b\u578b\u4e0e\u63a5\u6536\u5668\u6570\u636e\u7c7b\u578b\u4e00\u81f4,\u4f46\u662f\u4f20\u5165\u503c\u7c7b\u578b\u6216\u8005\u6307\u9488\u7c7b\u578b\u90fd\u53ef\u4ee5\u8bc6\u522b,\u662fgo\u7684\u8bed\u6cd5\u7cd6. \u51fd\u6570\u4e2d,\u6309\u5f62\u53c2\u7684\u6570\u636e\u7c7b\u578b\u8fdb\u884c\u4f20\u503c,\u6570\u636e\u7c7b\u578b\u4e0d\u4e00\u81f4,\u62a5\u9519.","title":"\u65b9\u6cd5\u4e0e\u51fd\u6570\u7684\u533a\u522b"},{"location":"Golang/%E7%BB%93%E6%9E%84%E4%BD%93%E7%9A%84%E6%96%B9%E6%B3%95/#_15","text":"==\u65b9\u6cd5==\u7684\u8bbf\u95ee\u63a7\u5236\u8303\u56f4\u7684\u89c4\u5219,\u4e0e\u51fd\u6570\u4e00\u6837.\u65b9\u6cd5\u540d\u9996\u5b57\u6bcd\u5c0f\u5199,\u53ea\u80fd\u5728\u672c\u5305\u8bbf\u95ee,\u65b9\u6cd5\u9996\u5b57\u6bcd\u5927\u5199,\u53ef\u4ee5\u5728\u672c\u5305\u548c\u5176\u4ed6\u5305\u8bbf\u95ee.\u6ce8\u610f,\u662f\u65b9\u6cd5\u540d!!! \u5982\u679c\u4e00\u4e2a\u7c7b\u578b\u5b9e\u73b0\u4e86String()\u8fd9\u4e2a\u65b9\u6cd5,\u90a3\u4e48fmt.Println\u9ed8\u8ba4\u4f1a\u8c03\u7528\u8fd9\u4e2a\u5b9e\u4f8b\u7684String()\u8fdb\u884c\u8f93\u51fa.\u800c\u4e0d\u4f1a\u8f93\u51fa\u5bf9\u8c61\u5185\u5bb9 type Person struct { Name string Age int } func ( p Person ) String () string { return \"aaa\" } func main () { p1 := Person { \"agsol\" , 19 } fmt . Printf ( \"%#v,%v\\n\" , p1 , p1 ) fmt . Println ( p1 ) } >> > main . Person { Name : \"agsol\" , Age : 19 }, aaa aaa","title":"\u7ec6\u8282"},{"location":"Golang/%E7%BB%93%E6%9E%84%E4%BD%93%E7%9A%84%E6%96%B9%E6%B3%95/#_16","text":"\u7f16\u5199\u4e00\u4e2a\u65b9\u6cd5\u7b97\u8be5\u77e9\u5f62\u7684\u9762\u79ef(\u53ef\u4ee5\u63a5\u6536\u957f len\uff0c\u548c\u5bbd width)\uff0c \u5c06\u5176\u4f5c\u4e3a\u65b9\u6cd5\u8fd4\u56de\u503c\u3002\u5728 main \u65b9\u6cd5\u4e2d\u8c03\u7528\u8be5\u65b9\u6cd5\uff0c\u63a5\u6536\u8fd4\u56de\u7684\u9762\u79ef\u503c\u5e76\u6253\u5370\u3002 type MethodUtils struct { } func ( mu MethodUtils ) areas ( m , n float64 ) float64 { return m * n } func main () { var mu1 MethodUtils res := mu1 . areas ( 2.5 , 4.0 ) fmt . Println ( res ) } >> > 10 \u200b \u8bf4\u660e:\u7ed3\u6784\u4f53\u4e5f\u53ef\u4ee5\u4e3a\u7a7a \u7f16\u5199\u65b9\u6cd5\uff1a\u5224\u65ad\u4e00\u4e2a\u6570\u662f\u5947\u6570\u8fd8\u662f\u5076\u6570 type MethodUtils struct { } func ( mu * MethodUtils ) Judge ( m int ) { if m % 2 == 0 { fmt . Println ( \"even number\" ) } else { fmt . Println ( \"odd number\" ) } } func main () { var mu1 MethodUtils // (&mu1).Judge(8)\u7b49\u4ef7\u4e8e\u4e0b\u9762\u7684\u65b9\u5f0f mu1 . Judge ( 8 ) } >> > even number","title":"\u7ec3\u4e60"},{"location":"Golang/%E8%BF%90%E7%AE%97%E7%AC%A6/","text":"\u8fd0\u7b97\u7b26 \u7b97\u6570\u8fd0\u7b97\u7b26 \u5bf9\u6570\u503c\u7c7b\u578b\u6570\u636e\u8fdb\u884c\u8fd0\u7b97. ++ -- %\u53d6\u4f59 \u8d4b\u503c\u8fd0\u7b97\u7b26 \u7279\u6b8a\u8d4b\u503c\u8fd0\u7b97\u7b26 \u6bd4\u8f83\u8fd0\u7b97\u7b26(\u5173\u7cfb\u8fd0\u7b97\u7b26) \u903b\u8f91\u8fd0\u7b97\u7b26 \u77ed\u8def\u7b97\u6cd5 \u4f4d\u8fd0\u7b97\u7b26 \u5176\u4ed6\u8fd0\u7b97\u7b26 \u4f18\u5148\u7ea7 \u8fd0\u7b97\u7b26 \u00b6 \u7528\u4e0e\u6570\u636e\u7684\u8fd0\u7b97,\u8d4b\u503c\u548c\u6bd4\u8f83\u7b49. golang\u4e2d\u65e0\u4e09\u76ee\u8fd0\u7b97\u7b26 \u7b97\u6570\u8fd0\u7b97\u7b26 \u00b6 \u5de6\u4fa7\u7c7b\u578b\u786e\u5b9a\uff0c\u5219\u53f3\u4fa7\u8f6c\u4e3a\u5de6\u4fa7\u7c7b\u578b\uff0c\u518d\u8fd0\u7b97, \u76f8\u53cd\uff0c\u5de6\u4fa7\u7c7b\u578b\u4e0d\u786e\u5b9a\uff0c\u5219\u6839\u636e\u53f3\u4fa7\u7c7b\u578b\u63a8\u5bfc\u5de6\u4fa7\u7c7b\u578b\uff0c\u518d\u8fd0\u7b97 \u6570\u503c\u5e38\u91cf\u53ef\u4ee5\u5728\u8868\u8fbe\u5f0f\u4e2d\u81ea\u7531\u6df7\u5408\u548c\u5339\u914d,\u4ec5\u5f53\u4ed6\u4eec\u8d4b\u503c\u7ed9\u53d8\u91cf\u6216\u8005\u5728\u4ee3\u7801\u4e2d\u660e\u786e\u9700\u8981\u7c7b\u578b\u7684\u65f6\u5019,\u624d\u9700\u8981\u4ed6\u4eec\u7684\u7c7b\u578b. golang\u4e2d,\u4e0d\u540c\u6570\u5b57\u7c7b\u578b\u4e0d\u53ef\u4ee5\u76f8\u52a0\u51cf,int+float64\u4f1a\u62a5\u9519 mismatched types int and float64 \u5bf9\u6570\u503c\u7c7b\u578b\u6570\u636e\u8fdb\u884c\u8fd0\u7b97. \u00b6 ++ -- \u00b6 a++\u81ea\u589e1 a--\u81ea\u51cf1 golang\u7684\u81ea\u589e\u81ea\u51cf\u53ea\u80fd\u5f53\u4f5c\u4e00\u4e2a\u72ec\u7acb\u8bed\u4f7f\u7528,\u8be6\u89c1\u4f8b\u5b50` ```go\\ //\u6b63\u786e\u7528\u6cd5 var i int = 30 i++ fmt.Println(i) //\u9519\u8bef\u7528\u6cd5 var i int = 10 var j int i = j++ //\u8bed\u6cd5\u62a5\u9519 a := i++ //\u8bed\u6cd5\u62a5\u9519 if i++ > 0 { //\u8bed\u6cd5\u62a5\u9519 fmt.Println(\"ok\") } golang\u4e2d\u53ea\u6709\u540e++(i++),\u6ca1\u6709\u524d++(++i) ##### + \u5176\u4e2d`+`\u4e24\u8fb9\u90fd\u662f\u5b57\u7b26\u4e32,\u4f1a\u8fdb\u884c\u5b57\u7b26\u4e32\u7684\u62fc\u63a5 ##### / \u5982\u679c\u8fd0\u7b97\u7684\u6570\u5373`/`\u53f7\u4e24\u4fa7\u90fd\u662f\u6574\u6570,\u9664\u540e\u4f1a\u76f4\u63a5\u53bb\u6389\u5c0f\u6570\u90e8\u5206,\u65e0\u4efb\u4f55\u8fd0\u7b97 ```go var n1 float32 = 10 / 4 fmt.Println(n1) >>>2 \u5982\u679c\u5e0c\u671b\u4fdd\u7559\u5c0f\u6570\u90e8\u5206,\u5373\u4e00\u5b9a\u8981\u6709\u6d6e\u70b9\u6570\u53c2\u4e0e\u8fd0\u7b97(\u5373\u5728 / \u4e24\u4fa7) var n1 float32 = 10 / 4.0 //\u621610.0/4 fmt . Println ( n1 ) >> > 2.5 %\u53d6\u4f59 \u00b6 \u6c42\u6574\u6570\u5546c\uff0c\u5982\u8fdb\u884c\u6c42\u6a21\u8fd0\u7b97c = -2\uff08\u5411\u8d1f\u65e0\u7a77\u65b9\u5411\u820d\u5165\uff09\uff0c\u6c42\u4f59c = -1\uff08\u54110\u65b9\u5411\u820d\u5165\uff09\uff1b \u516c\u5f0f:a%b = a - (a/b) *b golang\u6b63\u8d1f\u4ee5a\u7b26\u53f7\u4e3a\u51c6,\u5373\u53d6\u4f59 var n1 int = 10 % 4 var n2 int = - 10 % 4 var n3 int = 10 %- 4 var n4 int = - 10 %- 4 fmt . Println ( n1 ) fmt . Println ( n2 ) fmt . Println ( n3 ) fmt . Println ( n4 ) >> > 2 >> > - 2 >> > 2 >> > - 2 python\u4e2d\u4ee5b\u7b26\u53f7\u4e3a\u51c6,\u5373\u53d6\u6a21 10 %- 4 >>>- 2 - 10 % 4 >>> 2 - 10 %- 4 >>>- 2 10 % 4 >>> 2 \u5bf9\u6574\u6570a,b\u53d6\u4f59\u548c\u53d6\u6a21\u7edf\u4e00\u90fd\u5206\u4e3a2\u6b65: \u7b2c\u4e00\u6b65\uff1a\u6c42\u6574\u6570\u5546, c = a / b \u7b2c\u4e8c\u6b65\uff1a\u8ba1\u7b97\u6a21\u6216\u4f59\u6570\uff0cr = a - c * b \u8fd9\u91cc\uff0c\u7b2c\u4e8c\u6b65\u5bf9\u4e8e\u53d6\u4f59\u8fd8\u662f\u53d6\u6a21\u90fd\u662f\u76f8\u540c\u7684\uff0c\u56e0\u4e3a\u51cf\u6cd5\u548c\u4e58\u6cd5\u4e00\u822c\u4e0d\u4f1a\u5e26\u6765\u8bef\u5dee\uff1b\u4f46\u662f\u5bf9\u4e8e\u7b2c\u4e00\u6b65\uff0c\u9664\u6cd5\u4f1a\u5e26\u6765\u8bef\u5dee\uff0c\u53d6\u4f59\u5728\u8ba1\u7b97c\u65f6,golang\u662f\u54110\u7684\u65b9\u5411\u820d\u5165\u7684\uff0c\u6bd4\u5982-1/5=-0.2\uff0c\u4e8e\u662f\u54110\u53d6\u6574\u5f970\uff0c \u56e0\u6b64\u4f59\u6570 r1 = -1 - 0 * 5 = -1\uff1b\u4f46\u662f\u53d6\u6a21\u5728\u8ba1\u7b97c\u65f6,python\u662f\u5411\u8d1f\u65e0\u7a77\u5927\u65b9\u5411\u820d\u5165\u7684\uff0c\u5373\u4e0a\u9762\u7684-0.2\u4f1a\u53d6\u6574\u4e3a-1\uff0c\u56e0\u6b64\u6a21 r2 = -1 - (-1) * 5 = 4; \u56e0\u6b64\uff0c\u5bf9\u4e8e\u4e24\u4e2a\u6570\u90fd\u662f\u6b63\u6570\u6765\u8bf4\uff0c\u6ca1\u6709\u5dee\u522b\uff0c\u56e0\u4e3a0\u548c\u8d1f\u65e0\u7a77\u5927\u5728\u5c0f\u6570c\u7684\u540c\u4e00\u4e2a\u65b9\u5411\u4e0a\uff1b\u4f46\u662f\u5bf9\u4e8e\u5b58\u5728\u4e00\u4e2a\u8d1f\u6570\u7684\u60c5\u51b5\u4e0b\uff0c0\u7684\u65b9\u5411\u548c\u8d1f\u65e0\u7a77\u5927\u5728c\u7684\u4e24\u4e2a\u76f8\u53cd\u7684\u65b9\u5411\uff0c\u56e0\u6b64\u5c31\u6709\u5dee\u522b\u3002 \u201c\u5f53\u6211\u4eec\u8d4b\u7ed9\u65e0\u7b26\u53f7\u7c7b\u578b\u4e00\u4e2a\u8d85\u51fa\u5b83\u8868\u793a\u8303\u56f4\u7684\u503c\u65f6\uff0c\u7ed3\u679c\u662f\u521d\u59cb\u503c\u5bf9\u65e0\u7b26\u53f7\u7c7b\u578b\u8868\u793a\u6570\u503c\u603b\u6570\u53d6\u6a21\u540e\u7684\u4f59\u6570\u3002\u4f8b\u5982\uff0c 8\u6bd4\u7279\u5927\u5c0f\u7684unsigned char \u53ef\u4ee5\u8868\u793a0 \u81f3 255 \u533a\u95f4\u5185\u7684\u503c\uff0c\u5982\u679c\u6211\u4e48\u8d4b\u503c\u7ed9\u6b64\u7c7b\u578b\u53d8\u91cf\u4e00\u4e2a\u533a\u95f4\u4ee5\u5916\u7684\u503c\uff0c\u5219\u5b9e\u9645\u7684\u7ed3\u679c\u662f\u8be5\u503c\u5bf9256\u53d6\u6a21\u540e\u6240\u5f97\u7684\u4f59\u6570\u3002\u56e0\u6b64\uff0c\u628a -1 \u8d4b\u503c\u4e3a8\u6bd4\u7279\u5927\u5c0f\u7684unsigned char \u6240\u5f97\u7684\u7ed3\u679c\u662f255\u201d \u4f5c\u8005\uff1a\u9ed8\u5199\u5e74\u534eAntifragile \u94fe\u63a5\uff1ahttps://www.jianshu.com/p/64b3979268a6 \u6765\u6e90\uff1a\u7b80\u4e66 \u8457\u4f5c\u6743\u5f52\u4f5c\u8005\u6240\u6709\u3002\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u8054\u7cfb\u4f5c\u8005\u83b7\u5f97\u6388\u6743\uff0c\u975e\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u6ce8\u660e\u51fa\u5904\u3002 \u8d4b\u503c\u8fd0\u7b97\u7b26 \u00b6 golang\u4e2d\u53ea\u6709\u5355\u76ee\u8fd0\u7b97\u7b26\u548c\u8d4b\u503c\u8fd0\u7b97\u7b26\u65f6\u4ece\u53f3\u5411\u5de6\u6267\u884c\u7684 \u5c06\u67d0\u4e2a\u8fd0\u7b97\u540e\u7684\u503c,\u8d4b\u503c\u7ed9\u6307\u5b9a\u7684\u53d8\u91cf. \u8d4b\u503c\u8fd0\u7b97\u7b26\u7684\u5de6\u8fb9,\u53ea\u80fd\u662f\u53d8\u91cf,\u53f3\u8fb9\u53ef\u4ee5\u662f\u53d8\u91cf,\u8868\u8fbe\u5f0f,\u5e38\u91cf\u503c. \u8d4b\u503c\u8fd0\u7b97\u7684\u6267\u884c\u987a\u5e8f\u662f\u4ece\u53f3\u5411\u5de6 golang\u4e2d\u4e5f\u652f\u6301\u4ea4\u53c9\u8d4b\u503c var a int = 10 var b int = 20 fmt . Println ( \"1\" , a , b ) a , b = b , a fmt . Println ( \"2\" , a , b ) >> > 1 10 20 >> > 2 20 10 Go\u4e2d,\u8d4b\u503c\u8bed\u53e5\u4e0d\u80fd\u5728\u51fd\u6570\u5916\u4f7f\u7528,\u62a5\u9519 var Age int = 10 //\u6ca1\u9519,\u8fd9\u662f\u5b9a\u4e49\u52a0\u521d\u59cb\u5316, -------------------------------- Name := \"tom\" //\u62a5\u9519. //\u7b49\u4ef7\u4e8evar Name string //Name = \"tom\" //\u800cName = \"tom\"\u5728\u51fd\u6570\u5916\u6267\u884c\u4e86\u8d4b\u503c\u8bed\u53e5,\u5c31\u4f1a\u62a5\u9519 -------------------------------- var Num int Num = 10 // \u62a5\u9519,\u4e5f\u662f\u5728\u51fd\u6570\u5916\u6267\u884c\u4e86\u8d4b\u503c\u8bed\u53e5 func main (){ fmt . Println ( Age ) fmt . Println ( Name ) fmt . Println ( Num ) } \u7279\u6b8a\u8d4b\u503c\u8fd0\u7b97\u7b26 \u00b6 <<=,>>=,&=,^=,|= \u6bd4\u8f83\u8fd0\u7b97\u7b26(\u5173\u7cfb\u8fd0\u7b97\u7b26) \u00b6 \u5173\u7cfb\u8fd0\u7b97\u7b26\u7684\u7ed3\u679c\u90fd\u662fbool\u884c,\u8981\u4e48\u4e3atrue,\u8981\u4e48\u4e3afalse \u5e38\u7528\u4e8eif\u7ed3\u6784\u6216\u8005\u5faa\u73af\u6761\u4ef6\u4e2d \u5173\u7cfb\u8fd0\u7b97\u7b26\u7684\u8868\u8fbe\u5f0f,\u79f0\u4e4b\u4e3a\u5173\u7cfb\u8868\u8fbe\u5f0f,a>b \u903b\u8f91\u8fd0\u7b97\u7b26 \u00b6 \u6700\u7ec8\u7ed3\u679c\u4e3abool\u503c. \u8fd0\u7b97\u7b26 \u8868\u8ff0 && \u4e0e || \u6216 ! \u975e \u77ed\u8def\u7b97\u6cd5 \u00b6 && \u4e5f\u53eb\u77ed\u8def\u4e0e,\u5f53\u7b2c\u4e00\u4e2a\u6761\u4ef6\u4e3afalse,\u5219\u4e0d\u4f1a\u8fdb\u884c\u7b2c\u4e8c\u4e2a\u5224\u65ad,\u6700\u7ec8\u7ed3\u679c\u4e3afalse || \u4e5f\u53eb\u77ed\u8def\u6216,\u5f53\u7b2c\u4e00\u4e2a\u6761\u4ef6\u4e3atrue,\u5219\u4e0d\u4f1a\u8fdb\u884c\u7b2c\u4e8c\u4e2a\u5224\u65ad,\u6700\u7ec8\u7ed3\u679c\u4e3atrue \u4f4d\u8fd0\u7b97\u7b26 \u00b6 \u6240\u6709\u4f4d\u8fd0\u7b97\u5747\u4e3a\u8865\u7801\u8fd0\u7b97,\u539f,\u53cd,\u8865\u8be6\u89c1<<\u8fdb\u5236>> \u4f4d\u4e0e,\u6216,\u5f02\u6216\u8ba1\u7b97\u673a\u901a\u7528 \u5de6\u79fb\u4f4d\u8fd0\u7b97<<\u7b26\u53f7\u4f4d\u4e0d\u53d8,\u4f4e\u4f4d\u88650,[\u76f8\u5f53\u4e8e\u4e582] \u53f3\u79fb\u4f4d\u8fd0\u7b97>>\u4f4e\u4f4d\u6ea2\u51fa,\u7b26\u53f7\u4e0d\u53d8,\u5e76\u7528\u7b26\u53f7\u4f4d\u8865\u6ea2\u51fa\u7684\u9ad8\u4f4d,[\u76f8\u5f53\u4e8e\u9664\u4ee52,\u9664\u6ca1\u4e86\u5c31\u662f1/-1] c := 1 >> 2 //\u53f3\u79fb\u4e24\u4f4d >> > 0 c := 1 << 2 //\u5de6\u79fb\u4e24\u4f4d >> > 4 \u5176\u4ed6\u8fd0\u7b97\u7b26 \u00b6 &\u53d6\u5740\u8fd0\u7b97\u7b26,\u5176\u540e\u4e3a\u6307\u9488\u7c7b\u578b\u65f6,\u8fd4\u56de\u6307\u9488\u7684\u5730\u5740,\u82e5\u5176\u540e\u4e3a\u503c\u7c7b\u578b,\u8fd4\u56de\u503c\u5bf9\u5e94\u7684\u5730\u5740 *\u53d6\u503c\u8fd0\u7b97\u7b26 \u5bf9\u6307\u9488\u7c7b\u578b\u53d6\u5176\u4fdd\u5b58\u7684\u5730\u5740\u7684\u503c,\u5176\u540e\u4e0d\u53ef\u4ee5\u63a5\u503c\u7c7b\u578b \u4f18\u5148\u7ea7 \u00b6 \u52a0\u62ec\u53f7","title":"\u8fd0\u7b97\u7b26"},{"location":"Golang/%E8%BF%90%E7%AE%97%E7%AC%A6/#_1","text":"\u7528\u4e0e\u6570\u636e\u7684\u8fd0\u7b97,\u8d4b\u503c\u548c\u6bd4\u8f83\u7b49. golang\u4e2d\u65e0\u4e09\u76ee\u8fd0\u7b97\u7b26","title":"\u8fd0\u7b97\u7b26"},{"location":"Golang/%E8%BF%90%E7%AE%97%E7%AC%A6/#_2","text":"\u5de6\u4fa7\u7c7b\u578b\u786e\u5b9a\uff0c\u5219\u53f3\u4fa7\u8f6c\u4e3a\u5de6\u4fa7\u7c7b\u578b\uff0c\u518d\u8fd0\u7b97, \u76f8\u53cd\uff0c\u5de6\u4fa7\u7c7b\u578b\u4e0d\u786e\u5b9a\uff0c\u5219\u6839\u636e\u53f3\u4fa7\u7c7b\u578b\u63a8\u5bfc\u5de6\u4fa7\u7c7b\u578b\uff0c\u518d\u8fd0\u7b97 \u6570\u503c\u5e38\u91cf\u53ef\u4ee5\u5728\u8868\u8fbe\u5f0f\u4e2d\u81ea\u7531\u6df7\u5408\u548c\u5339\u914d,\u4ec5\u5f53\u4ed6\u4eec\u8d4b\u503c\u7ed9\u53d8\u91cf\u6216\u8005\u5728\u4ee3\u7801\u4e2d\u660e\u786e\u9700\u8981\u7c7b\u578b\u7684\u65f6\u5019,\u624d\u9700\u8981\u4ed6\u4eec\u7684\u7c7b\u578b. golang\u4e2d,\u4e0d\u540c\u6570\u5b57\u7c7b\u578b\u4e0d\u53ef\u4ee5\u76f8\u52a0\u51cf,int+float64\u4f1a\u62a5\u9519 mismatched types int and float64","title":"\u7b97\u6570\u8fd0\u7b97\u7b26"},{"location":"Golang/%E8%BF%90%E7%AE%97%E7%AC%A6/#_3","text":"","title":"\u5bf9\u6570\u503c\u7c7b\u578b\u6570\u636e\u8fdb\u884c\u8fd0\u7b97."},{"location":"Golang/%E8%BF%90%E7%AE%97%E7%AC%A6/#-","text":"a++\u81ea\u589e1 a--\u81ea\u51cf1 golang\u7684\u81ea\u589e\u81ea\u51cf\u53ea\u80fd\u5f53\u4f5c\u4e00\u4e2a\u72ec\u7acb\u8bed\u4f7f\u7528,\u8be6\u89c1\u4f8b\u5b50` ```go\\ //\u6b63\u786e\u7528\u6cd5 var i int = 30 i++ fmt.Println(i) //\u9519\u8bef\u7528\u6cd5 var i int = 10 var j int i = j++ //\u8bed\u6cd5\u62a5\u9519 a := i++ //\u8bed\u6cd5\u62a5\u9519 if i++ > 0 { //\u8bed\u6cd5\u62a5\u9519 fmt.Println(\"ok\") } golang\u4e2d\u53ea\u6709\u540e++(i++),\u6ca1\u6709\u524d++(++i) ##### + \u5176\u4e2d`+`\u4e24\u8fb9\u90fd\u662f\u5b57\u7b26\u4e32,\u4f1a\u8fdb\u884c\u5b57\u7b26\u4e32\u7684\u62fc\u63a5 ##### / \u5982\u679c\u8fd0\u7b97\u7684\u6570\u5373`/`\u53f7\u4e24\u4fa7\u90fd\u662f\u6574\u6570,\u9664\u540e\u4f1a\u76f4\u63a5\u53bb\u6389\u5c0f\u6570\u90e8\u5206,\u65e0\u4efb\u4f55\u8fd0\u7b97 ```go var n1 float32 = 10 / 4 fmt.Println(n1) >>>2 \u5982\u679c\u5e0c\u671b\u4fdd\u7559\u5c0f\u6570\u90e8\u5206,\u5373\u4e00\u5b9a\u8981\u6709\u6d6e\u70b9\u6570\u53c2\u4e0e\u8fd0\u7b97(\u5373\u5728 / \u4e24\u4fa7) var n1 float32 = 10 / 4.0 //\u621610.0/4 fmt . Println ( n1 ) >> > 2.5","title":"++  --"},{"location":"Golang/%E8%BF%90%E7%AE%97%E7%AC%A6/#_4","text":"\u6c42\u6574\u6570\u5546c\uff0c\u5982\u8fdb\u884c\u6c42\u6a21\u8fd0\u7b97c = -2\uff08\u5411\u8d1f\u65e0\u7a77\u65b9\u5411\u820d\u5165\uff09\uff0c\u6c42\u4f59c = -1\uff08\u54110\u65b9\u5411\u820d\u5165\uff09\uff1b \u516c\u5f0f:a%b = a - (a/b) *b golang\u6b63\u8d1f\u4ee5a\u7b26\u53f7\u4e3a\u51c6,\u5373\u53d6\u4f59 var n1 int = 10 % 4 var n2 int = - 10 % 4 var n3 int = 10 %- 4 var n4 int = - 10 %- 4 fmt . Println ( n1 ) fmt . Println ( n2 ) fmt . Println ( n3 ) fmt . Println ( n4 ) >> > 2 >> > - 2 >> > 2 >> > - 2 python\u4e2d\u4ee5b\u7b26\u53f7\u4e3a\u51c6,\u5373\u53d6\u6a21 10 %- 4 >>>- 2 - 10 % 4 >>> 2 - 10 %- 4 >>>- 2 10 % 4 >>> 2 \u5bf9\u6574\u6570a,b\u53d6\u4f59\u548c\u53d6\u6a21\u7edf\u4e00\u90fd\u5206\u4e3a2\u6b65: \u7b2c\u4e00\u6b65\uff1a\u6c42\u6574\u6570\u5546, c = a / b \u7b2c\u4e8c\u6b65\uff1a\u8ba1\u7b97\u6a21\u6216\u4f59\u6570\uff0cr = a - c * b \u8fd9\u91cc\uff0c\u7b2c\u4e8c\u6b65\u5bf9\u4e8e\u53d6\u4f59\u8fd8\u662f\u53d6\u6a21\u90fd\u662f\u76f8\u540c\u7684\uff0c\u56e0\u4e3a\u51cf\u6cd5\u548c\u4e58\u6cd5\u4e00\u822c\u4e0d\u4f1a\u5e26\u6765\u8bef\u5dee\uff1b\u4f46\u662f\u5bf9\u4e8e\u7b2c\u4e00\u6b65\uff0c\u9664\u6cd5\u4f1a\u5e26\u6765\u8bef\u5dee\uff0c\u53d6\u4f59\u5728\u8ba1\u7b97c\u65f6,golang\u662f\u54110\u7684\u65b9\u5411\u820d\u5165\u7684\uff0c\u6bd4\u5982-1/5=-0.2\uff0c\u4e8e\u662f\u54110\u53d6\u6574\u5f970\uff0c \u56e0\u6b64\u4f59\u6570 r1 = -1 - 0 * 5 = -1\uff1b\u4f46\u662f\u53d6\u6a21\u5728\u8ba1\u7b97c\u65f6,python\u662f\u5411\u8d1f\u65e0\u7a77\u5927\u65b9\u5411\u820d\u5165\u7684\uff0c\u5373\u4e0a\u9762\u7684-0.2\u4f1a\u53d6\u6574\u4e3a-1\uff0c\u56e0\u6b64\u6a21 r2 = -1 - (-1) * 5 = 4; \u56e0\u6b64\uff0c\u5bf9\u4e8e\u4e24\u4e2a\u6570\u90fd\u662f\u6b63\u6570\u6765\u8bf4\uff0c\u6ca1\u6709\u5dee\u522b\uff0c\u56e0\u4e3a0\u548c\u8d1f\u65e0\u7a77\u5927\u5728\u5c0f\u6570c\u7684\u540c\u4e00\u4e2a\u65b9\u5411\u4e0a\uff1b\u4f46\u662f\u5bf9\u4e8e\u5b58\u5728\u4e00\u4e2a\u8d1f\u6570\u7684\u60c5\u51b5\u4e0b\uff0c0\u7684\u65b9\u5411\u548c\u8d1f\u65e0\u7a77\u5927\u5728c\u7684\u4e24\u4e2a\u76f8\u53cd\u7684\u65b9\u5411\uff0c\u56e0\u6b64\u5c31\u6709\u5dee\u522b\u3002 \u201c\u5f53\u6211\u4eec\u8d4b\u7ed9\u65e0\u7b26\u53f7\u7c7b\u578b\u4e00\u4e2a\u8d85\u51fa\u5b83\u8868\u793a\u8303\u56f4\u7684\u503c\u65f6\uff0c\u7ed3\u679c\u662f\u521d\u59cb\u503c\u5bf9\u65e0\u7b26\u53f7\u7c7b\u578b\u8868\u793a\u6570\u503c\u603b\u6570\u53d6\u6a21\u540e\u7684\u4f59\u6570\u3002\u4f8b\u5982\uff0c 8\u6bd4\u7279\u5927\u5c0f\u7684unsigned char \u53ef\u4ee5\u8868\u793a0 \u81f3 255 \u533a\u95f4\u5185\u7684\u503c\uff0c\u5982\u679c\u6211\u4e48\u8d4b\u503c\u7ed9\u6b64\u7c7b\u578b\u53d8\u91cf\u4e00\u4e2a\u533a\u95f4\u4ee5\u5916\u7684\u503c\uff0c\u5219\u5b9e\u9645\u7684\u7ed3\u679c\u662f\u8be5\u503c\u5bf9256\u53d6\u6a21\u540e\u6240\u5f97\u7684\u4f59\u6570\u3002\u56e0\u6b64\uff0c\u628a -1 \u8d4b\u503c\u4e3a8\u6bd4\u7279\u5927\u5c0f\u7684unsigned char \u6240\u5f97\u7684\u7ed3\u679c\u662f255\u201d \u4f5c\u8005\uff1a\u9ed8\u5199\u5e74\u534eAntifragile \u94fe\u63a5\uff1ahttps://www.jianshu.com/p/64b3979268a6 \u6765\u6e90\uff1a\u7b80\u4e66 \u8457\u4f5c\u6743\u5f52\u4f5c\u8005\u6240\u6709\u3002\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u8054\u7cfb\u4f5c\u8005\u83b7\u5f97\u6388\u6743\uff0c\u975e\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u6ce8\u660e\u51fa\u5904\u3002","title":"%\u53d6\u4f59"},{"location":"Golang/%E8%BF%90%E7%AE%97%E7%AC%A6/#_5","text":"golang\u4e2d\u53ea\u6709\u5355\u76ee\u8fd0\u7b97\u7b26\u548c\u8d4b\u503c\u8fd0\u7b97\u7b26\u65f6\u4ece\u53f3\u5411\u5de6\u6267\u884c\u7684 \u5c06\u67d0\u4e2a\u8fd0\u7b97\u540e\u7684\u503c,\u8d4b\u503c\u7ed9\u6307\u5b9a\u7684\u53d8\u91cf. \u8d4b\u503c\u8fd0\u7b97\u7b26\u7684\u5de6\u8fb9,\u53ea\u80fd\u662f\u53d8\u91cf,\u53f3\u8fb9\u53ef\u4ee5\u662f\u53d8\u91cf,\u8868\u8fbe\u5f0f,\u5e38\u91cf\u503c. \u8d4b\u503c\u8fd0\u7b97\u7684\u6267\u884c\u987a\u5e8f\u662f\u4ece\u53f3\u5411\u5de6 golang\u4e2d\u4e5f\u652f\u6301\u4ea4\u53c9\u8d4b\u503c var a int = 10 var b int = 20 fmt . Println ( \"1\" , a , b ) a , b = b , a fmt . Println ( \"2\" , a , b ) >> > 1 10 20 >> > 2 20 10 Go\u4e2d,\u8d4b\u503c\u8bed\u53e5\u4e0d\u80fd\u5728\u51fd\u6570\u5916\u4f7f\u7528,\u62a5\u9519 var Age int = 10 //\u6ca1\u9519,\u8fd9\u662f\u5b9a\u4e49\u52a0\u521d\u59cb\u5316, -------------------------------- Name := \"tom\" //\u62a5\u9519. //\u7b49\u4ef7\u4e8evar Name string //Name = \"tom\" //\u800cName = \"tom\"\u5728\u51fd\u6570\u5916\u6267\u884c\u4e86\u8d4b\u503c\u8bed\u53e5,\u5c31\u4f1a\u62a5\u9519 -------------------------------- var Num int Num = 10 // \u62a5\u9519,\u4e5f\u662f\u5728\u51fd\u6570\u5916\u6267\u884c\u4e86\u8d4b\u503c\u8bed\u53e5 func main (){ fmt . Println ( Age ) fmt . Println ( Name ) fmt . Println ( Num ) }","title":"\u8d4b\u503c\u8fd0\u7b97\u7b26"},{"location":"Golang/%E8%BF%90%E7%AE%97%E7%AC%A6/#_6","text":"<<=,>>=,&=,^=,|=","title":"\u7279\u6b8a\u8d4b\u503c\u8fd0\u7b97\u7b26"},{"location":"Golang/%E8%BF%90%E7%AE%97%E7%AC%A6/#_7","text":"\u5173\u7cfb\u8fd0\u7b97\u7b26\u7684\u7ed3\u679c\u90fd\u662fbool\u884c,\u8981\u4e48\u4e3atrue,\u8981\u4e48\u4e3afalse \u5e38\u7528\u4e8eif\u7ed3\u6784\u6216\u8005\u5faa\u73af\u6761\u4ef6\u4e2d \u5173\u7cfb\u8fd0\u7b97\u7b26\u7684\u8868\u8fbe\u5f0f,\u79f0\u4e4b\u4e3a\u5173\u7cfb\u8868\u8fbe\u5f0f,a>b","title":"\u6bd4\u8f83\u8fd0\u7b97\u7b26(\u5173\u7cfb\u8fd0\u7b97\u7b26)"},{"location":"Golang/%E8%BF%90%E7%AE%97%E7%AC%A6/#_8","text":"\u6700\u7ec8\u7ed3\u679c\u4e3abool\u503c. \u8fd0\u7b97\u7b26 \u8868\u8ff0 && \u4e0e || \u6216 ! \u975e","title":"\u903b\u8f91\u8fd0\u7b97\u7b26"},{"location":"Golang/%E8%BF%90%E7%AE%97%E7%AC%A6/#_9","text":"&& \u4e5f\u53eb\u77ed\u8def\u4e0e,\u5f53\u7b2c\u4e00\u4e2a\u6761\u4ef6\u4e3afalse,\u5219\u4e0d\u4f1a\u8fdb\u884c\u7b2c\u4e8c\u4e2a\u5224\u65ad,\u6700\u7ec8\u7ed3\u679c\u4e3afalse || \u4e5f\u53eb\u77ed\u8def\u6216,\u5f53\u7b2c\u4e00\u4e2a\u6761\u4ef6\u4e3atrue,\u5219\u4e0d\u4f1a\u8fdb\u884c\u7b2c\u4e8c\u4e2a\u5224\u65ad,\u6700\u7ec8\u7ed3\u679c\u4e3atrue","title":"\u77ed\u8def\u7b97\u6cd5"},{"location":"Golang/%E8%BF%90%E7%AE%97%E7%AC%A6/#_10","text":"\u6240\u6709\u4f4d\u8fd0\u7b97\u5747\u4e3a\u8865\u7801\u8fd0\u7b97,\u539f,\u53cd,\u8865\u8be6\u89c1<<\u8fdb\u5236>> \u4f4d\u4e0e,\u6216,\u5f02\u6216\u8ba1\u7b97\u673a\u901a\u7528 \u5de6\u79fb\u4f4d\u8fd0\u7b97<<\u7b26\u53f7\u4f4d\u4e0d\u53d8,\u4f4e\u4f4d\u88650,[\u76f8\u5f53\u4e8e\u4e582] \u53f3\u79fb\u4f4d\u8fd0\u7b97>>\u4f4e\u4f4d\u6ea2\u51fa,\u7b26\u53f7\u4e0d\u53d8,\u5e76\u7528\u7b26\u53f7\u4f4d\u8865\u6ea2\u51fa\u7684\u9ad8\u4f4d,[\u76f8\u5f53\u4e8e\u9664\u4ee52,\u9664\u6ca1\u4e86\u5c31\u662f1/-1] c := 1 >> 2 //\u53f3\u79fb\u4e24\u4f4d >> > 0 c := 1 << 2 //\u5de6\u79fb\u4e24\u4f4d >> > 4","title":"\u4f4d\u8fd0\u7b97\u7b26"},{"location":"Golang/%E8%BF%90%E7%AE%97%E7%AC%A6/#_11","text":"&\u53d6\u5740\u8fd0\u7b97\u7b26,\u5176\u540e\u4e3a\u6307\u9488\u7c7b\u578b\u65f6,\u8fd4\u56de\u6307\u9488\u7684\u5730\u5740,\u82e5\u5176\u540e\u4e3a\u503c\u7c7b\u578b,\u8fd4\u56de\u503c\u5bf9\u5e94\u7684\u5730\u5740 *\u53d6\u503c\u8fd0\u7b97\u7b26 \u5bf9\u6307\u9488\u7c7b\u578b\u53d6\u5176\u4fdd\u5b58\u7684\u5730\u5740\u7684\u503c,\u5176\u540e\u4e0d\u53ef\u4ee5\u63a5\u503c\u7c7b\u578b","title":"\u5176\u4ed6\u8fd0\u7b97\u7b26"},{"location":"Golang/%E8%BF%90%E7%AE%97%E7%AC%A6/#_12","text":"\u52a0\u62ec\u53f7","title":"\u4f18\u5148\u7ea7"},{"location":"Python/Python%E4%B8%AD%E7%9A%84%E7%BA%BF%E7%A8%8B/","text":"[toc] Python\u4e2d\u7684\u7ebf\u7a0b \u00b6 \u8fdb\u7a0b\u4f1a\u542f\u52a8\u4e00\u4e2a\u89e3\u91ca\u5668\u8fdb\u7a0b,\u7ebf\u7a0b\u5171\u4eab\u4e00\u4e2a\u89e3\u91ca\u5668\u8fdb\u7a0b. Python\u7684\u7ebf\u7a0b\u5f00\u53d1 \u00b6 Python\u7684\u4e0b\u7ebf\u7a0b\u5f00\u53d1\u4f7f\u7528\u6807\u51c6\u5e93threading\u6a21\u5757 Thread\u7c7b \u00b6 \u53c2\u6570\u540d \u542b\u4e49 target \u7ebf\u7a0b\u8c03\u7528\u7684\u5bf9\u8c61,\u5c31\u662f\u76ee\u6807\u51fd\u6570 name \u4e3a\u7ebf\u7a0b\u8d77\u4e2a\u540d\u5b57(\u4e0d\u91cd\u8981,\u53ef\u4ee5\u91cd\u540d,\u5c31\u662f\u7ed9\u4eba\u770b\u770b) args \u4e3a\u76ee\u6807\u51fd\u6570\u4f20\u9012\u5b9e\u53c2,args=\u5143\u7ec4 kwargs \u4e3a\u76ee\u6807\u51fd\u6570\u4f20\u5173\u952e\u5b57\u51fd\u6570,kwargs=\u5b57\u5178 \u83dc\u9e1f https://www.runoob.com/python3/python3-multithreading.html Python\u7684\u7ebf\u7a0b\u6ca1\u6709\u4f18\u5148\u7ea7,\u6ca1\u6709\u7ebf\u7a0b\u7ec4\u7684\u6982\u5ff5,\u4e5f\u4e0d\u80fd\u88ab\u9500\u6bc1,\u505c\u6b62,\u6302\u8d77,\u90a3\u4e5f\u5c31\u6ca1\u6709\u6062\u590d,\u4e2d\u65ad\u4e86. \u7ebf\u7a0b\u7684\u542f\u52a8 \u00b6 \u901a\u8fc7threading.Thread\u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\u5bf9\u8c61,target\u662f\u76ee\u6807\u51fd\u6570,name\u53ef\u4ee5\u6307\u5b9a\u540d\u79f0 \u4f46\u662f\u7ebf\u7a0b\u6ca1\u6709\u542f\u52a8,\u9700\u8981\u8c03\u7528start\u65b9\u6cd5. \u7ebf\u7a0b\u4e4b\u6240\u4ee5\u6267\u884c\u51fd\u6570,\u662f\u56e0\u4e3a\u7ebf\u7a0b\u4e2d\u5c31\u662f\u6267\u884c\u4ee3\u7801\u7684,\u800c\u6700\u7b80\u5355\u7684\u5c01\u88c5\u5c31\u662f\u51fd\u6570,\u6240\u4ee5\u8fd8\u662f\u8981\u51fd\u6570\u8c03\u7528, \u51fd\u6570\u6267\u884c\u5b8c\u6bd5,\u7ebf\u7a0b\u5c31\u9000\u51fa\u4e86 \u7ebf\u7a0b\u9000\u51fa \u00b6 Python\u4e2d\u6ca1\u6709\u63d0\u4f9b\u7ebf\u7a0b\u9000\u51fa\u7684\u65b9\u6cd5,\u5728\u4e00\u4e0b\u60c5\u51b5\u65f6\u9000\u51fa 1.\u7ebf\u7a0b\u51fd\u6570\u5185\u8bed\u53e5\u6267\u884c\u5b8c\u6bd5 2.\u7ebf\u7a0b\u51fd\u6570\u4e2d\u629b\u51fa\u672a\u5904\u7406\u7684\u5f02\u5e38 Python\u4e2d\u7684\u7ebf\u7a0b\u6ca1\u6709\u4f18\u5148\u7ea7,\u6ca1\u6709\u7ebf\u7a0b\u7ec4\u7684\u6982\u5ff5,\u4e5f\u4e0d\u80fd\u88ab\u9500\u6bc1,\u7ec8\u6b62,\u6302\u8d77,\u4e5f\u5c31\u6ca1\u6709\u6062\u590d,\u4e2d\u65ad \u7ebf\u7a0b\u7684\u4f20\u53c2 \u00b6 \u7ebf\u7a0b\u4f20\u53c2\u548c\u51fd\u6570\u4f20\u53c2\u6ca1\u4ec0\u4e48\u533a\u522b,\u672c\u8d28\u4e0a\u5c31\u662f\u51fd\u6570\u4f20\u53c2. \u7ebf\u7a0b\u5bf9\u8c61\u7684\u53c2\u6570\u5217\u8868\u4e2d args=(\u5143\u7ec4) kwargs={\u5b57\u5178} ---\u57fa\u672c\u4e0d\u7528 threading\u6a21\u5757\u7684\u5c5e\u6027\u548c\u65b9\u6cd5 \u00b6 \u540d\u79f0 \u542b\u4e49 main_thread() \u8fd4\u56de\u4e3b\u7ebf\u7a0b==\u5bf9\u8c61== current_thread() \u8fd4\u56de\u5f53\u524d\u7ebf\u7a0b==\u5bf9\u8c61== active_count() \u5f53\u524d\u5904\u4e8ealive\u72b6\u6001\u7684\u7ebf\u7a0b\u4e2a\u6570 enumerate() \u8fd4\u56de\u6240\u6709\u6d3b\u7740\u7684\u7ebf\u7a0b\u7684\u5217\u8868,\u4e0d\u5305\u62ec\u5df2\u7ecf\u7ec8\u6b62\u7684\u7ebf\u7a0b\u548c\u672a\u5f00\u59cb\u7684\u7ebf\u7a0b get_ident() \u8fd4\u56de\u5f53\u524d\u7ebf\u7a0bID,\u975e0\u6574\u6570 Thread\u5b9e\u4f8b\u7684\u5c5e\u6027\u548c\u65b9\u6cd5 \u00b6 \u540d\u79f0 \u542b\u4e49 name \u8fd9\u662f\u4e00\u4e2a\u7ebf\u7a0b\u7684\u540d\u5b57,\u4e00\u4e2a\u6807\u8bc6,\u53ef\u4ee5\u91cd\u540d.getName(),setName()\u83b7\u53d6,\u8bbe\u7f6e\u8fd9\u4e2a\u540d\u8bcd ident \u7ebf\u7a0bid,\u662f\u4e00\u4e2a\u975e0\u6574\u6570,\u7ebf\u7a0b\u542f\u52a8\u540e\u624d\u4f1a\u6709id,\u5426\u5219\u4e3aNone,\u7ebf\u7a0b\u9000\u51fa,\u6b64id\u4f9d\u65e7\u53ef\u4ee5\u8bbf\u95ee,id\u53ef\u91cd\u590d\u4f7f\u7528 is_alive() \u8fd4\u56de\u7ebf\u7a0b\u662f\u5426\u6d3b\u7740 \u6ce8\u610f:\u7ebf\u7a0b\u7684name\u662f\u4e00\u4e2a\u540d\u79f0,\u53ef\u4ee5\u540e\u91cd\u590d; ID\u5fc5\u987b\u552f\u4e00 ,\u4f46\u53ef\u4ee5\u5728\u7ebf\u7a0b\u9000\u51fa\u540e\u56de\u6536\u518d\u5229\u7528. \u540d\u79f0 \u542b\u4e49 start() \u542f\u52a8\u7ebf\u7a0b,\u6bcf\u4e00\u4e2a\u7ebf\u7a0b\u5fc5\u987b\u4e14\u53ea\u80fd\u6267\u884c\u8be5\u65b9\u6cd5\u4e00\u6b21 run() \u8fd0\u884c\u7ebf\u7a0b\u51fd\u6570 start()\u65b9\u6cd5\u4f1a\u8c03\u7528run()\u65b9\u6cd5,\u800crun()\u65b9\u6cd5\u53ef\u4ee5\u8fd0\u884c\u51fd\u6570. \u4e00\u4e2a\u7ebf\u7a0b\u53ea\u80fd\u6709\u4e00\u4e2astart,\u9664\u975e\u518d\u5b9e\u4f8b\u5316\u4e00\u4e2a\u7ebf\u7a0b \u533a\u522b:start\u65b9\u6cd5\u542f\u52a8\u7ebf\u7a0b,\u542f\u52a8\u4e86\u4e00\u4e2a\u65b0\u7684\u7ebf\u7a0b;\u4f46\u662frun\u65b9\u6cd5,\u53ea\u662f\u8c03\u7528\u4e86\u4e00\u4e2a\u51fd\u6570 \u200b run\u65b9\u6cd5\u53ea\u662f\u4e00\u4e2a\u51fd\u6570\u8c03\u7528,\u8c03\u7528\u7ebf\u7a0b\u51fd\u6570 \u200b \u56e0\u6b64,\u542f\u52a8\u7ebf\u7a0b\u8981\u4f7f\u7528start\u65b9\u6cd5,\u624d\u80fd\u542f\u52a8\u591a\u4e2a\u7ebf\u7a0b. \u591a\u7ebf\u7a0b \u00b6 \u591a\u4e2a\u7ebf\u7a0b,\u4e00\u4e2a\u8fdb\u7a0b\u4e2d\u5982\u679c\u6709\u591a\u4e2a\u7ebf\u7a0b,\u5c31\u662f\u591a\u7ebf\u7a0b,\u5b9e\u73b0\u4e00\u79cd\u5e76\u53d1 threading\u6a21\u5757\u4e2d,\u5982\u679c\u6ca1\u6709\u5f00\u65b0\u7684\u8fdb\u7a0b,\u90a3\u5c31\u662f\u666e\u901a\u51fd\u6570\u7684\u8c03\u7528,\u6240\u4ee5\u6267\u884c\u5b8ct1.run().\u7136\u540e\u6267\u884ct2.run(),\u8fd9\u91cc\u5c31\u4e0d\u662f\u591a\u7ebf\u7a0b. \u5f53\u4f7f\u7528start\u65b9\u6cd5\u542f\u52a8\u7ebf\u7a0b\u540e,\u8fdb\u7a0b\u5185\u6709\u591a\u4e2a\u6d3b\u52a8\u90a3\u4e2a\u7684\u7ebf\u7a0b\u5e76\u884c\u7684\u5de5\u4f5c,\u8fd9\u5c31\u662f\u591a\u7ebf\u7a0b. \u4e00\u4e2a\u8fdb\u7a0b\u4e2d\u81f3\u5c11\u6709\u4e00\u4e2a\u7ebf\u7a0b,\u5e76\u4f5c\u4e3a\u7a0b\u5e8f\u7684\u5165\u53e3,\u8fd9\u4e2a\u7ebf\u7a0bi\u5c31\u662f==\u4e3b\u7ebf\u7a0b==, \u4e00\u4e2a\u8fdb\u7a0b\u81f3\u5c11\u6709\u4e00\u4e2a\u4e3b\u7ebf\u7a0b.\u5176\u4ed6\u7ebf\u7a0b\u79f0\u4e3a\u5de5\u4f5c\u7ebf\u7a0b. \u7ebf\u7a0b\u5b89\u5168 \u00b6 \u7ebf\u7a0b\u6267\u884c\u4e00\u6bb5\u4ee3\u7801,\u4e0d\u4f1a\u4ea7\u751f\u4e0d\u786e\u5b9a\u7684\u7ed3\u679c,\u90a3\u8fd9\u6bb5\u4ee3\u7801\u5c31\u662f\u7ebf\u7a0b\u5b89\u5168\u7684 \u7c7b\u6216\u8005\u51fd\u6570\u6216\u8005\u65b9\u6cd5\u5206\u4e3a\u7ebf\u7a0b\u5b89\u5168\u548c\u7ebf\u7a0b\u4e0d\u5b89\u5168\u4e24\u79cd \u89e3\u51b3: 1: \u5b57\u7b26\u4e32\u662f\u4e0d\u53ef\u53d8\u7c7b\u578b,\u5b83\u53ef\u4ee5\u4f5c\u4e3a\u4e00\u4e2a\u6574\u4f53\u4e0d\u53ef\u5206\u5272\u8f93\u51fa,\u5728\u5b57\u7b26\u4e32\u4e0a\u505a\u6587\u7ae0 2:\u4f7f\u7528logging,\u6807\u51c6\u5e93\u91cc\u9762\u7684logging\u6a21\u5757,\u65e5\u5fd7\u5904\u7406\u6a21\u5757,\u5b83\u662f\u7ebf\u7a0b\u5b89\u5168\u7684,\u751f\u4ea7\u73af\u5883\u4ee3\u7801\u90fd\u4f7f\u7528logging daemon\u7ebf\u7a0b\u53efnon-daemon\u7ebf\u7a0b \u00b6 \u6ce8\u610f:\u8fd9\u91cc\u7684daemon\u4e0d\u662fLinux\u4e2d\u7684\u5b88\u62a4\u8fdb\u7a0b \u8fdb\u7a0b\u9760\u7ebf\u7a0b\u6267\u884c\u4ee3\u7801,\u81f3\u5c11\u6709\u4e00\u4e2a\u4e3b\u7ebf\u7a0b,\u5176\u4ed6\u7ebf\u7a0b\u662f\u5de5\u4f5c\u7ebf\u7a0b. \u4e3b\u7ebf\u7a0b\u662f\u7b2c\u4e00\u4e2a\u542f\u52a8\u7684\u7ebf\u7a0b, \u7236\u7ebf\u7a0b:\u5982\u679c\u7ebf\u7a0bA\u4e2d\u542f\u52a8\u4e86\u4e00\u4e2a\u7ebf\u7a0bB,A\u5c31\u662fB\u7684\u7236\u7ebf\u7a0b. \u5b50\u7ebf\u7a0b:B\u5c31\u662fA\u7684\u5b50\u7ebf\u7a0b Python\u4e2d,\u6784\u9020\u7ebf\u7a0b\u7684\u65f6\u5019,\u53ef\u4ee5\u8bbe\u7f6edaemon\u5c5e\u6027,\u8fd9\u4e2a\u5c5e\u6027\u5fc5\u987b\u5728start\u65b9\u6cd5\u524d\u8bbe\u7f6e\u597d \u7ebf\u7a0b\u7684daemon\u5c5e\u6027,\u4e3b\u7ebf\u7a0b\u7684daemon\u9ed8\u8ba4false,\u6240\u4ee5\u4e3b\u7ebf\u7a0b\u662f\u4e2anon-daemon\u7ebf\u7a0b \u603b\u7ed3: daemon\u4e00\u5b9a\u8981\u5728start\u65b9\u6cd5\u4e4b\u524d\u5b9a\u4e49 \u7ebf\u7a0b\u5177\u6709\u4e00\u4e2adaemon\u5c5e\u6027,\u53ef\u4ee5\u663e\u793a\u8bbe\u7f6e\u4e3aTrue\u6216False,\u4e5f\u53ef\u4ee5\u4e0d\u8bbe\u7f6e,\u9ed8\u8ba4\u53d6None. \u5982\u679c\u4e0d\u8bbe\u7f6e,\u5c31\u53d6\u5f53\u524d\u7ebf\u7a0b\u7684daemon\u6765\u8bbe\u7f6e\u5b83. \u4e3b\u7ebf\u7a0b\u662fnon-daemon\u7ebf\u7a0b,\u5373daemon = False \u4ece\u4e3b\u7ebf\u7a0b\u521b\u5efa\u7684\u6240\u6709\u7ebf\u7a0b\u4e0d\u8bbe\u7f6edaemon\u5c5e\u6027,\u9ed8\u8ba4\u503c\u4e3aFalse,\u4e5f\u5c31\u662fnon-daemon\u7ebf\u7a0b Python\u7a0b\u5e8f\u5728\u6ca1\u6709\u6216\u8005\u7684non-daemon\u7ebf\u7a0b\u8fd0\u884c\u65f6\u9000\u51fa,\u5269\u4e0b\u7684\u5c31\u53ea\u80fd\u662fdaemon\u7ebf\u7a0b,\u4e3b\u7ebf\u7a0b\u624d\u80fd\u9000\u51fa,\u5426\u5219\u4e3b\u7ebf\u7a0b\u5c31\u53ea\u80fd\u7b49\u5f85. \u5f53\u4e3b\u7ebf\u7a0b\u9000\u51fa\u65f6,\u5982\u679c\u8fd8\u6709\u5b58\u6d3b\u7684non-daemon\u7ebf\u7a0b,\u4e5f\u4e0d\u4f1a\u5e72\u6389\u6240\u6709daemon\u7ebf\u7a0b,\u800c\u662f\u76f4\u5230\u6240\u6709non-daemon\u7ebf\u7a0b\u5168\u90e8\u7ed3\u675f,\u5982\u679c\u8fd8\u6709daemon\u7ebf\u7a0b,\u4e3b\u7ebf\u7a0b\u9700\u8981\u9000\u51fa,\u4f1a\u7ed3\u675f\u6240\u6709daemon\u7ebf\u7a0b,\u9000\u51fa. daemon\u7ebf\u7a0b\u5e94\u7528\u573a\u666f \u00b6 \u5f53\u4e00\u4e2a\u7ebf\u7a0b\u88ab\u8bbe\u7f6e\u6210daemon,\u5b83\u4f1a\u968f\u4e3b\u7ebf\u7a0b\u7684\u9000\u51fa\u800c\u9000\u51fa.\u7b80\u5316\u4e86\u624b\u52a8\u5173\u95ed\u7ebf\u7a0b\u7684\u5de5\u4f5c. \u4e3b\u8981\u5e94\u7528\u573a\u666f: \u540e\u53f0\u4efb\u52a1,\u5982\u53d1\u9001\u5fc3\u8df3\u5305,\u76d1\u63a7,\u8fd9\u79cd\u573a\u666f\u6700\u591a \u4e3b\u7ebf\u7a0b\u5de5\u4f5c\u624d\u6709\u7528\u7684\u7ebf\u7a0b,\u5982\u4e3b\u7ebf\u7a0b\u79cd\u7ef4\u62a4\u7740\u516c\u5171\u8d44\u6e90,\u4e3b\u7ebf\u7a0b\u5df2\u7ecf\u6e05\u7406\u4e86,\u51c6\u5907\u9000\u51fa,\u800c\u5de5\u4f5c\u7ebf\u7a0b\u4f7f\u7528\u8fd9\u4e9b\u8d44\u6e90\u5de5\u4f5c\u4e5f\u6ca1\u6709\u610f\u4e49\u4e86,\u4e00\u8d77\u9000\u51fa\u6700\u5408\u9002 \u968f\u65f6\u53ef\u4ee5\u88ab\u7ec8\u6b62\u7684\u7ebf\u7a0b \u5982\u679c\u5728non-daemon\u7ebf\u7a0bA\u4e2d.\u5bf9\u53e6\u4e00\u4e2adaemon\u7ebf\u7a0bB\u4f7f\u7528\u4e86join\u65b9\u6cd5,\u8fd9\u4e2a\u7ebf\u7a0bB\u8bbe\u7f6e\u6210daemon\u5c31\u6ca1\u6709\u610f\u4e49\u4e86,\u56e0\u4e3anon-daemon\u7ebf\u7a0bA\u603b\u662f\u8981\u7b49\u5f85B \u5982\u679c\u5728\u4e00\u4e2adaemon\u7ebf\u7a0bC\u4e2d,\u5bf9\u53e6\u4e00\u4e2adaemon\u7ebf\u7a0bD\u4f7f\u7528\u4e86join\u65b9\u6cd5,\u53ea\u80fd\u8bf4\u660eC\u8981\u7b49\u5f85D,\u4e3b\u7ebf\u7a0b\u9000\u51fa,C,D\u4e0d\u7ba1\u7ed3\u675f\u5426,\u4e5f\u4e0d\u7ba1\u8c01\u7b49\u8c01,\u90fd\u8981\u88ab\u5e72\u6389. join \u00b6 join(timeout = None) \u662f\u7ebf\u7a0b\u7684\u6807\u51c6\u65b9\u6cd5\u4e4b\u4e00 \u4e00\u4e2a\u7ebf\u7a0b\u4e2d\u8c03\u7528\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u7684join\u65b9\u6cd5,\u8c03\u7528\u8005\u5c06\u88ab\u963b\u585e,\u76f4\u5230\u88ab\u8c03\u7528\u7ebf\u7a0b\u7ec8\u6b62, \u4e00\u4e2a\u7ebf\u7a0b\u53ef\u4ee5\u88abjoin\u591a\u6b21 timeout\u53c2\u6570\u6307\u5b9a\u8c03\u7528\u8005\u7b49\u5f85\u591a\u4e45,\u6ca1\u6709\u8bbe\u7f6e\u8d85\u65f6,\u5c31\u4e00\u76f4\u7b49\u5230\u88ab\u8c03\u7528\u7ebf\u7a0b\u7ed3\u675f \u8c03\u7528\u8c01\u7684join\u65b9\u6cd5,\u5c31\u662fjoin\u8c01,\u5c31\u8981\u7b49\u8c01 threading.local\u7c7b \u00b6 threading.local\u7c7b,\u5c06\u8fd9\u4e2a\u7c7b\u5b9e\u4f8b\u5316\u5f97\u5230\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf,\u4f46\u662f\u4e0d\u540c\u7684\u7ebf\u7a0b\u4f7f\u7528\u8fd9\u4e2a\u5bf9\u8c61\u5b58\u50a8\u7684\u6570\u636e,\u5176\u4ed6\u7ebf\u7a0b\u770b\u4e0d\u89c1,\u88ab\u653e\u5230\u4e86\u7ebf\u7a0b\u5404\u81ea\u7684\u5b57\u5178\u4e2d. threading.local\u7c7b\u6784\u5efa\u4e86\u4e00\u4e2a\u5927\u5b57\u5178,\u5176\u5143\u7d20\u662f\u6bcf\u4e00\u4e2a\u7ebf\u7a0b\u5b9e\u4f8b\u7684\u5730\u5740\u4e3akey\u548c\u7ebf\u7a0b\u5bf9\u8c61\u5f15\u7528\u7ebf\u7a0b\u5355\u72ec\u7684\u5b57\u5178\u6620\u5c04 {id(thread) \u2192(ref(thread),thread-local dict)} ref\u4e3a\u5f15\u7528 \u901a\u8fc7threading.local\u5b9e\u4f8b\u5c31\u53ef\u4ee5\u5728\u4e0d\u540c\u7684\u7ebf\u7a0b\u4e2d,\u5b89\u5168\u7684\u4f7f\u7528\u7ebf\u7a0b\u72ec\u6709\u7684\u6570\u636e,\u505a\u5230\u4e86\u7ebf\u7a0b\u95f4\u6570\u636e\u9694\u79bb,\u5c31\u50cf\u672c\u5730\u53d8\u91cf\u4e00\u6837\u5b89\u5168. \u5148\u5b9e\u4f8b\u5316\u4e00\u4e2actx = threading.local()\u5bf9\u8c61,\u5404\u4e2a\u7ebf\u7a0b\u5404\u81ea\u8c03\u7528ctx.x = 100;ctx.y= 200 \u5728\u8c01\u7684\u7ebf\u7a0b\u91cc\u5b9a\u4e49,\u5c31\u5728\u8c01\u7684\u7ebf\u7a0b\u4e2d\u4f7f\u7528 from threading import Thread , local import time cxw = local () def task ( arg ): cxw . value = arg time . sleep ( 1 ) print ( cxw . value ) for i in range ( 10 ): t = Thread ( target = task , args = ( i ,)) t . start () \u5b9a\u65f6\u5668Timer \u00b6 threading.Timer\u7ee7\u627f\u81eaThread,\u7528\u6765\u5b9a\u4e49\u591a\u4e45\u6267\u884c\u4e00\u4e2a\u51fd\u6570 class threading/Timer(interval,function,args=None,kwarg=None) start\u65b9\u6cd5\u6267\u884c\u4e4b\u540e,Timer\u5bf9\u8c61\u4f1a\u5904\u4e8e\u7b49\u5f85\u72b6\u6001,\u7b49\u5f85\u4e86interval\u4e4b\u540e,\u5f00\u59cb\u6267\u884cfunction\u51fd\u6570 \u5982\u679c\u5728\u6267\u884c\u51fd\u6570\u4e4b\u524d\u7684\u7b49\u5f85\u9636\u6bb5,\u4f7f\u7528\u4e86cancel\u65b9\u6cd5,\u5c31\u4f1a\u8df3\u8fc7\u6267\u884c\u51fd\u6570\u7ed3\u675f. \u4f46\u662f\u5982\u679c\u5df2\u7ecf\u6267\u884c,\u5219cancel\u65e0\u6548 multiprocessing manager.Queue\u662f\u7ebf\u7a0b\u4e0d\u5b89\u5168\u7684() multiprocessing Queue queue.Queue()\u662f\u975e\u963b\u585e\u7684","title":"Python\u4e2d\u7684\u7ebf\u7a0b"},{"location":"Python/Python%E4%B8%AD%E7%9A%84%E7%BA%BF%E7%A8%8B/#python","text":"\u8fdb\u7a0b\u4f1a\u542f\u52a8\u4e00\u4e2a\u89e3\u91ca\u5668\u8fdb\u7a0b,\u7ebf\u7a0b\u5171\u4eab\u4e00\u4e2a\u89e3\u91ca\u5668\u8fdb\u7a0b.","title":"Python\u4e2d\u7684\u7ebf\u7a0b"},{"location":"Python/Python%E4%B8%AD%E7%9A%84%E7%BA%BF%E7%A8%8B/#python_1","text":"Python\u7684\u4e0b\u7ebf\u7a0b\u5f00\u53d1\u4f7f\u7528\u6807\u51c6\u5e93threading\u6a21\u5757","title":"Python\u7684\u7ebf\u7a0b\u5f00\u53d1"},{"location":"Python/Python%E4%B8%AD%E7%9A%84%E7%BA%BF%E7%A8%8B/#thread","text":"\u53c2\u6570\u540d \u542b\u4e49 target \u7ebf\u7a0b\u8c03\u7528\u7684\u5bf9\u8c61,\u5c31\u662f\u76ee\u6807\u51fd\u6570 name \u4e3a\u7ebf\u7a0b\u8d77\u4e2a\u540d\u5b57(\u4e0d\u91cd\u8981,\u53ef\u4ee5\u91cd\u540d,\u5c31\u662f\u7ed9\u4eba\u770b\u770b) args \u4e3a\u76ee\u6807\u51fd\u6570\u4f20\u9012\u5b9e\u53c2,args=\u5143\u7ec4 kwargs \u4e3a\u76ee\u6807\u51fd\u6570\u4f20\u5173\u952e\u5b57\u51fd\u6570,kwargs=\u5b57\u5178 \u83dc\u9e1f https://www.runoob.com/python3/python3-multithreading.html Python\u7684\u7ebf\u7a0b\u6ca1\u6709\u4f18\u5148\u7ea7,\u6ca1\u6709\u7ebf\u7a0b\u7ec4\u7684\u6982\u5ff5,\u4e5f\u4e0d\u80fd\u88ab\u9500\u6bc1,\u505c\u6b62,\u6302\u8d77,\u90a3\u4e5f\u5c31\u6ca1\u6709\u6062\u590d,\u4e2d\u65ad\u4e86.","title":"Thread\u7c7b"},{"location":"Python/Python%E4%B8%AD%E7%9A%84%E7%BA%BF%E7%A8%8B/#_1","text":"\u901a\u8fc7threading.Thread\u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\u5bf9\u8c61,target\u662f\u76ee\u6807\u51fd\u6570,name\u53ef\u4ee5\u6307\u5b9a\u540d\u79f0 \u4f46\u662f\u7ebf\u7a0b\u6ca1\u6709\u542f\u52a8,\u9700\u8981\u8c03\u7528start\u65b9\u6cd5. \u7ebf\u7a0b\u4e4b\u6240\u4ee5\u6267\u884c\u51fd\u6570,\u662f\u56e0\u4e3a\u7ebf\u7a0b\u4e2d\u5c31\u662f\u6267\u884c\u4ee3\u7801\u7684,\u800c\u6700\u7b80\u5355\u7684\u5c01\u88c5\u5c31\u662f\u51fd\u6570,\u6240\u4ee5\u8fd8\u662f\u8981\u51fd\u6570\u8c03\u7528, \u51fd\u6570\u6267\u884c\u5b8c\u6bd5,\u7ebf\u7a0b\u5c31\u9000\u51fa\u4e86","title":"\u7ebf\u7a0b\u7684\u542f\u52a8"},{"location":"Python/Python%E4%B8%AD%E7%9A%84%E7%BA%BF%E7%A8%8B/#_2","text":"Python\u4e2d\u6ca1\u6709\u63d0\u4f9b\u7ebf\u7a0b\u9000\u51fa\u7684\u65b9\u6cd5,\u5728\u4e00\u4e0b\u60c5\u51b5\u65f6\u9000\u51fa 1.\u7ebf\u7a0b\u51fd\u6570\u5185\u8bed\u53e5\u6267\u884c\u5b8c\u6bd5 2.\u7ebf\u7a0b\u51fd\u6570\u4e2d\u629b\u51fa\u672a\u5904\u7406\u7684\u5f02\u5e38 Python\u4e2d\u7684\u7ebf\u7a0b\u6ca1\u6709\u4f18\u5148\u7ea7,\u6ca1\u6709\u7ebf\u7a0b\u7ec4\u7684\u6982\u5ff5,\u4e5f\u4e0d\u80fd\u88ab\u9500\u6bc1,\u7ec8\u6b62,\u6302\u8d77,\u4e5f\u5c31\u6ca1\u6709\u6062\u590d,\u4e2d\u65ad","title":"\u7ebf\u7a0b\u9000\u51fa"},{"location":"Python/Python%E4%B8%AD%E7%9A%84%E7%BA%BF%E7%A8%8B/#_3","text":"\u7ebf\u7a0b\u4f20\u53c2\u548c\u51fd\u6570\u4f20\u53c2\u6ca1\u4ec0\u4e48\u533a\u522b,\u672c\u8d28\u4e0a\u5c31\u662f\u51fd\u6570\u4f20\u53c2. \u7ebf\u7a0b\u5bf9\u8c61\u7684\u53c2\u6570\u5217\u8868\u4e2d args=(\u5143\u7ec4) kwargs={\u5b57\u5178} ---\u57fa\u672c\u4e0d\u7528","title":"\u7ebf\u7a0b\u7684\u4f20\u53c2"},{"location":"Python/Python%E4%B8%AD%E7%9A%84%E7%BA%BF%E7%A8%8B/#threading","text":"\u540d\u79f0 \u542b\u4e49 main_thread() \u8fd4\u56de\u4e3b\u7ebf\u7a0b==\u5bf9\u8c61== current_thread() \u8fd4\u56de\u5f53\u524d\u7ebf\u7a0b==\u5bf9\u8c61== active_count() \u5f53\u524d\u5904\u4e8ealive\u72b6\u6001\u7684\u7ebf\u7a0b\u4e2a\u6570 enumerate() \u8fd4\u56de\u6240\u6709\u6d3b\u7740\u7684\u7ebf\u7a0b\u7684\u5217\u8868,\u4e0d\u5305\u62ec\u5df2\u7ecf\u7ec8\u6b62\u7684\u7ebf\u7a0b\u548c\u672a\u5f00\u59cb\u7684\u7ebf\u7a0b get_ident() \u8fd4\u56de\u5f53\u524d\u7ebf\u7a0bID,\u975e0\u6574\u6570","title":"threading\u6a21\u5757\u7684\u5c5e\u6027\u548c\u65b9\u6cd5"},{"location":"Python/Python%E4%B8%AD%E7%9A%84%E7%BA%BF%E7%A8%8B/#thread_1","text":"\u540d\u79f0 \u542b\u4e49 name \u8fd9\u662f\u4e00\u4e2a\u7ebf\u7a0b\u7684\u540d\u5b57,\u4e00\u4e2a\u6807\u8bc6,\u53ef\u4ee5\u91cd\u540d.getName(),setName()\u83b7\u53d6,\u8bbe\u7f6e\u8fd9\u4e2a\u540d\u8bcd ident \u7ebf\u7a0bid,\u662f\u4e00\u4e2a\u975e0\u6574\u6570,\u7ebf\u7a0b\u542f\u52a8\u540e\u624d\u4f1a\u6709id,\u5426\u5219\u4e3aNone,\u7ebf\u7a0b\u9000\u51fa,\u6b64id\u4f9d\u65e7\u53ef\u4ee5\u8bbf\u95ee,id\u53ef\u91cd\u590d\u4f7f\u7528 is_alive() \u8fd4\u56de\u7ebf\u7a0b\u662f\u5426\u6d3b\u7740 \u6ce8\u610f:\u7ebf\u7a0b\u7684name\u662f\u4e00\u4e2a\u540d\u79f0,\u53ef\u4ee5\u540e\u91cd\u590d; ID\u5fc5\u987b\u552f\u4e00 ,\u4f46\u53ef\u4ee5\u5728\u7ebf\u7a0b\u9000\u51fa\u540e\u56de\u6536\u518d\u5229\u7528. \u540d\u79f0 \u542b\u4e49 start() \u542f\u52a8\u7ebf\u7a0b,\u6bcf\u4e00\u4e2a\u7ebf\u7a0b\u5fc5\u987b\u4e14\u53ea\u80fd\u6267\u884c\u8be5\u65b9\u6cd5\u4e00\u6b21 run() \u8fd0\u884c\u7ebf\u7a0b\u51fd\u6570 start()\u65b9\u6cd5\u4f1a\u8c03\u7528run()\u65b9\u6cd5,\u800crun()\u65b9\u6cd5\u53ef\u4ee5\u8fd0\u884c\u51fd\u6570. \u4e00\u4e2a\u7ebf\u7a0b\u53ea\u80fd\u6709\u4e00\u4e2astart,\u9664\u975e\u518d\u5b9e\u4f8b\u5316\u4e00\u4e2a\u7ebf\u7a0b \u533a\u522b:start\u65b9\u6cd5\u542f\u52a8\u7ebf\u7a0b,\u542f\u52a8\u4e86\u4e00\u4e2a\u65b0\u7684\u7ebf\u7a0b;\u4f46\u662frun\u65b9\u6cd5,\u53ea\u662f\u8c03\u7528\u4e86\u4e00\u4e2a\u51fd\u6570 \u200b run\u65b9\u6cd5\u53ea\u662f\u4e00\u4e2a\u51fd\u6570\u8c03\u7528,\u8c03\u7528\u7ebf\u7a0b\u51fd\u6570 \u200b \u56e0\u6b64,\u542f\u52a8\u7ebf\u7a0b\u8981\u4f7f\u7528start\u65b9\u6cd5,\u624d\u80fd\u542f\u52a8\u591a\u4e2a\u7ebf\u7a0b.","title":"Thread\u5b9e\u4f8b\u7684\u5c5e\u6027\u548c\u65b9\u6cd5"},{"location":"Python/Python%E4%B8%AD%E7%9A%84%E7%BA%BF%E7%A8%8B/#_4","text":"\u591a\u4e2a\u7ebf\u7a0b,\u4e00\u4e2a\u8fdb\u7a0b\u4e2d\u5982\u679c\u6709\u591a\u4e2a\u7ebf\u7a0b,\u5c31\u662f\u591a\u7ebf\u7a0b,\u5b9e\u73b0\u4e00\u79cd\u5e76\u53d1 threading\u6a21\u5757\u4e2d,\u5982\u679c\u6ca1\u6709\u5f00\u65b0\u7684\u8fdb\u7a0b,\u90a3\u5c31\u662f\u666e\u901a\u51fd\u6570\u7684\u8c03\u7528,\u6240\u4ee5\u6267\u884c\u5b8ct1.run().\u7136\u540e\u6267\u884ct2.run(),\u8fd9\u91cc\u5c31\u4e0d\u662f\u591a\u7ebf\u7a0b. \u5f53\u4f7f\u7528start\u65b9\u6cd5\u542f\u52a8\u7ebf\u7a0b\u540e,\u8fdb\u7a0b\u5185\u6709\u591a\u4e2a\u6d3b\u52a8\u90a3\u4e2a\u7684\u7ebf\u7a0b\u5e76\u884c\u7684\u5de5\u4f5c,\u8fd9\u5c31\u662f\u591a\u7ebf\u7a0b. \u4e00\u4e2a\u8fdb\u7a0b\u4e2d\u81f3\u5c11\u6709\u4e00\u4e2a\u7ebf\u7a0b,\u5e76\u4f5c\u4e3a\u7a0b\u5e8f\u7684\u5165\u53e3,\u8fd9\u4e2a\u7ebf\u7a0bi\u5c31\u662f==\u4e3b\u7ebf\u7a0b==, \u4e00\u4e2a\u8fdb\u7a0b\u81f3\u5c11\u6709\u4e00\u4e2a\u4e3b\u7ebf\u7a0b.\u5176\u4ed6\u7ebf\u7a0b\u79f0\u4e3a\u5de5\u4f5c\u7ebf\u7a0b.","title":"\u591a\u7ebf\u7a0b"},{"location":"Python/Python%E4%B8%AD%E7%9A%84%E7%BA%BF%E7%A8%8B/#_5","text":"\u7ebf\u7a0b\u6267\u884c\u4e00\u6bb5\u4ee3\u7801,\u4e0d\u4f1a\u4ea7\u751f\u4e0d\u786e\u5b9a\u7684\u7ed3\u679c,\u90a3\u8fd9\u6bb5\u4ee3\u7801\u5c31\u662f\u7ebf\u7a0b\u5b89\u5168\u7684 \u7c7b\u6216\u8005\u51fd\u6570\u6216\u8005\u65b9\u6cd5\u5206\u4e3a\u7ebf\u7a0b\u5b89\u5168\u548c\u7ebf\u7a0b\u4e0d\u5b89\u5168\u4e24\u79cd \u89e3\u51b3: 1: \u5b57\u7b26\u4e32\u662f\u4e0d\u53ef\u53d8\u7c7b\u578b,\u5b83\u53ef\u4ee5\u4f5c\u4e3a\u4e00\u4e2a\u6574\u4f53\u4e0d\u53ef\u5206\u5272\u8f93\u51fa,\u5728\u5b57\u7b26\u4e32\u4e0a\u505a\u6587\u7ae0 2:\u4f7f\u7528logging,\u6807\u51c6\u5e93\u91cc\u9762\u7684logging\u6a21\u5757,\u65e5\u5fd7\u5904\u7406\u6a21\u5757,\u5b83\u662f\u7ebf\u7a0b\u5b89\u5168\u7684,\u751f\u4ea7\u73af\u5883\u4ee3\u7801\u90fd\u4f7f\u7528logging","title":"\u7ebf\u7a0b\u5b89\u5168"},{"location":"Python/Python%E4%B8%AD%E7%9A%84%E7%BA%BF%E7%A8%8B/#daemonnon-daemon","text":"\u6ce8\u610f:\u8fd9\u91cc\u7684daemon\u4e0d\u662fLinux\u4e2d\u7684\u5b88\u62a4\u8fdb\u7a0b \u8fdb\u7a0b\u9760\u7ebf\u7a0b\u6267\u884c\u4ee3\u7801,\u81f3\u5c11\u6709\u4e00\u4e2a\u4e3b\u7ebf\u7a0b,\u5176\u4ed6\u7ebf\u7a0b\u662f\u5de5\u4f5c\u7ebf\u7a0b. \u4e3b\u7ebf\u7a0b\u662f\u7b2c\u4e00\u4e2a\u542f\u52a8\u7684\u7ebf\u7a0b, \u7236\u7ebf\u7a0b:\u5982\u679c\u7ebf\u7a0bA\u4e2d\u542f\u52a8\u4e86\u4e00\u4e2a\u7ebf\u7a0bB,A\u5c31\u662fB\u7684\u7236\u7ebf\u7a0b. \u5b50\u7ebf\u7a0b:B\u5c31\u662fA\u7684\u5b50\u7ebf\u7a0b Python\u4e2d,\u6784\u9020\u7ebf\u7a0b\u7684\u65f6\u5019,\u53ef\u4ee5\u8bbe\u7f6edaemon\u5c5e\u6027,\u8fd9\u4e2a\u5c5e\u6027\u5fc5\u987b\u5728start\u65b9\u6cd5\u524d\u8bbe\u7f6e\u597d \u7ebf\u7a0b\u7684daemon\u5c5e\u6027,\u4e3b\u7ebf\u7a0b\u7684daemon\u9ed8\u8ba4false,\u6240\u4ee5\u4e3b\u7ebf\u7a0b\u662f\u4e2anon-daemon\u7ebf\u7a0b \u603b\u7ed3: daemon\u4e00\u5b9a\u8981\u5728start\u65b9\u6cd5\u4e4b\u524d\u5b9a\u4e49 \u7ebf\u7a0b\u5177\u6709\u4e00\u4e2adaemon\u5c5e\u6027,\u53ef\u4ee5\u663e\u793a\u8bbe\u7f6e\u4e3aTrue\u6216False,\u4e5f\u53ef\u4ee5\u4e0d\u8bbe\u7f6e,\u9ed8\u8ba4\u53d6None. \u5982\u679c\u4e0d\u8bbe\u7f6e,\u5c31\u53d6\u5f53\u524d\u7ebf\u7a0b\u7684daemon\u6765\u8bbe\u7f6e\u5b83. \u4e3b\u7ebf\u7a0b\u662fnon-daemon\u7ebf\u7a0b,\u5373daemon = False \u4ece\u4e3b\u7ebf\u7a0b\u521b\u5efa\u7684\u6240\u6709\u7ebf\u7a0b\u4e0d\u8bbe\u7f6edaemon\u5c5e\u6027,\u9ed8\u8ba4\u503c\u4e3aFalse,\u4e5f\u5c31\u662fnon-daemon\u7ebf\u7a0b Python\u7a0b\u5e8f\u5728\u6ca1\u6709\u6216\u8005\u7684non-daemon\u7ebf\u7a0b\u8fd0\u884c\u65f6\u9000\u51fa,\u5269\u4e0b\u7684\u5c31\u53ea\u80fd\u662fdaemon\u7ebf\u7a0b,\u4e3b\u7ebf\u7a0b\u624d\u80fd\u9000\u51fa,\u5426\u5219\u4e3b\u7ebf\u7a0b\u5c31\u53ea\u80fd\u7b49\u5f85. \u5f53\u4e3b\u7ebf\u7a0b\u9000\u51fa\u65f6,\u5982\u679c\u8fd8\u6709\u5b58\u6d3b\u7684non-daemon\u7ebf\u7a0b,\u4e5f\u4e0d\u4f1a\u5e72\u6389\u6240\u6709daemon\u7ebf\u7a0b,\u800c\u662f\u76f4\u5230\u6240\u6709non-daemon\u7ebf\u7a0b\u5168\u90e8\u7ed3\u675f,\u5982\u679c\u8fd8\u6709daemon\u7ebf\u7a0b,\u4e3b\u7ebf\u7a0b\u9700\u8981\u9000\u51fa,\u4f1a\u7ed3\u675f\u6240\u6709daemon\u7ebf\u7a0b,\u9000\u51fa.","title":"daemon\u7ebf\u7a0b\u53efnon-daemon\u7ebf\u7a0b"},{"location":"Python/Python%E4%B8%AD%E7%9A%84%E7%BA%BF%E7%A8%8B/#daemon","text":"\u5f53\u4e00\u4e2a\u7ebf\u7a0b\u88ab\u8bbe\u7f6e\u6210daemon,\u5b83\u4f1a\u968f\u4e3b\u7ebf\u7a0b\u7684\u9000\u51fa\u800c\u9000\u51fa.\u7b80\u5316\u4e86\u624b\u52a8\u5173\u95ed\u7ebf\u7a0b\u7684\u5de5\u4f5c. \u4e3b\u8981\u5e94\u7528\u573a\u666f: \u540e\u53f0\u4efb\u52a1,\u5982\u53d1\u9001\u5fc3\u8df3\u5305,\u76d1\u63a7,\u8fd9\u79cd\u573a\u666f\u6700\u591a \u4e3b\u7ebf\u7a0b\u5de5\u4f5c\u624d\u6709\u7528\u7684\u7ebf\u7a0b,\u5982\u4e3b\u7ebf\u7a0b\u79cd\u7ef4\u62a4\u7740\u516c\u5171\u8d44\u6e90,\u4e3b\u7ebf\u7a0b\u5df2\u7ecf\u6e05\u7406\u4e86,\u51c6\u5907\u9000\u51fa,\u800c\u5de5\u4f5c\u7ebf\u7a0b\u4f7f\u7528\u8fd9\u4e9b\u8d44\u6e90\u5de5\u4f5c\u4e5f\u6ca1\u6709\u610f\u4e49\u4e86,\u4e00\u8d77\u9000\u51fa\u6700\u5408\u9002 \u968f\u65f6\u53ef\u4ee5\u88ab\u7ec8\u6b62\u7684\u7ebf\u7a0b \u5982\u679c\u5728non-daemon\u7ebf\u7a0bA\u4e2d.\u5bf9\u53e6\u4e00\u4e2adaemon\u7ebf\u7a0bB\u4f7f\u7528\u4e86join\u65b9\u6cd5,\u8fd9\u4e2a\u7ebf\u7a0bB\u8bbe\u7f6e\u6210daemon\u5c31\u6ca1\u6709\u610f\u4e49\u4e86,\u56e0\u4e3anon-daemon\u7ebf\u7a0bA\u603b\u662f\u8981\u7b49\u5f85B \u5982\u679c\u5728\u4e00\u4e2adaemon\u7ebf\u7a0bC\u4e2d,\u5bf9\u53e6\u4e00\u4e2adaemon\u7ebf\u7a0bD\u4f7f\u7528\u4e86join\u65b9\u6cd5,\u53ea\u80fd\u8bf4\u660eC\u8981\u7b49\u5f85D,\u4e3b\u7ebf\u7a0b\u9000\u51fa,C,D\u4e0d\u7ba1\u7ed3\u675f\u5426,\u4e5f\u4e0d\u7ba1\u8c01\u7b49\u8c01,\u90fd\u8981\u88ab\u5e72\u6389.","title":"daemon\u7ebf\u7a0b\u5e94\u7528\u573a\u666f"},{"location":"Python/Python%E4%B8%AD%E7%9A%84%E7%BA%BF%E7%A8%8B/#join","text":"join(timeout = None) \u662f\u7ebf\u7a0b\u7684\u6807\u51c6\u65b9\u6cd5\u4e4b\u4e00 \u4e00\u4e2a\u7ebf\u7a0b\u4e2d\u8c03\u7528\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u7684join\u65b9\u6cd5,\u8c03\u7528\u8005\u5c06\u88ab\u963b\u585e,\u76f4\u5230\u88ab\u8c03\u7528\u7ebf\u7a0b\u7ec8\u6b62, \u4e00\u4e2a\u7ebf\u7a0b\u53ef\u4ee5\u88abjoin\u591a\u6b21 timeout\u53c2\u6570\u6307\u5b9a\u8c03\u7528\u8005\u7b49\u5f85\u591a\u4e45,\u6ca1\u6709\u8bbe\u7f6e\u8d85\u65f6,\u5c31\u4e00\u76f4\u7b49\u5230\u88ab\u8c03\u7528\u7ebf\u7a0b\u7ed3\u675f \u8c03\u7528\u8c01\u7684join\u65b9\u6cd5,\u5c31\u662fjoin\u8c01,\u5c31\u8981\u7b49\u8c01","title":"join"},{"location":"Python/Python%E4%B8%AD%E7%9A%84%E7%BA%BF%E7%A8%8B/#threadinglocal","text":"threading.local\u7c7b,\u5c06\u8fd9\u4e2a\u7c7b\u5b9e\u4f8b\u5316\u5f97\u5230\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf,\u4f46\u662f\u4e0d\u540c\u7684\u7ebf\u7a0b\u4f7f\u7528\u8fd9\u4e2a\u5bf9\u8c61\u5b58\u50a8\u7684\u6570\u636e,\u5176\u4ed6\u7ebf\u7a0b\u770b\u4e0d\u89c1,\u88ab\u653e\u5230\u4e86\u7ebf\u7a0b\u5404\u81ea\u7684\u5b57\u5178\u4e2d. threading.local\u7c7b\u6784\u5efa\u4e86\u4e00\u4e2a\u5927\u5b57\u5178,\u5176\u5143\u7d20\u662f\u6bcf\u4e00\u4e2a\u7ebf\u7a0b\u5b9e\u4f8b\u7684\u5730\u5740\u4e3akey\u548c\u7ebf\u7a0b\u5bf9\u8c61\u5f15\u7528\u7ebf\u7a0b\u5355\u72ec\u7684\u5b57\u5178\u6620\u5c04 {id(thread) \u2192(ref(thread),thread-local dict)} ref\u4e3a\u5f15\u7528 \u901a\u8fc7threading.local\u5b9e\u4f8b\u5c31\u53ef\u4ee5\u5728\u4e0d\u540c\u7684\u7ebf\u7a0b\u4e2d,\u5b89\u5168\u7684\u4f7f\u7528\u7ebf\u7a0b\u72ec\u6709\u7684\u6570\u636e,\u505a\u5230\u4e86\u7ebf\u7a0b\u95f4\u6570\u636e\u9694\u79bb,\u5c31\u50cf\u672c\u5730\u53d8\u91cf\u4e00\u6837\u5b89\u5168. \u5148\u5b9e\u4f8b\u5316\u4e00\u4e2actx = threading.local()\u5bf9\u8c61,\u5404\u4e2a\u7ebf\u7a0b\u5404\u81ea\u8c03\u7528ctx.x = 100;ctx.y= 200 \u5728\u8c01\u7684\u7ebf\u7a0b\u91cc\u5b9a\u4e49,\u5c31\u5728\u8c01\u7684\u7ebf\u7a0b\u4e2d\u4f7f\u7528 from threading import Thread , local import time cxw = local () def task ( arg ): cxw . value = arg time . sleep ( 1 ) print ( cxw . value ) for i in range ( 10 ): t = Thread ( target = task , args = ( i ,)) t . start ()","title":"threading.local\u7c7b"},{"location":"Python/Python%E4%B8%AD%E7%9A%84%E7%BA%BF%E7%A8%8B/#timer","text":"threading.Timer\u7ee7\u627f\u81eaThread,\u7528\u6765\u5b9a\u4e49\u591a\u4e45\u6267\u884c\u4e00\u4e2a\u51fd\u6570 class threading/Timer(interval,function,args=None,kwarg=None) start\u65b9\u6cd5\u6267\u884c\u4e4b\u540e,Timer\u5bf9\u8c61\u4f1a\u5904\u4e8e\u7b49\u5f85\u72b6\u6001,\u7b49\u5f85\u4e86interval\u4e4b\u540e,\u5f00\u59cb\u6267\u884cfunction\u51fd\u6570 \u5982\u679c\u5728\u6267\u884c\u51fd\u6570\u4e4b\u524d\u7684\u7b49\u5f85\u9636\u6bb5,\u4f7f\u7528\u4e86cancel\u65b9\u6cd5,\u5c31\u4f1a\u8df3\u8fc7\u6267\u884c\u51fd\u6570\u7ed3\u675f. \u4f46\u662f\u5982\u679c\u5df2\u7ecf\u6267\u884c,\u5219cancel\u65e0\u6548 multiprocessing manager.Queue\u662f\u7ebf\u7a0b\u4e0d\u5b89\u5168\u7684() multiprocessing Queue queue.Queue()\u662f\u975e\u963b\u585e\u7684","title":"\u5b9a\u65f6\u5668Timer"},{"location":"Python/Python%E4%B8%AD%E7%9A%84%E8%BF%9B%E7%A8%8B/","text":"[toc] Python\u4e2d\u7684\u8fdb\u7a0b \u00b6 \u591a\u8fdb\u7a0b \u00b6 \u591a\u8fdb\u7a0b\u662f\u771f\u6b63\u7684\u5e76\u884c Python\u4e2d\u7684GIL,\u591a\u7ebf\u7a0b\u4e0d\u662fCPU\u5bc6\u96c6\u578b\u7a0b\u5e8f\u7684\u597d\u7684\u9009\u62e9 \u591a\u8fdb\u7a0b\u53ef\u4ee5\u7ed5\u8fc7GIL \u591a\u8fdb\u7a0b\u53ef\u4ee5\u5b8c\u5168\u72ec\u7acb\u7684\u8fdb\u7a0b\u73af\u5883\u4e2d\u8fd0\u884c\u7a0b\u5e8f,\u53ef\u4ee5\u5145\u5206\u5229\u7528\u591a\u5904\u7406\u5668 multiprocessing\u7c7b \u00b6 Process\u7c7b \u00b6 Process\u7c7b\u9075\u5faa\u4e86Thread\u7c7b\u7684API.\u5e38\u7528\u7684\u8fdb\u7a0b\u7ebf\u7a0b\u65b9\u6cd5\u5927\u81f4\u76f8\u540c \u6ce8\u610f:\u5728\u521b\u5efa\u5b50\u8fdb\u7a0b\u7684\u65f6\u5019,windows\u4f1a\u5c06\u5f53\u524d\u7236\u7c7b\u4ee3\u7801\u91cd\u65b0\u52a0\u8f7d\u6267\u884c\u4e00\u6b21,linux\u548cmac\u4f1a\u4f7f\u7528fork\u65b9\u6cd5\u5c06\u7236\u8fdb\u7a0b\u4ee3\u7801\u62f7\u8d1d\u4e00\u4efd,\u518d\u53bb\u6267\u884c \u6240\u4ee5Windows\u4e0b\u521b\u5efa\u5b50\u8fdb\u7a0b\u8981\u653e\u5165 __name__ == '__main__' \u4e2d\u6267\u884c \u540d\u79f0 \u8bf4\u540d pid \u67e5\u770b\u8fdb\u7a0bid,\u7b49\u540c\u4e8eos.getpid() ppid \u67e5\u770b\u7236\u8fdb\u7a0b\u7684id(parent pid) exitcode \u8fdb\u7a0b\u7684\u9000\u51fa\u72b6\u6001\u7801 terminate() \u7ec8\u6b62\u6307\u5b9a\u7684\u8fdb\u7a0b is_alive() \u5224\u65ad\u8fdb\u7a0b\u662f\u5426\u5b58\u6d3b \u8fdb\u7a0b\u95f4\u540c\u6b65IPC \u00b6 \u8fdb\u7a0b\u95f4\u6570\u636e\u662f\u76f8\u4e92\u9694\u79bb\u7684,multiprocessing\u63d0\u4f9b\u4e86\u5171\u4eab\u5185\u5b58,\u670d\u52a1\u5668\u8fdb\u7a0b\u6765\u5171\u4eab\u6570\u636e,\u8fd8\u63d0\u4f9b\u4e86Queue\u961f\u5217,Pipe\u7ba1\u9053\u7528\u4e8e\u8fdb\u7a0b\u95f4\u901a\u4fe1. \u901a\u8baf\u65b9\u5f0f\u4e0d\u540c: \u00b6 1.\u591a\u8fdb\u7a0b\u5c31\u662f\u542f\u52a8\u591a\u4e2a\u89e3\u91ca\u5668\u8fdb\u7a0b,\u8fdb\u7a0b\u540c\u65b0\u5efa\u5fc5\u987b\u5e8f\u5217\u5316,\u53cd\u5e8f\u5217\u5316,\u6240\u4ee5\u4e0d\u80fd\u5e8f\u5217\u5316\u7684\u6570\u636e\u4e0d\u80fd\u901a\u4fe1 2.\u6570\u636e\u7684\u7ebf\u7a0b\u5b89\u5168\u95ee\u9898: \u200b \u7531\u4e8e\u6bcf\u4e2a\u8fdb\u7a0b\u4e2d\u6ca1\u6709\u5b9e\u73b0\u591a\u7ebf\u7a0b,GIL\u5c31\u6ca1\u4ec0\u4e48\u7528\u4e86 \u8fdb\u7a0b\u6c60 \u00b6 multiprocessing.Pool\u662f\u8fdb\u7a0b\u6c60\u7c7b \u540d\u79f0 \u8bf4\u660e apply() \u963b\u585e\u6267\u884c,\u5bfc\u81f4\u4e3b\u7ebf\u7a0b\u6267\u884c\u5176\u4ed6\u5b50\u8fdb\u7a0b\u5c31\u50cf\u4e00\u4e2a\u4e2a\u6267\u884c apply_async() \u4e0eapple\u65b9\u6cd5\u4f7f\u7528\u4e00\u81f4,\u975e\u963b\u585e\u6267\u884c,\u5f97\u5230\u7ed3\u679c\u540e\u4f1a\u6267\u884c\u56de\u8c03 close() \u5173\u95ed\u6c60,\u6c60\u4e0d\u80fd\u518d\u63a5\u53d7\u65b0\u7684\u4efb\u52a1 terminate() \u7ed3\u675f\u5de5\u4f5c\u8fdb\u7a0b,\u4e0d\u518d\u5904\u7406\u672a\u5904\u7406\u7684\u4efb\u52a1 join() \u4e3b\u8fdb\u7a0b\u963b\u585e\u7b49\u5f85\u5b50\u8fdb\u7a0b\u7684\u9000\u51fa,join\u65b9\u6cd5\u8981\u5728close\u6216terminate\u4e4b\u540e\u4f7f\u7528 Queue\u961f\u5217 \u00b6","title":"Python\u4e2d\u7684\u8fdb\u7a0b"},{"location":"Python/Python%E4%B8%AD%E7%9A%84%E8%BF%9B%E7%A8%8B/#python","text":"","title":"Python\u4e2d\u7684\u8fdb\u7a0b"},{"location":"Python/Python%E4%B8%AD%E7%9A%84%E8%BF%9B%E7%A8%8B/#_1","text":"\u591a\u8fdb\u7a0b\u662f\u771f\u6b63\u7684\u5e76\u884c Python\u4e2d\u7684GIL,\u591a\u7ebf\u7a0b\u4e0d\u662fCPU\u5bc6\u96c6\u578b\u7a0b\u5e8f\u7684\u597d\u7684\u9009\u62e9 \u591a\u8fdb\u7a0b\u53ef\u4ee5\u7ed5\u8fc7GIL \u591a\u8fdb\u7a0b\u53ef\u4ee5\u5b8c\u5168\u72ec\u7acb\u7684\u8fdb\u7a0b\u73af\u5883\u4e2d\u8fd0\u884c\u7a0b\u5e8f,\u53ef\u4ee5\u5145\u5206\u5229\u7528\u591a\u5904\u7406\u5668","title":"\u591a\u8fdb\u7a0b"},{"location":"Python/Python%E4%B8%AD%E7%9A%84%E8%BF%9B%E7%A8%8B/#multiprocessing","text":"","title":"multiprocessing\u7c7b"},{"location":"Python/Python%E4%B8%AD%E7%9A%84%E8%BF%9B%E7%A8%8B/#process","text":"Process\u7c7b\u9075\u5faa\u4e86Thread\u7c7b\u7684API.\u5e38\u7528\u7684\u8fdb\u7a0b\u7ebf\u7a0b\u65b9\u6cd5\u5927\u81f4\u76f8\u540c \u6ce8\u610f:\u5728\u521b\u5efa\u5b50\u8fdb\u7a0b\u7684\u65f6\u5019,windows\u4f1a\u5c06\u5f53\u524d\u7236\u7c7b\u4ee3\u7801\u91cd\u65b0\u52a0\u8f7d\u6267\u884c\u4e00\u6b21,linux\u548cmac\u4f1a\u4f7f\u7528fork\u65b9\u6cd5\u5c06\u7236\u8fdb\u7a0b\u4ee3\u7801\u62f7\u8d1d\u4e00\u4efd,\u518d\u53bb\u6267\u884c \u6240\u4ee5Windows\u4e0b\u521b\u5efa\u5b50\u8fdb\u7a0b\u8981\u653e\u5165 __name__ == '__main__' \u4e2d\u6267\u884c \u540d\u79f0 \u8bf4\u540d pid \u67e5\u770b\u8fdb\u7a0bid,\u7b49\u540c\u4e8eos.getpid() ppid \u67e5\u770b\u7236\u8fdb\u7a0b\u7684id(parent pid) exitcode \u8fdb\u7a0b\u7684\u9000\u51fa\u72b6\u6001\u7801 terminate() \u7ec8\u6b62\u6307\u5b9a\u7684\u8fdb\u7a0b is_alive() \u5224\u65ad\u8fdb\u7a0b\u662f\u5426\u5b58\u6d3b","title":"Process\u7c7b"},{"location":"Python/Python%E4%B8%AD%E7%9A%84%E8%BF%9B%E7%A8%8B/#ipc","text":"\u8fdb\u7a0b\u95f4\u6570\u636e\u662f\u76f8\u4e92\u9694\u79bb\u7684,multiprocessing\u63d0\u4f9b\u4e86\u5171\u4eab\u5185\u5b58,\u670d\u52a1\u5668\u8fdb\u7a0b\u6765\u5171\u4eab\u6570\u636e,\u8fd8\u63d0\u4f9b\u4e86Queue\u961f\u5217,Pipe\u7ba1\u9053\u7528\u4e8e\u8fdb\u7a0b\u95f4\u901a\u4fe1.","title":"\u8fdb\u7a0b\u95f4\u540c\u6b65IPC"},{"location":"Python/Python%E4%B8%AD%E7%9A%84%E8%BF%9B%E7%A8%8B/#_2","text":"1.\u591a\u8fdb\u7a0b\u5c31\u662f\u542f\u52a8\u591a\u4e2a\u89e3\u91ca\u5668\u8fdb\u7a0b,\u8fdb\u7a0b\u540c\u65b0\u5efa\u5fc5\u987b\u5e8f\u5217\u5316,\u53cd\u5e8f\u5217\u5316,\u6240\u4ee5\u4e0d\u80fd\u5e8f\u5217\u5316\u7684\u6570\u636e\u4e0d\u80fd\u901a\u4fe1 2.\u6570\u636e\u7684\u7ebf\u7a0b\u5b89\u5168\u95ee\u9898: \u200b \u7531\u4e8e\u6bcf\u4e2a\u8fdb\u7a0b\u4e2d\u6ca1\u6709\u5b9e\u73b0\u591a\u7ebf\u7a0b,GIL\u5c31\u6ca1\u4ec0\u4e48\u7528\u4e86","title":"\u901a\u8baf\u65b9\u5f0f\u4e0d\u540c:"},{"location":"Python/Python%E4%B8%AD%E7%9A%84%E8%BF%9B%E7%A8%8B/#_3","text":"multiprocessing.Pool\u662f\u8fdb\u7a0b\u6c60\u7c7b \u540d\u79f0 \u8bf4\u660e apply() \u963b\u585e\u6267\u884c,\u5bfc\u81f4\u4e3b\u7ebf\u7a0b\u6267\u884c\u5176\u4ed6\u5b50\u8fdb\u7a0b\u5c31\u50cf\u4e00\u4e2a\u4e2a\u6267\u884c apply_async() \u4e0eapple\u65b9\u6cd5\u4f7f\u7528\u4e00\u81f4,\u975e\u963b\u585e\u6267\u884c,\u5f97\u5230\u7ed3\u679c\u540e\u4f1a\u6267\u884c\u56de\u8c03 close() \u5173\u95ed\u6c60,\u6c60\u4e0d\u80fd\u518d\u63a5\u53d7\u65b0\u7684\u4efb\u52a1 terminate() \u7ed3\u675f\u5de5\u4f5c\u8fdb\u7a0b,\u4e0d\u518d\u5904\u7406\u672a\u5904\u7406\u7684\u4efb\u52a1 join() \u4e3b\u8fdb\u7a0b\u963b\u585e\u7b49\u5f85\u5b50\u8fdb\u7a0b\u7684\u9000\u51fa,join\u65b9\u6cd5\u8981\u5728close\u6216terminate\u4e4b\u540e\u4f7f\u7528","title":"\u8fdb\u7a0b\u6c60"},{"location":"Python/Python%E4%B8%AD%E7%9A%84%E8%BF%9B%E7%A8%8B/#queue","text":"","title":"Queue\u961f\u5217"},{"location":"Python/bytesbytearray/","text":"bytes \u00b6 \u4e0d\u53ef\u53d8\u5e8f\u5217 bytearray \u00b6 \u5b57\u8282\u6570\u7ec4,\u53ef\u53d8 \u7f16\u7801\u548c\u89e3\u7801 \u00b6 \u5b57\u7b26\u4e32\u6309\u7167\u4e0d\u540c\u7684\u5b57\u7b26\u96c6\u7f16\u7801encode\u8fd4\u56de\u5b57\u8282\u5e8f\u5217bytes encoding(encoding='utf-8',error= 'strict'') ----> bytes \u5b57\u8282\u5e8f\u5217\u6309\u7167\u4e0d\u540c\u7684\u5b57\u7b26\u96c6\u89e3\u7801decode\u8fd4\u56de\u5b57\u7b26\u4e32 bytes.decode(encoding='utf-8',error='strict') ----> str bytearray.decode(encoding='utf-8',error='strict') ----> str","title":"bytesbytearray"},{"location":"Python/bytesbytearray/#bytes","text":"\u4e0d\u53ef\u53d8\u5e8f\u5217","title":"bytes"},{"location":"Python/bytesbytearray/#bytearray","text":"\u5b57\u8282\u6570\u7ec4,\u53ef\u53d8","title":"bytearray"},{"location":"Python/bytesbytearray/#_1","text":"\u5b57\u7b26\u4e32\u6309\u7167\u4e0d\u540c\u7684\u5b57\u7b26\u96c6\u7f16\u7801encode\u8fd4\u56de\u5b57\u8282\u5e8f\u5217bytes encoding(encoding='utf-8',error= 'strict'') ----> bytes \u5b57\u8282\u5e8f\u5217\u6309\u7167\u4e0d\u540c\u7684\u5b57\u7b26\u96c6\u89e3\u7801decode\u8fd4\u56de\u5b57\u7b26\u4e32 bytes.decode(encoding='utf-8',error='strict') ----> str bytearray.decode(encoding='utf-8',error='strict') ----> str","title":"\u7f16\u7801\u548c\u89e3\u7801"},{"location":"Python/%E5%86%85%E5%BB%BA%E5%87%BD%E6%95%B0/","text":"\u5185\u5efa\u51fd\u6570buildinfunction \u5185\u5efa\u51fd\u6570buildinfunction \u00b6 \u5185\u5b58\u5730\u5740 id() \u8fd4\u56de\u5bf9\u8c61\u5185\u5b58\u5730\u5740 \u54c8\u5e0c hash() \u8fd4\u56de\u4e00\u4e2a\u5bf9\u8c61\u7684\u54c8\u5e0c\u503c \u7c7b\u578b type() \u8fd4\u56de\u5bf9\u8c61\u7684\u7c7b\u578b \u5bf9\u8c61\u957f\u5ea6 len() \u5bf9\u8c61\u5224\u65ad isinstance(obj,class_or_tuple) chr(i) \u7ed9\u4e00\u4e2a\u4e00\u5b9a\u8303\u56f4\u7684\u6574\u6570\u8fd4\u56de\u5bf9\u5e94\u7684ASCII\u5bf9\u5e94\u5b57\u7b26 ord\u00a9 \u8fd4\u56de\u5b57\u7b26\u5bf9\u5e94\u7684\u6574\u6570 sorted(iterable,[,key][,reverse]) \u8fd4\u56de\u4e00\u4e2a==\u65b0\u5217\u8868==,\u9ed8\u8ba4\u5347\u5e8f \u4f20\u5165\u4e00\u4e2aiterable,\u8fd4\u56de\u4e00\u4e2a\u5df2\u6392\u5e8f\u5217\u8868 \u5177\u6709\u4e24\u4e2a\u53ef\u9009\u53c2\u6570,\u90fd\u662f\u5173\u952e\u5b57\u53c2\u6570 key\u6307\u5b9a\u5e26\u6709\u5355\u4e2a\u53c2\u6570\u7684\u51fd\u6570,\u7528\u4e8e\u4ece\u6bd4\u8f83iterable\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20 reversed(seq) \u8f93\u5165\u4e00\u4e2a\u5e8f\u5217,\u8fd4\u56de\u4e00\u4e2a\u53cd\u8f6c\u5143\u7d20\u7684==\u8fed\u4ee3== enumerate(seq[,start=0]) \u679a\u4e3e,\u751f\u6210\u7d22\u5f15\u4e0e\u503c\u5f62\u6210\u7684\u4e8c\u5143\u7ec4 iter(iterable),next(iterator[[,default]) iter\u5c06\u4e00\u4e2a\u53ef\u8fed\u4ee3\u5bf9\u8c61\u5c01\u88c5\u6210\u4e00\u4e2a\u8fed\u4ee3\u5668 next\u5bf9\u4e00\u4e2a\u8fed\u4ee3\u5668\u53d6\u4e0b\u4e00\u4e2a\u5143\u7d20,\u5143\u7d20\u53d6\u5b8c\u4e4b\u540e\u518dnext\u4f1a\u62a5\u9519 \u62c9\u94fe\u51fd\u6570zip(*iterables) \u50cf\u62c9\u94fe\u4e00\u6837,\u628a\u591a\u4e2a\u53ef\u8fed\u4ee3\u5bf9\u8c61\u5408\u5e76\u5728\u4e00\u8d77,\u8fd4\u56de\u4e00\u4e2a\u8fed\u4ee3\u5668 \u5c06\u6bcf\u6b21\u4ece\u4e0d\u540c\u5bf9\u8c61\u4e2d\u53d6\u5230\u7684\u5143\u7d20\u5408\u5e76\u6210\u4e00\u4e2an\u5143\u7ec4,\u5bf9\u4e0d\u9f50\u7684,\u6728\u6876\u539f\u7406,\u4ee5\u6700\u77ed\u7684\u4e3a\u51c6,\u8fd4\u56den\u5143\u7ec4\u7ec4\u6210\u7684\u5217\u8868 \u8fd4\u56de\u4e00\u4e2an\u5143\u7ec4,n\u4e3azip\u62ec\u53f7\u4e2d\u53ef\u8fed\u4ee3\u5bf9\u8c61\u6570\u91cf,\u6bcf\u4e2a\u53ef\u8fed\u4ee3\u5bf9\u8c61\u4f9d\u6b21\u53d6\u503c,\u4ee5\u6700\u77ed\u7684\u53ef\u8fed\u4ee3\u5bf9\u8c61\u4e3a\u51c6.\u591a\u4f59\u4e0d\u8fed\u4ee3 dict(zip(range(10),range(10))) \u8fd4\u56de{0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9} list(zip(range(10),range(5))) \u8fd4\u56de[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4)] map(function, iterable, ...) \u5c06\u53ef\u8fed\u4ee3\u5bf9\u8c61\u4eec\u6309\u7167function\u4e00\u4e00\u5bf9\u5e94\u64cd\u4f5c,\u5982\u679c\u53ea\u6709\u4e00\u4e2aiterable,\u6309function\u64cd\u4f5c map ( lambda x : x ** 2 , [ 1 , 2 , 3 , 4 , 5 ]) # \u4f7f\u7528 lambda \u533f\u540d\u51fd\u6570 [ 1 , 4 , 9 , 16 , 25 ] # \u63d0\u4f9b\u4e86\u4e24\u4e2a\u5217\u8868\uff0c\u5bf9\u76f8\u540c\u4f4d\u7f6e\u7684\u5217\u8868\u6570\u636e\u8fdb\u884c\u76f8\u52a0 >>> map ( lambda x , y : x + y , [ 1 , 3 , 5 , 7 , 9 ], [ 2 , 4 , 6 , 8 , 10 ]) [ 3 , 7 , 11 , 15 , 19 ] filter(function, iterable) def is_odd ( n ): return n % 2 == 1 newlist = filter ( is_odd , [ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 ]) print ( newlist ) [ 1 , 3 , 5 , 7 , 9 ] eval \u628a\u5b57\u7b26\u4e32\u7684\u5f15\u53f7\u53bb\u6389,\u91cc\u9762\u662f\u4ec0\u4e48\u7c7b\u578b\u5c31\u662f\u4ec0\u4e48\u7c7b\u578b,\u4e0d\u80fd\u653e\u5b57\u7b26\u4e32,\u9664\u975e\u5b57\u7b26\u4e32\u662f\u53d8\u91cf\u540d,\u4e0d\u80fd\u8bc6\u522bpython\u5173\u952e\u5b57 exec \u628a\u5b57\u7b26\u4e32\u7684\u5f15\u53f7\u53bb\u6389,\u540c\u65f6\u53ef\u4ee5\u8bc6\u522b\u63a5\u6536\u5185\u5bb9\u4e2d\u7684python\u5173\u952e\u5b57 globals \u5217\u51fa\u6240\u6709\u5168\u5c40\u53d8\u91cf \u8f93\u51fa\u5b57\u5178 locals \u5217\u51fa\u6240\u6709\u5f53\u524d\u4f4d\u7f6e\u53d8\u91cf \u8f93\u51fa\u5b57\u5178 reduce(function,sequence[,initial]) -> value \u5728py2\u4e2d\u5f0f\u5185\u7f6e\u51fd\u6570,py3\u4e2d\u79fb\u690d\u5230\u4e86functools\u6a21\u5757 reduce\u7684\u5de5\u4f5c\u8fc7\u7a0b\u662f \uff1a\u5728\u8fed\u4ee3sequence(tuple \uff0clist \uff0cdictionary\uff0c string\u7b49\u53ef\u8fed\u4ee3\u7269)\u7684\u8fc7\u7a0b\u4e2d\uff0c\u9996\u5148\u628a \u524d\u4e24\u4e2a\u5143\u7d20\u4f20\u7ed9 \u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\uff0c\u51fd\u6570\u52a0\u5de5\u540e\uff0c\u7136\u540e\u628a\u5f97\u5230\u7684\u7ed3\u679c\u548c\u7b2c\u4e09\u4e2a\u5143\u7d20\u4f5c\u4e3a\u4e24\u4e2a\u53c2\u6570\u4f20\u7ed9\u51fd\u6570\u53c2\u6570\uff0c \u51fd\u6570\u52a0\u5de5\u540e\u5f97\u5230\u7684\u7ed3\u679c\u53c8\u548c\u7b2c\u56db\u4e2a\u5143\u7d20\u4f5c\u4e3a\u4e24\u4e2a\u53c2\u6570\u4f20\u7ed9\u51fd\u6570\u53c2\u6570\uff0c\u4f9d\u6b21\u7c7b\u63a8\u3002 \u5982\u679c\u4f20\u5165\u4e86 initial \u503c\uff0c \u90a3\u4e48\u9996\u5148\u4f20\u7684\u5c31\u4e0d\u662f sequence \u7684\u7b2c\u4e00\u4e2a\u548c\u7b2c\u4e8c\u4e2a\u5143\u7d20\uff0c\u800c\u662f initial\u503c\u548c \u7b2c\u4e00\u4e2a\u5143\u7d20\u3002\u7ecf\u8fc7\u8fd9\u6837\u7684\u7d2f\u8ba1\u8ba1\u7b97\u4e4b\u540e\u5408\u5e76\u5e8f\u5217\u5230\u4e00\u4e2a\u5355\u4e00\u8fd4\u56de\u503c >>> from functools import reduce >>> reduce ( lambda x , y : x * 10 + y , [ 1 , 2 , 3 , 4 , 5 ]) >>> 12345 dir() dir() \u51fd\u6570\u4e0d\u5e26\u53c2\u6570\u65f6\uff0c\u8fd4\u56de\u5f53\u524d\u6a21\u5757\u5185\u7684\u53d8\u91cf\u3001\u65b9\u6cd5\u548c\u5b9a\u4e49\u7684\u7c7b\u578b\u5217\u8868\uff1b\u5e26\u53c2\u6570\u65f6\uff0c\u8fd4\u56de\u53c2\u6570\u7684\u5c5e\u6027\u3001\u65b9\u6cd5\u5217\u8868\u3002\u5982\u679c\u53c2\u6570\u5305\u542b\u65b9\u6cd5__dir__()\uff0c\u8be5\u65b9\u6cd5\u5c06\u88ab\u8c03\u7528\u3002\u5982\u679c\u53c2\u6570\u4e0d\u5305\u542b__dir__()\uff0c\u8be5\u65b9\u6cd5\u5c06\u6700\u5927\u9650\u5ea6\u5730\u6536\u96c6\u53c2\u6570\u4fe1\u606f\u3002 \u8fd4\u56de\u4e00\u4e2a\u5217\u8868","title":"\u5185\u5efa\u51fd\u6570"},{"location":"Python/%E5%86%85%E5%BB%BA%E5%87%BD%E6%95%B0/#buildinfunction","text":"\u5185\u5b58\u5730\u5740 id() \u8fd4\u56de\u5bf9\u8c61\u5185\u5b58\u5730\u5740 \u54c8\u5e0c hash() \u8fd4\u56de\u4e00\u4e2a\u5bf9\u8c61\u7684\u54c8\u5e0c\u503c \u7c7b\u578b type() \u8fd4\u56de\u5bf9\u8c61\u7684\u7c7b\u578b \u5bf9\u8c61\u957f\u5ea6 len() \u5bf9\u8c61\u5224\u65ad isinstance(obj,class_or_tuple) chr(i) \u7ed9\u4e00\u4e2a\u4e00\u5b9a\u8303\u56f4\u7684\u6574\u6570\u8fd4\u56de\u5bf9\u5e94\u7684ASCII\u5bf9\u5e94\u5b57\u7b26 ord\u00a9 \u8fd4\u56de\u5b57\u7b26\u5bf9\u5e94\u7684\u6574\u6570 sorted(iterable,[,key][,reverse]) \u8fd4\u56de\u4e00\u4e2a==\u65b0\u5217\u8868==,\u9ed8\u8ba4\u5347\u5e8f \u4f20\u5165\u4e00\u4e2aiterable,\u8fd4\u56de\u4e00\u4e2a\u5df2\u6392\u5e8f\u5217\u8868 \u5177\u6709\u4e24\u4e2a\u53ef\u9009\u53c2\u6570,\u90fd\u662f\u5173\u952e\u5b57\u53c2\u6570 key\u6307\u5b9a\u5e26\u6709\u5355\u4e2a\u53c2\u6570\u7684\u51fd\u6570,\u7528\u4e8e\u4ece\u6bd4\u8f83iterable\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20 reversed(seq) \u8f93\u5165\u4e00\u4e2a\u5e8f\u5217,\u8fd4\u56de\u4e00\u4e2a\u53cd\u8f6c\u5143\u7d20\u7684==\u8fed\u4ee3== enumerate(seq[,start=0]) \u679a\u4e3e,\u751f\u6210\u7d22\u5f15\u4e0e\u503c\u5f62\u6210\u7684\u4e8c\u5143\u7ec4 iter(iterable),next(iterator[[,default]) iter\u5c06\u4e00\u4e2a\u53ef\u8fed\u4ee3\u5bf9\u8c61\u5c01\u88c5\u6210\u4e00\u4e2a\u8fed\u4ee3\u5668 next\u5bf9\u4e00\u4e2a\u8fed\u4ee3\u5668\u53d6\u4e0b\u4e00\u4e2a\u5143\u7d20,\u5143\u7d20\u53d6\u5b8c\u4e4b\u540e\u518dnext\u4f1a\u62a5\u9519 \u62c9\u94fe\u51fd\u6570zip(*iterables) \u50cf\u62c9\u94fe\u4e00\u6837,\u628a\u591a\u4e2a\u53ef\u8fed\u4ee3\u5bf9\u8c61\u5408\u5e76\u5728\u4e00\u8d77,\u8fd4\u56de\u4e00\u4e2a\u8fed\u4ee3\u5668 \u5c06\u6bcf\u6b21\u4ece\u4e0d\u540c\u5bf9\u8c61\u4e2d\u53d6\u5230\u7684\u5143\u7d20\u5408\u5e76\u6210\u4e00\u4e2an\u5143\u7ec4,\u5bf9\u4e0d\u9f50\u7684,\u6728\u6876\u539f\u7406,\u4ee5\u6700\u77ed\u7684\u4e3a\u51c6,\u8fd4\u56den\u5143\u7ec4\u7ec4\u6210\u7684\u5217\u8868 \u8fd4\u56de\u4e00\u4e2an\u5143\u7ec4,n\u4e3azip\u62ec\u53f7\u4e2d\u53ef\u8fed\u4ee3\u5bf9\u8c61\u6570\u91cf,\u6bcf\u4e2a\u53ef\u8fed\u4ee3\u5bf9\u8c61\u4f9d\u6b21\u53d6\u503c,\u4ee5\u6700\u77ed\u7684\u53ef\u8fed\u4ee3\u5bf9\u8c61\u4e3a\u51c6.\u591a\u4f59\u4e0d\u8fed\u4ee3 dict(zip(range(10),range(10))) \u8fd4\u56de{0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9} list(zip(range(10),range(5))) \u8fd4\u56de[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4)] map(function, iterable, ...) \u5c06\u53ef\u8fed\u4ee3\u5bf9\u8c61\u4eec\u6309\u7167function\u4e00\u4e00\u5bf9\u5e94\u64cd\u4f5c,\u5982\u679c\u53ea\u6709\u4e00\u4e2aiterable,\u6309function\u64cd\u4f5c map ( lambda x : x ** 2 , [ 1 , 2 , 3 , 4 , 5 ]) # \u4f7f\u7528 lambda \u533f\u540d\u51fd\u6570 [ 1 , 4 , 9 , 16 , 25 ] # \u63d0\u4f9b\u4e86\u4e24\u4e2a\u5217\u8868\uff0c\u5bf9\u76f8\u540c\u4f4d\u7f6e\u7684\u5217\u8868\u6570\u636e\u8fdb\u884c\u76f8\u52a0 >>> map ( lambda x , y : x + y , [ 1 , 3 , 5 , 7 , 9 ], [ 2 , 4 , 6 , 8 , 10 ]) [ 3 , 7 , 11 , 15 , 19 ] filter(function, iterable) def is_odd ( n ): return n % 2 == 1 newlist = filter ( is_odd , [ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 ]) print ( newlist ) [ 1 , 3 , 5 , 7 , 9 ] eval \u628a\u5b57\u7b26\u4e32\u7684\u5f15\u53f7\u53bb\u6389,\u91cc\u9762\u662f\u4ec0\u4e48\u7c7b\u578b\u5c31\u662f\u4ec0\u4e48\u7c7b\u578b,\u4e0d\u80fd\u653e\u5b57\u7b26\u4e32,\u9664\u975e\u5b57\u7b26\u4e32\u662f\u53d8\u91cf\u540d,\u4e0d\u80fd\u8bc6\u522bpython\u5173\u952e\u5b57 exec \u628a\u5b57\u7b26\u4e32\u7684\u5f15\u53f7\u53bb\u6389,\u540c\u65f6\u53ef\u4ee5\u8bc6\u522b\u63a5\u6536\u5185\u5bb9\u4e2d\u7684python\u5173\u952e\u5b57 globals \u5217\u51fa\u6240\u6709\u5168\u5c40\u53d8\u91cf \u8f93\u51fa\u5b57\u5178 locals \u5217\u51fa\u6240\u6709\u5f53\u524d\u4f4d\u7f6e\u53d8\u91cf \u8f93\u51fa\u5b57\u5178 reduce(function,sequence[,initial]) -> value \u5728py2\u4e2d\u5f0f\u5185\u7f6e\u51fd\u6570,py3\u4e2d\u79fb\u690d\u5230\u4e86functools\u6a21\u5757 reduce\u7684\u5de5\u4f5c\u8fc7\u7a0b\u662f \uff1a\u5728\u8fed\u4ee3sequence(tuple \uff0clist \uff0cdictionary\uff0c string\u7b49\u53ef\u8fed\u4ee3\u7269)\u7684\u8fc7\u7a0b\u4e2d\uff0c\u9996\u5148\u628a \u524d\u4e24\u4e2a\u5143\u7d20\u4f20\u7ed9 \u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\uff0c\u51fd\u6570\u52a0\u5de5\u540e\uff0c\u7136\u540e\u628a\u5f97\u5230\u7684\u7ed3\u679c\u548c\u7b2c\u4e09\u4e2a\u5143\u7d20\u4f5c\u4e3a\u4e24\u4e2a\u53c2\u6570\u4f20\u7ed9\u51fd\u6570\u53c2\u6570\uff0c \u51fd\u6570\u52a0\u5de5\u540e\u5f97\u5230\u7684\u7ed3\u679c\u53c8\u548c\u7b2c\u56db\u4e2a\u5143\u7d20\u4f5c\u4e3a\u4e24\u4e2a\u53c2\u6570\u4f20\u7ed9\u51fd\u6570\u53c2\u6570\uff0c\u4f9d\u6b21\u7c7b\u63a8\u3002 \u5982\u679c\u4f20\u5165\u4e86 initial \u503c\uff0c \u90a3\u4e48\u9996\u5148\u4f20\u7684\u5c31\u4e0d\u662f sequence \u7684\u7b2c\u4e00\u4e2a\u548c\u7b2c\u4e8c\u4e2a\u5143\u7d20\uff0c\u800c\u662f initial\u503c\u548c \u7b2c\u4e00\u4e2a\u5143\u7d20\u3002\u7ecf\u8fc7\u8fd9\u6837\u7684\u7d2f\u8ba1\u8ba1\u7b97\u4e4b\u540e\u5408\u5e76\u5e8f\u5217\u5230\u4e00\u4e2a\u5355\u4e00\u8fd4\u56de\u503c >>> from functools import reduce >>> reduce ( lambda x , y : x * 10 + y , [ 1 , 2 , 3 , 4 , 5 ]) >>> 12345 dir() dir() \u51fd\u6570\u4e0d\u5e26\u53c2\u6570\u65f6\uff0c\u8fd4\u56de\u5f53\u524d\u6a21\u5757\u5185\u7684\u53d8\u91cf\u3001\u65b9\u6cd5\u548c\u5b9a\u4e49\u7684\u7c7b\u578b\u5217\u8868\uff1b\u5e26\u53c2\u6570\u65f6\uff0c\u8fd4\u56de\u53c2\u6570\u7684\u5c5e\u6027\u3001\u65b9\u6cd5\u5217\u8868\u3002\u5982\u679c\u53c2\u6570\u5305\u542b\u65b9\u6cd5__dir__()\uff0c\u8be5\u65b9\u6cd5\u5c06\u88ab\u8c03\u7528\u3002\u5982\u679c\u53c2\u6570\u4e0d\u5305\u542b__dir__()\uff0c\u8be5\u65b9\u6cd5\u5c06\u6700\u5927\u9650\u5ea6\u5730\u6536\u96c6\u53c2\u6570\u4fe1\u606f\u3002 \u8fd4\u56de\u4e00\u4e2a\u5217\u8868","title":"\u5185\u5efa\u51fd\u6570buildinfunction"},{"location":"Python/%E5%87%BD%E6%95%B0/","text":"\u51fd\u6570 \u5206\u7c7b \u5b9a\u4e49 \u4f7f\u7528 \u53c2\u6570 \u5f62\u53c2 \u9ed8\u8ba4\u503c \u5f62\u53c2\u7684\u5206\u7c7b \u4f4d\u7f6e\u53c2\u6570 \u5173\u952e\u5b57\u53c2\u6570 keyword-only\u53c2\u6570(Python3\u5f15\u5165) \u53ef\u53d8\u53c2\u6570 \u6ce8\u610f \u5b9e\u53c2 \u51fd\u6570\u7684\u8fd4\u56de\u503c \u51fd\u6570\u7684\u5d4c\u5957 \u51fd\u6570\u7684\u4f5c\u7528\u57df \u53d8\u91cf\u540d\u7684\u89e3\u6790\u539f\u5219LEGB \u95ed\u5305 \u51fd\u6570\u7684\u9500\u6bc1 \u51fd\u6570\u7684\u6267\u884c\u6d41\u7a0b \u51fd\u6570\u6ce8\u89e3Function Annotations \u533f\u540d\u51fd\u6570 \u5b9a\u4e49\u51fd\u6570\u5c0f\u6280\u5de7 \u9ad8\u9636\u51fd\u6570 \u67ef\u91cc\u5316Currying \u51fd\u6570\u53c2\u6570\u8fd4\u56de\u503c\u6570\u636e\u7ed3\u6784 \u51fd\u6570 \u00b6 \u51fd\u6570\u662f\u4e00\u4e2a\u5177\u4f53\u529f\u80fd\u7684\u5b9e\u73b0 \u5206\u7c7b \u00b6 \u81ea\u5b9a\u4e49\u51fd\u6570 \u5185\u5efa\u51fd\u6570 \u5b9a\u4e49 \u00b6 def \u51fd\u6570\u540d ( \u53c2\u6570\u5217\u8868 ): \u51fd\u6570\u4f53 ( \u4ee3\u7801\u5757 ) [ return \u8fd4\u56de\u503c } \u4f7f\u7528 \u00b6 \u4f7f\u7528 \u51fd\u6570\u540d() \u6765\u8c03\u7528\u4e00\u4e2a\u51fd\u6570. \u53c2\u6570 \u00b6 \u51fd\u6570\u5728\u8c03\u7528\u7684\u65f6\u5019,\u4f1a\u4ece\u5916\u90e8\u4f20\u5165\u4e00\u4e9b\u53d8\u91cf,\u79f0\u4e4b\u4e3a\u53c2\u6570. \u51fd\u6570\u53ef\u4ee5\u4f5c\u4e3a\u51fd\u6570\u7684\u5f62\u53c2\u4ee5\u53ca\u5b9e\u53c2,\u4ee5\u6b64\u4e3a\u57fa\u7840\u51fa\u73b0\u4e86\u51fd\u6570\u5d4c\u5957\u548c\u88c5\u9970\u5668. \u5f62\u53c2 \u00b6 \u5b9a\u4e49\u51fd\u6570\u65f6,\u51fd\u6570\u540d\u540e\u9762\u7684\u62ec\u53f7\u4e2d\u7684\u53c2\u6570,\u79f0\u4e3a\u5f62\u5f0f\u53c2\u6570,\u7b80\u79f0\u5f62\u53c2. \u9ed8\u8ba4\u503c \u00b6 \u5b9a\u4e49\u51fd\u6570\u7684\u65f6\u5019\u7ed9\u5f62\u53c2\u4e00\u4e2a\u9ed8\u8ba4\u503c,\u5f53\u4f20\u53c2\u65f6\u6ca1\u6709\u7ed9\u5b9a\u5f62\u53c2\u5177\u4f53\u5b9e\u53c2,\u5219\u4f1a\u81ea\u52a8\u4f7f\u7528\u9ed8\u8ba4\u503c,\u53ef\u4ee5\u9632\u6b62\u51fd\u6570\u62a5\u9519. \u5f62\u53c2\u7684\u5206\u7c7b \u00b6 \u4f4d\u7f6e\u53c2\u6570 \u00b6 \u901a\u8fc7\u4f4d\u7f6e\u6765\u4f20\u9012\u7684\u53c2\u6570,\u6309\u7167\u5b9e\u53c2\u7684\u4f20\u5165\u987a\u5e8f\u6765\u5f97\u5230\u5177\u4f53\u7684\u503c. \u5173\u952e\u5b57\u53c2\u6570 \u00b6 \u901a\u8fc7\u5173\u952e\u5b57\u6765\u4f20\u9012,\u53ef\u4ee5\u4e0d\u6309\u987a\u5e8f\u4f20\u5165 keyword-only\u53c2\u6570(Python3\u5f15\u5165) \u00b6 \u5f53\u4e00\u4e2a\u5173\u952e\u5b57\u53c2\u6570\u540e\u53c8\u51fa\u73b0\u4e00\u4e2a\u4f4d\u7f6e\u53c2\u6570,\u8fd9\u4e2a\u4f4d\u7f6e\u53c2\u6570\u4f1a\u53d8\u6210keyword-only\u53c2\u6570, \u5f53keyword-only\u53c2\u6570\u51fa\u73b0\u65f6,\u4f20\u53c2\u9700\u4e25\u683c\u6309\u7167\u4f4d\u7f6e\u53ca\u5173\u952e\u5b57\u4f20\u53c2 \u5982\u679c\u5b9a\u4e49\u4e86keyword-only\u53c2\u6570,\u5219\u5fc5\u987b\u4f20\u53c2,\u5426\u5219\u62a5\u9519 \u4e0d\u5efa\u8bae\u4f7f\u7528 \u53ef\u53d8\u53c2\u6570 \u00b6 \u53ef\u53d8\u4f4d\u7f6e\u53c2\u6570 \u901a\u8fc7 *args \u6765\u63a5\u6536,\u53ef\u4ee5\u5339\u914d\u4efb\u610f\u591a\u4e2a\u4f4d\u7f6e\u53c2\u6570 \u53ef\u53d8\u5173\u952e\u5b57\u53c2\u6570 \u901a\u8fc7 **kwargs \u6765\u63a5\u6536,\u53ef\u4ee5\u5339\u914d\u4efb\u610f\u591a\u4e2a\u5173\u952e\u5b57\u53c2\u6570 \u6ce8\u610f \u00b6 \u5b9a\u4e49\u51fd\u6570\u65f6,\u4e3a\u4e86\u540e\u7eed\u4f7f\u7528,\u9664\u975e\u6781\u5176\u660e\u786e\u4f5c\u7528,\u5426\u5219\u5efa\u8bae\u4f7f\u7528\u9ed8\u8ba4\u503c \u5f62\u53c2\u4f7f\u7528\u5b97\u65e8,\u7b80\u5355\u7684\u5f80\u524d\u65b9,\u81f3\u4e8e\u4ec0\u4e48\u662f\u7b80\u5355\u7684,\u770b\u7740\u7b80\u5355\u7684\u5c31\u662f\u7b80\u5355\u7684. \u5b9e\u53c2 \u00b6 \u5728\u51fd\u6570\u8c03\u7528\u9636\u6bb5\u5b9e\u9645\u4f20\u5165\u7684\u53c2\u6570\u79f0\u4e4b\u4e3a\u5b9e\u53c2. \u51fd\u6570\u7684\u8fd4\u56de\u503c \u00b6 \u6240\u6709\u51fd\u6570\u90fd\u6709\u8fd4\u56de\u503c,\u6ca1\u5199\u9690\u5f0f\u8c03\u7528return None \u4e00\u4e2a\u51fd\u6570\u53ef\u4ee5\u5b58\u5728\u591a\u4e2areturn\u8bed\u53e5,\u4f46\u662f\u53ea\u6267\u884c\u7b2c\u4e00\u4e2a\u6267\u884c\u7684return. \u5982\u679c\u51fd\u6570\u6267\u884c\u4e86return\u8bed\u53e5,\u51fd\u6570\u5c31\u4f1a\u8fd4\u56de,\u5f53\u524d\u88ab\u6267\u884c\u7684return\u540e\u9762\u7684\u8bed\u53e5\u5c31\u4e0d\u4f1a\u88ab\u6267\u884c \u4f5c\u7528:\u7ed3\u675f\u51fd\u6570\u8c03\u7528,\u8fd4\u56de\u503c return[1,2,3] \u6307\u660e\u8fd4\u56de\u4e00\u4e2a\u5217\u8868 return 1,2,3 \u770b\u4f3c\u8fd4\u56de\u591a\u4e2a\u503c,\u5b9e\u5219\u88ab\u5c01\u88c5\u6210\u4e86\u4e00\u4e2a\u5143\u7ec4 fn._ default_ \u67e5\u770b\u7f3a\u7701\u503c fn._ doc_ \u8fd4\u56de\u51fd\u6570\u7684\u6ce8\u91ca\u8bf4\u660e \u51fd\u6570\u7684\u5d4c\u5957 \u00b6 \u9996\u5148\u8c03\u7528\u5185\u90e8\u5c40\u90e8\u4f5c\u7528\u57df\u7684\u503c,\u6ca1\u6709\u518d\u5411\u5916\u5c42\u5bfb\u627e\u53d8\u91cf\u540d \u5916\u5c42\u4f5c\u7528\u57df\u518d\u5185\u5c42\u4f5c\u7528\u57df\u53ef\u89c1 \u5185\u5c42\u4f5c\u7528\u57dfinner\u4e2d,\u5982\u679c\u5b9a\u4e49\u4e86o = 97 \u76f8\u5f53\u4e8e\u5f53\u524d\u4f5c\u7528\u57df\u4e2d\u91cd\u65b0\u5b9a\u4e49\u4e86\u4e00\u4e2a\u65b0\u7684\u53d8\u91cfo,\u4f46\u662f\u8fd9\u4e2ao\u5e76\u6ca1\u6709\u8986\u76d6\u5916\u5c42\u4f5c\u7528\u57dfouter\u4e2d\u7684o def outer2 (): # o = 65 def inner (): o = 97 print ( \"inner {}\" . format ( o )) print ( chr ( o )) print ( \"outer {}\" . format ( o )) inner () >>> outer 65 inner 97 a \u51fd\u6570\u7684\u4f5c\u7528\u57df \u00b6 \u4e00\u4e2a\u6807\u8bc6\u7b26\u7684\u53ef\u89c1\u8303\u56f4,\u5c31\u662f\u8fd9\u4e2a\u6807\u8bc6\u7b26\u7684\u4f5c\u7528\u57df. \u5168\u5c40\u4f5c\u7528\u57dfglobal \u5728\u6574\u4e2a\u8fd0\u884c\u73af\u5883\u4e2d\u90fd\u53ef\u4ee5\u8c03\u7528\u7684,(\u6700\u5916\u5c42) \u5185\u90e8\u4f5c\u7528\u57df\u53d8\u91cf\u4f7f\u7528global\u5c06\u51fd\u6570\u5185\u90e8\u7684x\u58f0\u660e\u4e3a\u4f7f\u7528\u5916\u90e8\u7684\u5168\u5c40\u4f5c\u7528\u57df\u4e2d\u5b9a\u4e49\u7684x(\u5916\u90e8\u53ef\u8c03\u7528) x = 5 def foo (): global x x += 1 \u4e0d\u5efa\u8bae\u4f7f\u7528global ,\u8bf7\u4f7f\u7528\u53c2\u6570\u7684\u5f62\u53c2\u4f20\u53c2\u89e3\u51b3 \u5c40\u90e8\u4f5c\u7528\u57df;local \u5c40\u90e8\u4f5c\u7528\u57df\u4e2d\u7684\u53d8\u91cf\u53eb\u672c\u5730\u53d8\u91cf, \u5728\u51fd\u6570,\u7c7b\u7b49\u5185\u90e8\u53ef\u89c1 \u5c40\u90e8\u53d8\u91cf\u4f7f\u7528\u8303\u56f4\u4e0d\u80fd\u5531\u8fc7\u5176\u6240\u5728\u7684\u5c40\u90e8\u4f5c\u7528\u57df \u53d8\u91cf\u540d\u7684\u89e3\u6790\u539f\u5219LEGB \u00b6 \u95ed\u5305 \u00b6 \u81ea\u7531\u53d8\u91cf:\u56f4\u5728 \u672c\u5730\u4f5c\u7528\u57df\u4e2d\u5b9a\u4e49\u7684\u53d8\u91cf.\u4f8b\u5982\u5b9a\u4e49\u5728\u5185\u5c42\u51fd\u6570\u5916\u7684\u5916\u5c42\u51fd\u6570\u7684\u4f5c\u7528\u57df\u4e2d\u7684\u53d8\u91cf \u95ed\u5305:\u51fa\u73b0\u5728\u5d4c\u5957\u51fd\u6570\u4e2d,\u6307\u7684\u662f\u5185\u5c42\u51fd\u6570\u5f15\u7528\u5230\u4e86\u5916\u5c42\u51fd\u6570\u7684\u81ea\u7531\u53d8\u91cf,\u5bf9\u5185\u5c42\u51fd\u6570\u6765\u8bf4,\u5c31\u5f62\u6210\u4e86\u95ed\u5305 \u5916\u51fd\u6570\u4e2d\u5b9a\u4e49\u4e86\u4e00\u4e2a\u5185\u51fd\u6570 \u5185\u51fd\u6570\u91cc\u8fd0\u7528 \u4e86\u5916\u51fd\u6570\u7684\u4e34\u65f6\u53d8\u91cf \u5916\u51fd\u6570\u7684\u8fd4\u56de\u503c\u662f\u5185\u51fd\u6570\u7684\u5f15\u7528 \u4e00\u822c\u60c5\u51b5\u4e0b,\u5982\u679c\u4e00\u4e2a\u51fd\u6570\u7ed3\u675f,\u51fd\u6570\u7684\u5185\u90e8\u6240\u6709\u4e1c\u897f\u90fd\u4f1a\u88ab\u91ca\u653e\u6389,\u8fd8\u7ed9\u5185\u5b58,\u5c40\u90e8\u53d8\u91cf\u90fd\u4f1a\u6d88\u5931.\u4f46\u662f\u95ed\u5305\u662f\u4e00\u79cd\u7279\u6b8a\u60c5\u51b5,\u5982\u679c\u5916\u51fd\u6570\u5728\u7ed3\u675f\u65f6\u5019\u53d1\u73b0\u81ea\u5df1\u7684\u4e34\u65f6\u53d8\u91cf\u5c06\u6765\u4f1a\u5728\u5185\u90e8\u51fd\u6570\u4e2d\u7528\u5230,\u5c31\u628a\u8fd9\u4e2a\u4e34\u65f6\u53d8\u91cf\u7ed1\u5b9a\u7ed9\u5185\u90e8\u51fd\u6570,\u7136\u540e\u81ea\u5df1\u518d\u7ed3\u675f . \u53ef\u4ee5\u4f7f\u7528nonlocal \u5173\u952e\u5b57\u5c06\u53d8\u91cf\u6807\u8bb0\u5728\u4e0a\u7ea7\u7684\u5c40\u90e8\u4f5c\u7528\u57df\u4e2d\u5b9a\u4e49,\u4f46\u662f**nonlocal**\u7684\u4e0a\u4e00\u5c42\u4e0d\u80fd\u4e3a\u5168\u5c40\u4f5c\u7528\u57df. \u7b80\u5355\u6765\u8bf4\u5c31\u662f\u5185\u5c42\u51fd\u6570\u4f7f\u7528\u4e86\u5916\u5c42\u51fd\u4f5c\u7528\u57df\u4e2d\u7684\u53d8\u91cf. \u51fd\u6570\u7684\u9500\u6bc1 \u00b6 \u5168\u5c40\u51fd\u6570\u9500\u6bc1 \u91cd\u65b0\u8986\u76d6\u4e00\u4e2a\u540c\u540d\u51fd\u6570 del\u8bed\u53e5\u5220\u9664\u51fd\u6570\u5bf9\u8c61 \u7a0b\u5e8f\u7ed3\u675f\u65f6 \u5c40\u90e8\u51fd\u6570\u9500\u6bc1(\u51fd\u6570\u5185\u90e8) \u91cd\u65b0\u5728\u4e0a\u7ea7\u4f5c\u7528\u57df\u5185\u5b9a\u4e49\u540c\u540d\u51fd\u6570 del\u8bed\u53e5\u5220\u9664\u51fd\u6570\u5bf9\u8c61 \u4e0a\u7ea7\u4f5c\u7528\u57df\u9500\u6bc1\u65f6 \u51fd\u6570\u7684\u6267\u884c\u6d41\u7a0b \u00b6 \u8c03\u7528\u51fd\u6570,\u51fd\u6570\u538b\u6808,\u53c2\u6570\u538b\u6808,\u521b\u5efa\u6808\u5e27(frames),\u6267\u884c,\u5f39\u51fa \u4e3e\u4f8b def foo1 ( b , b1 = 3 ): print ( \"foo1 called\" , b , b1 ) def foo2 ( c ): foo3 ( c ) print ( \"foo2 called\" , c ) def foo3 ( d ): print ( \"foo3 called\" , d ) def main (): print ( \"main called\" ) foo1 ( 100 , 101 ) foo2 ( 200 ) print ( \"main ending\" ) main () ------------------------------------------------------------ \u4e0a\u9762 main\u51fd\u6570\u8c03\u7528\u6267\u884c\u7684\u6d41\u7a0b\u5982\u4e0b \uff1a \u5168\u5c40\u5e27\u4e2d\u751f\u6210 foo1 , foo2 , foo3 , main\u51fd\u6570\u5bf9\u8c61 0 \uff0e main\u51fd\u6570\u8c03\u7528 1 \uff0e main\u4e2d\u67e5\u627e\u5185\u5efa\u51fd\u6570print\u538b\u6808 \uff0c\u5c06\u5e38\u91cf\u5b57\u7b26\u4e32\u538b\u6808\uff0c\u8c03\u7528\u51fd\u6570\u5f39\u51fa\u6808\u9876\uff0e 2 \uff0e main\u4e2d\u5168\u5c40\u67e5\u627e\u51fd\u6570foo1\u538b\u6808 \uff0c\u5c06\u5e38\u91cf 100 , 101 \u538b\u6808\uff0c\u8c03\u7528\u51fd\u6570 foo1 \uff0c\u521b\u5efa\u6808\u5e27\uff0c print\u51fd\u6570\u538b\u6808 \uff0c\u5b57\u7b26\u4e32\u548c\u53d8\u91cf b , b1\u538b\u6808 \uff0c\u8c03\u7528\u51fd\u6570\uff0c\u5f39\u51fa\u6808\u9876\uff0c\u8fd4\u56de\u503c\uff0e 3 \uff0e main\u4e2d\u5168\u5c40\u67e5\u627efoo2\u51fd\u6570\u538b\u6808 \uff0c\u5c06\u5e38\u91cf 200 \u538b\u6808\uff0c\u8c03\u7528 foo2 \uff0c\u521b\u5efa\u6808\u5e27\uff0c foo3\u51fd\u6570\u538b\u6808 \uff0c\u53d8\u91cf c\u5f15\u7528\u538b\u6808 \uff0c\u8c03\u7528 foo3 \uff0c\u521b\u5efa\u6808\u5e27\uff0c foo3\u5b8c\u6210print\u51fd\u6570\u8c03\u7528\u540e\u8fd4\u56de \uff0c foo2\u6062\u590d\u8c03\u7528 \uff0c\u6267\u884c print\u540e \uff0c\u8fd4\u56de\u503c\uff0e main\u4e2dfoo2\u8c03\u7528\u7ed3\u675f\u5f39\u51fa\u6808\u9876 4. main\u51fd\u6570\u7ee7\u7eed\u6267\u884cprint\u51fd\u6570\u8c03\u7528 , \u5f39\u51fa\u6808\u9876 , main\u51fd\u6570\u8fd4\u56de \u603b\u7ed3 : \u51fd\u6570\u8c03\u7528\u2014\u5168\u5c40\u67e5\u627e\u51fd\u6570\u2014\u51fd\u6570\u538b\u6808\u2014\u5e38\u91cf\u5b57\u7b26\u4e32\u538b\u6808\u2014\u521b\u5efa\u6808\u5e27\u2014\u6267\u884c\u51fd\u6570\u4f53\u2014\u8fd4\u56de\u6267\u884c\u7ed3\u679c\u2013\u51fd\u6570\u51fa\u6808 \u51fd\u6570\u6ce8\u89e3Function Annotations \u00b6 def add ( x : int , y : int ) -> int : \u9700\u8981\u5bfc\u5165\u6a21\u5757, import functools \u51fd\u6570\u6ce8\u89e3\u7684\u4fe1\u606f, \u5185\u5bb9\u4fdd\u5b58\u5728__annotations__\u5c5e\u6027\u4e2d \u7528\u4e8e\u89e3\u91ca\u53c2\u6570\u53ca\u8fd4\u56de\u503c\u7684\u6570\u636e\u7c7b\u578b \u53ea\u8d77\u89e3\u91ca\u6807\u8bc6\u79df\u7528,\u5982\u679c\u5b9e\u53c2\u4e0e\u5f62\u53c2\u6ce8\u89e3\u6570\u636e\u7c7b\u578b\u4e0d\u4e00\u81f4,\u4e0d\u4f1a\u62a5\u9519 \u533f\u540d\u51fd\u6570 \u00b6 \u683c\u5f0f lambda \u53c2\u6570\u5217\u8868:\u8868\u8fbe\u5f0f \u8868\u8fbe\u5f0f\u76f8\u5f53\u4e8e\u8fd4\u56de\u503c lambda x: x ** 2 foo = lambda x,y : (x+ y)**2 #\u4e0d\u63a8\u8350\u4f7f\u7528 \u8c03\u7528 (lambda x : x **2) (4) \u5e38\u4e0e\u5185\u5efa\u51fd\u6570zip,map,filter\u7b49\u8fde\u7528 \u5b9a\u4e49\u51fd\u6570\u5c0f\u6280\u5de7 \u00b6 1.\u4f7f\u7528\u5f71\u5b50\u62f7\u8d1d\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5bf9\u8c61,\u6c38\u8fdc\u4e0d\u80fd\u6539\u53d8\u4f20\u5165\u7684\u53c2\u6570,\u76f8\u5f53\u4e8e\u5efa\u7acb\u4e86\u4e00\u4e2a\u526f\u672c def foo ( xyz = [], u = 'abc' , z = 123 ): xyz = xyz [:] # \u5f71\u5b50\u62f7\u8d1d xyz . append ( 1 ) print ( xyz ) foo () print ( foo . __defaults__ ) foo () print ( foo . __defaults__ ) foo ([ 10 ]) print ( foo . __defaults__ ) foo ([ 10 , 5 ]) print ( foo . __defaults__ ) [ 1 ] ([], 'abc' , 123 ) [ 1 ] ([], 'abc' , 123 ) [ 10 , 1 ] ([], 'abc' , 123 ) [ 10 , 5 , 1 ] ([], 'abc' , 123 ) 2.\u901a\u8fc7\u503c\u7684\u5224\u65ad\u7075\u6d3b\u9009\u62e9\u521b\u5efa\u6216\u8005\u4fee\u6539\u4f20\u5165\u5bf9\u8c61, \u5e94\u7528\u5e7f\u6cdb def foo ( xyz = None , u = 'abc' , z = 123 ): if xyz is None : xyz = [] xyz . append ( 1 ) print ( xyz ) foo () print ( foo . __defaults__ ) foo () print ( foo . __defaults__ ) foo ([ 10 ]) print ( foo . __defaults__ ) foo ([ 10 , 5 ]) print ( foo . __defaults__ ) [ 1 ] ( None , 'abc' , 123 ) [ 1 ] ( None , 'abc' , 123 ) [ 10 , 1 ] ( None , 'abc' , 123 ) [ 10 , 5 , 1 ] ( None , 'abc' , 123 ) \u9ad8\u9636\u51fd\u6570 \u00b6 \u9ad8\u9636\u51fd\u6570\u81f3\u5c11\u6ee1\u8db3\u4e0b\u9762\u4e00\u4e2a\u6761\u4ef6\u7684\u51fd\u6570 \u63a5\u53d7\u4e00\u4e2a\u6216\u591a\u4e2a\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570 \u8f93\u51fa\u4e00\u4e2a\u51fd\u6570 \u5185\u5efa\u9ad8\u9636\u51fd\u6570 sorted(iterable[,key][,reverse]) \u6392\u5e8f \u8fd4\u56de\u4e00\u4e2a\u65b0\u5217\u8868,\u5bf9\u4e00\u4e2a\u53ef\u8fed\u4ee3\u5bf9\u8c61\u6240\u6709\u5143\u7d20\u6392\u5e8f,\u6392\u5e8f\u89c4\u5219\u4e3akey\u5b9a\u4e49\u51fd\u6570,reverse\u8868\u793a\u662f\u5426\u53cd\u8f6c,\u9ed8\u8ba4\u5347\u5e8f list.sort()\u5c31\u5730\u4fee\u6539,sorted()\u8fd4\u56de\u65b0\u5217\u8868 filter(function,iterable) \u8fc7\u6ee4 \u8fc7\u6ee4\u53ef\u8fed\u4ee3\u5bf9\u8c61\u7684\u5143\u7d20,\u8fd4\u56de\u4e00\u4e2a==\u8fed\u4ee3\u5668,== function\u4e00\u4e2a\u5177\u6709\u4e00\u4e2a\u53c2\u6570\u7684\u51fd\u6570,\u8fd4\u56debool >>> list ( filter ( lambda x : x % 3 == 0 , [ 1 , 9 , 55 , 150 , - 3 , 78 , 28 , 123 ])) >>> [ 9 , 150 , - 3 , 78 , 123 ] map(function,*iterables) \u6620\u5c04 \u8fd4\u56de map object \u5bf9\u591a\u4e2a\u53ef\u8fed\u4ee3\u5bf9\u8c61\u7684\u5143\u7d20\u6309\u7167\u6307\u5b9a\u51fd\u6570\u6620\u5c04,\u8fd4\u56de\u4e00\u4e2a\u8fed\u4ee3\u5668 >>> list ( map ( lambda x : 2 * x + 1 , range ( 5 ))) >>> [ 1 , 3 , 5 , 7 , 9 ] >>> dict ( map ( lambda x : ( x % 5 , x ) , range ( 500 ))) >>> { 0 : 495 , 1 : 496 , 2 : 497 , 3 : 498 , 4 : 499 } \u67ef\u91cc\u5316Currying \u00b6 \u67ef\u91cc\u5316:\u6307\u5c06\u539f\u6765\u63a5\u53d7\u4e24\u4e2a\u53c2\u6570\u7684\u51fd\u6570\u53d8\u6210\u65b0\u7684\u4e00\u4e2a\u63a5\u53d7\u4e00\u4e2a\u53c2\u6570\u7684\u51fd\u6570\u7684\u8fc7\u7a0b .\u65b0\u7684\u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u4ee5\u539f\u6709\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e3a\u53c2\u6570\u7684\u51fd\u6570 z = f(x,y) \u2192 z = f(x)(y) \u51fd\u6570\u53c2\u6570\u8fd4\u56de\u503c\u6570\u636e\u7ed3\u6784 \u00b6 from typing import List , Tuple , Dict def add ( a : int , string : str , f : float , b : bool ) -> Tuple [ List , Tuple , Dict , bool ]: list1 = list ( range ( a )) tup = ( string , string , string ) d = { \"a\" : f } bl = b return list1 , tup , d , bl print ( add ( 5 , \"hhhh\" , 2.3 , False )) # \u7ed3\u679c\uff1a([0, 1, 2, 3, 4], ('hhhh', 'hhhh', 'hhhh'), {'a': 2.3}, False)","title":"\u51fd\u6570"},{"location":"Python/%E5%87%BD%E6%95%B0/#_1","text":"\u51fd\u6570\u662f\u4e00\u4e2a\u5177\u4f53\u529f\u80fd\u7684\u5b9e\u73b0","title":"\u51fd\u6570"},{"location":"Python/%E5%87%BD%E6%95%B0/#_2","text":"\u81ea\u5b9a\u4e49\u51fd\u6570 \u5185\u5efa\u51fd\u6570","title":"\u5206\u7c7b"},{"location":"Python/%E5%87%BD%E6%95%B0/#_3","text":"def \u51fd\u6570\u540d ( \u53c2\u6570\u5217\u8868 ): \u51fd\u6570\u4f53 ( \u4ee3\u7801\u5757 ) [ return \u8fd4\u56de\u503c }","title":"\u5b9a\u4e49"},{"location":"Python/%E5%87%BD%E6%95%B0/#_4","text":"\u4f7f\u7528 \u51fd\u6570\u540d() \u6765\u8c03\u7528\u4e00\u4e2a\u51fd\u6570.","title":"\u4f7f\u7528"},{"location":"Python/%E5%87%BD%E6%95%B0/#_5","text":"\u51fd\u6570\u5728\u8c03\u7528\u7684\u65f6\u5019,\u4f1a\u4ece\u5916\u90e8\u4f20\u5165\u4e00\u4e9b\u53d8\u91cf,\u79f0\u4e4b\u4e3a\u53c2\u6570. \u51fd\u6570\u53ef\u4ee5\u4f5c\u4e3a\u51fd\u6570\u7684\u5f62\u53c2\u4ee5\u53ca\u5b9e\u53c2,\u4ee5\u6b64\u4e3a\u57fa\u7840\u51fa\u73b0\u4e86\u51fd\u6570\u5d4c\u5957\u548c\u88c5\u9970\u5668.","title":"\u53c2\u6570"},{"location":"Python/%E5%87%BD%E6%95%B0/#_6","text":"\u5b9a\u4e49\u51fd\u6570\u65f6,\u51fd\u6570\u540d\u540e\u9762\u7684\u62ec\u53f7\u4e2d\u7684\u53c2\u6570,\u79f0\u4e3a\u5f62\u5f0f\u53c2\u6570,\u7b80\u79f0\u5f62\u53c2.","title":"\u5f62\u53c2"},{"location":"Python/%E5%87%BD%E6%95%B0/#_7","text":"\u5b9a\u4e49\u51fd\u6570\u7684\u65f6\u5019\u7ed9\u5f62\u53c2\u4e00\u4e2a\u9ed8\u8ba4\u503c,\u5f53\u4f20\u53c2\u65f6\u6ca1\u6709\u7ed9\u5b9a\u5f62\u53c2\u5177\u4f53\u5b9e\u53c2,\u5219\u4f1a\u81ea\u52a8\u4f7f\u7528\u9ed8\u8ba4\u503c,\u53ef\u4ee5\u9632\u6b62\u51fd\u6570\u62a5\u9519.","title":"\u9ed8\u8ba4\u503c"},{"location":"Python/%E5%87%BD%E6%95%B0/#_8","text":"","title":"\u5f62\u53c2\u7684\u5206\u7c7b"},{"location":"Python/%E5%87%BD%E6%95%B0/#_9","text":"\u901a\u8fc7\u4f4d\u7f6e\u6765\u4f20\u9012\u7684\u53c2\u6570,\u6309\u7167\u5b9e\u53c2\u7684\u4f20\u5165\u987a\u5e8f\u6765\u5f97\u5230\u5177\u4f53\u7684\u503c.","title":"\u4f4d\u7f6e\u53c2\u6570"},{"location":"Python/%E5%87%BD%E6%95%B0/#_10","text":"\u901a\u8fc7\u5173\u952e\u5b57\u6765\u4f20\u9012,\u53ef\u4ee5\u4e0d\u6309\u987a\u5e8f\u4f20\u5165","title":"\u5173\u952e\u5b57\u53c2\u6570"},{"location":"Python/%E5%87%BD%E6%95%B0/#keyword-onlypython3","text":"\u5f53\u4e00\u4e2a\u5173\u952e\u5b57\u53c2\u6570\u540e\u53c8\u51fa\u73b0\u4e00\u4e2a\u4f4d\u7f6e\u53c2\u6570,\u8fd9\u4e2a\u4f4d\u7f6e\u53c2\u6570\u4f1a\u53d8\u6210keyword-only\u53c2\u6570, \u5f53keyword-only\u53c2\u6570\u51fa\u73b0\u65f6,\u4f20\u53c2\u9700\u4e25\u683c\u6309\u7167\u4f4d\u7f6e\u53ca\u5173\u952e\u5b57\u4f20\u53c2 \u5982\u679c\u5b9a\u4e49\u4e86keyword-only\u53c2\u6570,\u5219\u5fc5\u987b\u4f20\u53c2,\u5426\u5219\u62a5\u9519 \u4e0d\u5efa\u8bae\u4f7f\u7528","title":"keyword-only\u53c2\u6570(Python3\u5f15\u5165)"},{"location":"Python/%E5%87%BD%E6%95%B0/#_11","text":"\u53ef\u53d8\u4f4d\u7f6e\u53c2\u6570 \u901a\u8fc7 *args \u6765\u63a5\u6536,\u53ef\u4ee5\u5339\u914d\u4efb\u610f\u591a\u4e2a\u4f4d\u7f6e\u53c2\u6570 \u53ef\u53d8\u5173\u952e\u5b57\u53c2\u6570 \u901a\u8fc7 **kwargs \u6765\u63a5\u6536,\u53ef\u4ee5\u5339\u914d\u4efb\u610f\u591a\u4e2a\u5173\u952e\u5b57\u53c2\u6570","title":"\u53ef\u53d8\u53c2\u6570"},{"location":"Python/%E5%87%BD%E6%95%B0/#_12","text":"\u5b9a\u4e49\u51fd\u6570\u65f6,\u4e3a\u4e86\u540e\u7eed\u4f7f\u7528,\u9664\u975e\u6781\u5176\u660e\u786e\u4f5c\u7528,\u5426\u5219\u5efa\u8bae\u4f7f\u7528\u9ed8\u8ba4\u503c \u5f62\u53c2\u4f7f\u7528\u5b97\u65e8,\u7b80\u5355\u7684\u5f80\u524d\u65b9,\u81f3\u4e8e\u4ec0\u4e48\u662f\u7b80\u5355\u7684,\u770b\u7740\u7b80\u5355\u7684\u5c31\u662f\u7b80\u5355\u7684.","title":"\u6ce8\u610f"},{"location":"Python/%E5%87%BD%E6%95%B0/#_13","text":"\u5728\u51fd\u6570\u8c03\u7528\u9636\u6bb5\u5b9e\u9645\u4f20\u5165\u7684\u53c2\u6570\u79f0\u4e4b\u4e3a\u5b9e\u53c2.","title":"\u5b9e\u53c2"},{"location":"Python/%E5%87%BD%E6%95%B0/#_14","text":"\u6240\u6709\u51fd\u6570\u90fd\u6709\u8fd4\u56de\u503c,\u6ca1\u5199\u9690\u5f0f\u8c03\u7528return None \u4e00\u4e2a\u51fd\u6570\u53ef\u4ee5\u5b58\u5728\u591a\u4e2areturn\u8bed\u53e5,\u4f46\u662f\u53ea\u6267\u884c\u7b2c\u4e00\u4e2a\u6267\u884c\u7684return. \u5982\u679c\u51fd\u6570\u6267\u884c\u4e86return\u8bed\u53e5,\u51fd\u6570\u5c31\u4f1a\u8fd4\u56de,\u5f53\u524d\u88ab\u6267\u884c\u7684return\u540e\u9762\u7684\u8bed\u53e5\u5c31\u4e0d\u4f1a\u88ab\u6267\u884c \u4f5c\u7528:\u7ed3\u675f\u51fd\u6570\u8c03\u7528,\u8fd4\u56de\u503c return[1,2,3] \u6307\u660e\u8fd4\u56de\u4e00\u4e2a\u5217\u8868 return 1,2,3 \u770b\u4f3c\u8fd4\u56de\u591a\u4e2a\u503c,\u5b9e\u5219\u88ab\u5c01\u88c5\u6210\u4e86\u4e00\u4e2a\u5143\u7ec4 fn._ default_ \u67e5\u770b\u7f3a\u7701\u503c fn._ doc_ \u8fd4\u56de\u51fd\u6570\u7684\u6ce8\u91ca\u8bf4\u660e","title":"\u51fd\u6570\u7684\u8fd4\u56de\u503c"},{"location":"Python/%E5%87%BD%E6%95%B0/#_15","text":"\u9996\u5148\u8c03\u7528\u5185\u90e8\u5c40\u90e8\u4f5c\u7528\u57df\u7684\u503c,\u6ca1\u6709\u518d\u5411\u5916\u5c42\u5bfb\u627e\u53d8\u91cf\u540d \u5916\u5c42\u4f5c\u7528\u57df\u518d\u5185\u5c42\u4f5c\u7528\u57df\u53ef\u89c1 \u5185\u5c42\u4f5c\u7528\u57dfinner\u4e2d,\u5982\u679c\u5b9a\u4e49\u4e86o = 97 \u76f8\u5f53\u4e8e\u5f53\u524d\u4f5c\u7528\u57df\u4e2d\u91cd\u65b0\u5b9a\u4e49\u4e86\u4e00\u4e2a\u65b0\u7684\u53d8\u91cfo,\u4f46\u662f\u8fd9\u4e2ao\u5e76\u6ca1\u6709\u8986\u76d6\u5916\u5c42\u4f5c\u7528\u57dfouter\u4e2d\u7684o def outer2 (): # o = 65 def inner (): o = 97 print ( \"inner {}\" . format ( o )) print ( chr ( o )) print ( \"outer {}\" . format ( o )) inner () >>> outer 65 inner 97 a","title":"\u51fd\u6570\u7684\u5d4c\u5957"},{"location":"Python/%E5%87%BD%E6%95%B0/#_16","text":"\u4e00\u4e2a\u6807\u8bc6\u7b26\u7684\u53ef\u89c1\u8303\u56f4,\u5c31\u662f\u8fd9\u4e2a\u6807\u8bc6\u7b26\u7684\u4f5c\u7528\u57df. \u5168\u5c40\u4f5c\u7528\u57dfglobal \u5728\u6574\u4e2a\u8fd0\u884c\u73af\u5883\u4e2d\u90fd\u53ef\u4ee5\u8c03\u7528\u7684,(\u6700\u5916\u5c42) \u5185\u90e8\u4f5c\u7528\u57df\u53d8\u91cf\u4f7f\u7528global\u5c06\u51fd\u6570\u5185\u90e8\u7684x\u58f0\u660e\u4e3a\u4f7f\u7528\u5916\u90e8\u7684\u5168\u5c40\u4f5c\u7528\u57df\u4e2d\u5b9a\u4e49\u7684x(\u5916\u90e8\u53ef\u8c03\u7528) x = 5 def foo (): global x x += 1 \u4e0d\u5efa\u8bae\u4f7f\u7528global ,\u8bf7\u4f7f\u7528\u53c2\u6570\u7684\u5f62\u53c2\u4f20\u53c2\u89e3\u51b3 \u5c40\u90e8\u4f5c\u7528\u57df;local \u5c40\u90e8\u4f5c\u7528\u57df\u4e2d\u7684\u53d8\u91cf\u53eb\u672c\u5730\u53d8\u91cf, \u5728\u51fd\u6570,\u7c7b\u7b49\u5185\u90e8\u53ef\u89c1 \u5c40\u90e8\u53d8\u91cf\u4f7f\u7528\u8303\u56f4\u4e0d\u80fd\u5531\u8fc7\u5176\u6240\u5728\u7684\u5c40\u90e8\u4f5c\u7528\u57df","title":"\u51fd\u6570\u7684\u4f5c\u7528\u57df"},{"location":"Python/%E5%87%BD%E6%95%B0/#legb","text":"","title":"\u53d8\u91cf\u540d\u7684\u89e3\u6790\u539f\u5219LEGB"},{"location":"Python/%E5%87%BD%E6%95%B0/#_17","text":"\u81ea\u7531\u53d8\u91cf:\u56f4\u5728 \u672c\u5730\u4f5c\u7528\u57df\u4e2d\u5b9a\u4e49\u7684\u53d8\u91cf.\u4f8b\u5982\u5b9a\u4e49\u5728\u5185\u5c42\u51fd\u6570\u5916\u7684\u5916\u5c42\u51fd\u6570\u7684\u4f5c\u7528\u57df\u4e2d\u7684\u53d8\u91cf \u95ed\u5305:\u51fa\u73b0\u5728\u5d4c\u5957\u51fd\u6570\u4e2d,\u6307\u7684\u662f\u5185\u5c42\u51fd\u6570\u5f15\u7528\u5230\u4e86\u5916\u5c42\u51fd\u6570\u7684\u81ea\u7531\u53d8\u91cf,\u5bf9\u5185\u5c42\u51fd\u6570\u6765\u8bf4,\u5c31\u5f62\u6210\u4e86\u95ed\u5305 \u5916\u51fd\u6570\u4e2d\u5b9a\u4e49\u4e86\u4e00\u4e2a\u5185\u51fd\u6570 \u5185\u51fd\u6570\u91cc\u8fd0\u7528 \u4e86\u5916\u51fd\u6570\u7684\u4e34\u65f6\u53d8\u91cf \u5916\u51fd\u6570\u7684\u8fd4\u56de\u503c\u662f\u5185\u51fd\u6570\u7684\u5f15\u7528 \u4e00\u822c\u60c5\u51b5\u4e0b,\u5982\u679c\u4e00\u4e2a\u51fd\u6570\u7ed3\u675f,\u51fd\u6570\u7684\u5185\u90e8\u6240\u6709\u4e1c\u897f\u90fd\u4f1a\u88ab\u91ca\u653e\u6389,\u8fd8\u7ed9\u5185\u5b58,\u5c40\u90e8\u53d8\u91cf\u90fd\u4f1a\u6d88\u5931.\u4f46\u662f\u95ed\u5305\u662f\u4e00\u79cd\u7279\u6b8a\u60c5\u51b5,\u5982\u679c\u5916\u51fd\u6570\u5728\u7ed3\u675f\u65f6\u5019\u53d1\u73b0\u81ea\u5df1\u7684\u4e34\u65f6\u53d8\u91cf\u5c06\u6765\u4f1a\u5728\u5185\u90e8\u51fd\u6570\u4e2d\u7528\u5230,\u5c31\u628a\u8fd9\u4e2a\u4e34\u65f6\u53d8\u91cf\u7ed1\u5b9a\u7ed9\u5185\u90e8\u51fd\u6570,\u7136\u540e\u81ea\u5df1\u518d\u7ed3\u675f . \u53ef\u4ee5\u4f7f\u7528nonlocal \u5173\u952e\u5b57\u5c06\u53d8\u91cf\u6807\u8bb0\u5728\u4e0a\u7ea7\u7684\u5c40\u90e8\u4f5c\u7528\u57df\u4e2d\u5b9a\u4e49,\u4f46\u662f**nonlocal**\u7684\u4e0a\u4e00\u5c42\u4e0d\u80fd\u4e3a\u5168\u5c40\u4f5c\u7528\u57df. \u7b80\u5355\u6765\u8bf4\u5c31\u662f\u5185\u5c42\u51fd\u6570\u4f7f\u7528\u4e86\u5916\u5c42\u51fd\u4f5c\u7528\u57df\u4e2d\u7684\u53d8\u91cf.","title":"\u95ed\u5305"},{"location":"Python/%E5%87%BD%E6%95%B0/#_18","text":"\u5168\u5c40\u51fd\u6570\u9500\u6bc1 \u91cd\u65b0\u8986\u76d6\u4e00\u4e2a\u540c\u540d\u51fd\u6570 del\u8bed\u53e5\u5220\u9664\u51fd\u6570\u5bf9\u8c61 \u7a0b\u5e8f\u7ed3\u675f\u65f6 \u5c40\u90e8\u51fd\u6570\u9500\u6bc1(\u51fd\u6570\u5185\u90e8) \u91cd\u65b0\u5728\u4e0a\u7ea7\u4f5c\u7528\u57df\u5185\u5b9a\u4e49\u540c\u540d\u51fd\u6570 del\u8bed\u53e5\u5220\u9664\u51fd\u6570\u5bf9\u8c61 \u4e0a\u7ea7\u4f5c\u7528\u57df\u9500\u6bc1\u65f6","title":"\u51fd\u6570\u7684\u9500\u6bc1"},{"location":"Python/%E5%87%BD%E6%95%B0/#_19","text":"\u8c03\u7528\u51fd\u6570,\u51fd\u6570\u538b\u6808,\u53c2\u6570\u538b\u6808,\u521b\u5efa\u6808\u5e27(frames),\u6267\u884c,\u5f39\u51fa \u4e3e\u4f8b def foo1 ( b , b1 = 3 ): print ( \"foo1 called\" , b , b1 ) def foo2 ( c ): foo3 ( c ) print ( \"foo2 called\" , c ) def foo3 ( d ): print ( \"foo3 called\" , d ) def main (): print ( \"main called\" ) foo1 ( 100 , 101 ) foo2 ( 200 ) print ( \"main ending\" ) main () ------------------------------------------------------------ \u4e0a\u9762 main\u51fd\u6570\u8c03\u7528\u6267\u884c\u7684\u6d41\u7a0b\u5982\u4e0b \uff1a \u5168\u5c40\u5e27\u4e2d\u751f\u6210 foo1 , foo2 , foo3 , main\u51fd\u6570\u5bf9\u8c61 0 \uff0e main\u51fd\u6570\u8c03\u7528 1 \uff0e main\u4e2d\u67e5\u627e\u5185\u5efa\u51fd\u6570print\u538b\u6808 \uff0c\u5c06\u5e38\u91cf\u5b57\u7b26\u4e32\u538b\u6808\uff0c\u8c03\u7528\u51fd\u6570\u5f39\u51fa\u6808\u9876\uff0e 2 \uff0e main\u4e2d\u5168\u5c40\u67e5\u627e\u51fd\u6570foo1\u538b\u6808 \uff0c\u5c06\u5e38\u91cf 100 , 101 \u538b\u6808\uff0c\u8c03\u7528\u51fd\u6570 foo1 \uff0c\u521b\u5efa\u6808\u5e27\uff0c print\u51fd\u6570\u538b\u6808 \uff0c\u5b57\u7b26\u4e32\u548c\u53d8\u91cf b , b1\u538b\u6808 \uff0c\u8c03\u7528\u51fd\u6570\uff0c\u5f39\u51fa\u6808\u9876\uff0c\u8fd4\u56de\u503c\uff0e 3 \uff0e main\u4e2d\u5168\u5c40\u67e5\u627efoo2\u51fd\u6570\u538b\u6808 \uff0c\u5c06\u5e38\u91cf 200 \u538b\u6808\uff0c\u8c03\u7528 foo2 \uff0c\u521b\u5efa\u6808\u5e27\uff0c foo3\u51fd\u6570\u538b\u6808 \uff0c\u53d8\u91cf c\u5f15\u7528\u538b\u6808 \uff0c\u8c03\u7528 foo3 \uff0c\u521b\u5efa\u6808\u5e27\uff0c foo3\u5b8c\u6210print\u51fd\u6570\u8c03\u7528\u540e\u8fd4\u56de \uff0c foo2\u6062\u590d\u8c03\u7528 \uff0c\u6267\u884c print\u540e \uff0c\u8fd4\u56de\u503c\uff0e main\u4e2dfoo2\u8c03\u7528\u7ed3\u675f\u5f39\u51fa\u6808\u9876 4. main\u51fd\u6570\u7ee7\u7eed\u6267\u884cprint\u51fd\u6570\u8c03\u7528 , \u5f39\u51fa\u6808\u9876 , main\u51fd\u6570\u8fd4\u56de \u603b\u7ed3 : \u51fd\u6570\u8c03\u7528\u2014\u5168\u5c40\u67e5\u627e\u51fd\u6570\u2014\u51fd\u6570\u538b\u6808\u2014\u5e38\u91cf\u5b57\u7b26\u4e32\u538b\u6808\u2014\u521b\u5efa\u6808\u5e27\u2014\u6267\u884c\u51fd\u6570\u4f53\u2014\u8fd4\u56de\u6267\u884c\u7ed3\u679c\u2013\u51fd\u6570\u51fa\u6808","title":"\u51fd\u6570\u7684\u6267\u884c\u6d41\u7a0b"},{"location":"Python/%E5%87%BD%E6%95%B0/#function-annotations","text":"def add ( x : int , y : int ) -> int : \u9700\u8981\u5bfc\u5165\u6a21\u5757, import functools \u51fd\u6570\u6ce8\u89e3\u7684\u4fe1\u606f, \u5185\u5bb9\u4fdd\u5b58\u5728__annotations__\u5c5e\u6027\u4e2d \u7528\u4e8e\u89e3\u91ca\u53c2\u6570\u53ca\u8fd4\u56de\u503c\u7684\u6570\u636e\u7c7b\u578b \u53ea\u8d77\u89e3\u91ca\u6807\u8bc6\u79df\u7528,\u5982\u679c\u5b9e\u53c2\u4e0e\u5f62\u53c2\u6ce8\u89e3\u6570\u636e\u7c7b\u578b\u4e0d\u4e00\u81f4,\u4e0d\u4f1a\u62a5\u9519","title":"\u51fd\u6570\u6ce8\u89e3Function Annotations"},{"location":"Python/%E5%87%BD%E6%95%B0/#_20","text":"\u683c\u5f0f lambda \u53c2\u6570\u5217\u8868:\u8868\u8fbe\u5f0f \u8868\u8fbe\u5f0f\u76f8\u5f53\u4e8e\u8fd4\u56de\u503c lambda x: x ** 2 foo = lambda x,y : (x+ y)**2 #\u4e0d\u63a8\u8350\u4f7f\u7528 \u8c03\u7528 (lambda x : x **2) (4) \u5e38\u4e0e\u5185\u5efa\u51fd\u6570zip,map,filter\u7b49\u8fde\u7528","title":"\u533f\u540d\u51fd\u6570"},{"location":"Python/%E5%87%BD%E6%95%B0/#_21","text":"1.\u4f7f\u7528\u5f71\u5b50\u62f7\u8d1d\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5bf9\u8c61,\u6c38\u8fdc\u4e0d\u80fd\u6539\u53d8\u4f20\u5165\u7684\u53c2\u6570,\u76f8\u5f53\u4e8e\u5efa\u7acb\u4e86\u4e00\u4e2a\u526f\u672c def foo ( xyz = [], u = 'abc' , z = 123 ): xyz = xyz [:] # \u5f71\u5b50\u62f7\u8d1d xyz . append ( 1 ) print ( xyz ) foo () print ( foo . __defaults__ ) foo () print ( foo . __defaults__ ) foo ([ 10 ]) print ( foo . __defaults__ ) foo ([ 10 , 5 ]) print ( foo . __defaults__ ) [ 1 ] ([], 'abc' , 123 ) [ 1 ] ([], 'abc' , 123 ) [ 10 , 1 ] ([], 'abc' , 123 ) [ 10 , 5 , 1 ] ([], 'abc' , 123 ) 2.\u901a\u8fc7\u503c\u7684\u5224\u65ad\u7075\u6d3b\u9009\u62e9\u521b\u5efa\u6216\u8005\u4fee\u6539\u4f20\u5165\u5bf9\u8c61, \u5e94\u7528\u5e7f\u6cdb def foo ( xyz = None , u = 'abc' , z = 123 ): if xyz is None : xyz = [] xyz . append ( 1 ) print ( xyz ) foo () print ( foo . __defaults__ ) foo () print ( foo . __defaults__ ) foo ([ 10 ]) print ( foo . __defaults__ ) foo ([ 10 , 5 ]) print ( foo . __defaults__ ) [ 1 ] ( None , 'abc' , 123 ) [ 1 ] ( None , 'abc' , 123 ) [ 10 , 1 ] ( None , 'abc' , 123 ) [ 10 , 5 , 1 ] ( None , 'abc' , 123 )","title":"\u5b9a\u4e49\u51fd\u6570\u5c0f\u6280\u5de7"},{"location":"Python/%E5%87%BD%E6%95%B0/#_22","text":"\u9ad8\u9636\u51fd\u6570\u81f3\u5c11\u6ee1\u8db3\u4e0b\u9762\u4e00\u4e2a\u6761\u4ef6\u7684\u51fd\u6570 \u63a5\u53d7\u4e00\u4e2a\u6216\u591a\u4e2a\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570 \u8f93\u51fa\u4e00\u4e2a\u51fd\u6570 \u5185\u5efa\u9ad8\u9636\u51fd\u6570 sorted(iterable[,key][,reverse]) \u6392\u5e8f \u8fd4\u56de\u4e00\u4e2a\u65b0\u5217\u8868,\u5bf9\u4e00\u4e2a\u53ef\u8fed\u4ee3\u5bf9\u8c61\u6240\u6709\u5143\u7d20\u6392\u5e8f,\u6392\u5e8f\u89c4\u5219\u4e3akey\u5b9a\u4e49\u51fd\u6570,reverse\u8868\u793a\u662f\u5426\u53cd\u8f6c,\u9ed8\u8ba4\u5347\u5e8f list.sort()\u5c31\u5730\u4fee\u6539,sorted()\u8fd4\u56de\u65b0\u5217\u8868 filter(function,iterable) \u8fc7\u6ee4 \u8fc7\u6ee4\u53ef\u8fed\u4ee3\u5bf9\u8c61\u7684\u5143\u7d20,\u8fd4\u56de\u4e00\u4e2a==\u8fed\u4ee3\u5668,== function\u4e00\u4e2a\u5177\u6709\u4e00\u4e2a\u53c2\u6570\u7684\u51fd\u6570,\u8fd4\u56debool >>> list ( filter ( lambda x : x % 3 == 0 , [ 1 , 9 , 55 , 150 , - 3 , 78 , 28 , 123 ])) >>> [ 9 , 150 , - 3 , 78 , 123 ] map(function,*iterables) \u6620\u5c04 \u8fd4\u56de map object \u5bf9\u591a\u4e2a\u53ef\u8fed\u4ee3\u5bf9\u8c61\u7684\u5143\u7d20\u6309\u7167\u6307\u5b9a\u51fd\u6570\u6620\u5c04,\u8fd4\u56de\u4e00\u4e2a\u8fed\u4ee3\u5668 >>> list ( map ( lambda x : 2 * x + 1 , range ( 5 ))) >>> [ 1 , 3 , 5 , 7 , 9 ] >>> dict ( map ( lambda x : ( x % 5 , x ) , range ( 500 ))) >>> { 0 : 495 , 1 : 496 , 2 : 497 , 3 : 498 , 4 : 499 }","title":"\u9ad8\u9636\u51fd\u6570"},{"location":"Python/%E5%87%BD%E6%95%B0/#currying","text":"\u67ef\u91cc\u5316:\u6307\u5c06\u539f\u6765\u63a5\u53d7\u4e24\u4e2a\u53c2\u6570\u7684\u51fd\u6570\u53d8\u6210\u65b0\u7684\u4e00\u4e2a\u63a5\u53d7\u4e00\u4e2a\u53c2\u6570\u7684\u51fd\u6570\u7684\u8fc7\u7a0b .\u65b0\u7684\u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u4ee5\u539f\u6709\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e3a\u53c2\u6570\u7684\u51fd\u6570 z = f(x,y) \u2192 z = f(x)(y)","title":"\u67ef\u91cc\u5316Currying"},{"location":"Python/%E5%87%BD%E6%95%B0/#_23","text":"from typing import List , Tuple , Dict def add ( a : int , string : str , f : float , b : bool ) -> Tuple [ List , Tuple , Dict , bool ]: list1 = list ( range ( a )) tup = ( string , string , string ) d = { \"a\" : f } bl = b return list1 , tup , d , bl print ( add ( 5 , \"hhhh\" , 2.3 , False )) # \u7ed3\u679c\uff1a([0, 1, 2, 3, 4], ('hhhh', 'hhhh', 'hhhh'), {'a': 2.3}, False)","title":"\u51fd\u6570\u53c2\u6570\u8fd4\u56de\u503c\u6570\u636e\u7ed3\u6784"},{"location":"Python/%E5%88%97%E8%A1%A8/","text":"\u5217\u8868List \u521b\u5efa\u5217\u8868 \u65b9\u6cd5 \u589e \u5220 \u6539 \u67e5 \u5207\u7247 \u6ce8\u610f \u62f7\u8d1d \u62f7\u8d1d \u6d45\u62f7\u8d1d \u6df1\u62f7\u8d1d \u5143\u7ec4tuple \u6ce8\u610f: \u9762\u8bd5\u9898 \u5217\u8868List \u00b6 \u4f7f\u7528 [] \u62ec\u8d77\u6765,\u7528 , \u5206\u5272\u7684\u6570\u636e\u7ed3\u6784 \u5217\u8868\u662f\u53ef\u53d8\u5bf9\u8c61 \u5217\u8868\u7684\u7d22\u5f15\u4ece0\u5f00\u59cb, \u652f\u6301\u8d1f\u7d22\u5f15,\u6700\u540e\u4e00\u4f4d\u7d22\u5f15\u4e3a-1,\u5012\u6570\u7b2c\u4e8c\u4f4d\u4e3a-2,\u4e00\u6b21\u7c7b\u63a8 \u521b\u5efa\u5217\u8868 \u00b6 1.\u4f7f\u7528 [] \u521b\u5efa In [ 38 ]: lst = [ 1 , 2 , 3 , 4 , 5 ] In [ 39 ]: lst Out [ 39 ]: [ 1 , 2 , 3 , 4 , 5 ] 2.\u4f7f\u7528list(iterable) \u5185\u5efa\u51fd\u6570, () \u4e2d\u4e3a\u53ef\u8fed\u4ee3\u5bf9\u8c61,\u5e38\u7528\u4e8e\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362 In [ 40 ]: a Out [ 40 ]: '0a1a2a3a4a5' In [ 41 ]: l = list ( a ) In [ 42 ]: l Out [ 42 ]: [ '0' , 'a' , '1' , 'a' , '2' , 'a' , '3' , 'a' , '4' , 'a' , '5' ] \u65b9\u6cd5 \u00b6 \u589e \u00b6 lst.append(object) \u5c3e\u90e8\u8ffd\u52a0 \u8fd4\u56de\u503c\u4e3aNone,\u610f\u5473\u5c31\u5730\u4fee\u6539,\u65e0\u65b0\u5217\u8868\u751f\u6210 O(1) In [ 43 ]: lst = [ 1 , 2 , 3 , 4 , 5 ] In [ 44 ]: lst . append ( 6 ) In [ 45 ]: lst Out [ 45 ]: [ 1 , 2 , 3 , 4 , 5 , 6 ] lst.insert(index,object) \u5728index\u4f4d\u7f6e\u8ffd\u52a0object \u8fd4\u56de\u503c\u4e3aNone,\u5c31\u5730\u4fee\u6539 \u8d85\u8fc7\u4e0a\u754c\u5c3e\u90e8\u8ffd\u52a0 \u8d85\u8fc7\u4e0b\u754c\u5934\u90e8\u8ffd\u52a0 In [ 45 ]: lst Out [ 45 ]: [ 1 , 2 , 3 , 4 , 5 , 6 ] In [ 46 ]: lst . insert ( 0 , 0 ) In [ 47 ]: lst Out [ 47 ]: [ 0 , 1 , 2 , 3 , 4 , 5 , 6 ] lst.extend(iterable) \u5c3e\u90e8\u8ffd\u52a0,\u6269\u5c55\u5217\u8868 \u8fd4\u56de\u503c\u4e3aNone,\u5c31\u5730\u4fee\u6539 In [ 47 ]: lst Out [ 47 ]: [ 0 , 1 , 2 , 3 , 4 , 5 , 6 ] In [ 48 ]: lst1 = [ 'a' , 'b' , 'c' ] In [ 49 ]: lst . extend ( lst1 ) In [ 50 ]: lst Out [ 50 ]: [ 0 , 1 , 2 , 3 , 4 , 5 , 6 , 'a' , 'b' , 'c' ] * , + \u4e24\u4e2a\u8fd0\u7b97\u7b26\u53ef\u4ee5\u5728\u5217\u8868\u4e4b\u95f4\u4f7f\u7528,\u751f\u6210\u65b0\u5217\u8868 In [ 47 ]: lst Out [ 47 ]: [ 0 , 1 , 2 , 3 , 4 , 5 , 6 ] In [ 50 ]: lst1 Out [ 50 ]: [ 'a' , 'b' , 'c' ] In [ 51 ]: lst + lst1 Out [ 51 ]: [ 0 , 1 , 2 , 3 , 4 , 5 , 6 , 'a' , 'b' , 'c' , 'a' , 'b' , 'c' ] In [ 53 ]: lst1 Out [ 53 ]: [ 'a' , 'b' , 'c' ] In [ 54 ]: lst1 * 2 Out [ 54 ]: [ 'a' , 'b' , 'c' , 'a' , 'b' , 'c' ] \u5220 \u00b6 lst.clear()\u6e05\u7a7a\u5217\u8868,\u5c31\u5730\u4fee\u6539 In [ 55 ]: lst1 . clear () In [ 56 ]: lst1 Out [ 56 ]: [] lst.remove(value) \u4ece\u5de6\u5230\u53f3\u79fb\u9664\u7b2c\u4e00\u4e2a\u5339\u914d\u503c \u8fd4\u56de\u503c\u4e3aNone,\u5c31\u5730\u4fee\u6539 \u82e5value,\u4e0d\u5b58\u5728,\u62a5\u9519:list.remove(x): x not in list In [ 58 ]: lst1 Out [ 58 ]: [ 'a' , 'b' , 'c' , 'd' ] In [ 59 ]: lst1 . remove ( 'z' ) --------------------------------------------------------------------------- ValueError Traceback ( most recent call last ) < ipython - input - 59 - a34f6aae527c > in < module > ----> 1 lst1 . remove ( 'z' ) ValueError : list . remove ( x ): x not in list In [ 60 ]: lst1 . remove ( 'a' ) In [ 61 ]: lst1 Out [ 61 ]: [ 'b' , 'c' , 'd' ] lst.pop([index]) \u5728\u6307\u5b9aindex\u4f4d\u7f6e\u5f39\u51fa\u503c,\u82e5\u65e0index,\u5219\u5f39\u51fa\u5217\u8868\u5c3e\u90e8\u503c \u5c31\u5730\u4fee\u6539,\u8fd4\u56de\u503c\u4e3a\u5f39\u51fa\u503c In [ 61 ]: lst1 Out [ 61 ]: [ 'b' , 'c' , 'd' ] In [ 62 ]: lst1 . pop ( 0 ) Out [ 62 ]: 'b' In [ 63 ]: lst1 Out [ 63 ]: [ 'c' , 'd' ] lst.reversed() \u5217\u8868\u5143\u7d20\u53cd\u8f6c \u8fd4\u56de\u503c\u4e3aNone,\u5c31\u5730\u4fee\u6539 In [ 63 ]: lst1 Out [ 63 ]: [ 'c' , 'd' ] In [ 64 ]: lst1 . reverse () In [ 65 ]: lst1 Out [ 65 ]: [ 'd' , 'c' ] lst.sort(key=None,reverse = False) \u5bf9\u5143\u7d20\u8fdb\u884c\u6392\u5217,\u9ed8\u8ba4\u5347\u5e8f \u8fd4\u56de\u503c\u4e3aNone,\u5c31\u5730\u4fee\u6539 reverse \u4e3aTrue,\u53cd\u8f6c,\u964d\u5e8f key \u4e3a\u51fd\u6570,\u6309\u51fd\u6570\u6392\u5e8f \u6309adcii\u7801\u6765\u8fdb\u884c\u6392\u5e8f In [ 69 ]: lst = [ 5 , 2 , 3 , 1 , 4 ] In [ 70 ]: lst . sort () In [ 71 ]: lst Out [ 71 ]: [ 1 , 2 , 3 , 4 , 5 ] In [ 72 ]: lst1 = [ 'a' , 'b' , 'c' ] In [ 73 ]: lst1 . sort ( reverse = True ) In [ 74 ]: lst1 Out [ 74 ]: [ 'c' , 'b' , 'a' ] \u6539 \u00b6 \u901a\u8fc7\u7d22\u5f15\u4fee\u6539\u503c In [ 74 ]: lst1 Out [ 74 ]: [ 'c' , 'b' , 'a' ] In [ 75 ]: lst1 [ 1 ] = \"z\" In [ 76 ]: lst1 Out [ 76 ]: [ 'c' , 'z' , 'a' ] \u67e5 \u00b6 \u901a\u8fc7\u7d22\u5f15\u67e5\u503c In [ 77 ]: lst1 Out [ 77 ]: [ 'c' , 'z' , 'a' ] In [ 78 ]: lst1 [ 0 ] Out [ 78 ]: 'c' lst.count() \u67e5\u627e\u62ec\u53f7\u4e2d\u5143\u7d20\u5728\u5217\u8868\u4e2d\u51fa\u73b0\u4e86\u51e0\u6b21 \u8fd4\u56de\u503c\u4e3a\u6574\u578b O(n) lst.index(obj,start,end) \u8d77\u59cb\u4f4d\u7f6e\u95f4\u67e5\u627eobj,\u8fd4\u56de\u7b2c\u4e00\u4e2a\u627e\u5230\u7684\u4f4d\u7f6e\u7d22\u5f15 \u5207\u7247 \u00b6 Python\u4e2d\u7b26\u5408\u5e8f\u5217\u7684\u6709\u5e8f\u5e8f\u5217\u90fd\u652f\u6301\u5207\u7247\uff08slice\uff09\uff0c\u4f8b\u5982\u5217\u8868\uff0c\u5b57\u7b26\u4e32\uff0c\u5143\u7ec4\u3002 \u7528\u4e8e\u622a\u53d6\u6709\u5e8f\u5e8f\u5217\u4e2d\u7684\u4e00\u4e2a\u7247\u6bb5 \u8bed\u6cd5: object[start:end:step] start:\u8d77\u59cb\u7d22\u5f15\uff0c\u4ece0\u5f00\u59cb\uff0c-1\u8868\u793a\u7ed3\u675f end\uff1a\u7ed3\u675f\u7d22\u5f15 step\uff1a\u6b65\u957f\uff0cend-start\uff0c\u6b65\u957f\u4e3a\u6b63\u65f6\uff0c\u4ece\u5de6\u5411\u53f3\u53d6\u503c\u3002\u6b65\u957f\u4e3a\u8d1f\u65f6\uff0c\u53cd\u5411\u53d6\u503c,\u9ed8\u8ba4\u4e3a1 \u6ce8\u610f \u00b6 \u5207\u7247\u6b65\u957f\u7684\u65b9\u5411\u975e\u5e38\u91cd\u8981,\u6b65\u957f\u9700\u8981\u4e0e\u5934\u5c3e\u987a\u5e8f\u4e00\u81f4 \u5207\u7247\u7684\u7ed3\u679c\u4e3a\u5de6\u5f00\u53f3\u95ed\u533a\u95f4,\u4e0d\u5305\u542b\u7ed3\u675f\u7d22\u5f15\uff0c\u5373\u4e0d\u5305\u542b\u6700\u540e\u7684\u4e00\u4f4d\uff0c-1\u4ee3\u8868\u5217\u8868\u7684\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\u7d22\u5f15, \u60f3\u5207\u5230\u6700\u540e\u4e00\u4f4d : lst[3:] \u8868\u793a\u4ece\u7d22\u5f153\u5f00\u59cb\u540e\u9762\u7684\u6240\u6709\u5143\u7d20, \u62f7\u8d1d \u00b6 \u7531\u4e8e\u5217\u8868\u4e3a\u53ef\u53d8\u7c7b\u578b\u5bb9\u5668,\u6240\u4ee5\u5b58\u5728\u62f7\u8d1d,\u6d45\u62f7\u8d1d\u548c\u6df1\u62f7\u8d1d\u7684\u95ee\u9898,\u5728\u7f16\u7a0b\u4e2d\u5c24\u5176\u9700\u8981\u6ce8\u610f. \u62f7\u8d1d\u76f8\u5173\u5185\u5bb9\u4e3a\u5bb9\u5668\u7c7b\u5143\u7d20\u95ee\u9898,\u4e3b\u8981\u53d1\u751f\u5728\u5b58\u5728\u5217\u8868\u7684\u60c5\u51b5\u4e0b. \u62f7\u8d1d \u00b6 \u666e\u901a\u62f7\u8d1d\u5373\u4f7f\u88ab\u62f7\u8d1d\u5bf9\u8c61\u5f15\u7528\u8ba1\u6570\u52a01,\u662f\u6307\u9488\u7684\u6307\u5411\u591a\u51fa\u4e00\u4e2a\u5206\u652f\u6307\u5411\u5f15\u7528\u5bf9\u8c61. \u5185\u5b58\u5730\u5740\u4e00\u81f4 In [ 79 ]: lst = [ 1 , 2 , 3 , 4 ] In [ 80 ]: lst1 = lst In [ 81 ]: lst1 . append ( 5 ) In [ 82 ]: lst1 Out [ 82 ]: [ 1 , 2 , 3 , 4 , 5 ] In [ 83 ]: lst Out [ 83 ]: [ 1 , 2 , 3 , 4 , 5 ] \u6d45\u62f7\u8d1d \u00b6 \u4e5f\u53eb\u5f71\u5b50\u62f7\u8d1dshadow copy,\u53ea\u62f7\u8d1d\u5bb9\u5668\u7c7b\u5143\u7d20\u4e2d\u7684\u7b2c\u4e00\u5c42\u5143\u7d20,\u5bb9\u5668\u5957\u5bb9\u5668,\u53ea\u662f\u6307\u9488\u7684\u5f15\u7528 \u5957\u4e2d\u5957\u7684\u5185\u5b58\u5730\u5740\u4e00\u81f4 In [ 84 ]: lst = [ 1 , 2 , 3 ,[ 4 , 5 ]] In [ 85 ]: import copy In [ 86 ]: lst1 = lst . copy () In [ 87 ]: lst1 [ 0 , 0 ] In [ 90 ]: lst1 Out [ 90 ]: [ 0 , 2 , 3 , [ 4 , 5 ]] In [ 91 ]: lst Out [ 91 ]: [ 1 , 2 , 3 , [ 4 , 5 ]] In [ 92 ]: lst1 [ 3 ][ 0 ] = 6 In [ 93 ]: lst1 Out [ 93 ]: [ 0 , 2 , 3 , [ 6 , 5 ]] In [ 94 ]: lst Out [ 94 ]: [ 1 , 2 , 3 , [ 6 , 5 ]] \u6df1\u62f7\u8d1d \u00b6 \u4f7f\u7528copy\u6a21\u5757\u4e2d\u7684deepcopy\u65b9\u6cd5,\u5c06\u6e90\u5143\u7d20\u5b8c\u6574\u590d\u5236\u4e00\u4efd\u5230\u65b0\u7684\u5185\u5b58\u5730\u5740 \u5185\u5b58\u5730\u5740\u4e0d\u4e00\u81f4 In [ 95 ]: import copy In [ 96 ]: lst = [ 1 , 2 , 3 ,[ 4 , 5 ]] In [ 97 ]: lst1 = copy . deepcopy ( lst ) In [ 98 ]: lst1 [ 3 ][ 0 ] = 6 In [ 99 ]: lst1 Out [ 99 ]: [ 1 , 2 , 3 , [ 6 , 5 ]] In [ 100 ]: lst Out [ 100 ]: [ 1 , 2 , 3 , [ 4 , 5 ]] \u5143\u7ec4tuple \u00b6 \u4f7f\u7528 () \u62ec\u8d77\u6765,\u7528 , \u5206\u5272\u7684\u6570\u636e\u7ed3\u6784 \u5143\u7ec4\u4e3a\u4e0d\u53ef\u53d8\u5bf9\u8c61,\u5373\u5b9a\u4e49\u540e\u4e0d\u53ef\u6539\u53d8\u6570\u636e \u5f53\u5143\u7d20\u4e2d\u542b\u6709\u5217\u8868\u65f6,\u6b64\u5217\u8868\u4f9d\u7136\u4e3a\u5730\u5740\u7d22\u5f15,\u6240\u4ee5\u53ef\u4ee5\u66f4\u6539\u5217\u8868\u4e2d\u7684\u503c \u4f7f\u7528\u65b9\u6cd5\u4e0e\u53bb\u6389\u66f4\u6539\u503c\u7684\u65b9\u6cd5,\u4e0e\u5217\u8868\u4e00\u81f4 \u540c\u6837\u7684\u6570\u636e\u7684\u60c5\u51b5\u4e0b,\u5143\u7ec4\u6240\u5360\u5185\u5b58\u7a7a\u95f4\u6bd4\u5217\u8868\u66f4\u5c0f \u6ce8\u610f: \u00b6 \u5f53\u60f3\u8868\u793a\u4e00\u4e2a\u5143\u7d20\u7684\u5143\u7ec4\u65f6,\u9700\u8981\u5728\u5143\u7d20\u540e\u52a0 , ,\u800c\u5217\u8868\u4e0d\u9700\u8981 In [ 102 ]: a Out [ 102 ]: [ 1 ] In [ 103 ]: type ( a ) Out [ 103 ]: list In [ 104 ]: b = ( 1 ) In [ 105 ]: type ( b ) Out [ 105 ]: int In [ 106 ]: c = ( 1 ,) In [ 107 ]: type ( c ) Out [ 107 ]: tuple \u9762\u8bd5\u9898 \u00b6 ```Python #\u6309\u7167\u5e74\u9f84\u6392\u5e8f d1 = [ {'name':'alice','age':18}, {'name':'bob','age':20}, {'name':'carl','age':19}, ] d1.sort(key=lambda x :x['age']) print(d1) [{'name': 'alice', 'age': 18}, {'name': 'carl', 'age': 19}, {'name': 'bob', 'age': 20}] ```","title":"\u5217\u8868"},{"location":"Python/%E5%88%97%E8%A1%A8/#list","text":"\u4f7f\u7528 [] \u62ec\u8d77\u6765,\u7528 , \u5206\u5272\u7684\u6570\u636e\u7ed3\u6784 \u5217\u8868\u662f\u53ef\u53d8\u5bf9\u8c61 \u5217\u8868\u7684\u7d22\u5f15\u4ece0\u5f00\u59cb, \u652f\u6301\u8d1f\u7d22\u5f15,\u6700\u540e\u4e00\u4f4d\u7d22\u5f15\u4e3a-1,\u5012\u6570\u7b2c\u4e8c\u4f4d\u4e3a-2,\u4e00\u6b21\u7c7b\u63a8","title":"\u5217\u8868List"},{"location":"Python/%E5%88%97%E8%A1%A8/#_1","text":"1.\u4f7f\u7528 [] \u521b\u5efa In [ 38 ]: lst = [ 1 , 2 , 3 , 4 , 5 ] In [ 39 ]: lst Out [ 39 ]: [ 1 , 2 , 3 , 4 , 5 ] 2.\u4f7f\u7528list(iterable) \u5185\u5efa\u51fd\u6570, () \u4e2d\u4e3a\u53ef\u8fed\u4ee3\u5bf9\u8c61,\u5e38\u7528\u4e8e\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362 In [ 40 ]: a Out [ 40 ]: '0a1a2a3a4a5' In [ 41 ]: l = list ( a ) In [ 42 ]: l Out [ 42 ]: [ '0' , 'a' , '1' , 'a' , '2' , 'a' , '3' , 'a' , '4' , 'a' , '5' ]","title":"\u521b\u5efa\u5217\u8868"},{"location":"Python/%E5%88%97%E8%A1%A8/#_2","text":"","title":"\u65b9\u6cd5"},{"location":"Python/%E5%88%97%E8%A1%A8/#_3","text":"lst.append(object) \u5c3e\u90e8\u8ffd\u52a0 \u8fd4\u56de\u503c\u4e3aNone,\u610f\u5473\u5c31\u5730\u4fee\u6539,\u65e0\u65b0\u5217\u8868\u751f\u6210 O(1) In [ 43 ]: lst = [ 1 , 2 , 3 , 4 , 5 ] In [ 44 ]: lst . append ( 6 ) In [ 45 ]: lst Out [ 45 ]: [ 1 , 2 , 3 , 4 , 5 , 6 ] lst.insert(index,object) \u5728index\u4f4d\u7f6e\u8ffd\u52a0object \u8fd4\u56de\u503c\u4e3aNone,\u5c31\u5730\u4fee\u6539 \u8d85\u8fc7\u4e0a\u754c\u5c3e\u90e8\u8ffd\u52a0 \u8d85\u8fc7\u4e0b\u754c\u5934\u90e8\u8ffd\u52a0 In [ 45 ]: lst Out [ 45 ]: [ 1 , 2 , 3 , 4 , 5 , 6 ] In [ 46 ]: lst . insert ( 0 , 0 ) In [ 47 ]: lst Out [ 47 ]: [ 0 , 1 , 2 , 3 , 4 , 5 , 6 ] lst.extend(iterable) \u5c3e\u90e8\u8ffd\u52a0,\u6269\u5c55\u5217\u8868 \u8fd4\u56de\u503c\u4e3aNone,\u5c31\u5730\u4fee\u6539 In [ 47 ]: lst Out [ 47 ]: [ 0 , 1 , 2 , 3 , 4 , 5 , 6 ] In [ 48 ]: lst1 = [ 'a' , 'b' , 'c' ] In [ 49 ]: lst . extend ( lst1 ) In [ 50 ]: lst Out [ 50 ]: [ 0 , 1 , 2 , 3 , 4 , 5 , 6 , 'a' , 'b' , 'c' ] * , + \u4e24\u4e2a\u8fd0\u7b97\u7b26\u53ef\u4ee5\u5728\u5217\u8868\u4e4b\u95f4\u4f7f\u7528,\u751f\u6210\u65b0\u5217\u8868 In [ 47 ]: lst Out [ 47 ]: [ 0 , 1 , 2 , 3 , 4 , 5 , 6 ] In [ 50 ]: lst1 Out [ 50 ]: [ 'a' , 'b' , 'c' ] In [ 51 ]: lst + lst1 Out [ 51 ]: [ 0 , 1 , 2 , 3 , 4 , 5 , 6 , 'a' , 'b' , 'c' , 'a' , 'b' , 'c' ] In [ 53 ]: lst1 Out [ 53 ]: [ 'a' , 'b' , 'c' ] In [ 54 ]: lst1 * 2 Out [ 54 ]: [ 'a' , 'b' , 'c' , 'a' , 'b' , 'c' ]","title":"\u589e"},{"location":"Python/%E5%88%97%E8%A1%A8/#_4","text":"lst.clear()\u6e05\u7a7a\u5217\u8868,\u5c31\u5730\u4fee\u6539 In [ 55 ]: lst1 . clear () In [ 56 ]: lst1 Out [ 56 ]: [] lst.remove(value) \u4ece\u5de6\u5230\u53f3\u79fb\u9664\u7b2c\u4e00\u4e2a\u5339\u914d\u503c \u8fd4\u56de\u503c\u4e3aNone,\u5c31\u5730\u4fee\u6539 \u82e5value,\u4e0d\u5b58\u5728,\u62a5\u9519:list.remove(x): x not in list In [ 58 ]: lst1 Out [ 58 ]: [ 'a' , 'b' , 'c' , 'd' ] In [ 59 ]: lst1 . remove ( 'z' ) --------------------------------------------------------------------------- ValueError Traceback ( most recent call last ) < ipython - input - 59 - a34f6aae527c > in < module > ----> 1 lst1 . remove ( 'z' ) ValueError : list . remove ( x ): x not in list In [ 60 ]: lst1 . remove ( 'a' ) In [ 61 ]: lst1 Out [ 61 ]: [ 'b' , 'c' , 'd' ] lst.pop([index]) \u5728\u6307\u5b9aindex\u4f4d\u7f6e\u5f39\u51fa\u503c,\u82e5\u65e0index,\u5219\u5f39\u51fa\u5217\u8868\u5c3e\u90e8\u503c \u5c31\u5730\u4fee\u6539,\u8fd4\u56de\u503c\u4e3a\u5f39\u51fa\u503c In [ 61 ]: lst1 Out [ 61 ]: [ 'b' , 'c' , 'd' ] In [ 62 ]: lst1 . pop ( 0 ) Out [ 62 ]: 'b' In [ 63 ]: lst1 Out [ 63 ]: [ 'c' , 'd' ] lst.reversed() \u5217\u8868\u5143\u7d20\u53cd\u8f6c \u8fd4\u56de\u503c\u4e3aNone,\u5c31\u5730\u4fee\u6539 In [ 63 ]: lst1 Out [ 63 ]: [ 'c' , 'd' ] In [ 64 ]: lst1 . reverse () In [ 65 ]: lst1 Out [ 65 ]: [ 'd' , 'c' ] lst.sort(key=None,reverse = False) \u5bf9\u5143\u7d20\u8fdb\u884c\u6392\u5217,\u9ed8\u8ba4\u5347\u5e8f \u8fd4\u56de\u503c\u4e3aNone,\u5c31\u5730\u4fee\u6539 reverse \u4e3aTrue,\u53cd\u8f6c,\u964d\u5e8f key \u4e3a\u51fd\u6570,\u6309\u51fd\u6570\u6392\u5e8f \u6309adcii\u7801\u6765\u8fdb\u884c\u6392\u5e8f In [ 69 ]: lst = [ 5 , 2 , 3 , 1 , 4 ] In [ 70 ]: lst . sort () In [ 71 ]: lst Out [ 71 ]: [ 1 , 2 , 3 , 4 , 5 ] In [ 72 ]: lst1 = [ 'a' , 'b' , 'c' ] In [ 73 ]: lst1 . sort ( reverse = True ) In [ 74 ]: lst1 Out [ 74 ]: [ 'c' , 'b' , 'a' ]","title":"\u5220"},{"location":"Python/%E5%88%97%E8%A1%A8/#_5","text":"\u901a\u8fc7\u7d22\u5f15\u4fee\u6539\u503c In [ 74 ]: lst1 Out [ 74 ]: [ 'c' , 'b' , 'a' ] In [ 75 ]: lst1 [ 1 ] = \"z\" In [ 76 ]: lst1 Out [ 76 ]: [ 'c' , 'z' , 'a' ]","title":"\u6539"},{"location":"Python/%E5%88%97%E8%A1%A8/#_6","text":"\u901a\u8fc7\u7d22\u5f15\u67e5\u503c In [ 77 ]: lst1 Out [ 77 ]: [ 'c' , 'z' , 'a' ] In [ 78 ]: lst1 [ 0 ] Out [ 78 ]: 'c' lst.count() \u67e5\u627e\u62ec\u53f7\u4e2d\u5143\u7d20\u5728\u5217\u8868\u4e2d\u51fa\u73b0\u4e86\u51e0\u6b21 \u8fd4\u56de\u503c\u4e3a\u6574\u578b O(n) lst.index(obj,start,end) \u8d77\u59cb\u4f4d\u7f6e\u95f4\u67e5\u627eobj,\u8fd4\u56de\u7b2c\u4e00\u4e2a\u627e\u5230\u7684\u4f4d\u7f6e\u7d22\u5f15","title":"\u67e5"},{"location":"Python/%E5%88%97%E8%A1%A8/#_7","text":"Python\u4e2d\u7b26\u5408\u5e8f\u5217\u7684\u6709\u5e8f\u5e8f\u5217\u90fd\u652f\u6301\u5207\u7247\uff08slice\uff09\uff0c\u4f8b\u5982\u5217\u8868\uff0c\u5b57\u7b26\u4e32\uff0c\u5143\u7ec4\u3002 \u7528\u4e8e\u622a\u53d6\u6709\u5e8f\u5e8f\u5217\u4e2d\u7684\u4e00\u4e2a\u7247\u6bb5 \u8bed\u6cd5: object[start:end:step] start:\u8d77\u59cb\u7d22\u5f15\uff0c\u4ece0\u5f00\u59cb\uff0c-1\u8868\u793a\u7ed3\u675f end\uff1a\u7ed3\u675f\u7d22\u5f15 step\uff1a\u6b65\u957f\uff0cend-start\uff0c\u6b65\u957f\u4e3a\u6b63\u65f6\uff0c\u4ece\u5de6\u5411\u53f3\u53d6\u503c\u3002\u6b65\u957f\u4e3a\u8d1f\u65f6\uff0c\u53cd\u5411\u53d6\u503c,\u9ed8\u8ba4\u4e3a1","title":"\u5207\u7247"},{"location":"Python/%E5%88%97%E8%A1%A8/#_8","text":"\u5207\u7247\u6b65\u957f\u7684\u65b9\u5411\u975e\u5e38\u91cd\u8981,\u6b65\u957f\u9700\u8981\u4e0e\u5934\u5c3e\u987a\u5e8f\u4e00\u81f4 \u5207\u7247\u7684\u7ed3\u679c\u4e3a\u5de6\u5f00\u53f3\u95ed\u533a\u95f4,\u4e0d\u5305\u542b\u7ed3\u675f\u7d22\u5f15\uff0c\u5373\u4e0d\u5305\u542b\u6700\u540e\u7684\u4e00\u4f4d\uff0c-1\u4ee3\u8868\u5217\u8868\u7684\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\u7d22\u5f15, \u60f3\u5207\u5230\u6700\u540e\u4e00\u4f4d : lst[3:] \u8868\u793a\u4ece\u7d22\u5f153\u5f00\u59cb\u540e\u9762\u7684\u6240\u6709\u5143\u7d20,","title":"\u6ce8\u610f"},{"location":"Python/%E5%88%97%E8%A1%A8/#_9","text":"\u7531\u4e8e\u5217\u8868\u4e3a\u53ef\u53d8\u7c7b\u578b\u5bb9\u5668,\u6240\u4ee5\u5b58\u5728\u62f7\u8d1d,\u6d45\u62f7\u8d1d\u548c\u6df1\u62f7\u8d1d\u7684\u95ee\u9898,\u5728\u7f16\u7a0b\u4e2d\u5c24\u5176\u9700\u8981\u6ce8\u610f. \u62f7\u8d1d\u76f8\u5173\u5185\u5bb9\u4e3a\u5bb9\u5668\u7c7b\u5143\u7d20\u95ee\u9898,\u4e3b\u8981\u53d1\u751f\u5728\u5b58\u5728\u5217\u8868\u7684\u60c5\u51b5\u4e0b.","title":"\u62f7\u8d1d"},{"location":"Python/%E5%88%97%E8%A1%A8/#_10","text":"\u666e\u901a\u62f7\u8d1d\u5373\u4f7f\u88ab\u62f7\u8d1d\u5bf9\u8c61\u5f15\u7528\u8ba1\u6570\u52a01,\u662f\u6307\u9488\u7684\u6307\u5411\u591a\u51fa\u4e00\u4e2a\u5206\u652f\u6307\u5411\u5f15\u7528\u5bf9\u8c61. \u5185\u5b58\u5730\u5740\u4e00\u81f4 In [ 79 ]: lst = [ 1 , 2 , 3 , 4 ] In [ 80 ]: lst1 = lst In [ 81 ]: lst1 . append ( 5 ) In [ 82 ]: lst1 Out [ 82 ]: [ 1 , 2 , 3 , 4 , 5 ] In [ 83 ]: lst Out [ 83 ]: [ 1 , 2 , 3 , 4 , 5 ]","title":"\u62f7\u8d1d"},{"location":"Python/%E5%88%97%E8%A1%A8/#_11","text":"\u4e5f\u53eb\u5f71\u5b50\u62f7\u8d1dshadow copy,\u53ea\u62f7\u8d1d\u5bb9\u5668\u7c7b\u5143\u7d20\u4e2d\u7684\u7b2c\u4e00\u5c42\u5143\u7d20,\u5bb9\u5668\u5957\u5bb9\u5668,\u53ea\u662f\u6307\u9488\u7684\u5f15\u7528 \u5957\u4e2d\u5957\u7684\u5185\u5b58\u5730\u5740\u4e00\u81f4 In [ 84 ]: lst = [ 1 , 2 , 3 ,[ 4 , 5 ]] In [ 85 ]: import copy In [ 86 ]: lst1 = lst . copy () In [ 87 ]: lst1 [ 0 , 0 ] In [ 90 ]: lst1 Out [ 90 ]: [ 0 , 2 , 3 , [ 4 , 5 ]] In [ 91 ]: lst Out [ 91 ]: [ 1 , 2 , 3 , [ 4 , 5 ]] In [ 92 ]: lst1 [ 3 ][ 0 ] = 6 In [ 93 ]: lst1 Out [ 93 ]: [ 0 , 2 , 3 , [ 6 , 5 ]] In [ 94 ]: lst Out [ 94 ]: [ 1 , 2 , 3 , [ 6 , 5 ]]","title":"\u6d45\u62f7\u8d1d"},{"location":"Python/%E5%88%97%E8%A1%A8/#_12","text":"\u4f7f\u7528copy\u6a21\u5757\u4e2d\u7684deepcopy\u65b9\u6cd5,\u5c06\u6e90\u5143\u7d20\u5b8c\u6574\u590d\u5236\u4e00\u4efd\u5230\u65b0\u7684\u5185\u5b58\u5730\u5740 \u5185\u5b58\u5730\u5740\u4e0d\u4e00\u81f4 In [ 95 ]: import copy In [ 96 ]: lst = [ 1 , 2 , 3 ,[ 4 , 5 ]] In [ 97 ]: lst1 = copy . deepcopy ( lst ) In [ 98 ]: lst1 [ 3 ][ 0 ] = 6 In [ 99 ]: lst1 Out [ 99 ]: [ 1 , 2 , 3 , [ 6 , 5 ]] In [ 100 ]: lst Out [ 100 ]: [ 1 , 2 , 3 , [ 4 , 5 ]]","title":"\u6df1\u62f7\u8d1d"},{"location":"Python/%E5%88%97%E8%A1%A8/#tuple","text":"\u4f7f\u7528 () \u62ec\u8d77\u6765,\u7528 , \u5206\u5272\u7684\u6570\u636e\u7ed3\u6784 \u5143\u7ec4\u4e3a\u4e0d\u53ef\u53d8\u5bf9\u8c61,\u5373\u5b9a\u4e49\u540e\u4e0d\u53ef\u6539\u53d8\u6570\u636e \u5f53\u5143\u7d20\u4e2d\u542b\u6709\u5217\u8868\u65f6,\u6b64\u5217\u8868\u4f9d\u7136\u4e3a\u5730\u5740\u7d22\u5f15,\u6240\u4ee5\u53ef\u4ee5\u66f4\u6539\u5217\u8868\u4e2d\u7684\u503c \u4f7f\u7528\u65b9\u6cd5\u4e0e\u53bb\u6389\u66f4\u6539\u503c\u7684\u65b9\u6cd5,\u4e0e\u5217\u8868\u4e00\u81f4 \u540c\u6837\u7684\u6570\u636e\u7684\u60c5\u51b5\u4e0b,\u5143\u7ec4\u6240\u5360\u5185\u5b58\u7a7a\u95f4\u6bd4\u5217\u8868\u66f4\u5c0f","title":"\u5143\u7ec4tuple"},{"location":"Python/%E5%88%97%E8%A1%A8/#_13","text":"\u5f53\u60f3\u8868\u793a\u4e00\u4e2a\u5143\u7d20\u7684\u5143\u7ec4\u65f6,\u9700\u8981\u5728\u5143\u7d20\u540e\u52a0 , ,\u800c\u5217\u8868\u4e0d\u9700\u8981 In [ 102 ]: a Out [ 102 ]: [ 1 ] In [ 103 ]: type ( a ) Out [ 103 ]: list In [ 104 ]: b = ( 1 ) In [ 105 ]: type ( b ) Out [ 105 ]: int In [ 106 ]: c = ( 1 ,) In [ 107 ]: type ( c ) Out [ 107 ]: tuple","title":"\u6ce8\u610f:"},{"location":"Python/%E5%88%97%E8%A1%A8/#_14","text":"```Python #\u6309\u7167\u5e74\u9f84\u6392\u5e8f d1 = [ {'name':'alice','age':18}, {'name':'bob','age':20}, {'name':'carl','age':19}, ] d1.sort(key=lambda x :x['age']) print(d1) [{'name': 'alice', 'age': 18}, {'name': 'carl', 'age': 19}, {'name': 'bob', 'age': 20}] ```","title":"\u9762\u8bd5\u9898"},{"location":"Python/%E5%9B%9B%E5%BC%8F%E5%9B%9B%E5%99%A8/","text":"\u5217\u8868\u89e3\u6790\u5f0fList Comprehansion \u751f\u6210\u5668\u8868\u8fbe\u5f0fGenerator Expression \u96c6\u5408\u89e3\u6790\u5f0f \u5b57\u5178\u89e3\u6790\u5f0f \u751f\u6210\u5668\u51fd\u6570 \u5e94\u7528 yield form \u8bed\u53e5 \u89e6\u53d1\u751f\u6210\u5668\u7684\u6761\u4ef6 \u53ef\u8fed\u4ee3\u5bf9\u8c61 \u8fed\u4ee3\u5668 Python\u4e2d\u7684\u63cf\u8ff0\u5668 \u88c5\u9970\u5668 \u5e26\u53c2\u88c5\u9970\u5668 functools\u6a21\u5757 \u5217\u8868\u89e3\u6790\u5f0fList Comprehansion \u00b6 [\u8fd4\u56de\u503c for element in \u53ef\u8fed\u4ee3\u5bf9\u8c61 if \u6761\u4ef6] ---- \u8fd4\u56de\u4e00\u4e2a\u65b0\u5217\u8868 \u63d0\u9ad8\u6548\u7387,\u5b57\u8282\u7801\u66f4\u5c11,\u51cf\u5c11\u4e86\u6808\u5e27 \u7acb\u5373\u8fd4\u56de\u503c l = [[ 1 , 2 ],[ 3 , 4 ],[ 5 , 6 ]] for i in l : for j in i : print ( j ) print ([ j for i in l for j in i ]) \u4f8b\u9898: \u4e00\u884c\u5199\u51fa\u4e5d\u4e5d\u4e58\u6cd5\u8868 print ( ' \\n ' . join ([ ' \\t ' . join ([ f '{j} * {i} = {i*j}' for j in range ( 1 , i + 1 )]) for i in range ( 1 , 10 )])) \u751f\u6210\u5668\u8868\u8fbe\u5f0fGenerator Expression \u00b6 (\u8fd4\u56de\u503c for elment in \u53ef\u8fed\u4ee3\u5bf9\u8c61 if condition) \u6309\u9700\u8ba1\u7b97(\u60f0\u6027\u6c42\u503c,\u5ef6\u8fdf\u8ba1\u7b97),\u9700\u8981\u7684\u65f6\u5019\u624d\u7b97\u503c \u53ef\u8fed\u4ee3\u5bf9\u8c61 \u8fed\u4ee3\u5668 \u53ef\u7528next()\u65b9\u6cd5 \u96c6\u5408\u89e3\u6790\u5f0f \u00b6 {\u8fd4\u56de\u503c for element in \u53ef\u8fed\u4ee3\u5bf9\u8c61 if condition} \u7acb\u5373\u8fd4\u56de\u4e00\u4e2a\u96c6\u5408 \u5b57\u5178\u89e3\u6790\u5f0f \u00b6 {\u8fd4\u56de\u503c for element in \u53ef\u8fed\u4ee3\u5bf9\u8c61 if condition} \u8fd4\u56de\u503c\u4f7f\u7528 key:value\u7684\u5f62\u5f0f \u7acb\u5373\u8fd4\u56de\u4e00\u4e2a\u5b57\u5178 {k:v for k in range(1,5) for v in range(5,10)} \u751f\u6210\u5668\u51fd\u6570 \u00b6 \u901a\u8fc7yield\u5173\u952e\u5b57\u5f97\u5230\u4e00\u4e2a\u751f\u6210\u5668\u51fd\u6570,\u8fd4\u56de\u4e00\u4e2a\u751f\u6210\u5668\u5bf9\u8c61 \u5ef6\u8fdf\u8ba1\u7b97,\u60f0\u6027\u6c42\u503c yield\u4f1a\u6682\u505c\u51fd\u6570 def inc (): for i in range ( 5 ): yield i print ( type ( inc )) print ( type ( inc ())) x = inc () print ( type ( x )) print ( next ( x )) for m in x : print ( m , '*' ) for m in x : print ( m , '**' ) < class ' function '> < class ' generator '> < class ' generator '> 0 1 * 2 * 3 * 4 * \u751f\u6210\u5668\u51fd\u6570\u7b49\u4ef7\u4e8e\u751f\u6210\u5668\u8868\u8fbe\u5f0f,\u53ea\u4e0d\u8fc7\u751f\u6210\u5668\u51fd\u6570\u53ef\u4ee5\u66f4\u52a0\u590d\u6742 def inc (): for i in range ( 5 ): yield i #\u7b49\u4ef7\u4e8ey = (i for i in range(5)) def gen (): print ( 'line 1' ) yield 1 print ( 'line 2' ) yield 2 print ( 'line 3' ) return 3 next ( gen ()) # line 1 next ( gen ()) # line 1 g = gen () print ( next ( g )) # line 1 print ( next ( g )) # line 2 #print(next(g)) # StopIteration next\u65e0\u6cd5\u627e\u5230return\u51fd\u6570,\u53ea\u8ba4\u8bc6yield\u51fd\u6570 print ( next ( g , 'End' )) #end\u76f8\u5f53\u4e8e\u7f3a\u7701\u503c print ( next ( g , 'End' )) line 1 line 1 line 1 1 line 2 2 line 3 End End #\u8f93\u51fa\u4e3a\u53ea\u6709end\u56e0\u4e3a\u7ed3\u675f\u540eg\u7ed3\u675f,\u53ea\u8fd4\u56de\u7f3a\u7701\u503cend \u751f\u6210\u5668\u51fd\u6570\u4e2d,\u53ef\u4ee5\u4f7f\u7528\u591a\u4e2ayield\u8bed\u53e5,\u6267\u884c\u4f9d\u6b21\u540e\u4f1a\u6682\u5b9a\u6267\u884c,\u628ayield\u8868\u8fbe\u5f0f\u7684\u8fd4\u56de\u503c\u7684\u503c\u8fd4\u56de \u518d\u6b21\u8c03\u7528\u4f1a\u6267\u884c\u5230\u4e0b\u4e00\u4e2ayield\u8bed\u53e5 return\u4f9d\u7136\u53ef\u4ee5\u7ec8\u6b62\u51fd\u6570\u8fd0\u884c,(\u4e00\u822c\u4e0d\u52a0),\u4f46return\u8bed\u53e5\u7684\u8fd4\u56de\u503c\u4e0d\u80fd\u88ab\u83b7\u53d6\u5230 return\u4f1a\u5bfc\u81f4\u65e0\u6cd5\u7ee7\u7eed\u83b7\u53d6\u4e0b\u4e00\u4e2a\u503c,\u629b\u51faStopLteration\u5f02\u5e38 \u5982\u679c\u51fd\u6570\u6ca1\u6709\u663e\u793a\u7684return\u8bed\u53e5,\u751f\u6210\u5668\u6267\u884c\u5230\u7ed3\u5c3e,\u7ee7\u7eed\u6267\u884c\u4e5f\u4f1a\u629b\u51faStopLteration\u5f02\u5e38 next\u8bed\u53e5,\u52a8\u4e00\u4e0b\u8d70\u4e00\u6b65 \u5e94\u7528 \u00b6 \u65e0\u9650\u5faa\u73af:\u4f7f\u7528yield\u8bed\u53e5,\u52a8\u4e00\u4e0b\u8d70\u4e00\u6b65 \u534f\u7a0bcoroutine: \u6bd4\u8fdb\u7a0b,\u7ebf\u7a0b\u8f7b\u91cf\u7ea7 \u65f6\u5728\u7528\u6237\u7a7a\u95f4\u8c03\u5ea6\u51fd\u6570\u7684\u4e00\u79cd\u5b9e\u73b0 \u534f\u7a0b\u8c03\u5ea6\u5668\u5b9e\u73b0\u601d\u8def \u6709\u4e24\u4e2a\u751f\u6210\u5668A.B next(A)\u540e,A\u6267\u884c\u5230\u4e86yield\u8bed\u53e5\u6682\u505c,\u7136\u540e\u53d6\u6267\u884cnext(B),B\u6267\u884c \u5230yield\u4e5f\u6682\u505c,\u7136\u540e\u518d\u6b21\u8c03\u7528next(A),\u518d\u8c03\u7528next(B),\u5468\u800c\u590d\u59cb,\u5b9e\u73b0\u4e86\u8c03\u5ea6\u7684\u6548\u679c \u53ef\u4ee5\u5f15\u5165\u8c03\u5ea6\u7684\u7b56\u7565\u6765\u5b9e\u73b0\u5207\u6362\u7684\u65b9\u5f0f \u534f\u7a0b\u65f6\u4e00\u79cd\u975e\u62a2\u5360\u5f0f\u8c03\u5ea6 yield form \u8bed\u53e5 \u00b6 def inc (): for x in range ( 1000 ): yield x #\u7b49\u540c\u4e8e\u4e00\u4e0b\u8bed\u53e5 def inc (): yield from range ( 1000 ) yield from iterable \u662ffor item in iterable : yield item \u5f62\u5f0f\u8bed\u6cd5\u7cd6 \u89e6\u53d1\u751f\u6210\u5668\u7684\u6761\u4ef6 \u00b6 for\u8bed\u53e5 \u5f3a\u5236\u7c7b\u578b\u8f6c\u6362 send()\u65b9\u6cd5 next()\u65b9\u6cd5 \u53ef\u8fed\u4ee3\u5bf9\u8c61 \u00b6 \u53ef\u4ee5\u901a\u8fc7\u8fed\u4ee3\u4e00\u6b21\u6b21\u8fd4\u56de==\u4e0d\u540c\u5143\u7d20==\u7684\u5bf9\u8c61 \u6240\u8c13\u76f8\u540c,\u6307\u7684\u662f\u5143\u7d20\u5728\u5bb9\u5668\u4e2d\u662f\u5426\u4e3a\u540c\u4e00\u4e2a,\u4f46\u662f\u503c\u53ef\u4ee5\u76f8\u540c, \u53ef\u4ee5\u8fed\u4ee3,\u4f46\u672a\u5fc5\u6709\u5e8f,\u672a\u5fc5\u53ef\u7d22\u5f15 list,tuple,string,bytse,bytearray,range,set,dict,\u751f\u6210\u5668\u7b49 \u53ef\u4ee5\u4f7f\u7528\u6210\u5458\u8fd0\u7b97\u7b26in,not in \u672c\u8d28\u4e0a\u5c31\u5728\u904d\u5386\u5bf9\u8c61 \u8fed\u4ee3\u5668 \u00b6 \u7279\u6b8a\u7684\u5bf9\u8c61,\u4e00\u5b9a\u662f\u53ef\u8fed\u4ee3\u5bf9\u8c61,\u5177\u5907\u53ef\u8fed\u4ee3\u5bf9\u8c61\u7279\u5f81 \u53ef\u4ee5\u901a\u8fc7__iter__\u65b9\u6cd5\u628a\u4e00\u4e2a\u53ef\u8fed\u4ee3\u5bf9\u8c61\u5c01\u88c5\u6210\u8fed\u4ee3\u5668 \u53ef\u4ee5\u901a\u8fc7next\u65b9\u6cd5,\u8fed\u4ee3 \u8fed\u4ee3\u5668\u5bf9\u8c61 \u751f\u6210\u5668\u5bf9\u8c61,\u662f\u8fed\u4ee3\u5668\u5bf9\u8c61 Python\u4e2d\u7684\u63cf\u8ff0\u5668 \u00b6 Python\u7684\u65b9\u6cd5(\u5305\u62ecstaticmethod()\u548cclassnethod())\u90fd\u5b9e\u73b0\u4e3a\u975e\u6570\u636e\u63cf\u8ff0\u5668.\u56e0\u6b64,\u5b9e\u4f8b\u53ef\u4ee5\u91cd\u65b0\u5b9a\u4e49\u548c\u8986\u76d6\u65b9\u6cd5,\u8fd9\u5141\u8bb8\u5355\u4e2a\u5b9e\u4f8b\u83b7\u53d6\u4e0e\u540c\u4e00\u7c7b\u7684\u5176\u4ed6\u5b9e\u4f8b\u7684\u4e0d\u540c\u7684\u884c\u4e3a. property()\u51fd\u6570\u5b9e\u73b0\u4e3a\u4e00\u4e2a\u6570\u636e\u63cf\u8ff0\u5668,\u56e0\u6b64,\u5b9e\u4f8b\u4e0d\u80fd\u8986\u76d6\u5c5e\u6027\u7684\u884c\u4e3a. `python\u4e2d\uff0c\u4e00\u4e2a\u7c7b\u5b9e\u73b0\u4e86__get__,__set__.__delete__\u7684\u4e09\u4e2a\u65b9\u6cd5\u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\u5c31\u662f\u63cf\u8ff0\u5668` ` 1. `` \u5982\u679c\u4ec5\u4ec5\u5b9e\u73b0\u4e86 __get__ . \u5c31\u662f\u975e\u6570\u636e\u63cf\u8ff0\u5668 non `` - `` data descriptor `` 2. `` \u540c\u65f6\u5b9e\u73b0\u4e86 __get__ ,[ __set__ , \u6216 __del__ ] \u5c31\u662f\u6570\u636e\u63cf\u8ff0\u5668\uff0c data descriptor `` \u5982\u679c\u4e00\u4e2a\u7c7b\u7684\u7c7b\u5c5e\u6027\uff0c\u8bbe\u7f6e\u4e3a\u63cf\u8ff0\u5668\uff0c\u90a3\u4e48\u8fd9\u4e2a\u7c7b\u88ab\u79f0\u4e3a owner\u5c5e\u4e3b \uff0c method\u4e5f\u662f\u7c7b\u7684\u5c5e\u6027 ` \u88c5\u9970\u5668 \u00b6 \u52a0\u4e86\u88c5\u9970\u5668\u4e4b\u540e\u8c03\u7528\u539f\u51fd\u6570,\u76f8\u5f53\u4e8e\u8c03\u7528\u88c5\u9970\u5668\u5185\u5c42\u51fd\u6570 \u964d\u4f4e\u4e86\u51fd\u6570\u7684\u8026\u5408\u6027,\u51cf\u5c11\u4fb5\u5165\u5f0f\u4ee3\u7801 @logger def func(): \u200b pass logger\u4e0b\u7684\u51fd\u6570\u540d\u4f5c\u4e3alogger\u7684\u5b9e\u53c2,\u8c03\u7528\u540efunc\u8fd4\u56de\u7684\u662floggerr\u7684\u5185\u5c42\u51fd\u6570 \u88c5\u9970\u5668\u5916\u5c42\u51fd\u6570\u7684\u8fd4\u56de\u503c\u662f\u88c5\u9970\u5668\u5185\u5c42\u51fd\u6570\u7684\u51fd\u6570\u540d def logger ( fn ): def wrapper ( * args , ** kwargs ): print ( 'begin' ) x = fn ( * args , ** kwargs ) print ( 'end' ) return x return wrapper # @logger # \u7b49\u4ef7\u4e8eadd = logger(add) def add ( x , y ): return x + y add = logger ( add ) print ( add ( 45 , 40 )) ---------------------------------------------------- begin end 85 \u5e26\u53c2\u88c5\u9970\u5668 \u00b6 \u662f\u4e00\u4e2a\u51fd\u6570 \u51fd\u6570\u4f5c\u4e3a\u5b83\u7684\u5f62\u53c2 \u8fd4\u56de\u503c\u662f\u4e00\u4e2a\u4e0d\u5e26\u53c2\u7684\u88c5\u9970\u5668\u51fd\u6570 \u4f7f\u7528@functionname(\u53c2\u6570\u5217\u8868)\u65b9\u5f0f\u8c03\u7528 \u53ef\u4ee5\u770b\u4f5c\u5728\u88c5\u9970\u5668\u5916\u5c42\u53c8\u52a0\u4e86\u4e00\u5c42\u51fd\u6570 def \u4f20\u5165\u88c5\u9970\u5668\u5185\u4f7f\u7528\u7684\u53c2\u6570 : def \u8c03\u7528\u88ab\u88c5\u9970\u51fd\u6570 : def \u5b9e\u73b0\u5177\u4f53\u529f\u80fd ( \u4f20\u5165\u88ab\u88c5\u9970\u51fd\u6570\u4f7f\u7528\u7684\u53c2\u6570 ) functools\u6a21\u5757 \u00b6 functools.update_wrapper(wrapper,wrapped,assigned=WRAPPER_ASSIGNMENTS, updated=WRAPPER_UPDATES) \u7c7b\u4f3ccopy_properties\u529f\u80fd","title":"\u56db\u5f0f\u56db\u5668"},{"location":"Python/%E5%9B%9B%E5%BC%8F%E5%9B%9B%E5%99%A8/#list-comprehansion","text":"[\u8fd4\u56de\u503c for element in \u53ef\u8fed\u4ee3\u5bf9\u8c61 if \u6761\u4ef6] ---- \u8fd4\u56de\u4e00\u4e2a\u65b0\u5217\u8868 \u63d0\u9ad8\u6548\u7387,\u5b57\u8282\u7801\u66f4\u5c11,\u51cf\u5c11\u4e86\u6808\u5e27 \u7acb\u5373\u8fd4\u56de\u503c l = [[ 1 , 2 ],[ 3 , 4 ],[ 5 , 6 ]] for i in l : for j in i : print ( j ) print ([ j for i in l for j in i ]) \u4f8b\u9898: \u4e00\u884c\u5199\u51fa\u4e5d\u4e5d\u4e58\u6cd5\u8868 print ( ' \\n ' . join ([ ' \\t ' . join ([ f '{j} * {i} = {i*j}' for j in range ( 1 , i + 1 )]) for i in range ( 1 , 10 )]))","title":"\u5217\u8868\u89e3\u6790\u5f0fList Comprehansion"},{"location":"Python/%E5%9B%9B%E5%BC%8F%E5%9B%9B%E5%99%A8/#generator-expression","text":"(\u8fd4\u56de\u503c for elment in \u53ef\u8fed\u4ee3\u5bf9\u8c61 if condition) \u6309\u9700\u8ba1\u7b97(\u60f0\u6027\u6c42\u503c,\u5ef6\u8fdf\u8ba1\u7b97),\u9700\u8981\u7684\u65f6\u5019\u624d\u7b97\u503c \u53ef\u8fed\u4ee3\u5bf9\u8c61 \u8fed\u4ee3\u5668 \u53ef\u7528next()\u65b9\u6cd5","title":"\u751f\u6210\u5668\u8868\u8fbe\u5f0fGenerator Expression"},{"location":"Python/%E5%9B%9B%E5%BC%8F%E5%9B%9B%E5%99%A8/#_1","text":"{\u8fd4\u56de\u503c for element in \u53ef\u8fed\u4ee3\u5bf9\u8c61 if condition} \u7acb\u5373\u8fd4\u56de\u4e00\u4e2a\u96c6\u5408","title":"\u96c6\u5408\u89e3\u6790\u5f0f"},{"location":"Python/%E5%9B%9B%E5%BC%8F%E5%9B%9B%E5%99%A8/#_2","text":"{\u8fd4\u56de\u503c for element in \u53ef\u8fed\u4ee3\u5bf9\u8c61 if condition} \u8fd4\u56de\u503c\u4f7f\u7528 key:value\u7684\u5f62\u5f0f \u7acb\u5373\u8fd4\u56de\u4e00\u4e2a\u5b57\u5178 {k:v for k in range(1,5) for v in range(5,10)}","title":"\u5b57\u5178\u89e3\u6790\u5f0f"},{"location":"Python/%E5%9B%9B%E5%BC%8F%E5%9B%9B%E5%99%A8/#_3","text":"\u901a\u8fc7yield\u5173\u952e\u5b57\u5f97\u5230\u4e00\u4e2a\u751f\u6210\u5668\u51fd\u6570,\u8fd4\u56de\u4e00\u4e2a\u751f\u6210\u5668\u5bf9\u8c61 \u5ef6\u8fdf\u8ba1\u7b97,\u60f0\u6027\u6c42\u503c yield\u4f1a\u6682\u505c\u51fd\u6570 def inc (): for i in range ( 5 ): yield i print ( type ( inc )) print ( type ( inc ())) x = inc () print ( type ( x )) print ( next ( x )) for m in x : print ( m , '*' ) for m in x : print ( m , '**' ) < class ' function '> < class ' generator '> < class ' generator '> 0 1 * 2 * 3 * 4 * \u751f\u6210\u5668\u51fd\u6570\u7b49\u4ef7\u4e8e\u751f\u6210\u5668\u8868\u8fbe\u5f0f,\u53ea\u4e0d\u8fc7\u751f\u6210\u5668\u51fd\u6570\u53ef\u4ee5\u66f4\u52a0\u590d\u6742 def inc (): for i in range ( 5 ): yield i #\u7b49\u4ef7\u4e8ey = (i for i in range(5)) def gen (): print ( 'line 1' ) yield 1 print ( 'line 2' ) yield 2 print ( 'line 3' ) return 3 next ( gen ()) # line 1 next ( gen ()) # line 1 g = gen () print ( next ( g )) # line 1 print ( next ( g )) # line 2 #print(next(g)) # StopIteration next\u65e0\u6cd5\u627e\u5230return\u51fd\u6570,\u53ea\u8ba4\u8bc6yield\u51fd\u6570 print ( next ( g , 'End' )) #end\u76f8\u5f53\u4e8e\u7f3a\u7701\u503c print ( next ( g , 'End' )) line 1 line 1 line 1 1 line 2 2 line 3 End End #\u8f93\u51fa\u4e3a\u53ea\u6709end\u56e0\u4e3a\u7ed3\u675f\u540eg\u7ed3\u675f,\u53ea\u8fd4\u56de\u7f3a\u7701\u503cend \u751f\u6210\u5668\u51fd\u6570\u4e2d,\u53ef\u4ee5\u4f7f\u7528\u591a\u4e2ayield\u8bed\u53e5,\u6267\u884c\u4f9d\u6b21\u540e\u4f1a\u6682\u5b9a\u6267\u884c,\u628ayield\u8868\u8fbe\u5f0f\u7684\u8fd4\u56de\u503c\u7684\u503c\u8fd4\u56de \u518d\u6b21\u8c03\u7528\u4f1a\u6267\u884c\u5230\u4e0b\u4e00\u4e2ayield\u8bed\u53e5 return\u4f9d\u7136\u53ef\u4ee5\u7ec8\u6b62\u51fd\u6570\u8fd0\u884c,(\u4e00\u822c\u4e0d\u52a0),\u4f46return\u8bed\u53e5\u7684\u8fd4\u56de\u503c\u4e0d\u80fd\u88ab\u83b7\u53d6\u5230 return\u4f1a\u5bfc\u81f4\u65e0\u6cd5\u7ee7\u7eed\u83b7\u53d6\u4e0b\u4e00\u4e2a\u503c,\u629b\u51faStopLteration\u5f02\u5e38 \u5982\u679c\u51fd\u6570\u6ca1\u6709\u663e\u793a\u7684return\u8bed\u53e5,\u751f\u6210\u5668\u6267\u884c\u5230\u7ed3\u5c3e,\u7ee7\u7eed\u6267\u884c\u4e5f\u4f1a\u629b\u51faStopLteration\u5f02\u5e38 next\u8bed\u53e5,\u52a8\u4e00\u4e0b\u8d70\u4e00\u6b65","title":"\u751f\u6210\u5668\u51fd\u6570"},{"location":"Python/%E5%9B%9B%E5%BC%8F%E5%9B%9B%E5%99%A8/#_4","text":"\u65e0\u9650\u5faa\u73af:\u4f7f\u7528yield\u8bed\u53e5,\u52a8\u4e00\u4e0b\u8d70\u4e00\u6b65 \u534f\u7a0bcoroutine: \u6bd4\u8fdb\u7a0b,\u7ebf\u7a0b\u8f7b\u91cf\u7ea7 \u65f6\u5728\u7528\u6237\u7a7a\u95f4\u8c03\u5ea6\u51fd\u6570\u7684\u4e00\u79cd\u5b9e\u73b0 \u534f\u7a0b\u8c03\u5ea6\u5668\u5b9e\u73b0\u601d\u8def \u6709\u4e24\u4e2a\u751f\u6210\u5668A.B next(A)\u540e,A\u6267\u884c\u5230\u4e86yield\u8bed\u53e5\u6682\u505c,\u7136\u540e\u53d6\u6267\u884cnext(B),B\u6267\u884c \u5230yield\u4e5f\u6682\u505c,\u7136\u540e\u518d\u6b21\u8c03\u7528next(A),\u518d\u8c03\u7528next(B),\u5468\u800c\u590d\u59cb,\u5b9e\u73b0\u4e86\u8c03\u5ea6\u7684\u6548\u679c \u53ef\u4ee5\u5f15\u5165\u8c03\u5ea6\u7684\u7b56\u7565\u6765\u5b9e\u73b0\u5207\u6362\u7684\u65b9\u5f0f \u534f\u7a0b\u65f6\u4e00\u79cd\u975e\u62a2\u5360\u5f0f\u8c03\u5ea6","title":"\u5e94\u7528"},{"location":"Python/%E5%9B%9B%E5%BC%8F%E5%9B%9B%E5%99%A8/#yield-form","text":"def inc (): for x in range ( 1000 ): yield x #\u7b49\u540c\u4e8e\u4e00\u4e0b\u8bed\u53e5 def inc (): yield from range ( 1000 ) yield from iterable \u662ffor item in iterable : yield item \u5f62\u5f0f\u8bed\u6cd5\u7cd6","title":"yield form \u8bed\u53e5"},{"location":"Python/%E5%9B%9B%E5%BC%8F%E5%9B%9B%E5%99%A8/#_5","text":"for\u8bed\u53e5 \u5f3a\u5236\u7c7b\u578b\u8f6c\u6362 send()\u65b9\u6cd5 next()\u65b9\u6cd5","title":"\u89e6\u53d1\u751f\u6210\u5668\u7684\u6761\u4ef6"},{"location":"Python/%E5%9B%9B%E5%BC%8F%E5%9B%9B%E5%99%A8/#_6","text":"\u53ef\u4ee5\u901a\u8fc7\u8fed\u4ee3\u4e00\u6b21\u6b21\u8fd4\u56de==\u4e0d\u540c\u5143\u7d20==\u7684\u5bf9\u8c61 \u6240\u8c13\u76f8\u540c,\u6307\u7684\u662f\u5143\u7d20\u5728\u5bb9\u5668\u4e2d\u662f\u5426\u4e3a\u540c\u4e00\u4e2a,\u4f46\u662f\u503c\u53ef\u4ee5\u76f8\u540c, \u53ef\u4ee5\u8fed\u4ee3,\u4f46\u672a\u5fc5\u6709\u5e8f,\u672a\u5fc5\u53ef\u7d22\u5f15 list,tuple,string,bytse,bytearray,range,set,dict,\u751f\u6210\u5668\u7b49 \u53ef\u4ee5\u4f7f\u7528\u6210\u5458\u8fd0\u7b97\u7b26in,not in \u672c\u8d28\u4e0a\u5c31\u5728\u904d\u5386\u5bf9\u8c61","title":"\u53ef\u8fed\u4ee3\u5bf9\u8c61"},{"location":"Python/%E5%9B%9B%E5%BC%8F%E5%9B%9B%E5%99%A8/#_7","text":"\u7279\u6b8a\u7684\u5bf9\u8c61,\u4e00\u5b9a\u662f\u53ef\u8fed\u4ee3\u5bf9\u8c61,\u5177\u5907\u53ef\u8fed\u4ee3\u5bf9\u8c61\u7279\u5f81 \u53ef\u4ee5\u901a\u8fc7__iter__\u65b9\u6cd5\u628a\u4e00\u4e2a\u53ef\u8fed\u4ee3\u5bf9\u8c61\u5c01\u88c5\u6210\u8fed\u4ee3\u5668 \u53ef\u4ee5\u901a\u8fc7next\u65b9\u6cd5,\u8fed\u4ee3 \u8fed\u4ee3\u5668\u5bf9\u8c61 \u751f\u6210\u5668\u5bf9\u8c61,\u662f\u8fed\u4ee3\u5668\u5bf9\u8c61","title":"\u8fed\u4ee3\u5668"},{"location":"Python/%E5%9B%9B%E5%BC%8F%E5%9B%9B%E5%99%A8/#python","text":"Python\u7684\u65b9\u6cd5(\u5305\u62ecstaticmethod()\u548cclassnethod())\u90fd\u5b9e\u73b0\u4e3a\u975e\u6570\u636e\u63cf\u8ff0\u5668.\u56e0\u6b64,\u5b9e\u4f8b\u53ef\u4ee5\u91cd\u65b0\u5b9a\u4e49\u548c\u8986\u76d6\u65b9\u6cd5,\u8fd9\u5141\u8bb8\u5355\u4e2a\u5b9e\u4f8b\u83b7\u53d6\u4e0e\u540c\u4e00\u7c7b\u7684\u5176\u4ed6\u5b9e\u4f8b\u7684\u4e0d\u540c\u7684\u884c\u4e3a. property()\u51fd\u6570\u5b9e\u73b0\u4e3a\u4e00\u4e2a\u6570\u636e\u63cf\u8ff0\u5668,\u56e0\u6b64,\u5b9e\u4f8b\u4e0d\u80fd\u8986\u76d6\u5c5e\u6027\u7684\u884c\u4e3a. `python\u4e2d\uff0c\u4e00\u4e2a\u7c7b\u5b9e\u73b0\u4e86__get__,__set__.__delete__\u7684\u4e09\u4e2a\u65b9\u6cd5\u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\u5c31\u662f\u63cf\u8ff0\u5668` ` 1. `` \u5982\u679c\u4ec5\u4ec5\u5b9e\u73b0\u4e86 __get__ . \u5c31\u662f\u975e\u6570\u636e\u63cf\u8ff0\u5668 non `` - `` data descriptor `` 2. `` \u540c\u65f6\u5b9e\u73b0\u4e86 __get__ ,[ __set__ , \u6216 __del__ ] \u5c31\u662f\u6570\u636e\u63cf\u8ff0\u5668\uff0c data descriptor `` \u5982\u679c\u4e00\u4e2a\u7c7b\u7684\u7c7b\u5c5e\u6027\uff0c\u8bbe\u7f6e\u4e3a\u63cf\u8ff0\u5668\uff0c\u90a3\u4e48\u8fd9\u4e2a\u7c7b\u88ab\u79f0\u4e3a owner\u5c5e\u4e3b \uff0c method\u4e5f\u662f\u7c7b\u7684\u5c5e\u6027 `","title":"Python\u4e2d\u7684\u63cf\u8ff0\u5668"},{"location":"Python/%E5%9B%9B%E5%BC%8F%E5%9B%9B%E5%99%A8/#_8","text":"\u52a0\u4e86\u88c5\u9970\u5668\u4e4b\u540e\u8c03\u7528\u539f\u51fd\u6570,\u76f8\u5f53\u4e8e\u8c03\u7528\u88c5\u9970\u5668\u5185\u5c42\u51fd\u6570 \u964d\u4f4e\u4e86\u51fd\u6570\u7684\u8026\u5408\u6027,\u51cf\u5c11\u4fb5\u5165\u5f0f\u4ee3\u7801 @logger def func(): \u200b pass logger\u4e0b\u7684\u51fd\u6570\u540d\u4f5c\u4e3alogger\u7684\u5b9e\u53c2,\u8c03\u7528\u540efunc\u8fd4\u56de\u7684\u662floggerr\u7684\u5185\u5c42\u51fd\u6570 \u88c5\u9970\u5668\u5916\u5c42\u51fd\u6570\u7684\u8fd4\u56de\u503c\u662f\u88c5\u9970\u5668\u5185\u5c42\u51fd\u6570\u7684\u51fd\u6570\u540d def logger ( fn ): def wrapper ( * args , ** kwargs ): print ( 'begin' ) x = fn ( * args , ** kwargs ) print ( 'end' ) return x return wrapper # @logger # \u7b49\u4ef7\u4e8eadd = logger(add) def add ( x , y ): return x + y add = logger ( add ) print ( add ( 45 , 40 )) ---------------------------------------------------- begin end 85","title":"\u88c5\u9970\u5668"},{"location":"Python/%E5%9B%9B%E5%BC%8F%E5%9B%9B%E5%99%A8/#_9","text":"\u662f\u4e00\u4e2a\u51fd\u6570 \u51fd\u6570\u4f5c\u4e3a\u5b83\u7684\u5f62\u53c2 \u8fd4\u56de\u503c\u662f\u4e00\u4e2a\u4e0d\u5e26\u53c2\u7684\u88c5\u9970\u5668\u51fd\u6570 \u4f7f\u7528@functionname(\u53c2\u6570\u5217\u8868)\u65b9\u5f0f\u8c03\u7528 \u53ef\u4ee5\u770b\u4f5c\u5728\u88c5\u9970\u5668\u5916\u5c42\u53c8\u52a0\u4e86\u4e00\u5c42\u51fd\u6570 def \u4f20\u5165\u88c5\u9970\u5668\u5185\u4f7f\u7528\u7684\u53c2\u6570 : def \u8c03\u7528\u88ab\u88c5\u9970\u51fd\u6570 : def \u5b9e\u73b0\u5177\u4f53\u529f\u80fd ( \u4f20\u5165\u88ab\u88c5\u9970\u51fd\u6570\u4f7f\u7528\u7684\u53c2\u6570 )","title":"\u5e26\u53c2\u88c5\u9970\u5668"},{"location":"Python/%E5%9B%9B%E5%BC%8F%E5%9B%9B%E5%99%A8/#functools","text":"functools.update_wrapper(wrapper,wrapped,assigned=WRAPPER_ASSIGNMENTS, updated=WRAPPER_UPDATES) \u7c7b\u4f3ccopy_properties\u529f\u80fd","title":"functools\u6a21\u5757"},{"location":"Python/%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/","text":"\u6570\u636e\u7c7b\u578b \u7c7b\u578b\u5224\u65ad \u6570\u636e\u7c7b\u578b\u5206\u7c7b \u5c01\u88c5\u548c\u89e3\u6784 \u7528\u6237\u4ea4\u4e92 \u8eab\u4efd\u8fd0\u7b97\u7b26 \u7ed3\u6784\u5206\u7c7b \u7ebf\u6027\u7ed3\u6784 \u5207\u7247 \u5c01\u88c5\u548c\u7ed3\u6784 \u6570\u636e\u7c7b\u578b \u00b6 \u7c7b\u578b\u5224\u65ad \u00b6 type()\u51fd\u6570\u5224\u65ad\u6570\u636e\u7c7b\u578b In [ 1 ]: a = \"agsol\" In [ 2 ]: type ( a ) Out [ 2 ]: str \u6570\u636e\u7c7b\u578b\u5206\u7c7b \u00b6 Python\u4e2d\u57fa\u7840\u6570\u636e\u7c7b\u578b \u6570\u636e\u7c7b\u578b \u6807\u8bc6 \u6574\u578b int \u6d6e\u70b9\u578b float \u5b57\u7b26\u4e32 str \u5217\u8868 list \u5143\u7ec4 tuple \u5b57\u5178 dict \u5e03\u5c14\u578b bool \u4e8c\u8fdb\u5236 bytes/bytearray \u96c6\u5408 set \u5c01\u88c5\u548c\u89e3\u6784 \u00b6 Python\u4e2d\u53ef\u4ee5\u4f7f\u7528*\u548c**\u6765\u8fdb\u884c\u6570\u636e\u7684\u89e3\u6784 \u5355\u4e2a\u4e0b\u5212\u7ebf\u8868\u793a\u4e22\u5f03\u53d8\u91cf _ In [ 3 ]: lst = [ 1 , 2 , 3 , 4 , 5 ] In [ 5 ]: print ( * lst ) 1 2 3 4 5 s1,*_ = lst *\u8868\u793a\u63a5\u6536d \u7528\u6237\u4ea4\u4e92 \u00b6 input\u51fd\u6570\u6765\u5b9e\u73b0\u7528\u6237\u7684\u8f93\u5165\u529f\u80fd Python3\u4e2d\u7684input() = python2\u4e2d\u7684raw_input() \u8f93\u51fa\u4e3a\u5b57\u7b26\u4e32\u7c7b\u578b In [ 6 ]: a = input ( 'enter an number:' ) enter an number : 666 In [ 7 ]: a Out [ 7 ]: '666' \u8eab\u4efd\u8fd0\u7b97\u7b26 \u00b6 is \u6bd4\u8f83\u7684\u65f6\u5185\u5b58\u5730\u5740 == \u6bd4\u8f83\u503c\u662f\u5426\u76f8\u540c In [ 14 ]: a = \"tom\" In [ 15 ]: b = a In [ 16 ]: a is b Out [ 16 ]: True In [ 17 ]: print ( a == b ) True \u7ed3\u6784\u5206\u7c7b \u00b6 \u7ebf\u6027\u7ed3\u6784\u7684\u67e5\u8be2\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(n),\u968f\u6570\u636e\u89c4\u6a21\u589e\u5927\u800c\u8017\u65f6\u589e\u52a0 set,dict\u7b49\u975e\u7ebf\u6027\u7ed3\u6784,\u5185\u90e8\u4f7f\u7528hash\u503c\u4f5c\u4e3akey,\u65f6\u95f4\u590d\u6742\u5ea6\u53ef\u4ee5\u505a\u5230O(1),\u67e5\u8be2\u65f6\u95f4\u548c\u6570\u636e\u89c4\u6a21\u65e0\u5173 \u53efhash \u6570\u503c\u578b int,float,complex \u5e03\u5c14\u578b True False \u5b57\u7b26\u4e32 string,bytse tuple None \u4ee5\u4e0a\u90fd\u662f\u4e0d\u53ef\u53d8\u7c7b\u578b,\u6210\u4e3a\u53ef\u54c8\u5e0c\u7c7b\u578b,hashable \u7ebf\u6027\u7ed3\u6784 \u00b6 \u7ebf\u6027\u7ed3\u6784\u7684\u67e5\u8be2\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(n),\u968f\u6570\u636e\u89c4\u6a21\u589e\u5927\u800c\u8017\u65f6\u589e\u52a0 \u5185\u5b58\u4e2d\u4e3a\u8fde\u7eed\u533a\u57df \u53ef\u7528for in \u8fed\u4ee3 len()\u53ef\u83b7\u53d6\u957f\u5ea6 \u53ef\u901a\u591a\u4e0b\u6807\u7d22\u5f15\u8bbf\u95ee \u53ef\u4ee5\u5207\u7247 \u76ee\u524d\u5b66\u7684\u7ebf\u6027\u7ed3\u6784: \u5217\u8868,\u5143\u7ec4,\u5b57\u7b26\u4e32,bytes,bytearray \u5207\u7247 \u00b6 \u901a\u8fc7\u7d22\u5f15\u533a\u95f4\u8bbf\u95ee\u7ebf\u6027\u7ed3\u6784\u7684\u4e00\u6bb5\u6570\u636e sequence[start:stop:step]\u8868\u793a[start,stop)\u533a\u95f4\u7684\u5b50\u5e8f\u5217 \u652f\u6301\u8d1f\u7d22\u5f15,\u4f7f\u7528\u8d1f\u7d22\u5f15\u8f93\u51fa\u7ed3\u679c\u4e3a==\u9006\u5e8f== start\u4e3a0 ,\u53ef\u7701\u7565;stop\u4e3a\u672b\u5c3e,\u53ef\u4ee5\u7701\u7565,step\u4e3a\u6b65\u957f,\u53ef\u6b63\u53ef\u8d1f(step\u8981\u4e0estart;stop\u540c\u5411,\u5426\u5219\u8fd4\u56de\u7a7a\u5e8f\u5217) \u4e24\u4fa7\u8d85\u754c,\u53d6\u5230\u5e8f\u5217\u4e24\u7aef start\u4e00\u5b9a\u8981\u5728stop\u5de6\u8fb9 [:]\u8868\u793a\u4ece\u5934\u53d6\u5230\u4f4d,\u7b49\u4e8ecopy() \u5c01\u88c5\u548c\u7ed3\u6784 \u00b6 \u5c01\u88c5\u4f18\u5148\u7528\u5143\u7ec4,\u89e3\u6784\u4f18\u5148\u7528\u5217\u8868","title":"\u57fa\u672c\u6570\u636e\u7c7b\u578b"},{"location":"Python/%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_1","text":"","title":"\u6570\u636e\u7c7b\u578b"},{"location":"Python/%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_2","text":"type()\u51fd\u6570\u5224\u65ad\u6570\u636e\u7c7b\u578b In [ 1 ]: a = \"agsol\" In [ 2 ]: type ( a ) Out [ 2 ]: str","title":"\u7c7b\u578b\u5224\u65ad"},{"location":"Python/%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_3","text":"Python\u4e2d\u57fa\u7840\u6570\u636e\u7c7b\u578b \u6570\u636e\u7c7b\u578b \u6807\u8bc6 \u6574\u578b int \u6d6e\u70b9\u578b float \u5b57\u7b26\u4e32 str \u5217\u8868 list \u5143\u7ec4 tuple \u5b57\u5178 dict \u5e03\u5c14\u578b bool \u4e8c\u8fdb\u5236 bytes/bytearray \u96c6\u5408 set","title":"\u6570\u636e\u7c7b\u578b\u5206\u7c7b"},{"location":"Python/%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_4","text":"Python\u4e2d\u53ef\u4ee5\u4f7f\u7528*\u548c**\u6765\u8fdb\u884c\u6570\u636e\u7684\u89e3\u6784 \u5355\u4e2a\u4e0b\u5212\u7ebf\u8868\u793a\u4e22\u5f03\u53d8\u91cf _ In [ 3 ]: lst = [ 1 , 2 , 3 , 4 , 5 ] In [ 5 ]: print ( * lst ) 1 2 3 4 5 s1,*_ = lst *\u8868\u793a\u63a5\u6536d","title":"\u5c01\u88c5\u548c\u89e3\u6784"},{"location":"Python/%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_5","text":"input\u51fd\u6570\u6765\u5b9e\u73b0\u7528\u6237\u7684\u8f93\u5165\u529f\u80fd Python3\u4e2d\u7684input() = python2\u4e2d\u7684raw_input() \u8f93\u51fa\u4e3a\u5b57\u7b26\u4e32\u7c7b\u578b In [ 6 ]: a = input ( 'enter an number:' ) enter an number : 666 In [ 7 ]: a Out [ 7 ]: '666'","title":"\u7528\u6237\u4ea4\u4e92"},{"location":"Python/%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_6","text":"is \u6bd4\u8f83\u7684\u65f6\u5185\u5b58\u5730\u5740 == \u6bd4\u8f83\u503c\u662f\u5426\u76f8\u540c In [ 14 ]: a = \"tom\" In [ 15 ]: b = a In [ 16 ]: a is b Out [ 16 ]: True In [ 17 ]: print ( a == b ) True","title":"\u8eab\u4efd\u8fd0\u7b97\u7b26"},{"location":"Python/%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_7","text":"\u7ebf\u6027\u7ed3\u6784\u7684\u67e5\u8be2\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(n),\u968f\u6570\u636e\u89c4\u6a21\u589e\u5927\u800c\u8017\u65f6\u589e\u52a0 set,dict\u7b49\u975e\u7ebf\u6027\u7ed3\u6784,\u5185\u90e8\u4f7f\u7528hash\u503c\u4f5c\u4e3akey,\u65f6\u95f4\u590d\u6742\u5ea6\u53ef\u4ee5\u505a\u5230O(1),\u67e5\u8be2\u65f6\u95f4\u548c\u6570\u636e\u89c4\u6a21\u65e0\u5173 \u53efhash \u6570\u503c\u578b int,float,complex \u5e03\u5c14\u578b True False \u5b57\u7b26\u4e32 string,bytse tuple None \u4ee5\u4e0a\u90fd\u662f\u4e0d\u53ef\u53d8\u7c7b\u578b,\u6210\u4e3a\u53ef\u54c8\u5e0c\u7c7b\u578b,hashable","title":"\u7ed3\u6784\u5206\u7c7b"},{"location":"Python/%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_8","text":"\u7ebf\u6027\u7ed3\u6784\u7684\u67e5\u8be2\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(n),\u968f\u6570\u636e\u89c4\u6a21\u589e\u5927\u800c\u8017\u65f6\u589e\u52a0 \u5185\u5b58\u4e2d\u4e3a\u8fde\u7eed\u533a\u57df \u53ef\u7528for in \u8fed\u4ee3 len()\u53ef\u83b7\u53d6\u957f\u5ea6 \u53ef\u901a\u591a\u4e0b\u6807\u7d22\u5f15\u8bbf\u95ee \u53ef\u4ee5\u5207\u7247 \u76ee\u524d\u5b66\u7684\u7ebf\u6027\u7ed3\u6784: \u5217\u8868,\u5143\u7ec4,\u5b57\u7b26\u4e32,bytes,bytearray","title":"\u7ebf\u6027\u7ed3\u6784"},{"location":"Python/%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_9","text":"\u901a\u8fc7\u7d22\u5f15\u533a\u95f4\u8bbf\u95ee\u7ebf\u6027\u7ed3\u6784\u7684\u4e00\u6bb5\u6570\u636e sequence[start:stop:step]\u8868\u793a[start,stop)\u533a\u95f4\u7684\u5b50\u5e8f\u5217 \u652f\u6301\u8d1f\u7d22\u5f15,\u4f7f\u7528\u8d1f\u7d22\u5f15\u8f93\u51fa\u7ed3\u679c\u4e3a==\u9006\u5e8f== start\u4e3a0 ,\u53ef\u7701\u7565;stop\u4e3a\u672b\u5c3e,\u53ef\u4ee5\u7701\u7565,step\u4e3a\u6b65\u957f,\u53ef\u6b63\u53ef\u8d1f(step\u8981\u4e0estart;stop\u540c\u5411,\u5426\u5219\u8fd4\u56de\u7a7a\u5e8f\u5217) \u4e24\u4fa7\u8d85\u754c,\u53d6\u5230\u5e8f\u5217\u4e24\u7aef start\u4e00\u5b9a\u8981\u5728stop\u5de6\u8fb9 [:]\u8868\u793a\u4ece\u5934\u53d6\u5230\u4f4d,\u7b49\u4e8ecopy()","title":"\u5207\u7247"},{"location":"Python/%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_10","text":"\u5c01\u88c5\u4f18\u5148\u7528\u5143\u7ec4,\u89e3\u6784\u4f18\u5148\u7528\u5217\u8868","title":"\u5c01\u88c5\u548c\u7ed3\u6784"},{"location":"Python/%E5%9F%BA%E6%9C%AC%E8%BF%90%E7%AE%97%E7%AC%A6/","text":"\u7b97\u6570\u8fd0\u7b97\u7b26 \u6bd4\u8f83\u8fd0\u7b97\u7b26 \u8d4b\u503c\u8fd0\u7b97\u7b26 \u903b\u8f91\u8fd0\u7b97\u7b26 \u8eab\u4efd\u8fd0\u7b97\u7b26 \u4f4d\u8fd0\u7b97\u7b26 \u7b97\u6570\u8fd0\u7b97\u7b26 \u00b6 + - * / % ** // \u5176\u4e2d,//\u5730\u677f\u9664\u8868\u793a\u5728\u6570\u8f74\u4e0a\u5411\u4e0b\u53d6\u6574. \u6bd4\u8f83\u8fd0\u7b97\u7b26 \u00b6 == != < > <= >= \u8d4b\u503c\u8fd0\u7b97\u7b26 \u00b6 = += -= *= /= %= **= //= \u903b\u8f91\u8fd0\u7b97\u7b26 \u00b6 and \u4e00\u5047\u5219\u5047 or \u4e00\u771f\u5219\u771f not \u53cd \u4e24\u4e2a\u6574\u578b,and\u8f93\u51fa\u540e\u503c,or \u8f93\u51fa\u524d\u503c \u4f18\u5148\u7ea7:not>and>or \u8eab\u4efd\u8fd0\u7b97\u7b26 \u00b6 is not is \u6bd4\u8f83\u7684\u662f\u5185\u5b58\u5730\u5740 \u4f4d\u8fd0\u7b97\u7b26 \u00b6 \u4f4d\u4e0e\uff0c\u76f8\u5f53\u4e8e\u4f4d\u4e58 \u67090\u52190 \u4f4d\u6216\uff0c\u76f8\u5f53\u4e8e\u4f4d\u52a0 \u5f02\u6216, \u4e24\u5bf9\u5e94\u4f4d\u4e3a\u5f02,\u7ed3\u679c\u4e3a1 << \u5de6\u79fb >>\u53f3\u79fb \u4f4d\u8fd0\u7b97\u7b26 \u8bf4\u660e << \u6309\u4f4d\u5de6\u79fb\uff0c\u5de6\u79fbn\u4f4d\u76f8\u5f53\u4e8e\u4e58\u4ee52\u7684n\u6b21\u65b9 >> \u6309\u4f4d\u53f3\u79fb \uff0c\u5de6\u79fbn\u4f4d\u76f8\u5f53\u4e8e\u9664\u4ee52\u7684n\u6b21\u65b9 & \u6309\u4f4d\u4e0e\uff0c\u4e8c\u8fdb\u5236\u4f4d\u6570\u540c\u4e14\u4e3a1\u7ed3\u679c\u4f4d\u4e3a1 l \u6309\u4f4d\u6216 \uff0c\u4e8c\u8fdb\u5236\u4f4d\u6570\u6216\u67091\u7ed3\u679c\u4f4d\u4e3a1 ^ \u6309\u4f4d\u5f02\u6216 \uff0c\u4e8c\u8fdb\u5236\u4f4d\u6570\u4e0d\u540c\u7ed3\u679c\u4f4d\u4e3a1 ~ \u6309\u4f4d\u53d6\u53cd\uff0c\u4e8c\u8fdb\u5236\u4f4d0\u548c1\u7ed3\u679c\u4f4d\u4e92\u6362","title":"\u57fa\u672c\u8fd0\u7b97\u7b26"},{"location":"Python/%E5%9F%BA%E6%9C%AC%E8%BF%90%E7%AE%97%E7%AC%A6/#_1","text":"+ - * / % ** // \u5176\u4e2d,//\u5730\u677f\u9664\u8868\u793a\u5728\u6570\u8f74\u4e0a\u5411\u4e0b\u53d6\u6574.","title":"\u7b97\u6570\u8fd0\u7b97\u7b26"},{"location":"Python/%E5%9F%BA%E6%9C%AC%E8%BF%90%E7%AE%97%E7%AC%A6/#_2","text":"== != < > <= >=","title":"\u6bd4\u8f83\u8fd0\u7b97\u7b26"},{"location":"Python/%E5%9F%BA%E6%9C%AC%E8%BF%90%E7%AE%97%E7%AC%A6/#_3","text":"= += -= *= /= %= **= //=","title":"\u8d4b\u503c\u8fd0\u7b97\u7b26"},{"location":"Python/%E5%9F%BA%E6%9C%AC%E8%BF%90%E7%AE%97%E7%AC%A6/#_4","text":"and \u4e00\u5047\u5219\u5047 or \u4e00\u771f\u5219\u771f not \u53cd \u4e24\u4e2a\u6574\u578b,and\u8f93\u51fa\u540e\u503c,or \u8f93\u51fa\u524d\u503c \u4f18\u5148\u7ea7:not>and>or","title":"\u903b\u8f91\u8fd0\u7b97\u7b26"},{"location":"Python/%E5%9F%BA%E6%9C%AC%E8%BF%90%E7%AE%97%E7%AC%A6/#_5","text":"is not is \u6bd4\u8f83\u7684\u662f\u5185\u5b58\u5730\u5740","title":"\u8eab\u4efd\u8fd0\u7b97\u7b26"},{"location":"Python/%E5%9F%BA%E6%9C%AC%E8%BF%90%E7%AE%97%E7%AC%A6/#_6","text":"\u4f4d\u4e0e\uff0c\u76f8\u5f53\u4e8e\u4f4d\u4e58 \u67090\u52190 \u4f4d\u6216\uff0c\u76f8\u5f53\u4e8e\u4f4d\u52a0 \u5f02\u6216, \u4e24\u5bf9\u5e94\u4f4d\u4e3a\u5f02,\u7ed3\u679c\u4e3a1 << \u5de6\u79fb >>\u53f3\u79fb \u4f4d\u8fd0\u7b97\u7b26 \u8bf4\u660e << \u6309\u4f4d\u5de6\u79fb\uff0c\u5de6\u79fbn\u4f4d\u76f8\u5f53\u4e8e\u4e58\u4ee52\u7684n\u6b21\u65b9 >> \u6309\u4f4d\u53f3\u79fb \uff0c\u5de6\u79fbn\u4f4d\u76f8\u5f53\u4e8e\u9664\u4ee52\u7684n\u6b21\u65b9 & \u6309\u4f4d\u4e0e\uff0c\u4e8c\u8fdb\u5236\u4f4d\u6570\u540c\u4e14\u4e3a1\u7ed3\u679c\u4f4d\u4e3a1 l \u6309\u4f4d\u6216 \uff0c\u4e8c\u8fdb\u5236\u4f4d\u6570\u6216\u67091\u7ed3\u679c\u4f4d\u4e3a1 ^ \u6309\u4f4d\u5f02\u6216 \uff0c\u4e8c\u8fdb\u5236\u4f4d\u6570\u4e0d\u540c\u7ed3\u679c\u4f4d\u4e3a1 ~ \u6309\u4f4d\u53d6\u53cd\uff0c\u4e8c\u8fdb\u5236\u4f4d0\u548c1\u7ed3\u679c\u4f4d\u4e92\u6362","title":"\u4f4d\u8fd0\u7b97\u7b26"},{"location":"Python/%E5%AD%97%E5%85%B8/","text":"\u5b57\u5178dict \u5b9a\u4e49 \u65b9\u6cd5 \u589e,\u6539 \u5220 \u67e5 \u904d\u5386 \u6709\u5e8f\u5b57\u5178Orderdict 3.6\u53d1\u5e03\u7684\u5b57\u5178\u6539\u8fdb\u7248 \u5b57\u5178dict \u00b6 \u5b57\u5178\u662f\u4e00\u79cd\u53ef\u53d8\u5bb9\u5668\u6570\u636e\u7c7b\u578b,\u53ef\u4ee5\u5b58\u50a8\u4efb\u610f\u7c7b\u578b\u5bf9\u8c61. \u53ef\u53d8\u6570\u636e\u7c7b\u578b,\u4e14\u65e0\u5e8f \u5b57\u5178\u5728 {} \u4e2d\u4f7f\u7528 , \u9694\u5f00\u591a\u4e2a\u952e\u503c\u5bf9, \u5b57\u5178\u4e2d\u7684\u952ekey\u5fc5\u987b\u662f\u4e0d\u53ef\u53d8\u7c7b\u578b,\u4e14\u4e0d\u53ef\u91cd\u590d \u5b57\u5178\u4e2d\u7684\u503cvalue\u7231\u8c01\u8c01,\u968f\u610f \u5b9a\u4e49 \u00b6 \u53ef\u4ee5\u901a\u8fc7 {} \u76f4\u63a5\u5b9a\u4e49,\u4e5f\u53ef\u4ee5\u901a\u8fc7 dict(iterable) \u7684\u65b9\u5f0f\u6765\u5b9a\u4e49 #\u65b9\u5f0f1(\u6700\u5e38\u7528) >>> d = { \"name\" : 'Bob' , \"age\" : 20 , \"score\" : 88 } >>> print ( d ) { 'name' : 'Bob' , 'age' : 20 , 'score' : 88 } # \u65b9\u5f0f2 >>> d = dict ( name = 'Bob' , age = 20 , score = 88 ) >>> print ( d ) { 'name' : 'Bob' , 'age' : 20 , 'score' : 88 } # \u65b9\u5f0f3 >>> d = dict ([[ \"name\" , \"zh\" ], [ \"age\" , \"18\" ]]) >>> print ( d ) { 'name' : 'zh' , 'age' : '18' } # \u65b9\u5f0f4 >>> d = dict ([( \"name\" , \"zh\" ), ( \"age\" , \"18\" )]) >>> print ( d ) { 'name' : 'zh' , 'age' : '18' } \u65b9\u6cd5 \u00b6 \u589e,\u6539 \u00b6 **d[key] = value ** \u82e5key\u5b58\u5728,\u5c06key\u5bf9\u5e94\u7684\u503c\u4fee\u6539\u4e3avalue key\u4e0d\u5b58\u5728\u6dfb\u52a0\u65b0\u7684kv\u5bf9 **update([other]) ** \u4f7f\u7528\u53e6\u4ee5\u5b57\u5178\u7684kv\u5bf9\u66f4\u65b0\u672c\u5b57\u5178 key\u4e0d\u5b58\u5728,\u6dfb\u52a0 key\u5b58\u5728,\u8986\u76d6value\u503c \u5c31\u5730\u4fee\u6539,\u8fd4\u56de\u503c\u4e3aNone \u5220 \u00b6 d.pop(key[,default]) key\u5b58\u5728,\u79fb\u9664key,\u5e76\u8fd4\u56de\u5bf9\u5e94value\u503c key\u4e0d\u5b58\u5728,\u8fd4\u56de\u7ed9\u5b9a\u7684default default\u672a\u8bbe\u7f6e,key\u4e0d\u5b58\u5728\u65f6\u62a5KeyError\u5f02\u5e38 d.popitem() \u79fb\u9664\u5e76\u8fd4\u56de\u4e00\u4e2a\u4efb\u610f\u7684\u952e\u503c\u5bf9 \u4e00\u4e2a\u952e\u503c\u5bf9\u79f0\u4e3a\u4e00\u4e2aitem \u7a7a\u5b57\u5178\u4f7f\u7528popitem\u65f6,\u62a5KeyError\u5f02\u5e38 \u67e5 \u00b6 **dic = d[key] ** \u8fd4\u56dekey\u5bf9\u5e94value,key\u4e0d\u5b58\u5728\u62a5KeyError\u5f02\u5e38 **d.get(key[,default]) ** \u8fd4\u56dekey\u5bf9\u5e94value,key\u4e0d\u5b58\u5728\u8fd4\u56de\u7f3a\u7701\u503c,\u9ed8\u8ba4\u7f3a\u7701\u503cNone **d.setdefault(key[,default]) ** \u8fd4\u56dekey\u5bf9\u5e94value,key\u4e0d\u5b58\u5728,\u6dfb\u52a0kv\u5bf9,\u5e76\u8fd4\u56devalue\u503c\u4e3adefault,default\u9ed8\u8ba4\u503c\u4e3aNone,\u539f\u6765\u5c31\u6709\u7684key,\u4e0d\u6539\u53d8\u5bf9\u5e94value \u904d\u5386 \u00b6 \u5206\u522b\u4f7f\u7528 .keys() , .values() , .items() ;\u6765\u83b7\u53d6\u952e,\u503c,\u952e\u503c\u5bf9\u7684\u503c \u904d\u5386key for i in dic (): print ( i ) for i in dic.keys(): print(i) \u904d\u5386value for i in dic . values (): print ( i ) for i in dic . keys (): print ( dic [ i ]) \u904d\u5386item for i in dic . items (): print ( i ) #\u8f93\u51fa\u952e\u503c\u5bf9\u7ec4\u6210\u7684\u4e8c\u5143\u7ec4 for k , v in dic . items (): print ( k , v ) \u6210\u5458\u8fd0\u7b97\u7b26in :\u53ea\u770bkey \u6709\u5e8f\u5b57\u5178Orderdict \u00b6 \u9700\u8981\u4f7f\u7528\u5230collections\u5305 import collections #\u58f0\u660e\u4e00\u4e2a\u6709\u5e8f\u5b57\u5178\u5bf9\u8c61 dic = collections . OrderedDict () dic [ 'a' ] = 'A' dic [ 'b' ] = 'b' dic [ 'c' ] = 'c' dic [ 'd' ] = 'D' for k , v in dic . items (): print ( k , v ) 3.6\u53d1\u5e03\u7684\u5b57\u5178\u6539\u8fdb\u7248 \u00b6 https://www.cnblogs.com/xiaoyuanqujing/articles/12008689.html","title":"\u5b57\u5178"},{"location":"Python/%E5%AD%97%E5%85%B8/#dict","text":"\u5b57\u5178\u662f\u4e00\u79cd\u53ef\u53d8\u5bb9\u5668\u6570\u636e\u7c7b\u578b,\u53ef\u4ee5\u5b58\u50a8\u4efb\u610f\u7c7b\u578b\u5bf9\u8c61. \u53ef\u53d8\u6570\u636e\u7c7b\u578b,\u4e14\u65e0\u5e8f \u5b57\u5178\u5728 {} \u4e2d\u4f7f\u7528 , \u9694\u5f00\u591a\u4e2a\u952e\u503c\u5bf9, \u5b57\u5178\u4e2d\u7684\u952ekey\u5fc5\u987b\u662f\u4e0d\u53ef\u53d8\u7c7b\u578b,\u4e14\u4e0d\u53ef\u91cd\u590d \u5b57\u5178\u4e2d\u7684\u503cvalue\u7231\u8c01\u8c01,\u968f\u610f","title":"\u5b57\u5178dict"},{"location":"Python/%E5%AD%97%E5%85%B8/#_1","text":"\u53ef\u4ee5\u901a\u8fc7 {} \u76f4\u63a5\u5b9a\u4e49,\u4e5f\u53ef\u4ee5\u901a\u8fc7 dict(iterable) \u7684\u65b9\u5f0f\u6765\u5b9a\u4e49 #\u65b9\u5f0f1(\u6700\u5e38\u7528) >>> d = { \"name\" : 'Bob' , \"age\" : 20 , \"score\" : 88 } >>> print ( d ) { 'name' : 'Bob' , 'age' : 20 , 'score' : 88 } # \u65b9\u5f0f2 >>> d = dict ( name = 'Bob' , age = 20 , score = 88 ) >>> print ( d ) { 'name' : 'Bob' , 'age' : 20 , 'score' : 88 } # \u65b9\u5f0f3 >>> d = dict ([[ \"name\" , \"zh\" ], [ \"age\" , \"18\" ]]) >>> print ( d ) { 'name' : 'zh' , 'age' : '18' } # \u65b9\u5f0f4 >>> d = dict ([( \"name\" , \"zh\" ), ( \"age\" , \"18\" )]) >>> print ( d ) { 'name' : 'zh' , 'age' : '18' }","title":"\u5b9a\u4e49"},{"location":"Python/%E5%AD%97%E5%85%B8/#_2","text":"","title":"\u65b9\u6cd5"},{"location":"Python/%E5%AD%97%E5%85%B8/#_3","text":"**d[key] = value ** \u82e5key\u5b58\u5728,\u5c06key\u5bf9\u5e94\u7684\u503c\u4fee\u6539\u4e3avalue key\u4e0d\u5b58\u5728\u6dfb\u52a0\u65b0\u7684kv\u5bf9 **update([other]) ** \u4f7f\u7528\u53e6\u4ee5\u5b57\u5178\u7684kv\u5bf9\u66f4\u65b0\u672c\u5b57\u5178 key\u4e0d\u5b58\u5728,\u6dfb\u52a0 key\u5b58\u5728,\u8986\u76d6value\u503c \u5c31\u5730\u4fee\u6539,\u8fd4\u56de\u503c\u4e3aNone","title":"\u589e,\u6539"},{"location":"Python/%E5%AD%97%E5%85%B8/#_4","text":"d.pop(key[,default]) key\u5b58\u5728,\u79fb\u9664key,\u5e76\u8fd4\u56de\u5bf9\u5e94value\u503c key\u4e0d\u5b58\u5728,\u8fd4\u56de\u7ed9\u5b9a\u7684default default\u672a\u8bbe\u7f6e,key\u4e0d\u5b58\u5728\u65f6\u62a5KeyError\u5f02\u5e38 d.popitem() \u79fb\u9664\u5e76\u8fd4\u56de\u4e00\u4e2a\u4efb\u610f\u7684\u952e\u503c\u5bf9 \u4e00\u4e2a\u952e\u503c\u5bf9\u79f0\u4e3a\u4e00\u4e2aitem \u7a7a\u5b57\u5178\u4f7f\u7528popitem\u65f6,\u62a5KeyError\u5f02\u5e38","title":"\u5220"},{"location":"Python/%E5%AD%97%E5%85%B8/#_5","text":"**dic = d[key] ** \u8fd4\u56dekey\u5bf9\u5e94value,key\u4e0d\u5b58\u5728\u62a5KeyError\u5f02\u5e38 **d.get(key[,default]) ** \u8fd4\u56dekey\u5bf9\u5e94value,key\u4e0d\u5b58\u5728\u8fd4\u56de\u7f3a\u7701\u503c,\u9ed8\u8ba4\u7f3a\u7701\u503cNone **d.setdefault(key[,default]) ** \u8fd4\u56dekey\u5bf9\u5e94value,key\u4e0d\u5b58\u5728,\u6dfb\u52a0kv\u5bf9,\u5e76\u8fd4\u56devalue\u503c\u4e3adefault,default\u9ed8\u8ba4\u503c\u4e3aNone,\u539f\u6765\u5c31\u6709\u7684key,\u4e0d\u6539\u53d8\u5bf9\u5e94value","title":"\u67e5"},{"location":"Python/%E5%AD%97%E5%85%B8/#_6","text":"\u5206\u522b\u4f7f\u7528 .keys() , .values() , .items() ;\u6765\u83b7\u53d6\u952e,\u503c,\u952e\u503c\u5bf9\u7684\u503c \u904d\u5386key for i in dic (): print ( i ) for i in dic.keys(): print(i) \u904d\u5386value for i in dic . values (): print ( i ) for i in dic . keys (): print ( dic [ i ]) \u904d\u5386item for i in dic . items (): print ( i ) #\u8f93\u51fa\u952e\u503c\u5bf9\u7ec4\u6210\u7684\u4e8c\u5143\u7ec4 for k , v in dic . items (): print ( k , v ) \u6210\u5458\u8fd0\u7b97\u7b26in :\u53ea\u770bkey","title":"\u904d\u5386"},{"location":"Python/%E5%AD%97%E5%85%B8/#orderdict","text":"\u9700\u8981\u4f7f\u7528\u5230collections\u5305 import collections #\u58f0\u660e\u4e00\u4e2a\u6709\u5e8f\u5b57\u5178\u5bf9\u8c61 dic = collections . OrderedDict () dic [ 'a' ] = 'A' dic [ 'b' ] = 'b' dic [ 'c' ] = 'c' dic [ 'd' ] = 'D' for k , v in dic . items (): print ( k , v )","title":"\u6709\u5e8f\u5b57\u5178Orderdict"},{"location":"Python/%E5%AD%97%E5%85%B8/#36","text":"https://www.cnblogs.com/xiaoyuanqujing/articles/12008689.html","title":"3.6\u53d1\u5e03\u7684\u5b57\u5178\u6539\u8fdb\u7248"},{"location":"Python/%E5%AD%97%E7%AC%A6%E4%B8%B2/","text":"\u5b57\u7b26\u4e32 \u5b57\u7b26\u4e32\u7684\u65b9\u6cd5 \u5b57\u7b26\u4e32\u7684\u5206\u5272 \u5b57\u7b26\u4e32\u5927\u5c0f\u5199 \u5b57\u7b26\u4e32\u7684\u4fee\u6539 \u5b57\u7b26\u4e32\u7684\u67e5\u627e(O(n)) \u5b57\u7b26\u4e32\u7684\u5224\u65ad \u5b57\u7b26\u4e32\u7684\u683c\u5f0f\u5316 % f-string str.format \u5b57\u7b26\u4e32\u7684\u8fed\u4ee3 \u9762\u8bd5\u9898 \u5b57\u7b26\u4e32 \u00b6 \u5b57\u7b26\u4e32\u662fPython\u57fa\u7840\u6570\u636e\u7c7b\u578b\u4e4b\u4e00,\u7d22\u5f15\u7b2c\u4e00\u4f4d\u4e3a0\u5f00\u59cb \u4e0d\u53ef\u53d8\u5bf9\u8c61 Unicode\u7c7b\u578b a = r'sssssssss\\n' r/R\u8868\u793a\u5176\u540e\u9762\u5f15\u53f7\u4e2d\u6240\u6709\u5b57\u7b26\u4e3a\u5b57\u7b26\u4e32\u4e2d\u5b57\u7b26,\u4e0d\u505a\u8f6c\u4e49 \u53ef\u8fed\u4ee3 str.join\u65b9\u6cd5 ---- \u8f93\u51fa\u7ed3\u679c\u4e3a\u65b0\u5b57\u7b26\u4e32, str.join() \u62ec\u53f7\u4e2d\u53ef\u8fed\u4ee3\u5bf9\u8c61 python a = 'abcd' b = ','.join(a) lst = ['1','2','3'] c = 'a'.join(lst) b = 'a,b,c,d' c = '1a2a3' python print('\\n'.join(lst)) 1 2 3 str.count() \u8f93\u51fa\u7ed3\u679c\u4e3a\u6574\u578b,\u5b50\u4e32\u5728\u539f\u5b57\u7b26\u4e32\u4e2d\u51fa\u73b0\u7684\u6b21\u6570 \u5b57\u7b26\u4e32\u7684\u65b9\u6cd5 \u00b6 \u5b57\u7b26\u4e32\u7684\u5206\u5272 \u00b6 str.split(seq = None,maxsplit = -1) ---- \u5c06\u5b57\u7b26\u4e32\u6309\u7167\u5206\u9694\u7b26\u5206\u5272\u6210\u82e5\u5e72\u5b57\u7b26\u4e32, \u5e76\u8fd4\u56de\u5217\u8868 seq\u6307\u5b9a\u5206\u5272\u5b57\u7b26\u4e32,\u7f3a\u7701\u60c5\u51b5\u9ed8\u8ba4\u7a7a\u767d\u5b57\u7b26\u4e32\u4f5c\u4e3a\u5206\u9694\u7b26(\u7a7a\u767d\u5b57\u7b26+,\u5c31\u662f\u5305\u62ec\u7a7a\u683c,tab\u7b49\u8fde\u5728\u8bd1\u5668\u90fd\u662f\u7a7a\u767d\u5b57\u7b26),\u5207\u5272\u540e\u5206\u9694\u7b26\u6d88\u5931 maxsplit \u6307\u5b9a\u5206\u5272\u6b21\u6570,-1 \u8868\u793a\u904d\u5386\u6574\u4e2a\u5b57\u7b26\u4e32,\u4e00\u6b21\u5207\u6210\u4e24\u6bb5 str.rsplit()\u4ece\u53f3\u5f80\u5de6\u5207,\u8f93\u51fa\u5217\u8868\u987a\u5e8f\u4e3a\u539f\u6765\u987a\u5e8f,\u4e0d\u4f1a\u53cd\u8f6c str.splitlines([keepends]) \u6309\u6362\u884c\u7b26\\n\\r\u6362\u884c,[True]\u8868\u793a\u4fdd\u7559\u6362\u884c\u7b26 rsplit\u548clsplit\u540c\u7406 In [ 30 ]: a = '0a1a2a3a4a5' In [ 32 ]: a . split ( \"a\" ) Out [ 32 ]: [ '0' , '1' , '2' , '3' , '4' , '5' ] * str.partition(sep) ---(head,sep,tail) \u5c06\u5b57\u7b26\u4e32\u6309\u7167\u5206\u9694\u7b26\u5206\u6210\u4e24\u6bb5,\u8fd4\u56de\u8fd9\u4e24\u6bb5\u548c\u5206\u9694\u7b26\u7684\u5143\u7ec4. * sep\u4e3a\u5206\u9694\u7b26,\u627e\u5230\u7b2c\u4e00\u4e2a\u5206\u5272\u7b26\u540e\u8fd4\u56de\u5934,\u5c3e,\u5206\u9694\u7b26\u4e09\u90e8\u5206;\u82e5\u6ca1\u627e\u5230\u5206\u9694\u7b26,\u8fd4\u56de,\u5b57\u7b26\u4e32,\u4e24\u4e2a\u7a7a\u5143\u7d20\u7684\u4e09\u5143\u7ec4. \u4e0d\u7ed9\u5b9a\u5206\u9694(\u6216\u7ed9\u4e00\u4e2a\u7a7a\u503c)\u7b26\u62a5\u9519, str.rpartition(),\u4ece\u53f3\u5230\u5de6\u5207\u5272,\u82e5\u65e0\u5206\u9694\u7b26,\u8f93\u51fa\u4e24\u4e2a\u7a7a\u503c\u52a0\u539f\u5b57\u7b26\u4e32\u7ec4\u6210\u7684\u4e09\u5143\u7ec4 In [ 30 ]: a = '0a1a2a3a4a5' In [ 33 ]: a . partition ( \"a\" ) Out [ 33 ]: ( '0' , 'a' , '1a2a3a4a5' ) In [ 34 ]: a . partition ( 'b' ) Out [ 34 ]: ( '0a1a2a3a4a5' , '' , '' ) \u5b57\u7b26\u4e32\u5927\u5c0f\u5199 \u00b6 str.upper() \u5168\u5927\u5199 str.lower() \u5168\u5c0f\u5199 str.swapcase() \u5927\u5c0f\u5199\u4e92\u6362 str.capitalize() \u5b57\u7b26\u4e32\u7684\u9996\u5b57\u6bcd\u5927\u5199 str.title() \u5b57\u7b26\u4e32\u7684\u6bcf\u4e2a\u5355\u8bcd\u9996\u5b57\u6bcd\u5927\u5199,\u4ee5\u7a7a\u683c\u4e3a\u5206\u5272\u7684\u8bc6\u522b\u5355\u8bcd \u5b57\u7b26\u4e32\u7684\u4fee\u6539 \u00b6 str.replace(old,new[,count]) \u8fd4\u56de\u65b0\u5b57\u7b26\u4e32 \u5b57\u7b26\u4e32\u4e2d\u627e\u5230 \u5339\u914d\u5b50\u4e32\u66ff\u6362\u4e3a\u65b0\u5b57\u7b26\u4e32,\u8fd4\u56de\u65b0\u5b57\u7b26\u4e32 count\u8868\u793a \u66ff\u6362 \u51e0\u6b21,\u9ed8\u8ba4\u5168\u90e8\u66ff\u6362 str.strip([chars]) \u8fd4\u56de\u65b0\u5b57\u7b26\u4e32, \u9ed8\u8ba4\u9664\u53bb\u4e24\u4fa7\u7a7a\u683c \u62ec\u53f7\u5185\u5b57\u7b26\u4f1a\u4f9d\u6b21\u88ab\u4ece\u4e24\u4fa7\u53bb\u6389 str.lstrip() \u53bb\u5de6\u8fb9 str.lstrip() \u53bb\u53f3\u8fb9 \u5b57\u7b26\u4e32\u7684\u67e5\u627e(O(n)) \u00b6 str.find(sub[,start[,end]]) \u8fd4\u56de\u6574\u578b,\u5728\u6307\u5b9a\u533a\u95f4\u5185[start,end)\u7531==\u5de6\u5230\u53f3==\u67e5\u627e\u5b50\u4e32sub,\u627e\u5230\u8fd4\u56de\u503c\u4e3a\u5b57\u4e32\u7b2c\u4e00\u4e2a\u5b57\u7b26\u7684\u7d22\u5f15,\u6ca1\u627e\u5230\u8fd4\u56de -1, str.rfind(sub[,start[,end]]) \u8fd4\u56de\u6574\u578b,\u5728\u6307\u5b9a\u533a\u95f4\u5185[start,end)\u7531==\u53f3\u5230\u5de6==\u67e5\u627e\u5b50\u4e32sub,\u8fd4\u56de\u503c\u4e3a\u5b57\u4e32\u7b2c\u4e00\u4e2a\u5b57\u7b26\u7684\u7d22\u5f15,\u6ca1\u627e\u5230\u8fd4\u56de -1, str.index(sub[,start[,end]]) \u8fd4\u56de\u6574\u578b,\u5728\u6307\u5b9a\u533a\u95f4\u5185[start,end)\u7531==\u5de6\u5230\u53f3==\u67e5\u627e\u5b50\u4e32sub,\u8fd4\u56de\u503c\u4e3a\u5b57\u4e32\u7b2c\u4e00\u4e2a\u5b57\u7b26\u7684\u7d22\u5f15,\u6ca1\u627e\u5230\u62a5ValueError str.rindex(sub[,start[,end]]) \u8fd4\u56de\u6574\u578b,\u5728\u6307\u5b9a\u533a\u95f4\u5185[start,end)\u7531==\u53f3\u5230\u5de6==\u67e5\u627e\u5b50\u4e32sub,\u8fd4\u56de\u503c\u4e3a\u5b57\u4e32\u7b2c\u4e00\u4e2a\u5b57\u7b26\u7684\u7d22\u5f15,\u6ca1\u627e\u5230\u62a5ValueError str.count(sub[,start[,end]]) \u8fd4\u56de\u6574\u578b,\u5728\u6307\u5b9a\u533a\u95f4\u5185[start,end)\u7531==\u5de6\u5230\u53f3==\u67e5\u627e\u5b50\u4e32\u51fa\u73b0\u7684\u6b21\u6570,\u8fd4\u56de\u503c\u6b21\u6570,\u6ca1\u6709\u8fd4\u56de0 \u5b57\u7b26\u4e32\u7684\u5224\u65ad \u00b6 str.endswith(suffix[,start[,end]]) \u5224\u65ad\u5728\u6307\u5b9a\u533a\u95f4[start,end)\u5185,\u5b57\u7b26\u4e32\u662f\u5426\u4ee5suffix\u7ed3\u5c3e,\u8fd4\u56de\u503c\u4e3a\u5e03\u5c14\u503c,\u524d\u63d0\u59cb\u672b\u4f4d\u7f6e\u8981\u5305\u542b\u5b50\u4e32 str.startswith(prefix[,start[,end]]) \u5224\u65ad\u5728\u6307\u5b9a\u533a\u95f4[start,end)\u5185,\u5b57\u7b26\u4e32\u662f\u5426\u4ee5prefix\u5f00\u5934,\u8fd4\u56de\u503c\u4e3a\u5e03\u5c14\u503c,\u524d\u63d0\u59cb\u672b\u4f4d\u7f6e\u8981\u5305\u542b\u5b50\u4e32 str.isdigit() \u5224\u65ad\u5b57\u7b26\u4e32\u662f\u4e0d\u662f\u53ea\u6709\u6570\u5b57 \u8fd4\u56debool\u578b str.isalpha() \u5224\u65ad\u5b57\u7b26\u4e32\u662f\u4e0d\u662f\u53ea\u6709\u5b57\u6bcd \u8fd4\u56debool\u578b str.isupper() \u5224\u65ad\u5b57\u7b26\u4e32\u662f\u4e0d\u662f\u5168\u5927\u5199 \u8fd4\u56debool\u578b \u5b57\u7b26\u4e32\u7684\u683c\u5f0f\u5316 \u00b6 % \u00b6 'i like %03d' %(20,) \u540e\u9762\u7684%\u540e\u63a5\u5355\u503c,\u5143\u7ec4\u6216\u8005\u5b57\u5178,0\u8868\u793a\u4e0d\u8db3\u7684\u75280\u90e8\u4f4d,3\u8868\u793a\u5171\u4e09\u4f4d \"{}{\u540d\u79f0}\".format(*args,**kwargs) --- \u8f93\u51fa\u5b57\u7b26\u4e32, args\u662f\u4f4d\u7f6e\u53c2\u6570 ,\u662f\u4e00\u4e2a\u5143\u7ec4 kwargs\u662f\u5173\u952e\u5b57\u53c2\u6570,\u662f\u4e00\u4e2a\u5b57\u5178,\u4e0e{}\u4e2d\u5173\u952e\u5b57\u5339\u914d {{}}\u8868\u793a\u6253\u5370\u82b1\u62ec\u53f7 '{0}*{1}={2:< 02}'.format(3,2,2 * 3) \u9ed8\u8ba4\u53f3\u5bf9\u9f50 3\u4e3a0\u4f4d,2\u4e3a1\u4f4d,:<\u4e3a\u5de6\u5bf9\u9f50,0\u4e3a0\u8865\u5145\u5360\u4f4d,^\u4e3a\u5c45\u4e2d,*\u4e3a\u586b\u5145 '{:*^30}'.format('centered') ^\u4e3a\u5c45\u4e2d,*\u4e3a\u586b\u5145 \u8fdb\u5236 'int:{0:d};hex:{0:#x};oct:{0:#o};bin:{0:#b}' . format ( 42 ) 'int:42;hex:0x2a;oct:0o52;bin:0b101010' f-string \u00b6 f'{}'f\u8ba9{}\u5185\u7684\u5b57\u7b26\u4e32\u53d8\u6210\u4e86\u53d8\u91cf\u540d f'{s:*^10}' *\u8865\u4f4d\u7b26,^\u5c45\u4e2d,\u5171\u5341\u4f4d f'{x:.5f}' \u5c0f\u6570\u70b9\u540e5\u4f4d str.format \u00b6 '{0}-{1}'.format(\"\u963f\",\"b\") \u5b57\u7b26\u4e32\u7684\u8fed\u4ee3 \u00b6 \u5b57\u7b26\u4e32\u662f\u53ef\u8fed\u4ee3\u5bf9\u8c61,\u53ef\u4f7f\u7528for\u5faa\u73af\u8fed\u4ee3 In [ 35 ]: s = 'abcdefg' In [ 37 ]: for i in s : ... : print ( i , end = \",\" ) a , b , c , d , e , f , g , \u9762\u8bd5\u9898 \u00b6 \u5c06a='abcd'\u53cd\u8f6c\u8f93\u51fa a = 'abcd' print ( a [:: - 1 ]) >>> cba","title":"\u5b57\u7b26\u4e32"},{"location":"Python/%E5%AD%97%E7%AC%A6%E4%B8%B2/#_1","text":"\u5b57\u7b26\u4e32\u662fPython\u57fa\u7840\u6570\u636e\u7c7b\u578b\u4e4b\u4e00,\u7d22\u5f15\u7b2c\u4e00\u4f4d\u4e3a0\u5f00\u59cb \u4e0d\u53ef\u53d8\u5bf9\u8c61 Unicode\u7c7b\u578b a = r'sssssssss\\n' r/R\u8868\u793a\u5176\u540e\u9762\u5f15\u53f7\u4e2d\u6240\u6709\u5b57\u7b26\u4e3a\u5b57\u7b26\u4e32\u4e2d\u5b57\u7b26,\u4e0d\u505a\u8f6c\u4e49 \u53ef\u8fed\u4ee3 str.join\u65b9\u6cd5 ---- \u8f93\u51fa\u7ed3\u679c\u4e3a\u65b0\u5b57\u7b26\u4e32, str.join() \u62ec\u53f7\u4e2d\u53ef\u8fed\u4ee3\u5bf9\u8c61 python a = 'abcd' b = ','.join(a) lst = ['1','2','3'] c = 'a'.join(lst) b = 'a,b,c,d' c = '1a2a3' python print('\\n'.join(lst)) 1 2 3 str.count() \u8f93\u51fa\u7ed3\u679c\u4e3a\u6574\u578b,\u5b50\u4e32\u5728\u539f\u5b57\u7b26\u4e32\u4e2d\u51fa\u73b0\u7684\u6b21\u6570","title":"\u5b57\u7b26\u4e32"},{"location":"Python/%E5%AD%97%E7%AC%A6%E4%B8%B2/#_2","text":"","title":"\u5b57\u7b26\u4e32\u7684\u65b9\u6cd5"},{"location":"Python/%E5%AD%97%E7%AC%A6%E4%B8%B2/#_3","text":"str.split(seq = None,maxsplit = -1) ---- \u5c06\u5b57\u7b26\u4e32\u6309\u7167\u5206\u9694\u7b26\u5206\u5272\u6210\u82e5\u5e72\u5b57\u7b26\u4e32, \u5e76\u8fd4\u56de\u5217\u8868 seq\u6307\u5b9a\u5206\u5272\u5b57\u7b26\u4e32,\u7f3a\u7701\u60c5\u51b5\u9ed8\u8ba4\u7a7a\u767d\u5b57\u7b26\u4e32\u4f5c\u4e3a\u5206\u9694\u7b26(\u7a7a\u767d\u5b57\u7b26+,\u5c31\u662f\u5305\u62ec\u7a7a\u683c,tab\u7b49\u8fde\u5728\u8bd1\u5668\u90fd\u662f\u7a7a\u767d\u5b57\u7b26),\u5207\u5272\u540e\u5206\u9694\u7b26\u6d88\u5931 maxsplit \u6307\u5b9a\u5206\u5272\u6b21\u6570,-1 \u8868\u793a\u904d\u5386\u6574\u4e2a\u5b57\u7b26\u4e32,\u4e00\u6b21\u5207\u6210\u4e24\u6bb5 str.rsplit()\u4ece\u53f3\u5f80\u5de6\u5207,\u8f93\u51fa\u5217\u8868\u987a\u5e8f\u4e3a\u539f\u6765\u987a\u5e8f,\u4e0d\u4f1a\u53cd\u8f6c str.splitlines([keepends]) \u6309\u6362\u884c\u7b26\\n\\r\u6362\u884c,[True]\u8868\u793a\u4fdd\u7559\u6362\u884c\u7b26 rsplit\u548clsplit\u540c\u7406 In [ 30 ]: a = '0a1a2a3a4a5' In [ 32 ]: a . split ( \"a\" ) Out [ 32 ]: [ '0' , '1' , '2' , '3' , '4' , '5' ] * str.partition(sep) ---(head,sep,tail) \u5c06\u5b57\u7b26\u4e32\u6309\u7167\u5206\u9694\u7b26\u5206\u6210\u4e24\u6bb5,\u8fd4\u56de\u8fd9\u4e24\u6bb5\u548c\u5206\u9694\u7b26\u7684\u5143\u7ec4. * sep\u4e3a\u5206\u9694\u7b26,\u627e\u5230\u7b2c\u4e00\u4e2a\u5206\u5272\u7b26\u540e\u8fd4\u56de\u5934,\u5c3e,\u5206\u9694\u7b26\u4e09\u90e8\u5206;\u82e5\u6ca1\u627e\u5230\u5206\u9694\u7b26,\u8fd4\u56de,\u5b57\u7b26\u4e32,\u4e24\u4e2a\u7a7a\u5143\u7d20\u7684\u4e09\u5143\u7ec4. \u4e0d\u7ed9\u5b9a\u5206\u9694(\u6216\u7ed9\u4e00\u4e2a\u7a7a\u503c)\u7b26\u62a5\u9519, str.rpartition(),\u4ece\u53f3\u5230\u5de6\u5207\u5272,\u82e5\u65e0\u5206\u9694\u7b26,\u8f93\u51fa\u4e24\u4e2a\u7a7a\u503c\u52a0\u539f\u5b57\u7b26\u4e32\u7ec4\u6210\u7684\u4e09\u5143\u7ec4 In [ 30 ]: a = '0a1a2a3a4a5' In [ 33 ]: a . partition ( \"a\" ) Out [ 33 ]: ( '0' , 'a' , '1a2a3a4a5' ) In [ 34 ]: a . partition ( 'b' ) Out [ 34 ]: ( '0a1a2a3a4a5' , '' , '' )","title":"\u5b57\u7b26\u4e32\u7684\u5206\u5272"},{"location":"Python/%E5%AD%97%E7%AC%A6%E4%B8%B2/#_4","text":"str.upper() \u5168\u5927\u5199 str.lower() \u5168\u5c0f\u5199 str.swapcase() \u5927\u5c0f\u5199\u4e92\u6362 str.capitalize() \u5b57\u7b26\u4e32\u7684\u9996\u5b57\u6bcd\u5927\u5199 str.title() \u5b57\u7b26\u4e32\u7684\u6bcf\u4e2a\u5355\u8bcd\u9996\u5b57\u6bcd\u5927\u5199,\u4ee5\u7a7a\u683c\u4e3a\u5206\u5272\u7684\u8bc6\u522b\u5355\u8bcd","title":"\u5b57\u7b26\u4e32\u5927\u5c0f\u5199"},{"location":"Python/%E5%AD%97%E7%AC%A6%E4%B8%B2/#_5","text":"str.replace(old,new[,count]) \u8fd4\u56de\u65b0\u5b57\u7b26\u4e32 \u5b57\u7b26\u4e32\u4e2d\u627e\u5230 \u5339\u914d\u5b50\u4e32\u66ff\u6362\u4e3a\u65b0\u5b57\u7b26\u4e32,\u8fd4\u56de\u65b0\u5b57\u7b26\u4e32 count\u8868\u793a \u66ff\u6362 \u51e0\u6b21,\u9ed8\u8ba4\u5168\u90e8\u66ff\u6362 str.strip([chars]) \u8fd4\u56de\u65b0\u5b57\u7b26\u4e32, \u9ed8\u8ba4\u9664\u53bb\u4e24\u4fa7\u7a7a\u683c \u62ec\u53f7\u5185\u5b57\u7b26\u4f1a\u4f9d\u6b21\u88ab\u4ece\u4e24\u4fa7\u53bb\u6389 str.lstrip() \u53bb\u5de6\u8fb9 str.lstrip() \u53bb\u53f3\u8fb9","title":"\u5b57\u7b26\u4e32\u7684\u4fee\u6539"},{"location":"Python/%E5%AD%97%E7%AC%A6%E4%B8%B2/#on","text":"str.find(sub[,start[,end]]) \u8fd4\u56de\u6574\u578b,\u5728\u6307\u5b9a\u533a\u95f4\u5185[start,end)\u7531==\u5de6\u5230\u53f3==\u67e5\u627e\u5b50\u4e32sub,\u627e\u5230\u8fd4\u56de\u503c\u4e3a\u5b57\u4e32\u7b2c\u4e00\u4e2a\u5b57\u7b26\u7684\u7d22\u5f15,\u6ca1\u627e\u5230\u8fd4\u56de -1, str.rfind(sub[,start[,end]]) \u8fd4\u56de\u6574\u578b,\u5728\u6307\u5b9a\u533a\u95f4\u5185[start,end)\u7531==\u53f3\u5230\u5de6==\u67e5\u627e\u5b50\u4e32sub,\u8fd4\u56de\u503c\u4e3a\u5b57\u4e32\u7b2c\u4e00\u4e2a\u5b57\u7b26\u7684\u7d22\u5f15,\u6ca1\u627e\u5230\u8fd4\u56de -1, str.index(sub[,start[,end]]) \u8fd4\u56de\u6574\u578b,\u5728\u6307\u5b9a\u533a\u95f4\u5185[start,end)\u7531==\u5de6\u5230\u53f3==\u67e5\u627e\u5b50\u4e32sub,\u8fd4\u56de\u503c\u4e3a\u5b57\u4e32\u7b2c\u4e00\u4e2a\u5b57\u7b26\u7684\u7d22\u5f15,\u6ca1\u627e\u5230\u62a5ValueError str.rindex(sub[,start[,end]]) \u8fd4\u56de\u6574\u578b,\u5728\u6307\u5b9a\u533a\u95f4\u5185[start,end)\u7531==\u53f3\u5230\u5de6==\u67e5\u627e\u5b50\u4e32sub,\u8fd4\u56de\u503c\u4e3a\u5b57\u4e32\u7b2c\u4e00\u4e2a\u5b57\u7b26\u7684\u7d22\u5f15,\u6ca1\u627e\u5230\u62a5ValueError str.count(sub[,start[,end]]) \u8fd4\u56de\u6574\u578b,\u5728\u6307\u5b9a\u533a\u95f4\u5185[start,end)\u7531==\u5de6\u5230\u53f3==\u67e5\u627e\u5b50\u4e32\u51fa\u73b0\u7684\u6b21\u6570,\u8fd4\u56de\u503c\u6b21\u6570,\u6ca1\u6709\u8fd4\u56de0","title":"\u5b57\u7b26\u4e32\u7684\u67e5\u627e(O(n))"},{"location":"Python/%E5%AD%97%E7%AC%A6%E4%B8%B2/#_6","text":"str.endswith(suffix[,start[,end]]) \u5224\u65ad\u5728\u6307\u5b9a\u533a\u95f4[start,end)\u5185,\u5b57\u7b26\u4e32\u662f\u5426\u4ee5suffix\u7ed3\u5c3e,\u8fd4\u56de\u503c\u4e3a\u5e03\u5c14\u503c,\u524d\u63d0\u59cb\u672b\u4f4d\u7f6e\u8981\u5305\u542b\u5b50\u4e32 str.startswith(prefix[,start[,end]]) \u5224\u65ad\u5728\u6307\u5b9a\u533a\u95f4[start,end)\u5185,\u5b57\u7b26\u4e32\u662f\u5426\u4ee5prefix\u5f00\u5934,\u8fd4\u56de\u503c\u4e3a\u5e03\u5c14\u503c,\u524d\u63d0\u59cb\u672b\u4f4d\u7f6e\u8981\u5305\u542b\u5b50\u4e32 str.isdigit() \u5224\u65ad\u5b57\u7b26\u4e32\u662f\u4e0d\u662f\u53ea\u6709\u6570\u5b57 \u8fd4\u56debool\u578b str.isalpha() \u5224\u65ad\u5b57\u7b26\u4e32\u662f\u4e0d\u662f\u53ea\u6709\u5b57\u6bcd \u8fd4\u56debool\u578b str.isupper() \u5224\u65ad\u5b57\u7b26\u4e32\u662f\u4e0d\u662f\u5168\u5927\u5199 \u8fd4\u56debool\u578b","title":"\u5b57\u7b26\u4e32\u7684\u5224\u65ad"},{"location":"Python/%E5%AD%97%E7%AC%A6%E4%B8%B2/#_7","text":"","title":"\u5b57\u7b26\u4e32\u7684\u683c\u5f0f\u5316"},{"location":"Python/%E5%AD%97%E7%AC%A6%E4%B8%B2/#_8","text":"'i like %03d' %(20,) \u540e\u9762\u7684%\u540e\u63a5\u5355\u503c,\u5143\u7ec4\u6216\u8005\u5b57\u5178,0\u8868\u793a\u4e0d\u8db3\u7684\u75280\u90e8\u4f4d,3\u8868\u793a\u5171\u4e09\u4f4d \"{}{\u540d\u79f0}\".format(*args,**kwargs) --- \u8f93\u51fa\u5b57\u7b26\u4e32, args\u662f\u4f4d\u7f6e\u53c2\u6570 ,\u662f\u4e00\u4e2a\u5143\u7ec4 kwargs\u662f\u5173\u952e\u5b57\u53c2\u6570,\u662f\u4e00\u4e2a\u5b57\u5178,\u4e0e{}\u4e2d\u5173\u952e\u5b57\u5339\u914d {{}}\u8868\u793a\u6253\u5370\u82b1\u62ec\u53f7 '{0}*{1}={2:< 02}'.format(3,2,2 * 3) \u9ed8\u8ba4\u53f3\u5bf9\u9f50 3\u4e3a0\u4f4d,2\u4e3a1\u4f4d,:<\u4e3a\u5de6\u5bf9\u9f50,0\u4e3a0\u8865\u5145\u5360\u4f4d,^\u4e3a\u5c45\u4e2d,*\u4e3a\u586b\u5145 '{:*^30}'.format('centered') ^\u4e3a\u5c45\u4e2d,*\u4e3a\u586b\u5145 \u8fdb\u5236 'int:{0:d};hex:{0:#x};oct:{0:#o};bin:{0:#b}' . format ( 42 ) 'int:42;hex:0x2a;oct:0o52;bin:0b101010'","title":"%"},{"location":"Python/%E5%AD%97%E7%AC%A6%E4%B8%B2/#f-string","text":"f'{}'f\u8ba9{}\u5185\u7684\u5b57\u7b26\u4e32\u53d8\u6210\u4e86\u53d8\u91cf\u540d f'{s:*^10}' *\u8865\u4f4d\u7b26,^\u5c45\u4e2d,\u5171\u5341\u4f4d f'{x:.5f}' \u5c0f\u6570\u70b9\u540e5\u4f4d","title":"f-string"},{"location":"Python/%E5%AD%97%E7%AC%A6%E4%B8%B2/#strformat","text":"'{0}-{1}'.format(\"\u963f\",\"b\")","title":"str.format"},{"location":"Python/%E5%AD%97%E7%AC%A6%E4%B8%B2/#_9","text":"\u5b57\u7b26\u4e32\u662f\u53ef\u8fed\u4ee3\u5bf9\u8c61,\u53ef\u4f7f\u7528for\u5faa\u73af\u8fed\u4ee3 In [ 35 ]: s = 'abcdefg' In [ 37 ]: for i in s : ... : print ( i , end = \",\" ) a , b , c , d , e , f , g ,","title":"\u5b57\u7b26\u4e32\u7684\u8fed\u4ee3"},{"location":"Python/%E5%AD%97%E7%AC%A6%E4%B8%B2/#_10","text":"\u5c06a='abcd'\u53cd\u8f6c\u8f93\u51fa a = 'abcd' print ( a [:: - 1 ]) >>> cba","title":"\u9762\u8bd5\u9898"},{"location":"Python/%E5%AD%97%E7%AC%A6%E7%BC%96%E7%A0%81/","text":"[toc] \u6587\u672c\u7f16\u8f91\u5668 \u00b6 \u6587\u672c\u7f16\u8f91\u5668 ---- \u5199\u6587\u672c ----- \u5b58\u50a8\u4fe1\u606f chr --- \u8f6c\u6362\u4e3a\u5b57\u7b26\u8f93\u51fa ord --- \u8f6c\u6362\u4e3aascii\u7f16\u7801\u8f93\u51fa Python3\u4e2d,\u5199\u5165\u7a0b\u5e8f\u7684\u7f16\u7801\u65b9\u5f0f\u4f1a\u968fcoding\u5934\u6539\u53d8\u800c\u81ea\u52a8\u6539\u53d8,(Pycharm\u4f18\u5316) Python2\u4e2d,\u5982\u679ccoding\u548cPytharm\u7f16\u7801\u65b9\u5f0f\u4e0d\u4e00\u81f4,\u4f1a\u62a5\u7f16\u7801\u9519\u8bef python 3.x\u9ed8\u8ba4\u7684\u5b57\u7b26\u7f16\u7801\u662funicode\uff0c\u9ed8\u8ba4\u7684\u6587\u4ef6\u7f16\u7801\u662futf-8\u3002 python 2.x\u9ed8\u8ba4\u7684\u5b57\u7b26\u7f16\u7801\u662fASCII\uff0c\u9ed8\u8ba4\u7684\u6587\u4ef6\u7f16\u7801\u4e5f\u662fASCII\u3002 \u7f16\u7801\u7c7b\u578b \u00b6 unicode:\u4e16\u754c\u901a\u7528,\u5185\u5b58\u4e2d\u56fa\u5b9a\u4f7f\u7528Unicode gkb :\u5305\u542bgb2312 ;\u4e2d\u6587\u5e38\u7528\u7f16\u7801\u5f62\u5f0f utf-8:(8-bit Unicode transformation format) \u7701\u5185\u5b58\u7248Unicode,\u5728\u67d0\u4e9b\u4e9a\u6d32\u97f3\u6807\u5b57\u6bcd(\u4e2d\u56fd\u62fc\u97f3)\u65f6\u53ef\u80fd\u4f1a\u51fa\u73b0\u4e71\u7801 \u6570\u5b57\u5360\u4e00\u4f4d,\u5b57\u6bcd\u4e24\u4f4d,\u6c49\u5b57\u4e09\u4f4d\u6216\u56db\u4f4d Python\u89e3\u91ca\u5668\u542f\u52a8\u7684\u4e09\u4e2a\u6d41\u7a0b: \u00b6 \u628a\u5b57\u7b26\u8bfb\u5165Python\u89e3\u91ca\u5668(\u6b64\u65f6Python\u89e3\u91ca\u5668\u76f8\u5f53\u4e8e\u6587\u672c\u7f16\u8f91\u5668) \u8bc6\u522b\u5b57\u7b26, \u5411\u7ec8\u7aef\u6253\u5370\u7ed3\u679c Python2\u9ed8\u8ba4\u4f7f\u7528ASCII\u7801\u8bfb\u5165\u5b57\u7b26;Python3\u9ed8\u8ba4\u4f7f\u7528utf-8\u8bfb\u5165\u5b57\u7b26,\u4f46\u662f\u53ef\u4ee5\u7528coding\u5934\u6765\u6539\u53d8\u8bfb\u5165\u5b57\u7b26 Python2\u4e2d\u50a8\u5b58\u53d8\u91cf\u7528Unicode/coding\u6307\u5b9a\u7f16\u7801\u50a8\u5b58\u53d8\u91cf;Python3\u9ed8\u8ba4\u4f7f\u7528Unicode\u5b58\u50a8\u53d8\u91cf ASCII\u7f16\u7801\u8868","title":"\u5b57\u7b26\u7f16\u7801"},{"location":"Python/%E5%AD%97%E7%AC%A6%E7%BC%96%E7%A0%81/#_1","text":"\u6587\u672c\u7f16\u8f91\u5668 ---- \u5199\u6587\u672c ----- \u5b58\u50a8\u4fe1\u606f chr --- \u8f6c\u6362\u4e3a\u5b57\u7b26\u8f93\u51fa ord --- \u8f6c\u6362\u4e3aascii\u7f16\u7801\u8f93\u51fa Python3\u4e2d,\u5199\u5165\u7a0b\u5e8f\u7684\u7f16\u7801\u65b9\u5f0f\u4f1a\u968fcoding\u5934\u6539\u53d8\u800c\u81ea\u52a8\u6539\u53d8,(Pycharm\u4f18\u5316) Python2\u4e2d,\u5982\u679ccoding\u548cPytharm\u7f16\u7801\u65b9\u5f0f\u4e0d\u4e00\u81f4,\u4f1a\u62a5\u7f16\u7801\u9519\u8bef python 3.x\u9ed8\u8ba4\u7684\u5b57\u7b26\u7f16\u7801\u662funicode\uff0c\u9ed8\u8ba4\u7684\u6587\u4ef6\u7f16\u7801\u662futf-8\u3002 python 2.x\u9ed8\u8ba4\u7684\u5b57\u7b26\u7f16\u7801\u662fASCII\uff0c\u9ed8\u8ba4\u7684\u6587\u4ef6\u7f16\u7801\u4e5f\u662fASCII\u3002","title":"\u6587\u672c\u7f16\u8f91\u5668"},{"location":"Python/%E5%AD%97%E7%AC%A6%E7%BC%96%E7%A0%81/#_2","text":"unicode:\u4e16\u754c\u901a\u7528,\u5185\u5b58\u4e2d\u56fa\u5b9a\u4f7f\u7528Unicode gkb :\u5305\u542bgb2312 ;\u4e2d\u6587\u5e38\u7528\u7f16\u7801\u5f62\u5f0f utf-8:(8-bit Unicode transformation format) \u7701\u5185\u5b58\u7248Unicode,\u5728\u67d0\u4e9b\u4e9a\u6d32\u97f3\u6807\u5b57\u6bcd(\u4e2d\u56fd\u62fc\u97f3)\u65f6\u53ef\u80fd\u4f1a\u51fa\u73b0\u4e71\u7801 \u6570\u5b57\u5360\u4e00\u4f4d,\u5b57\u6bcd\u4e24\u4f4d,\u6c49\u5b57\u4e09\u4f4d\u6216\u56db\u4f4d","title":"\u7f16\u7801\u7c7b\u578b"},{"location":"Python/%E5%AD%97%E7%AC%A6%E7%BC%96%E7%A0%81/#python","text":"\u628a\u5b57\u7b26\u8bfb\u5165Python\u89e3\u91ca\u5668(\u6b64\u65f6Python\u89e3\u91ca\u5668\u76f8\u5f53\u4e8e\u6587\u672c\u7f16\u8f91\u5668) \u8bc6\u522b\u5b57\u7b26, \u5411\u7ec8\u7aef\u6253\u5370\u7ed3\u679c Python2\u9ed8\u8ba4\u4f7f\u7528ASCII\u7801\u8bfb\u5165\u5b57\u7b26;Python3\u9ed8\u8ba4\u4f7f\u7528utf-8\u8bfb\u5165\u5b57\u7b26,\u4f46\u662f\u53ef\u4ee5\u7528coding\u5934\u6765\u6539\u53d8\u8bfb\u5165\u5b57\u7b26 Python2\u4e2d\u50a8\u5b58\u53d8\u91cf\u7528Unicode/coding\u6307\u5b9a\u7f16\u7801\u50a8\u5b58\u53d8\u91cf;Python3\u9ed8\u8ba4\u4f7f\u7528Unicode\u5b58\u50a8\u53d8\u91cf ASCII\u7f16\u7801\u8868","title":"Python\u89e3\u91ca\u5668\u542f\u52a8\u7684\u4e09\u4e2a\u6d41\u7a0b:"},{"location":"Python/%E5%B8%B8%E9%87%8F%E4%B8%8E%E5%8F%98%E9%87%8F/","text":"\u53d8\u91cf ipo \u53d8\u91cf\u7684\u63cf\u8ff0 \u53d8\u91cf\u7684\u7ec4\u6210 \u53d8\u91cf\u540d\u7684\u89c4\u8303: \u5b9a\u4e49\u53d8\u91cf\u7684\u4e24\u79cd\u65b9\u5f0f \u53d8\u91cf\u6253\u5370\u7684\u4e09\u79cd\u5c5e\u6027 \u5e38\u91cf \u5185\u5b58\u7ba1\u7406 \u5783\u573e\u56de\u6536\u673a\u5236 1.\u5f15\u7528\u8ba1\u6570 2.\u6807\u8bb0\u6e05\u9664 3.\u5206\u4ee3\u56de\u6536 \u5c0f\u6574\u6570\u6c60(\u6c60\u4e2d\u6570\u5b57\u4e0d\u4f1a\u89e6\u53d1\u5783\u573e\u56de\u6536\u673a\u5236) \u53d8\u91cf \u00b6 ipo \u00b6 i input p process o output \u53d8\u91cf\u7684\u63cf\u8ff0 \u00b6 \u5b9a\u4e49\u4e16\u95f4\u4e07\u7269\u53d8\u5316\u7684\u72b6\u6001 \u53d8\u91cf\u7684\u7ec4\u6210 \u00b6 \u53d8\u91cf\u540d(\u63cf\u8ff0,\u63a5\u53d7\u53d8\u91cf\u503c) , \u8d4b\u503c\u7b26\u53f7 (\u8d4b\u503c) \u548c\u53d8\u91cf\u503c(\u5177\u4f53\u7684\u503c)\u4e09\u90e8\u5206\u7ec4\u6210 \u53d8\u91cf\u540d\u7684\u89c4\u8303: \u00b6 1.\u53d8\u91cf\u540d\u5fc5\u987b\u8981\u6709\u63cf\u8ff0\u610f\u4e49 2.\u53d8\u91cf\u540d\u7531\u6570\u5b57,\u5b57\u6bcd,\u4e0b\u5212\u7ebf\u7ec4\u6210,\u4e0d\u80fd\u4ee5\u6570\u5b57\u5f00\u5934 3.\u4e0d\u80fd\u4ee5\u5173\u952e\u5b57\u547d\u540d \u5b9a\u4e49\u53d8\u91cf\u7684\u4e24\u79cd\u65b9\u5f0f \u00b6 1.\u4e0b\u5212\u7ebf\u5f0f : my_site 2.\u5927\u9a7c\u5cf0\u4f53: MySite 3.\u5c0f\u9a7c\u5cf0\u4f53 :mySite \u53d8\u91cf\u6253\u5370\u7684\u4e09\u79cd\u5c5e\u6027 \u00b6 1.\u6253\u5370\u503c print(age) 2.\u6253\u5370\u5185\u5b58\u5730\u5740 print(id(age)) 3.\u6253\u5370\u6570\u636e\u7c7b\u578b print(type(age)) \u5e38\u91cf \u00b6 \u7ea6\u5b9a\u4e0d\u53d8\u5316\u7684\u91cf \u5b9a\u4e49:\u53d8\u91cf\u540d\u5168\u5927\u5199 \u5185\u5b58\u7ba1\u7406 \u00b6 \u5b9a\u4e49\u53d8\u91cf\u5e76\u9690\u5f62\u5f00\u8f9f\u4e00\u5757\u5185\u5b58\u7a7a\u95f4 \u5783\u573e\u56de\u6536\u673a\u5236 \u00b6 1.\u5f15\u7528\u8ba1\u6570 \u00b6 \u9488\u5bf9\u53d8\u91cf\u503c,\u88ab\u53d8\u91cf\u540d\u5f15\u7528\u7684\u6b21\u6570 1.\u5bf9\u8c61\u88ab\u521b\u5efa >>> import sys >>> a = 123 >>> sys . getrefcount ( a ) 3 >>> b = 456 >>> sys . getrefcount ( b ) 2 123\u662f\u5c0f\u6574\u6570\u6c60\u4e2d,a\u53c8\u5b9a\u4e49\u4e00\u6b21,getrefcount\u53c8\u8c03\u7528\u4e00\u6b21,\u6240\u4ee5\u662f\u4e09\u6b21 2.\u88ab\u5f15\u7528\u6216\u8c03\u7528 >>> import os >>> a = 456 >>> b = a >>> c = b >>> sys . getrefcount ( a ) 4 >>> sys . getrefcount ( c ) 4 >>> sys . getrefcount ( b ) 4 \u53d8\u91cfa,b,c\u6307\u5411\u6570\u636e456,\u800cgetrefcount\u4e5f\u53ea\u7b97\u4e00\u6b21 \u5faa\u73af\u5f15\u7528\u4f1a\u5bfc\u81f4\u5f15\u7528\u8ba1\u6570\u6c38\u4e0d\u4e3a0,\u7a7a\u95f4\u6c38\u8fdc\u4e0d\u4f1a\u88ab\u91ca\u653e. list1 = [] list2 = [] list1 . append ( list2 ) list2 . append ( list1 ) \u5f53\u4e00\u4e2a\u53d8\u91cf\u503c\u7684\u5f15\u7528\u8ba1\u6570\u4e3a0\u65f6\u5019,\u4f1a\u89e6\u53d1\u5783\u573e\u56de\u6536\u673a\u5236,\u91ca\u653e\u5185\u5b58\u7a7a\u95f4 id() \u6307\u51fa\u53d8\u91cf\u503c\u5728\u5185\u5b58\u7684\u5185\u5b58\u5730\u5740 2.\u6807\u8bb0\u6e05\u9664 \u00b6 \u6807\u8bb0\u6e05\u9664(Mark-Sweep)\u7b97\u6cd5\u662f\u4e00\u79cd\u57fa\u4e8e\u8ffd\u8e2a\u56de\u6536(tracing GC)\u6280\u672f\u5b9e\u73b0\u7684\u5783\u573e\u56de\u6536\u7b97\u6cd5.\u5b83\u5206\u4e3a\u4e24\u4e2a\u9636\u6bb5:\u7b2c\u4e00\u9636\u6bb5\u662f\u6807\u8bb0\u9636\u6bb5,GC\u4f1a\u628a\u6240\u6709\u7684\u6d3b\u52a8\u5bf9\u8c61\u6253\u4e0a\u6807\u8bb0,\u7b2c\u4e8c\u9636\u6bb5\u662f\u628a\u54ea\u4e9b\u6ca1\u6709\u6807\u8bb0\u7684\u5bf9\u8c61\u975e\u6d3b\u52a8\u5bf9\u8c61\u8fdb\u884c\u56de\u6536.\u6839\u5bf9\u8c61\u5c31\u662f\u5168\u5c40\u53d8\u91cf,\u8c03\u7528\u6808,\u5bc4\u5b58\u5668. \u6807\u8bb0\u6e05\u9664\u7b97\u6cd5\u4f5c\u4e3aPython\u7684\u8f85\u52a9\u5783\u573e\u6536\u96c6\u6280\u672f,\u4e3b\u8981\u5904\u7406\u7684\u662f\u4e00\u4e9b\u5bb9\u5668\u7c7b\u5bf9\u8c61,list,dict,tuple\u7b49.Python\u4f7f\u7528\u4e00\u4e2a\u53cc\u5411\u94fe\u8868\u5c06\u8fd9\u4e9b\u5bb9\u5668\u5bf9\u8c61\u7ec4\u7ec7\u8d77\u6765.\u7f3a\u70b9:\u6e05\u9664\u975e\u6d3b\u52a8\u5bf9\u8c61\u524d\u5b83\u5fc5\u987b\u987a\u5e8f\u626b\u63cf\u6574\u4e2a\u5185\u5b58,\u54ea\u6015\u53ea\u5269\u4e0b\u5c0f\u90e8\u5206\u6d3b\u52a8\u5bf9\u8c61\u4e5f\u8981\u626b\u63cf\u6240\u6709\u5bf9\u8c61. 3.\u5206\u4ee3\u56de\u6536 \u00b6 \u5206\u4ee3\u56de\u6536\u662f\u5efa\u7acb\u5728\u6807\u8bb0\u6e05\u9664\u6280\u672f\u57fa\u7840\u4e4b\u4e0a\u7684,\u662f\u4e00\u79cd\u4ee5\u7a7a\u95f4\u6362\u65f6\u95f4\u7684\u64cd\u4f5c\u65b9\u5f0f. Python\u5c06\u5185\u5b58\u6839\u636e\u5bf9\u8c61\u7684\u5b58\u6d3b\u65f6\u95f4\u5212\u5206\u4e3a\u4e0d\u540c\u7684\u96c6\u5408,\u6bcf\u4e2a\u96c6\u5408\u79f0\u4e3a\u4e00\u4e2a\u4ee3,Python\u5c06\u5185\u5b58\u5206\u4e3a\u4e863\u4ee3.\u5206\u522b\u4e3a\u5e74\u8f7b\u4ee3(\u7b2c0\u4ee3),\u4e2d\u5e74\u4ee3(\u7b2c1\u4ee3),\u8001\u5e74\u4ee3(\u7b2c2\u4ee3),\u4ed6\u4eec\u5bf9\u5e94\u7684\u662f3\u4e2a\u94fe\u8868,\u5b83\u4eec\u7684\u5783\u573e\u56de\u6536\u9891\u7387\u968f\u5bf9\u8c61\u7684\u5b58\u6d3b\u65f6\u95f4\u7684\u589e\u5927\u800c\u51cf\u5c0f.\u65b0\u521b\u5efa\u7684\u5bf9\u8c61\u90fd\u4f1a\u5206\u914d\u5728\u5e74\u8f7b\u4ee3,\u5e74\u8f7b\u4ee3\u94fe\u8868\u7684\u603b\u6570\u8fbe\u5230\u4e0a\u9650\u65f6,Python\u5783\u573e\u56de\u6536\u673a\u5236\u5c31\u4f1a\u88ab\u89e6\u53d1,\u628a\u90a3\u4e9b\u53ef\u4ee5\u88ab\u56de\u6536\u7684\u5bf9\u8c61\u56de\u6536\u6389,\u800c\u90a3\u4e9b\u4e0d\u4f1a\u56de\u6536\u7684\u5bf9\u8c61\u5c31\u4f1a\u88ab\u79fb\u5230\u4e2d\u5e74\u4ee3,\u4ee5\u6b64\u7c7b\u63a8,\u8001\u5e74\u4ee3\u4e2d\u7684\u5bf9\u8c61\u662f\u5b58\u6d3b\u65f6\u95f4\u6700\u4e45\u7684\u5bf9\u8c61,\u751a\u81f3\u662f\u5b58\u6d3b\u4e8e\u6574\u4e2a\u7cfb\u7edf\u7684\u751f\u547d\u5468\u671f\u5185. \u5206\u4ee3\u6280\u672f\u662f\u4e00\u79cd\u5178\u578b\u7684\u4ee5\u7a7a\u95f4\u6362\u65f6\u95f4\u7684\u6280\u672f\uff0c\u8fd9\u4e5f\u6b63\u662fjava\u91cc\u7684\u5173\u952e\u6280\u672f\u3002\u8fd9\u79cd\u601d\u60f3\u7b80\u5355\u70b9\u8bf4\u5c31\u662f\uff1a\u5bf9\u8c61\u5b58\u5728\u65f6\u95f4\u8d8a\u957f\uff0c\u8d8a\u53ef\u80fd\u4e0d\u662f\u5783\u573e\uff0c\u5e94\u8be5\u8d8a\u5c11\u53bb\u6536\u96c6\u3002 \u8fd9\u6837\u7684\u601d\u60f3\uff0c\u53ef\u4ee5\u51cf\u5c11\u6807\u8bb0-\u6e05\u9664\u673a\u5236\u6240\u5e26\u6765\u7684\u989d\u5916\u64cd\u4f5c\u3002\u5206\u4ee3\u5c31\u662f\u5c06\u56de\u6536\u5bf9\u8c61\u5206\u6210\u6570\u4e2a\u4ee3\uff0c\u6bcf\u4e2a\u4ee3\u5c31\u662f\u4e00\u4e2a\u94fe\u8868\uff08\u96c6\u5408\uff09\uff0c\u4ee3\u8fdb\u884c\u6807\u8bb0-\u6e05\u9664\u7684\u65f6\u95f4\u4e0e\u4ee3\u5185\u5bf9\u8c61 \u5b58\u6d3b\u65f6\u95f4\u6210\u6b63\u6bd4\u4f8b\u5173\u7cfb\u3002 \u4ece\u4e0a\u9762\u4ee3\u7801\u53ef\u4ee5\u770b\u51fapython\u91cc\u4e00\u5171\u6709\u4e09\u4ee3\uff0c\u6bcf\u4e2a\u4ee3\u7684threshold\u503c\u8868\u793a\u8be5\u4ee3\u6700\u591a\u5bb9\u7eb3\u5bf9\u8c61\u7684\u4e2a\u6570\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5f530\u4ee3\u8d85\u8fc7700,\u62161\uff0c2\u4ee3\u8d85\u8fc710\uff0c\u5783\u573e\u56de\u6536\u673a\u5236\u5c06\u89e6\u53d1\u3002 0\u4ee3\u89e6\u53d1\u5c06\u6e05\u7406\u6240\u6709\u4e09\u4ee3\uff0c1\u4ee3\u89e6\u53d1\u4f1a\u6e05\u74061,2\u4ee3\uff0c2\u4ee3\u89e6\u53d1\u540e\u53ea\u4f1a\u6e05\u7406\u81ea\u5df1\u3002 https://blog.csdn.net/qq_43029747/article/details/99846548 https://blog.csdn.net/wxfghy/article/details/80901488 \u5c0f\u6574\u6570\u6c60(\u6c60\u4e2d\u6570\u5b57\u4e0d\u4f1a\u89e6\u53d1\u5783\u573e\u56de\u6536\u673a\u5236) \u00b6 python\u542f\u52a8\u65f6,\u4f1a\u81ea\u52a8\u5b9a\u4e49[-5,256]\u4e4b\u95f4\u7684\u6574\u6570\u53d8\u91cf,\u5185\u5b58\u7a7a\u95f4\u5199\u6b7b (pycharm\u4f1a\u6269\u5927\u6574\u6570\u6c60,\u77ed\u5e73\u5feb)","title":"\u5e38\u91cf\u4e0e\u53d8\u91cf"},{"location":"Python/%E5%B8%B8%E9%87%8F%E4%B8%8E%E5%8F%98%E9%87%8F/#_1","text":"","title":"\u53d8\u91cf"},{"location":"Python/%E5%B8%B8%E9%87%8F%E4%B8%8E%E5%8F%98%E9%87%8F/#ipo","text":"i input p process o output","title":"ipo"},{"location":"Python/%E5%B8%B8%E9%87%8F%E4%B8%8E%E5%8F%98%E9%87%8F/#_2","text":"\u5b9a\u4e49\u4e16\u95f4\u4e07\u7269\u53d8\u5316\u7684\u72b6\u6001","title":"\u53d8\u91cf\u7684\u63cf\u8ff0"},{"location":"Python/%E5%B8%B8%E9%87%8F%E4%B8%8E%E5%8F%98%E9%87%8F/#_3","text":"\u53d8\u91cf\u540d(\u63cf\u8ff0,\u63a5\u53d7\u53d8\u91cf\u503c) , \u8d4b\u503c\u7b26\u53f7 (\u8d4b\u503c) \u548c\u53d8\u91cf\u503c(\u5177\u4f53\u7684\u503c)\u4e09\u90e8\u5206\u7ec4\u6210","title":"\u53d8\u91cf\u7684\u7ec4\u6210"},{"location":"Python/%E5%B8%B8%E9%87%8F%E4%B8%8E%E5%8F%98%E9%87%8F/#_4","text":"1.\u53d8\u91cf\u540d\u5fc5\u987b\u8981\u6709\u63cf\u8ff0\u610f\u4e49 2.\u53d8\u91cf\u540d\u7531\u6570\u5b57,\u5b57\u6bcd,\u4e0b\u5212\u7ebf\u7ec4\u6210,\u4e0d\u80fd\u4ee5\u6570\u5b57\u5f00\u5934 3.\u4e0d\u80fd\u4ee5\u5173\u952e\u5b57\u547d\u540d","title":"\u53d8\u91cf\u540d\u7684\u89c4\u8303:"},{"location":"Python/%E5%B8%B8%E9%87%8F%E4%B8%8E%E5%8F%98%E9%87%8F/#_5","text":"1.\u4e0b\u5212\u7ebf\u5f0f : my_site 2.\u5927\u9a7c\u5cf0\u4f53: MySite 3.\u5c0f\u9a7c\u5cf0\u4f53 :mySite","title":"\u5b9a\u4e49\u53d8\u91cf\u7684\u4e24\u79cd\u65b9\u5f0f"},{"location":"Python/%E5%B8%B8%E9%87%8F%E4%B8%8E%E5%8F%98%E9%87%8F/#_6","text":"1.\u6253\u5370\u503c print(age) 2.\u6253\u5370\u5185\u5b58\u5730\u5740 print(id(age)) 3.\u6253\u5370\u6570\u636e\u7c7b\u578b print(type(age))","title":"\u53d8\u91cf\u6253\u5370\u7684\u4e09\u79cd\u5c5e\u6027"},{"location":"Python/%E5%B8%B8%E9%87%8F%E4%B8%8E%E5%8F%98%E9%87%8F/#_7","text":"\u7ea6\u5b9a\u4e0d\u53d8\u5316\u7684\u91cf \u5b9a\u4e49:\u53d8\u91cf\u540d\u5168\u5927\u5199","title":"\u5e38\u91cf"},{"location":"Python/%E5%B8%B8%E9%87%8F%E4%B8%8E%E5%8F%98%E9%87%8F/#_8","text":"\u5b9a\u4e49\u53d8\u91cf\u5e76\u9690\u5f62\u5f00\u8f9f\u4e00\u5757\u5185\u5b58\u7a7a\u95f4","title":"\u5185\u5b58\u7ba1\u7406"},{"location":"Python/%E5%B8%B8%E9%87%8F%E4%B8%8E%E5%8F%98%E9%87%8F/#_9","text":"","title":"\u5783\u573e\u56de\u6536\u673a\u5236"},{"location":"Python/%E5%B8%B8%E9%87%8F%E4%B8%8E%E5%8F%98%E9%87%8F/#1","text":"\u9488\u5bf9\u53d8\u91cf\u503c,\u88ab\u53d8\u91cf\u540d\u5f15\u7528\u7684\u6b21\u6570 1.\u5bf9\u8c61\u88ab\u521b\u5efa >>> import sys >>> a = 123 >>> sys . getrefcount ( a ) 3 >>> b = 456 >>> sys . getrefcount ( b ) 2 123\u662f\u5c0f\u6574\u6570\u6c60\u4e2d,a\u53c8\u5b9a\u4e49\u4e00\u6b21,getrefcount\u53c8\u8c03\u7528\u4e00\u6b21,\u6240\u4ee5\u662f\u4e09\u6b21 2.\u88ab\u5f15\u7528\u6216\u8c03\u7528 >>> import os >>> a = 456 >>> b = a >>> c = b >>> sys . getrefcount ( a ) 4 >>> sys . getrefcount ( c ) 4 >>> sys . getrefcount ( b ) 4 \u53d8\u91cfa,b,c\u6307\u5411\u6570\u636e456,\u800cgetrefcount\u4e5f\u53ea\u7b97\u4e00\u6b21 \u5faa\u73af\u5f15\u7528\u4f1a\u5bfc\u81f4\u5f15\u7528\u8ba1\u6570\u6c38\u4e0d\u4e3a0,\u7a7a\u95f4\u6c38\u8fdc\u4e0d\u4f1a\u88ab\u91ca\u653e. list1 = [] list2 = [] list1 . append ( list2 ) list2 . append ( list1 ) \u5f53\u4e00\u4e2a\u53d8\u91cf\u503c\u7684\u5f15\u7528\u8ba1\u6570\u4e3a0\u65f6\u5019,\u4f1a\u89e6\u53d1\u5783\u573e\u56de\u6536\u673a\u5236,\u91ca\u653e\u5185\u5b58\u7a7a\u95f4 id() \u6307\u51fa\u53d8\u91cf\u503c\u5728\u5185\u5b58\u7684\u5185\u5b58\u5730\u5740","title":"1.\u5f15\u7528\u8ba1\u6570"},{"location":"Python/%E5%B8%B8%E9%87%8F%E4%B8%8E%E5%8F%98%E9%87%8F/#2","text":"\u6807\u8bb0\u6e05\u9664(Mark-Sweep)\u7b97\u6cd5\u662f\u4e00\u79cd\u57fa\u4e8e\u8ffd\u8e2a\u56de\u6536(tracing GC)\u6280\u672f\u5b9e\u73b0\u7684\u5783\u573e\u56de\u6536\u7b97\u6cd5.\u5b83\u5206\u4e3a\u4e24\u4e2a\u9636\u6bb5:\u7b2c\u4e00\u9636\u6bb5\u662f\u6807\u8bb0\u9636\u6bb5,GC\u4f1a\u628a\u6240\u6709\u7684\u6d3b\u52a8\u5bf9\u8c61\u6253\u4e0a\u6807\u8bb0,\u7b2c\u4e8c\u9636\u6bb5\u662f\u628a\u54ea\u4e9b\u6ca1\u6709\u6807\u8bb0\u7684\u5bf9\u8c61\u975e\u6d3b\u52a8\u5bf9\u8c61\u8fdb\u884c\u56de\u6536.\u6839\u5bf9\u8c61\u5c31\u662f\u5168\u5c40\u53d8\u91cf,\u8c03\u7528\u6808,\u5bc4\u5b58\u5668. \u6807\u8bb0\u6e05\u9664\u7b97\u6cd5\u4f5c\u4e3aPython\u7684\u8f85\u52a9\u5783\u573e\u6536\u96c6\u6280\u672f,\u4e3b\u8981\u5904\u7406\u7684\u662f\u4e00\u4e9b\u5bb9\u5668\u7c7b\u5bf9\u8c61,list,dict,tuple\u7b49.Python\u4f7f\u7528\u4e00\u4e2a\u53cc\u5411\u94fe\u8868\u5c06\u8fd9\u4e9b\u5bb9\u5668\u5bf9\u8c61\u7ec4\u7ec7\u8d77\u6765.\u7f3a\u70b9:\u6e05\u9664\u975e\u6d3b\u52a8\u5bf9\u8c61\u524d\u5b83\u5fc5\u987b\u987a\u5e8f\u626b\u63cf\u6574\u4e2a\u5185\u5b58,\u54ea\u6015\u53ea\u5269\u4e0b\u5c0f\u90e8\u5206\u6d3b\u52a8\u5bf9\u8c61\u4e5f\u8981\u626b\u63cf\u6240\u6709\u5bf9\u8c61.","title":"2.\u6807\u8bb0\u6e05\u9664"},{"location":"Python/%E5%B8%B8%E9%87%8F%E4%B8%8E%E5%8F%98%E9%87%8F/#3","text":"\u5206\u4ee3\u56de\u6536\u662f\u5efa\u7acb\u5728\u6807\u8bb0\u6e05\u9664\u6280\u672f\u57fa\u7840\u4e4b\u4e0a\u7684,\u662f\u4e00\u79cd\u4ee5\u7a7a\u95f4\u6362\u65f6\u95f4\u7684\u64cd\u4f5c\u65b9\u5f0f. Python\u5c06\u5185\u5b58\u6839\u636e\u5bf9\u8c61\u7684\u5b58\u6d3b\u65f6\u95f4\u5212\u5206\u4e3a\u4e0d\u540c\u7684\u96c6\u5408,\u6bcf\u4e2a\u96c6\u5408\u79f0\u4e3a\u4e00\u4e2a\u4ee3,Python\u5c06\u5185\u5b58\u5206\u4e3a\u4e863\u4ee3.\u5206\u522b\u4e3a\u5e74\u8f7b\u4ee3(\u7b2c0\u4ee3),\u4e2d\u5e74\u4ee3(\u7b2c1\u4ee3),\u8001\u5e74\u4ee3(\u7b2c2\u4ee3),\u4ed6\u4eec\u5bf9\u5e94\u7684\u662f3\u4e2a\u94fe\u8868,\u5b83\u4eec\u7684\u5783\u573e\u56de\u6536\u9891\u7387\u968f\u5bf9\u8c61\u7684\u5b58\u6d3b\u65f6\u95f4\u7684\u589e\u5927\u800c\u51cf\u5c0f.\u65b0\u521b\u5efa\u7684\u5bf9\u8c61\u90fd\u4f1a\u5206\u914d\u5728\u5e74\u8f7b\u4ee3,\u5e74\u8f7b\u4ee3\u94fe\u8868\u7684\u603b\u6570\u8fbe\u5230\u4e0a\u9650\u65f6,Python\u5783\u573e\u56de\u6536\u673a\u5236\u5c31\u4f1a\u88ab\u89e6\u53d1,\u628a\u90a3\u4e9b\u53ef\u4ee5\u88ab\u56de\u6536\u7684\u5bf9\u8c61\u56de\u6536\u6389,\u800c\u90a3\u4e9b\u4e0d\u4f1a\u56de\u6536\u7684\u5bf9\u8c61\u5c31\u4f1a\u88ab\u79fb\u5230\u4e2d\u5e74\u4ee3,\u4ee5\u6b64\u7c7b\u63a8,\u8001\u5e74\u4ee3\u4e2d\u7684\u5bf9\u8c61\u662f\u5b58\u6d3b\u65f6\u95f4\u6700\u4e45\u7684\u5bf9\u8c61,\u751a\u81f3\u662f\u5b58\u6d3b\u4e8e\u6574\u4e2a\u7cfb\u7edf\u7684\u751f\u547d\u5468\u671f\u5185. \u5206\u4ee3\u6280\u672f\u662f\u4e00\u79cd\u5178\u578b\u7684\u4ee5\u7a7a\u95f4\u6362\u65f6\u95f4\u7684\u6280\u672f\uff0c\u8fd9\u4e5f\u6b63\u662fjava\u91cc\u7684\u5173\u952e\u6280\u672f\u3002\u8fd9\u79cd\u601d\u60f3\u7b80\u5355\u70b9\u8bf4\u5c31\u662f\uff1a\u5bf9\u8c61\u5b58\u5728\u65f6\u95f4\u8d8a\u957f\uff0c\u8d8a\u53ef\u80fd\u4e0d\u662f\u5783\u573e\uff0c\u5e94\u8be5\u8d8a\u5c11\u53bb\u6536\u96c6\u3002 \u8fd9\u6837\u7684\u601d\u60f3\uff0c\u53ef\u4ee5\u51cf\u5c11\u6807\u8bb0-\u6e05\u9664\u673a\u5236\u6240\u5e26\u6765\u7684\u989d\u5916\u64cd\u4f5c\u3002\u5206\u4ee3\u5c31\u662f\u5c06\u56de\u6536\u5bf9\u8c61\u5206\u6210\u6570\u4e2a\u4ee3\uff0c\u6bcf\u4e2a\u4ee3\u5c31\u662f\u4e00\u4e2a\u94fe\u8868\uff08\u96c6\u5408\uff09\uff0c\u4ee3\u8fdb\u884c\u6807\u8bb0-\u6e05\u9664\u7684\u65f6\u95f4\u4e0e\u4ee3\u5185\u5bf9\u8c61 \u5b58\u6d3b\u65f6\u95f4\u6210\u6b63\u6bd4\u4f8b\u5173\u7cfb\u3002 \u4ece\u4e0a\u9762\u4ee3\u7801\u53ef\u4ee5\u770b\u51fapython\u91cc\u4e00\u5171\u6709\u4e09\u4ee3\uff0c\u6bcf\u4e2a\u4ee3\u7684threshold\u503c\u8868\u793a\u8be5\u4ee3\u6700\u591a\u5bb9\u7eb3\u5bf9\u8c61\u7684\u4e2a\u6570\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5f530\u4ee3\u8d85\u8fc7700,\u62161\uff0c2\u4ee3\u8d85\u8fc710\uff0c\u5783\u573e\u56de\u6536\u673a\u5236\u5c06\u89e6\u53d1\u3002 0\u4ee3\u89e6\u53d1\u5c06\u6e05\u7406\u6240\u6709\u4e09\u4ee3\uff0c1\u4ee3\u89e6\u53d1\u4f1a\u6e05\u74061,2\u4ee3\uff0c2\u4ee3\u89e6\u53d1\u540e\u53ea\u4f1a\u6e05\u7406\u81ea\u5df1\u3002 https://blog.csdn.net/qq_43029747/article/details/99846548 https://blog.csdn.net/wxfghy/article/details/80901488","title":"3.\u5206\u4ee3\u56de\u6536"},{"location":"Python/%E5%B8%B8%E9%87%8F%E4%B8%8E%E5%8F%98%E9%87%8F/#_10","text":"python\u542f\u52a8\u65f6,\u4f1a\u81ea\u52a8\u5b9a\u4e49[-5,256]\u4e4b\u95f4\u7684\u6574\u6570\u53d8\u91cf,\u5185\u5b58\u7a7a\u95f4\u5199\u6b7b (pycharm\u4f1a\u6269\u5927\u6574\u6570\u6c60,\u77ed\u5e73\u5feb)","title":"\u5c0f\u6574\u6570\u6c60(\u6c60\u4e2d\u6570\u5b57\u4e0d\u4f1a\u89e6\u53d1\u5783\u573e\u56de\u6536\u673a\u5236)"},{"location":"Python/%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/","text":"\u5f02\u5e38\u5904\u7406 try\u5de5\u4f5c\u539f\u7406 \u5f02\u5e38\u5904\u7406 \u00b6 try : < \u8bed\u53e5 > #\u8fd0\u884c\u7684\u4ee3\u7801 except < \u5f02\u5e38\u7c7b > : < \u8bed\u53e5 > # \u6355\u83b7\u67d0\u79cd\u7c7b\u578b\u7684\u5f02\u5e38 except < \u5f02\u5e38\u7c7b > as < \u53d8\u91cf\u540d > \uff1a < \u8bed\u53e5 > # \u6355\u83b7\u67d0\u5468\u7c7b\u578b\u7684\u5f02\u5e38\u5e76\u83b7\u5f97\u5176\u5bf9\u8c61 else \uff1a < \u8bed\u53e5 > # \u5982\u679c\u6ca1\u6709\u53d1\u5f02\u5e38\u53d1\u751f finally \uff1a < \u8bed\u53e5 > # \u9000\u51fatry\u65f6\u603b\u4f1a\u6267\u884c try\u5de5\u4f5c\u539f\u7406 \u00b6 \u5982\u679ctry\u4e2d\u8bed\u53e5\u4e2d\u6267\u884c\u65f6\u53d1\u751f\u5f02\u5e38\uff0c\u641c\u7d22except\u5b50\u53e5\uff0c\u5e76\u6267\u884c\u7b2c\u4e00\u4e2a\u5339\u914d\u8be5\u5f02\u5e38\u7684except\u5b50\u53e5 \u5982\u679ctry\u4e2d\u8bed\u53e5\u6267\u884c\u65f6\u53d1\u751f\u5f02\u5e38\uff0c\u5374\u5185\u6709\u5339\u914d\u7684except\u5b50\u53e5\uff0c\u5f02\u5e38\u5c06\u88ab\u9012\u4ea4\u7ed9\u5916\u5c42\u7684try\uff0c\u5982\u679c\u5916\u5c42\u4e0d\u5904\u7406\u8fd9\u4e2a\u5f02\u5e38\uff0c\u5f02\u5e38\u5c06\u7ee7\u7eed\u5411\u5916\u66fe\u4f20\u9012\u3002\u5982\u679c\u90fd\u4e0d\u5904\u7406\u8fd9\u4e2a\u5f02\u5e38\uff0c\u5219\u4f1a\u4f20\u9012\u5230\u6700\u5916\u5c42\uff0c\u5982\u679c\u8fd8\u5185\u6709\u5904\u7406\uff0c\u5c31\u7ec8\u6b62\u5f02\u5e38\u6240\u5728\u7684\u7ebf\u7a0b\u3002 \u5982\u679c\u5728try\u6267\u884c\u65f6\u6ca1\u6709\u53d1\u751f\u5f02\u5e38\uff0c\u5c06\u6267\u884celse\u5b50\u53e5\u4e2d\u7684\u8bed\u53e5\u3002 \u65e0\u8bbatry\u4e2d\u662f\u5426\u53d1\u751f\u5f02\u5e38\uff0cfinally\u5b50\u53e5\u6700\u7ec8\u90fd\u4f1a\u6267\u884c\u3002","title":"\u5f02\u5e38\u5904\u7406"},{"location":"Python/%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/#_1","text":"try : < \u8bed\u53e5 > #\u8fd0\u884c\u7684\u4ee3\u7801 except < \u5f02\u5e38\u7c7b > : < \u8bed\u53e5 > # \u6355\u83b7\u67d0\u79cd\u7c7b\u578b\u7684\u5f02\u5e38 except < \u5f02\u5e38\u7c7b > as < \u53d8\u91cf\u540d > \uff1a < \u8bed\u53e5 > # \u6355\u83b7\u67d0\u5468\u7c7b\u578b\u7684\u5f02\u5e38\u5e76\u83b7\u5f97\u5176\u5bf9\u8c61 else \uff1a < \u8bed\u53e5 > # \u5982\u679c\u6ca1\u6709\u53d1\u5f02\u5e38\u53d1\u751f finally \uff1a < \u8bed\u53e5 > # \u9000\u51fatry\u65f6\u603b\u4f1a\u6267\u884c","title":"\u5f02\u5e38\u5904\u7406"},{"location":"Python/%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/#try","text":"\u5982\u679ctry\u4e2d\u8bed\u53e5\u4e2d\u6267\u884c\u65f6\u53d1\u751f\u5f02\u5e38\uff0c\u641c\u7d22except\u5b50\u53e5\uff0c\u5e76\u6267\u884c\u7b2c\u4e00\u4e2a\u5339\u914d\u8be5\u5f02\u5e38\u7684except\u5b50\u53e5 \u5982\u679ctry\u4e2d\u8bed\u53e5\u6267\u884c\u65f6\u53d1\u751f\u5f02\u5e38\uff0c\u5374\u5185\u6709\u5339\u914d\u7684except\u5b50\u53e5\uff0c\u5f02\u5e38\u5c06\u88ab\u9012\u4ea4\u7ed9\u5916\u5c42\u7684try\uff0c\u5982\u679c\u5916\u5c42\u4e0d\u5904\u7406\u8fd9\u4e2a\u5f02\u5e38\uff0c\u5f02\u5e38\u5c06\u7ee7\u7eed\u5411\u5916\u66fe\u4f20\u9012\u3002\u5982\u679c\u90fd\u4e0d\u5904\u7406\u8fd9\u4e2a\u5f02\u5e38\uff0c\u5219\u4f1a\u4f20\u9012\u5230\u6700\u5916\u5c42\uff0c\u5982\u679c\u8fd8\u5185\u6709\u5904\u7406\uff0c\u5c31\u7ec8\u6b62\u5f02\u5e38\u6240\u5728\u7684\u7ebf\u7a0b\u3002 \u5982\u679c\u5728try\u6267\u884c\u65f6\u6ca1\u6709\u53d1\u751f\u5f02\u5e38\uff0c\u5c06\u6267\u884celse\u5b50\u53e5\u4e2d\u7684\u8bed\u53e5\u3002 \u65e0\u8bbatry\u4e2d\u662f\u5426\u53d1\u751f\u5f02\u5e38\uff0cfinally\u5b50\u53e5\u6700\u7ec8\u90fd\u4f1a\u6267\u884c\u3002","title":"try\u5de5\u4f5c\u539f\u7406"},{"location":"Python/%E6%95%B0%E5%80%BC%E7%B1%BB%E5%9E%8B/","text":"\u6570\u503c\u7c7b\u578b \u6574\u578b(int) \u5b9a\u4e49\u65b9\u5f0f \u8ba1\u7b97\u65b9\u6cd5 \u903b\u8f91\u6bd4\u8f83 \u6d6e\u70b9\u578b(float) \u5b9a\u4e49\u65b9\u5f0f \u5e38\u7528\u65b9\u6cd5 \u5f3a\u5236\u7c7b\u578b\u8f6c\u6362 \u56db\u820d\u516d\u5165\u4e94\u6210\u53cc round(float[,x]) ----x\u8868\u793a\u4fdd\u7559\u4f4d\u6570 \u8ba1\u7b97\u65b9\u6cd5 \u903b\u8f91\u6bd4\u8f83 \u4f4d\u8fd0\u7b97 \u5e03\u5c14\u503c(bool) \u8fdb\u5236\u8f6c\u6362 \u6570\u503c\u8fd0\u7b97\u65b9\u6cd5 abs() \u6c42\u7edd\u5bf9\u503c math\u6a21\u5757 \u8fdb\u5236\u51fd\u6570 --- \u8f93\u51fa\u7ed3\u679c\u4f4d\u5b57\u7b26\u4e32 \u8865\u5145 \u53d6\u4f59\u548c\u53d6\u6a21 %\u53d6\u4f59 \u539f\u7406 \u6570\u503c\u7c7b\u578b \u00b6 \u6574\u578b(int) \u00b6 \u5b9a\u4e49\u65b9\u5f0f \u00b6 i = 30 i = int(30) \u8ba1\u7b97\u65b9\u6cd5 \u00b6 + - * / % // ** #\u989d\u5916\u7684\u79d1\u5b66\u6570\u636e\u8ba1\u7b97 In [ 18 ]: import cmath In [ 19 ]: cmath . log ( 2 ) Out [ 19 ]: ( 0.6931471805599453 + 0j ) \u903b\u8f91\u6bd4\u8f83 \u00b6 \u8fd4\u56de\u5e03\u5c14\u503c < > <= >= == != In [ 20 ]: 12 < 13 Out [ 20 ]: True \u6d6e\u70b9\u578b(float) \u00b6 \u5b9a\u4e49\u65b9\u5f0f \u00b6 f = 3.124 f = float(3.124) \u5e38\u7528\u65b9\u6cd5 \u00b6 \u5f3a\u5236\u7c7b\u578b\u8f6c\u6362 \u00b6 In [ 21 ]: float ( 3 ) Out [ 21 ]: 3.0 \u56db\u820d\u516d\u5165\u4e94\u6210\u53cc \u00b6 Python\u7684\u53d6\u6574\u91c7\u7528\u94f6\u884c\u5bb6\u7b97\u6cd5,\u5373\u4e4b\u540e\u7684\u503c\u5411\u5076\u6570\u8d8b\u8fd1. In [ 22 ]: round ( 3.5 ) Out [ 22 ]: 4 In [ 23 ]: round ( 4.5 ) Out [ 23 ]: 4 round(float[,x]) ----x\u8868\u793a\u4fdd\u7559\u4f4d\u6570 \u00b6 \u8ba1\u7b97\u65b9\u6cd5 \u00b6 + - * / % // ** Python\u4e2d\u7684 // \u53d6\u6574,\u9ed8\u8ba4\u5730\u677f\u9664 In [ 28 ]: 3 // 2 Out [ 28 ]: 1 In [ 29 ]: - 3 // 2 Out [ 29 ]: - 2 \u6ce8\u610f:\u6d6e\u70b9\u578b\u8fd0\u7b97\u4f1a\u6709\u4e0d\u786e\u5b9a\u4f4d\u6570 \u903b\u8f91\u6bd4\u8f83 \u00b6 < > <= >= == != \u6570\u5b57\u7c7b\u578b\u6ce8\u610f \u4f4d\u8fd0\u7b97 \u00b6 \u4f4d\u4e0e\uff0c\u76f8\u5f53\u4e8e\u4f4d\u4e58 \u67090\u52190 \u4f4d\u6216\uff0c\u76f8\u5f53\u4e8e\u4f4d\u52a0 \u5f02\u6216, \u4e24\u5bf9\u5e94\u4f4d\u4e3a\u5f02,\u7ed3\u679c\u4e3a1 \u5e03\u5c14\u503c(bool) \u00b6 bool\u578b\u4e3aint\u578b\u5b50\u7c7b >>> isinstance ( True , int ) True >>> issubclass ( bool , int ) True \u8fdb\u5236\u8f6c\u6362 \u00b6 bin() \u8f6c\u6362\u4e3a\u4e8c\u8fdb\u5236 oct() \u8f6c\u6362\u4e3a\u516b\u8fdb\u5236 hex() \u8f6c\u6362\u4e3a\u5341\u516d\u8fdb\u5236 \u6570\u503c\u8fd0\u7b97\u65b9\u6cd5 \u00b6 abs() \u6c42\u7edd\u5bf9\u503c \u00b6 In [ 24 ]: abs ( - 1 ) Out [ 24 ]: 1 **sum(iterable[,start]) ** \u6c42\u548c,start\u76f8\u5f53\u4e8e\u8d77\u59cb\u5b9a\u4e49\u7684sum,\u9ed8\u8ba4\u4e3a0 In [ 25 ]: sum ([ 1 , 2 , 3 , 4 , 5 ]) Out [ 25 ]: 15 math\u6a21\u5757 \u00b6 import math math . floor () ----- \u5411\u4e0b\u53d6\u6574 math . ceil () ----- \u5411\u4e0a\u53d6\u6574 math . pi 3.1415926 math . e 2.718281828459045 round(3/2,1) -----\u56db\u820d\u516d\u5165\u4e94\u53d6\u5076 In [ 27 ]: round ( 3 / 2 , 1 ) Out [ 27 ]: 1.5 int() \u7b49\u540c\u4e8e // \u53d6\u6574 min(),max() pow(x,y) ---- \u7b49\u4e8ex**y \u8fdb\u5236\u51fd\u6570 --- \u8f93\u51fa\u7ed3\u679c\u4f4d\u5b57\u7b26\u4e32 \u00b6 bin() \u8f6c\u6362\u4e3a\u4e8c\u8fdb\u5236 oct() \u8f6c\u6362\u4e3a\u516b\u8fdb\u5236 hex() \u8f6c\u6362\u4e3a\u5341\u516d\u8fdb\u5236 \u8865\u5145 \u00b6 \u53d6\u4f59\u548c\u53d6\u6a21 \u00b6 %\u53d6\u4f59 \u00b6 \u6c42\u6574\u6570\u5546c\uff0c\u5982\u8fdb\u884c\u6c42\u6a21\u8fd0\u7b97c = -2\uff08\u5411\u8d1f\u65e0\u7a77\u65b9\u5411\u820d\u5165\uff09\uff0c\u6c42\u4f59c = -1\uff08\u54110\u65b9\u5411\u820d\u5165\uff09\uff1b \u516c\u5f0f:a%b = a - (a/b) *b golang\u6b63\u8d1f\u4ee5a\u7b26\u53f7\u4e3a\u51c6,\u5373\u53d6\u4f59 var n1 int = 10 % 4 var n2 int = - 10 % 4 var n3 int = 10 %- 4 var n4 int = - 10 %- 4 fmt . Println ( n1 ) fmt . Println ( n2 ) fmt . Println ( n3 ) fmt . Println ( n4 ) >> > 2 >> > - 2 >> > 2 >> > - 2 python\u4e2d\u4ee5b\u7b26\u53f7\u4e3a\u51c6,\u5373\u53d6\u6a21 10 %- 4 >>>- 2 - 10 % 4 >>> 2 - 10 %- 4 >>>- 2 10 % 4 >>> 2 \u539f\u7406 \u00b6 \u5bf9\u6574\u6570a,b\u53d6\u4f59\u548c\u53d6\u6a21\u7edf\u4e00\u90fd\u5206\u4e3a2\u6b65: \u7b2c\u4e00\u6b65\uff1a\u6c42\u6574\u6570\u5546, c = a / b \u7b2c\u4e8c\u6b65\uff1a\u8ba1\u7b97\u6a21\u6216\u4f59\u6570\uff0cr = a - c * b \u8fd9\u91cc\uff0c\u7b2c\u4e8c\u6b65\u5bf9\u4e8e\u53d6\u4f59\u8fd8\u662f\u53d6\u6a21\u90fd\u662f\u76f8\u540c\u7684\uff0c\u56e0\u4e3a\u51cf\u6cd5\u548c\u4e58\u6cd5\u4e00\u822c\u4e0d\u4f1a\u5e26\u6765\u8bef\u5dee\uff1b\u4f46\u662f\u5bf9\u4e8e\u7b2c\u4e00\u6b65\uff0c\u9664\u6cd5\u4f1a\u5e26\u6765\u8bef\u5dee\uff0c\u53d6\u4f59\u5728\u8ba1\u7b97c\u65f6,golang\u662f\u54110\u7684\u65b9\u5411\u820d\u5165\u7684\uff0c\u6bd4\u5982-1/5=-0.2\uff0c\u4e8e\u662f\u54110\u53d6\u6574\u5f970\uff0c \u56e0\u6b64\u4f59\u6570 r1 = -1 - 0 * 5 = -1\uff1b\u4f46\u662f\u53d6\u6a21\u5728\u8ba1\u7b97c\u65f6,python\u662f\u5411\u8d1f\u65e0\u7a77\u5927\u65b9\u5411\u820d\u5165\u7684\uff0c\u5373\u4e0a\u9762\u7684-0.2\u4f1a\u53d6\u6574\u4e3a-1\uff0c\u56e0\u6b64\u6a21 r2 = -1 - (-1) * 5 = 4; \u56e0\u6b64\uff0c\u5bf9\u4e8e\u4e24\u4e2a\u6570\u90fd\u662f\u6b63\u6570\u6765\u8bf4\uff0c\u6ca1\u6709\u5dee\u522b\uff0c\u56e0\u4e3a0\u548c\u8d1f\u65e0\u7a77\u5927\u5728\u5c0f\u6570c\u7684\u540c\u4e00\u4e2a\u65b9\u5411\u4e0a\uff1b\u4f46\u662f\u5bf9\u4e8e\u5b58\u5728\u4e00\u4e2a\u8d1f\u6570\u7684\u60c5\u51b5\u4e0b\uff0c0\u7684\u65b9\u5411\u548c\u8d1f\u65e0\u7a77\u5927\u5728c\u7684\u4e24\u4e2a\u76f8\u53cd\u7684\u65b9\u5411\uff0c\u56e0\u6b64\u5c31\u6709\u5dee\u522b\u3002 \u201c\u5f53\u6211\u4eec\u8d4b\u7ed9\u65e0\u7b26\u53f7\u7c7b\u578b\u4e00\u4e2a\u8d85\u51fa\u5b83\u8868\u793a\u8303\u56f4\u7684\u503c\u65f6\uff0c\u7ed3\u679c\u662f\u521d\u59cb\u503c\u5bf9\u65e0\u7b26\u53f7\u7c7b\u578b\u8868\u793a\u6570\u503c\u603b\u6570\u53d6\u6a21\u540e\u7684\u4f59\u6570\u3002\u4f8b\u5982\uff0c 8\u6bd4\u7279\u5927\u5c0f\u7684unsigned char \u53ef\u4ee5\u8868\u793a0 \u81f3 255 \u533a\u95f4\u5185\u7684\u503c\uff0c\u5982\u679c\u6211\u4e48\u8d4b\u503c\u7ed9\u6b64\u7c7b\u578b\u53d8\u91cf\u4e00\u4e2a\u533a\u95f4\u4ee5\u5916\u7684\u503c\uff0c\u5219\u5b9e\u9645\u7684\u7ed3\u679c\u662f\u8be5\u503c\u5bf9256\u53d6\u6a21\u540e\u6240\u5f97\u7684\u4f59\u6570\u3002\u56e0\u6b64\uff0c\u628a -1 \u8d4b\u503c\u4e3a8\u6bd4\u7279\u5927\u5c0f\u7684unsigned char \u6240\u5f97\u7684\u7ed3\u679c\u662f255\u201d","title":"\u6570\u503c\u7c7b\u578b"},{"location":"Python/%E6%95%B0%E5%80%BC%E7%B1%BB%E5%9E%8B/#_1","text":"","title":"\u6570\u503c\u7c7b\u578b"},{"location":"Python/%E6%95%B0%E5%80%BC%E7%B1%BB%E5%9E%8B/#int","text":"","title":"\u6574\u578b(int)"},{"location":"Python/%E6%95%B0%E5%80%BC%E7%B1%BB%E5%9E%8B/#_2","text":"i = 30 i = int(30)","title":"\u5b9a\u4e49\u65b9\u5f0f"},{"location":"Python/%E6%95%B0%E5%80%BC%E7%B1%BB%E5%9E%8B/#_3","text":"+ - * / % // ** #\u989d\u5916\u7684\u79d1\u5b66\u6570\u636e\u8ba1\u7b97 In [ 18 ]: import cmath In [ 19 ]: cmath . log ( 2 ) Out [ 19 ]: ( 0.6931471805599453 + 0j )","title":"\u8ba1\u7b97\u65b9\u6cd5"},{"location":"Python/%E6%95%B0%E5%80%BC%E7%B1%BB%E5%9E%8B/#_4","text":"\u8fd4\u56de\u5e03\u5c14\u503c < > <= >= == != In [ 20 ]: 12 < 13 Out [ 20 ]: True","title":"\u903b\u8f91\u6bd4\u8f83"},{"location":"Python/%E6%95%B0%E5%80%BC%E7%B1%BB%E5%9E%8B/#float","text":"","title":"\u6d6e\u70b9\u578b(float)"},{"location":"Python/%E6%95%B0%E5%80%BC%E7%B1%BB%E5%9E%8B/#_5","text":"f = 3.124 f = float(3.124)","title":"\u5b9a\u4e49\u65b9\u5f0f"},{"location":"Python/%E6%95%B0%E5%80%BC%E7%B1%BB%E5%9E%8B/#_6","text":"","title":"\u5e38\u7528\u65b9\u6cd5"},{"location":"Python/%E6%95%B0%E5%80%BC%E7%B1%BB%E5%9E%8B/#_7","text":"In [ 21 ]: float ( 3 ) Out [ 21 ]: 3.0","title":"\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362"},{"location":"Python/%E6%95%B0%E5%80%BC%E7%B1%BB%E5%9E%8B/#_8","text":"Python\u7684\u53d6\u6574\u91c7\u7528\u94f6\u884c\u5bb6\u7b97\u6cd5,\u5373\u4e4b\u540e\u7684\u503c\u5411\u5076\u6570\u8d8b\u8fd1. In [ 22 ]: round ( 3.5 ) Out [ 22 ]: 4 In [ 23 ]: round ( 4.5 ) Out [ 23 ]: 4","title":"\u56db\u820d\u516d\u5165\u4e94\u6210\u53cc"},{"location":"Python/%E6%95%B0%E5%80%BC%E7%B1%BB%E5%9E%8B/#roundfloatx-x","text":"","title":"round(float[,x]) ----x\u8868\u793a\u4fdd\u7559\u4f4d\u6570"},{"location":"Python/%E6%95%B0%E5%80%BC%E7%B1%BB%E5%9E%8B/#_9","text":"+ - * / % // ** Python\u4e2d\u7684 // \u53d6\u6574,\u9ed8\u8ba4\u5730\u677f\u9664 In [ 28 ]: 3 // 2 Out [ 28 ]: 1 In [ 29 ]: - 3 // 2 Out [ 29 ]: - 2 \u6ce8\u610f:\u6d6e\u70b9\u578b\u8fd0\u7b97\u4f1a\u6709\u4e0d\u786e\u5b9a\u4f4d\u6570","title":"\u8ba1\u7b97\u65b9\u6cd5"},{"location":"Python/%E6%95%B0%E5%80%BC%E7%B1%BB%E5%9E%8B/#_10","text":"< > <= >= == != \u6570\u5b57\u7c7b\u578b\u6ce8\u610f","title":"\u903b\u8f91\u6bd4\u8f83"},{"location":"Python/%E6%95%B0%E5%80%BC%E7%B1%BB%E5%9E%8B/#_11","text":"\u4f4d\u4e0e\uff0c\u76f8\u5f53\u4e8e\u4f4d\u4e58 \u67090\u52190 \u4f4d\u6216\uff0c\u76f8\u5f53\u4e8e\u4f4d\u52a0 \u5f02\u6216, \u4e24\u5bf9\u5e94\u4f4d\u4e3a\u5f02,\u7ed3\u679c\u4e3a1","title":"\u4f4d\u8fd0\u7b97"},{"location":"Python/%E6%95%B0%E5%80%BC%E7%B1%BB%E5%9E%8B/#bool","text":"bool\u578b\u4e3aint\u578b\u5b50\u7c7b >>> isinstance ( True , int ) True >>> issubclass ( bool , int ) True","title":"\u5e03\u5c14\u503c(bool)"},{"location":"Python/%E6%95%B0%E5%80%BC%E7%B1%BB%E5%9E%8B/#_12","text":"bin() \u8f6c\u6362\u4e3a\u4e8c\u8fdb\u5236 oct() \u8f6c\u6362\u4e3a\u516b\u8fdb\u5236 hex() \u8f6c\u6362\u4e3a\u5341\u516d\u8fdb\u5236","title":"\u8fdb\u5236\u8f6c\u6362"},{"location":"Python/%E6%95%B0%E5%80%BC%E7%B1%BB%E5%9E%8B/#_13","text":"","title":"\u6570\u503c\u8fd0\u7b97\u65b9\u6cd5"},{"location":"Python/%E6%95%B0%E5%80%BC%E7%B1%BB%E5%9E%8B/#abs","text":"In [ 24 ]: abs ( - 1 ) Out [ 24 ]: 1 **sum(iterable[,start]) ** \u6c42\u548c,start\u76f8\u5f53\u4e8e\u8d77\u59cb\u5b9a\u4e49\u7684sum,\u9ed8\u8ba4\u4e3a0 In [ 25 ]: sum ([ 1 , 2 , 3 , 4 , 5 ]) Out [ 25 ]: 15","title":"abs() \u6c42\u7edd\u5bf9\u503c"},{"location":"Python/%E6%95%B0%E5%80%BC%E7%B1%BB%E5%9E%8B/#math","text":"import math math . floor () ----- \u5411\u4e0b\u53d6\u6574 math . ceil () ----- \u5411\u4e0a\u53d6\u6574 math . pi 3.1415926 math . e 2.718281828459045 round(3/2,1) -----\u56db\u820d\u516d\u5165\u4e94\u53d6\u5076 In [ 27 ]: round ( 3 / 2 , 1 ) Out [ 27 ]: 1.5 int() \u7b49\u540c\u4e8e // \u53d6\u6574 min(),max() pow(x,y) ---- \u7b49\u4e8ex**y","title":"math\u6a21\u5757"},{"location":"Python/%E6%95%B0%E5%80%BC%E7%B1%BB%E5%9E%8B/#-","text":"bin() \u8f6c\u6362\u4e3a\u4e8c\u8fdb\u5236 oct() \u8f6c\u6362\u4e3a\u516b\u8fdb\u5236 hex() \u8f6c\u6362\u4e3a\u5341\u516d\u8fdb\u5236","title":"\u8fdb\u5236\u51fd\u6570 --- \u8f93\u51fa\u7ed3\u679c\u4f4d\u5b57\u7b26\u4e32"},{"location":"Python/%E6%95%B0%E5%80%BC%E7%B1%BB%E5%9E%8B/#_14","text":"","title":"\u8865\u5145"},{"location":"Python/%E6%95%B0%E5%80%BC%E7%B1%BB%E5%9E%8B/#_15","text":"","title":"\u53d6\u4f59\u548c\u53d6\u6a21"},{"location":"Python/%E6%95%B0%E5%80%BC%E7%B1%BB%E5%9E%8B/#_16","text":"\u6c42\u6574\u6570\u5546c\uff0c\u5982\u8fdb\u884c\u6c42\u6a21\u8fd0\u7b97c = -2\uff08\u5411\u8d1f\u65e0\u7a77\u65b9\u5411\u820d\u5165\uff09\uff0c\u6c42\u4f59c = -1\uff08\u54110\u65b9\u5411\u820d\u5165\uff09\uff1b \u516c\u5f0f:a%b = a - (a/b) *b golang\u6b63\u8d1f\u4ee5a\u7b26\u53f7\u4e3a\u51c6,\u5373\u53d6\u4f59 var n1 int = 10 % 4 var n2 int = - 10 % 4 var n3 int = 10 %- 4 var n4 int = - 10 %- 4 fmt . Println ( n1 ) fmt . Println ( n2 ) fmt . Println ( n3 ) fmt . Println ( n4 ) >> > 2 >> > - 2 >> > 2 >> > - 2 python\u4e2d\u4ee5b\u7b26\u53f7\u4e3a\u51c6,\u5373\u53d6\u6a21 10 %- 4 >>>- 2 - 10 % 4 >>> 2 - 10 %- 4 >>>- 2 10 % 4 >>> 2","title":"%\u53d6\u4f59"},{"location":"Python/%E6%95%B0%E5%80%BC%E7%B1%BB%E5%9E%8B/#_17","text":"\u5bf9\u6574\u6570a,b\u53d6\u4f59\u548c\u53d6\u6a21\u7edf\u4e00\u90fd\u5206\u4e3a2\u6b65: \u7b2c\u4e00\u6b65\uff1a\u6c42\u6574\u6570\u5546, c = a / b \u7b2c\u4e8c\u6b65\uff1a\u8ba1\u7b97\u6a21\u6216\u4f59\u6570\uff0cr = a - c * b \u8fd9\u91cc\uff0c\u7b2c\u4e8c\u6b65\u5bf9\u4e8e\u53d6\u4f59\u8fd8\u662f\u53d6\u6a21\u90fd\u662f\u76f8\u540c\u7684\uff0c\u56e0\u4e3a\u51cf\u6cd5\u548c\u4e58\u6cd5\u4e00\u822c\u4e0d\u4f1a\u5e26\u6765\u8bef\u5dee\uff1b\u4f46\u662f\u5bf9\u4e8e\u7b2c\u4e00\u6b65\uff0c\u9664\u6cd5\u4f1a\u5e26\u6765\u8bef\u5dee\uff0c\u53d6\u4f59\u5728\u8ba1\u7b97c\u65f6,golang\u662f\u54110\u7684\u65b9\u5411\u820d\u5165\u7684\uff0c\u6bd4\u5982-1/5=-0.2\uff0c\u4e8e\u662f\u54110\u53d6\u6574\u5f970\uff0c \u56e0\u6b64\u4f59\u6570 r1 = -1 - 0 * 5 = -1\uff1b\u4f46\u662f\u53d6\u6a21\u5728\u8ba1\u7b97c\u65f6,python\u662f\u5411\u8d1f\u65e0\u7a77\u5927\u65b9\u5411\u820d\u5165\u7684\uff0c\u5373\u4e0a\u9762\u7684-0.2\u4f1a\u53d6\u6574\u4e3a-1\uff0c\u56e0\u6b64\u6a21 r2 = -1 - (-1) * 5 = 4; \u56e0\u6b64\uff0c\u5bf9\u4e8e\u4e24\u4e2a\u6570\u90fd\u662f\u6b63\u6570\u6765\u8bf4\uff0c\u6ca1\u6709\u5dee\u522b\uff0c\u56e0\u4e3a0\u548c\u8d1f\u65e0\u7a77\u5927\u5728\u5c0f\u6570c\u7684\u540c\u4e00\u4e2a\u65b9\u5411\u4e0a\uff1b\u4f46\u662f\u5bf9\u4e8e\u5b58\u5728\u4e00\u4e2a\u8d1f\u6570\u7684\u60c5\u51b5\u4e0b\uff0c0\u7684\u65b9\u5411\u548c\u8d1f\u65e0\u7a77\u5927\u5728c\u7684\u4e24\u4e2a\u76f8\u53cd\u7684\u65b9\u5411\uff0c\u56e0\u6b64\u5c31\u6709\u5dee\u522b\u3002 \u201c\u5f53\u6211\u4eec\u8d4b\u7ed9\u65e0\u7b26\u53f7\u7c7b\u578b\u4e00\u4e2a\u8d85\u51fa\u5b83\u8868\u793a\u8303\u56f4\u7684\u503c\u65f6\uff0c\u7ed3\u679c\u662f\u521d\u59cb\u503c\u5bf9\u65e0\u7b26\u53f7\u7c7b\u578b\u8868\u793a\u6570\u503c\u603b\u6570\u53d6\u6a21\u540e\u7684\u4f59\u6570\u3002\u4f8b\u5982\uff0c 8\u6bd4\u7279\u5927\u5c0f\u7684unsigned char \u53ef\u4ee5\u8868\u793a0 \u81f3 255 \u533a\u95f4\u5185\u7684\u503c\uff0c\u5982\u679c\u6211\u4e48\u8d4b\u503c\u7ed9\u6b64\u7c7b\u578b\u53d8\u91cf\u4e00\u4e2a\u533a\u95f4\u4ee5\u5916\u7684\u503c\uff0c\u5219\u5b9e\u9645\u7684\u7ed3\u679c\u662f\u8be5\u503c\u5bf9256\u53d6\u6a21\u540e\u6240\u5f97\u7684\u4f59\u6570\u3002\u56e0\u6b64\uff0c\u628a -1 \u8d4b\u503c\u4e3a8\u6bd4\u7279\u5927\u5c0f\u7684unsigned char \u6240\u5f97\u7684\u7ed3\u679c\u662f255\u201d","title":"\u539f\u7406"},{"location":"Python/%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86/","text":"\u6587\u4ef6 \u6587\u4ef6\u7684\u4e09\u79cd\u6253\u5f00\u65b9\u5f0f \u6587\u4ef6\u6307\u9488 \u7edd\u5bf9\u8def\u5f84\u548c\u76f8\u5bf9\u8def\u5f84 \u5176\u4ed6\u53c2\u6570 with\u4e0a\u4e0b\u6587\u7ba1\u7406\u673a\u5236 \u8bed\u6cd5 \u5de5\u4f5c\u539f\u7406 \u8bfb\u6587\u4ef6\u7684\u4e09\u79cd\u64cd\u4f5c\u6a21\u5f0f read\u65b9\u6cd5 readline\u65b9\u6cd5 readlines\u65b9\u6cd5 \u6587\u4ef6 \u00b6 \u64cd\u4f5c\u7cfb\u7edf\u63d0\u4f9b\u7684\u865a\u62df\u6982\u5ff5,\u7528\u6765\u50a8\u5b58\u4fe1\u606f \u6587\u4ef6\u7684\u4e09\u79cd\u6253\u5f00\u65b9\u5f0f \u00b6 \u53ea\u8bfb:r read \u53ea\u8bfb\u6253\u5f00\u6587\u4ef6,\u4f7f\u7528write\u65b9\u6cd5,\u629b\u5f02\u5e38 \u6587\u4ef6\u4e0d\u5b58\u5728,\u629bFileNotFoundError\u5f02\u5e38 \u8f93\u51fa\u4e3a\u5b57\u7b26\u4e32\u7c7b\u578b \u6e05\u7a7a\u5199\u5165: w write \u53ea\u5199\u65b9\u5f0f\u6253\u5f00,\u4f7f\u7528read\u629b\u51fa\u5f02\u5e38 \u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728,\u521b\u5efa\u6587\u4ef6 \u6587\u4ef6\u5b58\u5728,\u6e05\u7a7a\u6587\u4ef6\u5185\u5bb9\u540e\u5199\u5165 \u8ffd\u52a0\u5199\u5165 : a append \u6587\u4ef6\u5b58\u5728,\u53ea\u5199\u6253\u5f00,\u8ffd\u52a0\u5185\u5bb9 \u6587\u4ef6\u4e0d\u5b58\u5728,\u521b\u5efa\u540e\u6253\u5f00\u53ea\u5199,\u8ffd\u52a0\u5185\u5bb9 \u6587\u4ef6\u6307\u9488 \u00b6 utf8\u7f16\u7801\u4e0b,8\u4e2a\u4f4d\u4e3a\u4e00\u4e2a\u5b57\u8282,\u4e09\u4e2a\u5b57\u8282\u4e3a\u4e00\u4e2a\u6c49\u5b57\u5b57\u7b26,\u4e00\u4e2a\u5b57\u8282\u4e3a\u4e00\u4e2a\u82f1\u6587\u5b57\u7b26 \u6587\u4ef6\u6307\u9488,\u53ea\u60f3\u5f53\u524d\u5b57\u8282\u5149\u6807\u4f4d\u7f6e tell() \u663e\u793a\u5f53\u524d\u6307\u9488\u4f4d\u7f6e seek(offset[,whence]) \u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\u79fb\u52a8\u5149\u6807,offest\u4e3a\u521d\u59cb\u4f4d\u7f6e,whence\u6709\u4e09\u4e2a\u503c\u53ef\u4ee5\u9009\u62e9,0 \u8868\u793a\u4ece\u6587\u4ef6\u5934\u90e8, 2 \u8868\u793a\u4ece\u6587\u4ef6\u5c3e\u90e8,1 \u8868\u793a\u4eceoffset\u5f53\u524d\u4f4d\u7f6e [\u4e0d\u63a5\u53d7\u8d1f\u7d22\u5f15] \u7edd\u5bf9\u8def\u5f84\u548c\u76f8\u5bf9\u8def\u5f84 \u00b6 \u7edd\u5bf9\u8def\u5f84:\u4ece\u76d8\u7b26\u5f00\u59cb,D:\\python\u8bfe\u540e\u9898\\\u8001\u7537\u5b69\\nick\\day 09\\03 \u7edd\u5bf9\u8def\u5f84\u548c\u76f8\u5bf9\u8def\u5f84.py \u76f8\u5bf9\u8def\u5f84:\u6267\u884c\u6587\u4ef6(\u5f53\u524d\u8fd0\u884c\u7684\u6587\u4ef6)\u7684\u6587\u4ef6\u5939\u4e0b\u7684\u6587\u4ef6\u540d,\u6267\u884c\u6587\u4ef6\u548c\u6253\u5f00\u6587\u4ef6\u5c5e\u4e8e\u7edf\u4e00\u6587\u4ef6\u5939\u4e0b \u5199\u9879\u76ee\u5c3d\u91cf\u4f7f\u7528\u76f8\u5bf9\u8def\u5f84 \u5176\u4ed6\u53c2\u6570 \u00b6 error :\u8868\u793a\u4ec0\u4e48\u6837\u7684\u7f16\u7801\u9519\u8bef\u5c06\u88ab\u6355\u83b7 None\u548cstrict \u8868\u793a\u6709\u7f16\u7801\u9519\u8bef\u5c06\u629b\u51faValueError\u5f02\u5e38,ignore \u8868\u793a\u5ffd\u7565 with\u4e0a\u4e0b\u6587\u7ba1\u7406\u673a\u5236 \u00b6 \u8bed\u6cd5 \u00b6 with expression [ as target ]: with_body \u4e0d\u4f7f\u7528with\u8bed\u53e5,\u5728f.open()\u4e0b\u9762\u8981\u52a0f.close(),\u800cwith\u8bed\u53e5\u81ea\u5e26close\u529f\u80fd f.readlines() \u5c06\u6587\u672c\u4e2d\u6bcf\u4e00\u884c\u8f6c\u5316\u4e3a\u4e00\u4e2a\u5b57\u7b26\u8f6c,\u8f93\u51fa\u4e00\u4e2a\u6240\u6709\u884c\u5b57\u7b26\u4e32\u7ec4\u6210\u7684\u5217\u8868 f.readline() \u5c06\u6587\u672c\u4e2d\u6bcf\u4e00\u884c\u8f6c\u5316\u4e3a\u4e00\u4e2a\u5b57\u7b26\u8f6c\u8f93\u51fa \u5de5\u4f5c\u539f\u7406 \u00b6 with\u540e\u9762\u7684\u8bed\u53e5\u88ab\u8c03\u7528\u540e,\u8be5\u8bed\u53e5\u8fd4\u56de\u5bf9\u8c61\u7684 __enter__() \u65b9\u6cd5\u88ab\u8c03\u7528,\u8fd9\u4e2a\u65b9\u6cd5\u5c06\u8fd4\u56de\u7684\u503c\u8d4b\u7ed9as\u540e\u9762\u7684\u53d8\u91cf,\u5f53with\u5305\u56f4\u7684\u8bed\u53e5\u5757\u5168\u90e8\u6267\u884c\u5b8c\u6bd5\u540e,\u81ea\u52a8\u8c03\u7528\u5bf9\u8c61\u7684 __exit__() \u65b9\u6cd5. \u8bfb\u6587\u4ef6\u7684\u4e09\u79cd\u64cd\u4f5c\u6a21\u5f0f \u00b6 read\u65b9\u6cd5 \u00b6 \u7279\u70b9\u662f\uff1a\u8bfb\u53d6\u6574\u4e2a\u6587\u4ef6\uff0c\u5c06\u6587\u4ef6\u5185\u5bb9\u653e\u5230\u4e00\u4e2a\u5b57\u7b26\u4e32\u53d8\u91cf\u4e2d\u3002 \u52a3\u52bf\u662f\uff1a\u5982\u679c\u6587\u4ef6\u975e\u5e38\u5927\uff0c\u5c24\u5176\u662f\u5927\u4e8e\u5185\u5b58\u65f6\uff0c\u65e0\u6cd5\u4f7f\u7528read()\u65b9\u6cd5\u3002 text = file . read () # \u7ed3\u679c\u4e3astr\u7c7b\u578b read()\u76f4\u63a5\u8bfb\u53d6\u5b57\u8282\u5230\u5b57\u7b26\u4e32\u4e2d\uff0c\u5305\u62ec\u4e86**\u6362\u884c\u7b26** readline\u65b9\u6cd5 \u00b6 \u7279\u70b9\uff1areadline()\u65b9\u6cd5\u6bcf\u6b21\u8bfb\u53d6\u4e00\u884c\uff1b\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\u5bf9\u8c61\uff0c\u4fdd\u6301\u5f53\u524d\u884c\u7684\u5185\u5b58 \u7f3a\u70b9\uff1a\u6bd4readlines\u6162\u5f97\u591a text_line = file . readline () readline() \u8bfb\u53d6\u6574\u884c\uff0c\u5305\u62ec\u884c\u7ed3\u675f\u7b26\uff0c\u5e76\u4f5c\u4e3a\u5b57\u7b26\u4e32\u8fd4\u56de readlines\u65b9\u6cd5 \u00b6 \u7279\u70b9\uff1a\u4e00\u6b21\u6027\u8bfb\u53d6\u6574\u4e2a\u6587\u4ef6\uff1b\u81ea\u52a8\u5c06\u6587\u4ef6\u5185\u5bb9\u5206\u6790\u6210\u4e00\u4e2a\u884c\u7684**\u5217\u8868**\u3002 text_lines = file . readlines () readlines()\u8bfb\u53d6\u6240\u6709\u884c\u7136\u540e\u628a\u5b83\u4eec\u4f5c\u4e3a\u4e00\u4e2a\u5b57\u7b26\u4e32\u5217\u8868\u8fd4\u56de\u3002","title":"\u6587\u4ef6\u5904\u7406"},{"location":"Python/%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86/#_1","text":"\u64cd\u4f5c\u7cfb\u7edf\u63d0\u4f9b\u7684\u865a\u62df\u6982\u5ff5,\u7528\u6765\u50a8\u5b58\u4fe1\u606f","title":"\u6587\u4ef6"},{"location":"Python/%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86/#_2","text":"\u53ea\u8bfb:r read \u53ea\u8bfb\u6253\u5f00\u6587\u4ef6,\u4f7f\u7528write\u65b9\u6cd5,\u629b\u5f02\u5e38 \u6587\u4ef6\u4e0d\u5b58\u5728,\u629bFileNotFoundError\u5f02\u5e38 \u8f93\u51fa\u4e3a\u5b57\u7b26\u4e32\u7c7b\u578b \u6e05\u7a7a\u5199\u5165: w write \u53ea\u5199\u65b9\u5f0f\u6253\u5f00,\u4f7f\u7528read\u629b\u51fa\u5f02\u5e38 \u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728,\u521b\u5efa\u6587\u4ef6 \u6587\u4ef6\u5b58\u5728,\u6e05\u7a7a\u6587\u4ef6\u5185\u5bb9\u540e\u5199\u5165 \u8ffd\u52a0\u5199\u5165 : a append \u6587\u4ef6\u5b58\u5728,\u53ea\u5199\u6253\u5f00,\u8ffd\u52a0\u5185\u5bb9 \u6587\u4ef6\u4e0d\u5b58\u5728,\u521b\u5efa\u540e\u6253\u5f00\u53ea\u5199,\u8ffd\u52a0\u5185\u5bb9","title":"\u6587\u4ef6\u7684\u4e09\u79cd\u6253\u5f00\u65b9\u5f0f"},{"location":"Python/%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86/#_3","text":"utf8\u7f16\u7801\u4e0b,8\u4e2a\u4f4d\u4e3a\u4e00\u4e2a\u5b57\u8282,\u4e09\u4e2a\u5b57\u8282\u4e3a\u4e00\u4e2a\u6c49\u5b57\u5b57\u7b26,\u4e00\u4e2a\u5b57\u8282\u4e3a\u4e00\u4e2a\u82f1\u6587\u5b57\u7b26 \u6587\u4ef6\u6307\u9488,\u53ea\u60f3\u5f53\u524d\u5b57\u8282\u5149\u6807\u4f4d\u7f6e tell() \u663e\u793a\u5f53\u524d\u6307\u9488\u4f4d\u7f6e seek(offset[,whence]) \u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\u79fb\u52a8\u5149\u6807,offest\u4e3a\u521d\u59cb\u4f4d\u7f6e,whence\u6709\u4e09\u4e2a\u503c\u53ef\u4ee5\u9009\u62e9,0 \u8868\u793a\u4ece\u6587\u4ef6\u5934\u90e8, 2 \u8868\u793a\u4ece\u6587\u4ef6\u5c3e\u90e8,1 \u8868\u793a\u4eceoffset\u5f53\u524d\u4f4d\u7f6e [\u4e0d\u63a5\u53d7\u8d1f\u7d22\u5f15]","title":"\u6587\u4ef6\u6307\u9488"},{"location":"Python/%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86/#_4","text":"\u7edd\u5bf9\u8def\u5f84:\u4ece\u76d8\u7b26\u5f00\u59cb,D:\\python\u8bfe\u540e\u9898\\\u8001\u7537\u5b69\\nick\\day 09\\03 \u7edd\u5bf9\u8def\u5f84\u548c\u76f8\u5bf9\u8def\u5f84.py \u76f8\u5bf9\u8def\u5f84:\u6267\u884c\u6587\u4ef6(\u5f53\u524d\u8fd0\u884c\u7684\u6587\u4ef6)\u7684\u6587\u4ef6\u5939\u4e0b\u7684\u6587\u4ef6\u540d,\u6267\u884c\u6587\u4ef6\u548c\u6253\u5f00\u6587\u4ef6\u5c5e\u4e8e\u7edf\u4e00\u6587\u4ef6\u5939\u4e0b \u5199\u9879\u76ee\u5c3d\u91cf\u4f7f\u7528\u76f8\u5bf9\u8def\u5f84","title":"\u7edd\u5bf9\u8def\u5f84\u548c\u76f8\u5bf9\u8def\u5f84"},{"location":"Python/%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86/#_5","text":"error :\u8868\u793a\u4ec0\u4e48\u6837\u7684\u7f16\u7801\u9519\u8bef\u5c06\u88ab\u6355\u83b7 None\u548cstrict \u8868\u793a\u6709\u7f16\u7801\u9519\u8bef\u5c06\u629b\u51faValueError\u5f02\u5e38,ignore \u8868\u793a\u5ffd\u7565","title":"\u5176\u4ed6\u53c2\u6570"},{"location":"Python/%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86/#with","text":"","title":"with\u4e0a\u4e0b\u6587\u7ba1\u7406\u673a\u5236"},{"location":"Python/%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86/#_6","text":"with expression [ as target ]: with_body \u4e0d\u4f7f\u7528with\u8bed\u53e5,\u5728f.open()\u4e0b\u9762\u8981\u52a0f.close(),\u800cwith\u8bed\u53e5\u81ea\u5e26close\u529f\u80fd f.readlines() \u5c06\u6587\u672c\u4e2d\u6bcf\u4e00\u884c\u8f6c\u5316\u4e3a\u4e00\u4e2a\u5b57\u7b26\u8f6c,\u8f93\u51fa\u4e00\u4e2a\u6240\u6709\u884c\u5b57\u7b26\u4e32\u7ec4\u6210\u7684\u5217\u8868 f.readline() \u5c06\u6587\u672c\u4e2d\u6bcf\u4e00\u884c\u8f6c\u5316\u4e3a\u4e00\u4e2a\u5b57\u7b26\u8f6c\u8f93\u51fa","title":"\u8bed\u6cd5"},{"location":"Python/%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86/#_7","text":"with\u540e\u9762\u7684\u8bed\u53e5\u88ab\u8c03\u7528\u540e,\u8be5\u8bed\u53e5\u8fd4\u56de\u5bf9\u8c61\u7684 __enter__() \u65b9\u6cd5\u88ab\u8c03\u7528,\u8fd9\u4e2a\u65b9\u6cd5\u5c06\u8fd4\u56de\u7684\u503c\u8d4b\u7ed9as\u540e\u9762\u7684\u53d8\u91cf,\u5f53with\u5305\u56f4\u7684\u8bed\u53e5\u5757\u5168\u90e8\u6267\u884c\u5b8c\u6bd5\u540e,\u81ea\u52a8\u8c03\u7528\u5bf9\u8c61\u7684 __exit__() \u65b9\u6cd5.","title":"\u5de5\u4f5c\u539f\u7406"},{"location":"Python/%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86/#_8","text":"","title":"\u8bfb\u6587\u4ef6\u7684\u4e09\u79cd\u64cd\u4f5c\u6a21\u5f0f"},{"location":"Python/%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86/#read","text":"\u7279\u70b9\u662f\uff1a\u8bfb\u53d6\u6574\u4e2a\u6587\u4ef6\uff0c\u5c06\u6587\u4ef6\u5185\u5bb9\u653e\u5230\u4e00\u4e2a\u5b57\u7b26\u4e32\u53d8\u91cf\u4e2d\u3002 \u52a3\u52bf\u662f\uff1a\u5982\u679c\u6587\u4ef6\u975e\u5e38\u5927\uff0c\u5c24\u5176\u662f\u5927\u4e8e\u5185\u5b58\u65f6\uff0c\u65e0\u6cd5\u4f7f\u7528read()\u65b9\u6cd5\u3002 text = file . read () # \u7ed3\u679c\u4e3astr\u7c7b\u578b read()\u76f4\u63a5\u8bfb\u53d6\u5b57\u8282\u5230\u5b57\u7b26\u4e32\u4e2d\uff0c\u5305\u62ec\u4e86**\u6362\u884c\u7b26**","title":"read\u65b9\u6cd5"},{"location":"Python/%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86/#readline","text":"\u7279\u70b9\uff1areadline()\u65b9\u6cd5\u6bcf\u6b21\u8bfb\u53d6\u4e00\u884c\uff1b\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\u5bf9\u8c61\uff0c\u4fdd\u6301\u5f53\u524d\u884c\u7684\u5185\u5b58 \u7f3a\u70b9\uff1a\u6bd4readlines\u6162\u5f97\u591a text_line = file . readline () readline() \u8bfb\u53d6\u6574\u884c\uff0c\u5305\u62ec\u884c\u7ed3\u675f\u7b26\uff0c\u5e76\u4f5c\u4e3a\u5b57\u7b26\u4e32\u8fd4\u56de","title":"readline\u65b9\u6cd5"},{"location":"Python/%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86/#readlines","text":"\u7279\u70b9\uff1a\u4e00\u6b21\u6027\u8bfb\u53d6\u6574\u4e2a\u6587\u4ef6\uff1b\u81ea\u52a8\u5c06\u6587\u4ef6\u5185\u5bb9\u5206\u6790\u6210\u4e00\u4e2a\u884c\u7684**\u5217\u8868**\u3002 text_lines = file . readlines () readlines()\u8bfb\u53d6\u6240\u6709\u884c\u7136\u540e\u628a\u5b83\u4eec\u4f5c\u4e3a\u4e00\u4e2a\u5b57\u7b26\u4e32\u5217\u8868\u8fd4\u56de\u3002","title":"readlines\u65b9\u6cd5"},{"location":"Python/%E6%A8%A1%E5%9D%97/","text":"\u6a21\u5757\u5316 \u6a21\u5757\u7684\u56db\u79cd\u5f62\u5f0f \u5bfc\u5165\u8bed\u53e5 \u81ea\u5b9a\u4e49\u6a21\u5757 \u6a21\u5757\u641c\u7d22\u987a\u5e8f \u603b\u7ed3 \u6a21\u5757\u8fd0\u884c \u603b\u7ed3 \u6a21\u5757\u7684\u5c5e\u6027 \u5305 \u603b\u7ed3 \u7edd\u5bf9\u5bfc\u5165\u548c\u76f8\u5bf9\u5bfc\u5165 \u7edd\u5bf9\u5bfc\u5165 \u76f8\u5bf9\u5bfc\u5165 \u8bbf\u95ee\u63a7\u5236(\u6a21\u5757\u5185\u53d8\u91cf) \u603b\u7ed3 \u6a21\u5757\u5316 \u00b6 Python\u4e2d\u53ea\u6709\u4e00\u79cd\u6a21\u5757\u5bf9\u8c61\u7c7b\u578b \u6a21\u5757module,\u6307\u7684\u662fPython\u6e90\u4ee3\u7801\u6587\u4ef6 \u5305package,\u6307\u7684\u662f\u6a21\u5757\u7ec4\u7ec7\u5728\u4e00\u8d77\u7684\u5305\u548c\u5305\u540c\u540d\u7684\u76ee\u5f55\u53ca\u5176\u76f8\u5173\u6587\u4ef6 \u6a21\u5757\u7684\u56db\u79cd\u5f62\u5f0f \u00b6 \u5185\u7f6e\u6a21\u5757:Python\u89e3\u91ca\u5668\u81ea\u5e26\u7684\u6a21\u5757 pip\u5b89\u88c5\u7684\u6a21\u5757:pip install \u6a21\u5757\u540d \u81ea\u5b9a\u4e49\u6a21\u5757:\u81ea\u5b9a\u4e49\u6a21\u5757 \u5305 \u5bfc\u5165\u8bed\u53e5 \u00b6 \u5bfc\u5165\u975e\u9876\u7ea7\u6a21\u5757,\u53ea\u5c06\u5176\u9876\u7ea7\u6a21\u5757\u540d\u79f0\u52a0\u5165\u5230\u672c\u5730\u540d\u8bcd\u7a7a\u95f4\u4e2d.\u5bfc\u5165\u7684\u6a21\u5757\u5fc5\u987b\u4f7f\u7528\u5b8c\u5168\u9650\u5b9a\u540d\u79f0\u6765\u8bbf\u95ee. \u5982\u679c\u4f7f\u7528as ,as \u540e\u7684\u540d\u79f0\u76f4\u63a5\u7ed1\u5b9a\u5230\u5bfc\u5165\u7684\u6a21\u5757\u5bf9\u8c61,\u5e76\u5c06\u8be5\u540d\u79f0\u52a0\u5165\u5230\u672c\u5730\u540d\u8bcd\u7a7a\u95f4\u4e2d. \u627e\u5230from \u5b50\u53e5\u4e2d\u6307\u5b9a\u7684\u6a21\u5757,\u52a0\u8f7d\u5e76\u521d\u59cb\u5316(\u4e0d\u662f\u5bfc\u5165) \u5bf9\u4e8eimport\u5b50\u53e5\u540e\u7684\u540d\u79f0 \u5148\u67e5from\u5b50\u53e5\u5bfc\u5165\u7684\u6a21\u5757\u662f\u5426\u5177\u6709\u8be5\u540d\u79f0\u7684\u5c5e\u6027 \u5982\u679c\u6ca1\u6709,\u5219\u5c1d\u8bd5\u5bfc\u5165\u8be5\u540d\u79f0\u5b50\u6a21\u5757\u4e2d\u7684\u540c\u540d\u6a21\u5757 \u8fd8\u6ca1\u627e\u5230,\u629b\u51faImport Error\u5f02\u5e38 \u8fd9\u4e2a\u540d\u79f0\u4fdd\u5b58\u5230\u672c\u5730\u540d\u8bcd\u7a7a\u95f4\u4e2d,\u5982\u679c\u4f7f\u7528\u4e86as\u8bed\u53e5,\u5219\u4f7f\u7528as\u5b50\u53e5\u540e\u9762\u7684\u540d\u79f0 \u5bfc\u5165\u65f6\u503c\u68c0\u7d22\u5f53\u524d\u6587\u4ef6\u5939,\u5982\u679c\u5728\u5b50\u6587\u4ef6\u5939\u4e2d\u7684\u65b9\u6cd5,\u65e0\u6cd5\u76f4\u63a5\u8c03\u7528 \u81ea\u5b9a\u4e49\u6a21\u5757 \u00b6 \u6a21\u5757\u540d\u5c31\u662f\u6587\u4ef6\u540d \u6a21\u5757\u540d\u5fc5\u987b\u7b26\u5408\u6807\u8bc6\u7b26\u8981\u6c42 \u4e0d\u8981\u4f7f\u7528\u7cfb\u7edf\u6a21\u5757\u540d,\u907f\u514d\u51b2\u7a81 \u901a\u5e38\u6a21\u5757\u540d\u5168\u5c0f\u5199,\u4e0b\u5212\u7ebf\u5206\u5272 \u6a21\u5757\u641c\u7d22\u987a\u5e8f \u00b6 \u4ece\u5f53\u524d\u2192\u5c40\u90e8\u2192\u5168\u5c40\u2192\u5185\u7f6e \u5185\u5b58\u2192 \u5185\u7f6e\u2192 \u81ea\u5b9a\u4e49 \u4f7f\u7528sys.path\u6765\u67e5\u770b\u641c\u7d22\u987a\u5e8f import sys for p in sys . path : print ( p ) \u663e\u793a\u7ed3\u679c\u4e3aPython\u6a21\u5757\u7684\u8def\u5f84\u641c\u7d22\u987a\u5e8f \u5f53\u52a0\u8f7d\u4e00\u4e2a\u6a21\u5757\u65f6\u5019,\u9700\u8981\u4ece\u8fd9\u4e9b\u641c\u7d22\u8def\u5f84\u4e2d\u4ece\u524d\u5230\u540e\u4e00\u6b21\u67e5\u627e,\u5e76\u4e0d\u641c\u7d22\u8fd9\u4e9b\u76ee\u5f55\u7684\u5b50\u76ee\u5f55,\u641c\u7d22\u5230\u6a21\u5757\u5c31\u52a0\u8f7d,\u641c\u7d22\u4e0d\u5230\u629b\u5f02\u5e38. \u7a0b\u5e8f\u4e3b\u76ee\u5f55,\u7a0b\u5e8f\u8fd0\u884c\u7684\u4e3b\u7a0b\u5e8f\u811a\u672c\u6240\u5728\u7684\u76ee\u5f55 PYTHONPATH\u76ee\u5f55,\u73af\u5883\u53d8\u91cfPYTHONPATH\u8bbe\u7f6e\u7684\u76ee\u5f55\u4e5f\u662f\u641c\u7d22\u6a21\u5757\u7684\u8def\u5f84 \u6807\u51c6\u5e93\u76ee\u5f55,Python\u81ea\u5e26\u7684\u5e93\u6a21\u5757\u6240\u5728\u7684\u76ee\u5f55 \u603b\u7ed3 \u00b6 \u5bfc\u5165\u9876\u7ea7\u6a21\u5757,\u5176\u540d\u79f0\u4f1a\u52a0\u5165\u5230\u540d\u79f0\u540d\u8bcd\u7a7a\u95f4\u4e2d,\u5e76\u7ed1\u5b9a\u5230\u5176\u6a21\u5757\u5bf9\u8c61. \u5bfc\u5165\u975e\u9876\u7ea7\u6a21\u5757,\u53ea\u5c06\u5176\u9876\u7ea7\u6a21\u5757\u540d\u79f0\u52a0\u5165\u5230\u672c\u5730\u540d\u8bcd\u7a7a\u95f4\u4e2d.\u5bfc\u5165\u7684\u6a21\u5757\u5fc5\u987b\u4f7f\u7528\u5b8c\u5168\u9650\u5b9a\u540d\u79f0\u6765\u8bbf\u95ee. \u5982\u679c\u4f7f\u7528\u4e86as,as\u540e\u7684\u540d\u79f0\u76f4\u63a5\u7ed1\u5b9a\u5230\u5bfc\u5165\u7684\u6a21\u5757\u5bf9\u8c61,\u5e76\u5c06\u8be5\u540d\u79f0\u52a0\u5165\u5230\u672c\u5730\u540d\u8bcd\u7a7a\u95f4\u4e2d. \u6a21\u5757\u8fd0\u884c \u00b6 import time #1. \u5f00\u8f9f\u5185\u5b58\u7a7a\u95f4,\u5185\u5b58\u7a7a\u95f4\u547d\u540d\u4e3atime # 2. \u628atime.py\u4e2d\u7684\u6240\u6709\u4ee3\u7801\u8bfb\u5165\u540d\u79f0\u7a7a\u95f4,\u7136\u540e\u8fd0\u884c # 3. \u901a\u8fc7time.\u65b9\u6cd5\u540d\u4f7f\u7528time\u6a21\u5757\u4e2d\u7684\u65b9\u6cd5 \u4f18\u70b9:\u6c38\u4e0d\u51b2\u7a81 \u7f3a\u70b9:\u4f7f\u7528\u9ebb\u70e6,\u6bcf\u6b21\u90fd\u8981\u4ece\u9876\u7ea7\u6a21\u5757\u5f00\u59cb\u8c03\u7528 from time import sleep # 1. \u5f00\u8f9f\u5185\u5b58\u7a7a\u95f4,\u5185\u5b58\u7a7a\u95f4\u547d\u540d\u4e3atime # 2. \u628atime.py\u4e2d\u7684\u6240\u6709\u4ee3\u7801\u8bfb\u5165\u540d\u79f0\u7a7a\u95f4,\u7136\u540e\u8fd0\u884c # 3. \u628asleep()\u8bfb\u5165import\u548cfrom...import.py\u4e2d,\u56e0\u6b64\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u65b9\u6cd5\u540d from time import * #\u8868\u793a\u5bfc\u5165time\u4e0b\u6240\u6709\u516c\u5171\u5c5e\u6027(\u4e0d\u4ee5\u4e0b\u5212\u7ebf\u5f00\u5934\u7684) \u4f18\u70b9:\u8c03\u7528\u7701\u4e8b \u7f3a\u70b9:\u5bb9\u6613\u53d1\u751f\u51b2\u7a81 if __name__ == '__main__': \u4e0a\u8bed\u53e5\u5e38\u7528\u4e8e\u6a21\u5757\u4e2d\u529f\u80fd\u68c0\u6d4b, \u5176\u4e2d,\u5f53\u8fd0\u884c\u6587\u4ef6\u4e3a\u5f53\u524d\u6587\u4ef6\u65f6,__name__\u53c2\u6570\u9ed8\u8ba4\u503c\u4e3a_ main_ ;\u5f53\u8c03\u7528\u8fd0\u884c\u6587\u4ef6\u5916\u7684\u6a21\u5757\u65f6,__name__\u53c2\u6570\u9ed8\u503c\u4e3a\u6a21\u5757\u540d(\u9ed8\u8ba4\u5c31\u610f\u5473\u7740\u53ef\u4ee5\u66f4\u6539,\u4f46\u662f\u6ca1\u5fc5\u8981) \u6b64\u529f\u80fd\u4e3a\u6a21\u5757\u6d4b\u8bd5\u529f\u80fd:\u6d4b\u8bd5\u672c\u6a21\u5757\u5185\u90e8\u7684\u51fd\u6570,\u7c7b \u907f\u514d\u4e3b\u6a21\u5757\u53d8\u66f4\u7684\u526f\u4f5c\u7528:\u9876\u5c42\u4ee3\u7801,\u6ca1\u6709\u5c01\u88c5,\u4e3b\u6a21\u5757\u4f7f\u7528\u6ca1\u6709\u95ee\u9898.\u4e00\u65e6\u6709\u4e86\u65b0\u7684\u4e3b\u6a21\u5757,\u5f53\u524d\u6a21\u5757\u8981\u88ab\u5bfc\u5165,\u7531\u4e8e\u6e90\u4ee3\u7801\u6ca1\u6709\u5c01\u88c5,\u4e00\u5e76\u6267\u884c \u603b\u7ed3 \u00b6 \u627e\u5230from\u5b50\u53e5\u4e2d\u6307\u5b9a\u7684\u6a21\u5757,\u52a0\u8f7d\u5e76\u521d\u59cb\u5316(\u4e0d\u662f\u5bfc\u5165) \u5bf9\u4e8eimport\u5b50\u53e5\u540e\u9762\u7684\u540d\u79f0 \u5148\u67e5from\u5b50\u53e5\u5bfc\u5165\u7684\u6a21\u5757\u662f\u5426\u5177\u6709\u8be5\u540d\u79f0\u7684\u5c5e\u6027 \u5982\u679c\u4e0d\u662f,\u5c1d\u8bd5\u5bfc\u5165\u8be5\u540d\u79f0\u7684\u5b50\u6a21\u5757 \u8fd8\u6ca1\u627e\u5230,\u629bImportError\u5f02\u5e38 \u8fd9\u4e2a\u540d\u79f0\u4fdd\u5b58\u5230\u672c\u5730\u540d\u8bcd\u7a7a\u95f4\u4e2d,\u5982\u679c\u7531as\u5b50\u53e5,\u5219\u4f7f\u7528as\u5b50\u53e5\u540e\u9762\u7684\u540d\u79f0 \u6a21\u5757\u7684\u5c5e\u6027 \u00b6 \u5c5e\u6027 \u542b\u4e49 __file__ \u5b57\u7b26\u4e32,\u6e90\u6587\u4ef6\u8def\u5f84 __cached__ \u5b57\u7b26\u4e32,\u7f16\u8bd1\u540e\u7684\u5b57\u8282\u7801\u6587\u4ef6\u8def\u5f84 __spec__ \u663e\u793a\u6a21\u5757\u89c4\u8303 __name__ \u6a21\u5757\u540d __package__ \u5f53\u6a21\u5757\u662f\u5305\u65f6,\u540c__name__ ;\u5426\u5219,\u53ef\u4ee5\u8bbe\u7f6e\u4e3a\u9876\u7ea7\u6a21\u5757\u7684\u7a7a\u5b57\u7b26\u4e32 \u5305 \u00b6 \u662f\u4e2a\u6587\u4ef6\u5939,\u5185\u90e8\u542b\u6709__init__.py \u6587\u4ef6(\u7ed9\u76ee\u5f55\u7528\u7684),\u6b64\u6587\u4ef6\u4e3a\u5305\u5c5e\u6027,\u6709\u4e86\u5c5e\u6027\u7684\u76ee\u5f55\u6587\u4ef6\u5939\u5c31\u662f\u5305 \u5305\u4e5f\u662fmodule\u7c7b\u578b,\u4f46\u662f\u5305\u6ca1\u6709__file__\u5c5e\u6027 new\u4e2d\u7684PythonPackage\u76ee\u5f55\u751f\u6210\u65f6\u81ea\u5e26__init__,\u8fd9\u5c31\u662f\u5305 \u603b\u7ed3 \u00b6 \u5305\u80fd\u591f\u66f4\u597d\u7684\u7ec4\u7ec7\u6a21\u5757,\u65b9\u4fbf\u8c03\u7528(\u5305\u2192\u6a21\u5757\u2192\u7c7b\u2192\u65b9\u6cd5) \u5305\u76ee\u5f55\u4e2d__init__.py\u662f\u5728\u5305\u7b2c\u4e00\u6b21\u5bfc\u5165\u7684\u65f6\u5019\u5c31\u4f1a\u6267\u884c,\u5185\u5bb9\u53ef\u4ee5\u4e3a\u7a7a,\u4e5f\u53ef\u4ee5\u662f\u7528\u4e8e\u8be5\u5305\u521d\u59cb\u5316\u5de5\u4f5c\u7684\u4ee3\u7801,\u6700\u597d\u4e0d\u8981\u5220\u9664(\u4f4e\u7248\u672c\u4e0d\u53ef\u5220\u9664). \u5bfc\u5165\u5b50\u6a21\u5757\u4e00\u5b9a\u4f1a\u52a0\u8f7d\u7236\u6a21\u5757,\u4f46\u662f\u5bfc\u5165\u7236\u6a21\u5757\u4e0d\u4e00\u5b9a\u4f1a\u5bfc\u5165\u5b50\u6a21\u5757 \u5305\u76ee\u5f55\u4e4b\u95f4\u53ea\u80fd\u7528.\u70b9\u53f7\u4f5c\u4e3a\u5206\u9694\u7b26,\u8868\u793a\u6a21\u5757\u673a\u5668\u5b50\u6a21\u5757\u7684\u5c42\u7ea7\u5173\u7cfb \u6a21\u5757\u662f\u547d\u540d\u7a7a\u95f4,\u5176\u5185\u90e8\u7684\u9876\u7ea7\u6807\u8bc6\u7b26,\u90fd\u662f\u5b83\u7684\u5c5e\u6027,\u53ef\u4ee5\u901a\u591a\u8fc7__dict__\u6216\u8005dir(module)\u67e5\u770b. \u5305\u4e5f\u662f\u6a21\u5757,\u4f46\u6a21\u5757\u4e0d\u4e00\u5b9a\u662f\u5305,\u5305\u662f\u7279\u6b8a\u7684\u6a21\u5757,\u662f\u4e00\u79cd\u7ec4\u7ec7\u65b9\u5f0f,\u5b83\u5305\u542b__path__ \u7edd\u5bf9\u5bfc\u5165\u548c\u76f8\u5bf9\u5bfc\u5165 \u00b6 \u76f8\u5bf9\u5bfc\u5165\u4e0e\u7edd\u5bf9\u5bfc\u5165\u4ec5\u9488\u5bf9\u5305\u5185\u5bfc\u5165\u800c\u8a00.\u53ca\u542b\u6709 __init__.py \u6587\u4ef6\u7684\u76ee\u5f55. \u7edd\u5bf9\u5bfc\u5165 \u00b6 \u5728import\u8bed\u53e5\u6216from\u5bfc\u5165\u6a21\u5757,\u6a21\u5757\u540d\u79f0\u6700\u524d\u9762\u4e0d\u662f\u4ee5.\u70b9\u5f00\u5934\u7684 \u7edd\u5bf9\u5bfc\u5165\u603b\u662f\u53bb\u641c\u7d22\u6a21\u5757\u641c\u7d22\u8def\u5f84\u4e2d\u627e \u76f8\u5bf9\u5bfc\u5165 \u00b6 \u53ea\u80fd\u5728\u5305\u5185\u4f7f\u7528,\u4e14\u53ea\u80fd\u7528\u5728from\u8bed\u53e5\u4e2d \u7528 . \u70b9\u53f7,\u8868\u793a\u5f53\u524d\u76ee\u5f55\u5185.\u540c\u7ea7\u8c03\u7528 .. \u8868\u793a\u4e0a\u4e00\u7ea7\u76ee\u5f55 ... \u8868\u793a\u4e0a\u4e0a\u4e00\u7ea7 \u4e0d\u8981\u5728\u9876\u5c42\u6a21\u5757\u4e2d\u4f7f\u7528\u76f8\u5bf9\u5bfc\u5165 #\u4e3e\u4f8ba.b.c\u6a21\u5757,c\u662f\u6a21\u5757,c\u7684\u4ee3\u7801\u4e2d\u4f7f\u7528 from . import d # import a.b.d form .. import e # import a.e form . d import x # a.b.d.x form .. e import x # a.e.x \u4f7f\u7528\u76f8\u5bf9\u5bfc\u5165\u7684\u6a21\u5757\u5c31\u662f\u4e3a\u4e86\u5185\u90e8 \u4e92\u76f8\u7684\u5f15\u7528\u8d44\u6e90\u7684,\u4e0d\u662f\u4e3a\u4e86\u76f4\u63a5\u8fd0\u884c\u7684,\u5bf9\u4e8e\u5305\u6765\u8bf4,\u6b63\u786e\u7684\u4f7f\u7528\u65b9\u5f0f\u8fd8\u662f\u5728\u9876\u7ea7\u6a21\u5757\u4f7f\u7528\u8fd9\u4e9b\u5305. \u4f7f\u7528\u76f8\u5bf9\u5bfc\u5165\u5c31\u4e0d\u80fd\u5f53\u4f5c\u4e3b\u6a21\u5757\u4f7f\u7528. \u8bbf\u95ee\u63a7\u5236(\u6a21\u5757\u5185\u53d8\u91cf) \u00b6 __all__ \u76f8\u5f53\u4e8e\u52a0\u4e00\u4e2a\u5217\u8868\u6216\u5143\u7ec4,\u5143\u7d20\u662f\u5b57\u7b26\u4e32,\u6bcf\u4e00\u4e2a\u5143\u7d20\u90fd\u662f\u4e00\u4e2a\u6a21\u5757\u5185\u7684\u53d8\u91cf\u540d,\u5217\u8868\u5185\u7684\u6570\u636e\u90fd\u53ef\u4ee5\u5728\u88ab\u8c03\u7528\u65f6\u8bbf\u95ee\u5230 \u53ea\u5f71\u54cdfrom xxx import * \u8fd9\u79cd\u8c03\u7528\u65b9\u5f0f __all__ = [ 'x' , 'y' ] \u5728\u81ea\u5b9a\u4e49\u6a21\u5757\u65f6,\u4f7f\u7528_x\u6216\u8005__y\u76f8\u5f53\u4e8e\u65f6==\u4fdd\u62a4\u53d8\u91cf==,\u9664\u975e\u5728\u8c03\u7528\u65f6\u76f4\u63a5\u5f15\u7528\u53d8\u91cf\u540d,\u5426\u5219\u4e0d\u4f1a\u88abdir()\u8c03\u7528\u51fa\u6765 \u603b\u7ed3 \u00b6 \u4e00. \u4f7f\u7528 from xyz import * \u5bfc\u5165 \u5982\u679c\u6a21\u5757\u6ca1\u6709 __all__ , from xyz import * \u53ea\u5bfc\u5165\u975e\u4e0b\u5212\u7ebf\u5f00\u5934\u7684\u6a21\u5757\u53d8\u91cf.\u5982\u679c\u662f\u5305,\u5b50\u6a21\u5757\u4e5f\u4e0d\u4f1a\u5bfc\u5165,\u9664\u975e\u5728 __all__ \u4e2d\u8bbe\u7f6e,\u6216 __init__.py \u4e2d\u4f7f\u7528\u76f8\u5bf9\u5bfc\u5165 \u5982\u679c\u6a21\u5757\u6709 __all__ from xyz import * \u53ea\u5bfc\u5165 __init__ \u5217\u8868\u4e2d\u6307\u5b9a\u540d\u79f0,\u54ea\u6015\u8fd9\u4e2a\u540d\u8bcd\u65f6\u4e0b\u5212\u7ebf\u5f00\u5934\u6216\u8005\u5b50\u6a21\u5757 from xyz import * \u65b9\u6cd5\u5bfc\u5165,\u4f7f\u7528\u7b80\u5355,\u4f46\u662f\u526f\u4f5c\u7528\u65f6\u6253\u5165\u5927\u91cf\u4e0d\u9700\u8981\u4f7f\u7528\u7684\u53d8\u91cf,\u751a\u81f3\u4f1a\u5bfc\u81f4\u904d\u4e86\u53d8\u91cf\u540d\u7684\u51b2\u7a81.\u800c __all__ \u53ef\u4ee5\u63a7\u5236\u88ab\u5bfc\u5165\u6a21\u5757\u5728\u8fd9\u79cd\u5bfc\u5165\u65b9\u5f0f\u4e0b\u80fd\u591f\u63d0\u4f9b\u7684\u53d8\u91cf\u540d\u79f0,\u5c31\u662f\u4e3a\u4e86\u963b\u6b62 from xyz import * \u5bfc\u5165\u8fc7\u591a\u6a21\u5757\u53d8\u91cf.\u6240\u4ee5\u7f16\u5199\u6a21\u5757\u65f6,\u5c3d\u91cf\u52a0\u5165 __all__ \u5bfc\u5165\u5305\u65f6,\u9ed8\u8ba4\u8c03\u7528 __all__=[] \u5217\u8868\u4e2d\u9ed8\u8ba4\u662f\u975e\u4e0b\u5212\u7ebf\u5f00\u5934\u7684\u53d8\u91cf,\u88ab\u5bfc\u5305\u65f6\u4f1a\u88ab\u76f4\u63a5\u8c03\u7528,\u53ef\u4ee5\u901a\u8fc7 __all__ \u65b9\u6cd5\u6765\u63a7\u5236\u5305\u4e2d\u7684\u53d8\u91cf\u540d\u7684\u7ba1\u7406.","title":"\u6a21\u5757"},{"location":"Python/%E6%A8%A1%E5%9D%97/#_1","text":"Python\u4e2d\u53ea\u6709\u4e00\u79cd\u6a21\u5757\u5bf9\u8c61\u7c7b\u578b \u6a21\u5757module,\u6307\u7684\u662fPython\u6e90\u4ee3\u7801\u6587\u4ef6 \u5305package,\u6307\u7684\u662f\u6a21\u5757\u7ec4\u7ec7\u5728\u4e00\u8d77\u7684\u5305\u548c\u5305\u540c\u540d\u7684\u76ee\u5f55\u53ca\u5176\u76f8\u5173\u6587\u4ef6","title":"\u6a21\u5757\u5316"},{"location":"Python/%E6%A8%A1%E5%9D%97/#_2","text":"\u5185\u7f6e\u6a21\u5757:Python\u89e3\u91ca\u5668\u81ea\u5e26\u7684\u6a21\u5757 pip\u5b89\u88c5\u7684\u6a21\u5757:pip install \u6a21\u5757\u540d \u81ea\u5b9a\u4e49\u6a21\u5757:\u81ea\u5b9a\u4e49\u6a21\u5757 \u5305","title":"\u6a21\u5757\u7684\u56db\u79cd\u5f62\u5f0f"},{"location":"Python/%E6%A8%A1%E5%9D%97/#_3","text":"\u5bfc\u5165\u975e\u9876\u7ea7\u6a21\u5757,\u53ea\u5c06\u5176\u9876\u7ea7\u6a21\u5757\u540d\u79f0\u52a0\u5165\u5230\u672c\u5730\u540d\u8bcd\u7a7a\u95f4\u4e2d.\u5bfc\u5165\u7684\u6a21\u5757\u5fc5\u987b\u4f7f\u7528\u5b8c\u5168\u9650\u5b9a\u540d\u79f0\u6765\u8bbf\u95ee. \u5982\u679c\u4f7f\u7528as ,as \u540e\u7684\u540d\u79f0\u76f4\u63a5\u7ed1\u5b9a\u5230\u5bfc\u5165\u7684\u6a21\u5757\u5bf9\u8c61,\u5e76\u5c06\u8be5\u540d\u79f0\u52a0\u5165\u5230\u672c\u5730\u540d\u8bcd\u7a7a\u95f4\u4e2d. \u627e\u5230from \u5b50\u53e5\u4e2d\u6307\u5b9a\u7684\u6a21\u5757,\u52a0\u8f7d\u5e76\u521d\u59cb\u5316(\u4e0d\u662f\u5bfc\u5165) \u5bf9\u4e8eimport\u5b50\u53e5\u540e\u7684\u540d\u79f0 \u5148\u67e5from\u5b50\u53e5\u5bfc\u5165\u7684\u6a21\u5757\u662f\u5426\u5177\u6709\u8be5\u540d\u79f0\u7684\u5c5e\u6027 \u5982\u679c\u6ca1\u6709,\u5219\u5c1d\u8bd5\u5bfc\u5165\u8be5\u540d\u79f0\u5b50\u6a21\u5757\u4e2d\u7684\u540c\u540d\u6a21\u5757 \u8fd8\u6ca1\u627e\u5230,\u629b\u51faImport Error\u5f02\u5e38 \u8fd9\u4e2a\u540d\u79f0\u4fdd\u5b58\u5230\u672c\u5730\u540d\u8bcd\u7a7a\u95f4\u4e2d,\u5982\u679c\u4f7f\u7528\u4e86as\u8bed\u53e5,\u5219\u4f7f\u7528as\u5b50\u53e5\u540e\u9762\u7684\u540d\u79f0 \u5bfc\u5165\u65f6\u503c\u68c0\u7d22\u5f53\u524d\u6587\u4ef6\u5939,\u5982\u679c\u5728\u5b50\u6587\u4ef6\u5939\u4e2d\u7684\u65b9\u6cd5,\u65e0\u6cd5\u76f4\u63a5\u8c03\u7528","title":"\u5bfc\u5165\u8bed\u53e5"},{"location":"Python/%E6%A8%A1%E5%9D%97/#_4","text":"\u6a21\u5757\u540d\u5c31\u662f\u6587\u4ef6\u540d \u6a21\u5757\u540d\u5fc5\u987b\u7b26\u5408\u6807\u8bc6\u7b26\u8981\u6c42 \u4e0d\u8981\u4f7f\u7528\u7cfb\u7edf\u6a21\u5757\u540d,\u907f\u514d\u51b2\u7a81 \u901a\u5e38\u6a21\u5757\u540d\u5168\u5c0f\u5199,\u4e0b\u5212\u7ebf\u5206\u5272","title":"\u81ea\u5b9a\u4e49\u6a21\u5757"},{"location":"Python/%E6%A8%A1%E5%9D%97/#_5","text":"\u4ece\u5f53\u524d\u2192\u5c40\u90e8\u2192\u5168\u5c40\u2192\u5185\u7f6e \u5185\u5b58\u2192 \u5185\u7f6e\u2192 \u81ea\u5b9a\u4e49 \u4f7f\u7528sys.path\u6765\u67e5\u770b\u641c\u7d22\u987a\u5e8f import sys for p in sys . path : print ( p ) \u663e\u793a\u7ed3\u679c\u4e3aPython\u6a21\u5757\u7684\u8def\u5f84\u641c\u7d22\u987a\u5e8f \u5f53\u52a0\u8f7d\u4e00\u4e2a\u6a21\u5757\u65f6\u5019,\u9700\u8981\u4ece\u8fd9\u4e9b\u641c\u7d22\u8def\u5f84\u4e2d\u4ece\u524d\u5230\u540e\u4e00\u6b21\u67e5\u627e,\u5e76\u4e0d\u641c\u7d22\u8fd9\u4e9b\u76ee\u5f55\u7684\u5b50\u76ee\u5f55,\u641c\u7d22\u5230\u6a21\u5757\u5c31\u52a0\u8f7d,\u641c\u7d22\u4e0d\u5230\u629b\u5f02\u5e38. \u7a0b\u5e8f\u4e3b\u76ee\u5f55,\u7a0b\u5e8f\u8fd0\u884c\u7684\u4e3b\u7a0b\u5e8f\u811a\u672c\u6240\u5728\u7684\u76ee\u5f55 PYTHONPATH\u76ee\u5f55,\u73af\u5883\u53d8\u91cfPYTHONPATH\u8bbe\u7f6e\u7684\u76ee\u5f55\u4e5f\u662f\u641c\u7d22\u6a21\u5757\u7684\u8def\u5f84 \u6807\u51c6\u5e93\u76ee\u5f55,Python\u81ea\u5e26\u7684\u5e93\u6a21\u5757\u6240\u5728\u7684\u76ee\u5f55","title":"\u6a21\u5757\u641c\u7d22\u987a\u5e8f"},{"location":"Python/%E6%A8%A1%E5%9D%97/#_6","text":"\u5bfc\u5165\u9876\u7ea7\u6a21\u5757,\u5176\u540d\u79f0\u4f1a\u52a0\u5165\u5230\u540d\u79f0\u540d\u8bcd\u7a7a\u95f4\u4e2d,\u5e76\u7ed1\u5b9a\u5230\u5176\u6a21\u5757\u5bf9\u8c61. \u5bfc\u5165\u975e\u9876\u7ea7\u6a21\u5757,\u53ea\u5c06\u5176\u9876\u7ea7\u6a21\u5757\u540d\u79f0\u52a0\u5165\u5230\u672c\u5730\u540d\u8bcd\u7a7a\u95f4\u4e2d.\u5bfc\u5165\u7684\u6a21\u5757\u5fc5\u987b\u4f7f\u7528\u5b8c\u5168\u9650\u5b9a\u540d\u79f0\u6765\u8bbf\u95ee. \u5982\u679c\u4f7f\u7528\u4e86as,as\u540e\u7684\u540d\u79f0\u76f4\u63a5\u7ed1\u5b9a\u5230\u5bfc\u5165\u7684\u6a21\u5757\u5bf9\u8c61,\u5e76\u5c06\u8be5\u540d\u79f0\u52a0\u5165\u5230\u672c\u5730\u540d\u8bcd\u7a7a\u95f4\u4e2d.","title":"\u603b\u7ed3"},{"location":"Python/%E6%A8%A1%E5%9D%97/#_7","text":"import time #1. \u5f00\u8f9f\u5185\u5b58\u7a7a\u95f4,\u5185\u5b58\u7a7a\u95f4\u547d\u540d\u4e3atime # 2. \u628atime.py\u4e2d\u7684\u6240\u6709\u4ee3\u7801\u8bfb\u5165\u540d\u79f0\u7a7a\u95f4,\u7136\u540e\u8fd0\u884c # 3. \u901a\u8fc7time.\u65b9\u6cd5\u540d\u4f7f\u7528time\u6a21\u5757\u4e2d\u7684\u65b9\u6cd5 \u4f18\u70b9:\u6c38\u4e0d\u51b2\u7a81 \u7f3a\u70b9:\u4f7f\u7528\u9ebb\u70e6,\u6bcf\u6b21\u90fd\u8981\u4ece\u9876\u7ea7\u6a21\u5757\u5f00\u59cb\u8c03\u7528 from time import sleep # 1. \u5f00\u8f9f\u5185\u5b58\u7a7a\u95f4,\u5185\u5b58\u7a7a\u95f4\u547d\u540d\u4e3atime # 2. \u628atime.py\u4e2d\u7684\u6240\u6709\u4ee3\u7801\u8bfb\u5165\u540d\u79f0\u7a7a\u95f4,\u7136\u540e\u8fd0\u884c # 3. \u628asleep()\u8bfb\u5165import\u548cfrom...import.py\u4e2d,\u56e0\u6b64\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u65b9\u6cd5\u540d from time import * #\u8868\u793a\u5bfc\u5165time\u4e0b\u6240\u6709\u516c\u5171\u5c5e\u6027(\u4e0d\u4ee5\u4e0b\u5212\u7ebf\u5f00\u5934\u7684) \u4f18\u70b9:\u8c03\u7528\u7701\u4e8b \u7f3a\u70b9:\u5bb9\u6613\u53d1\u751f\u51b2\u7a81 if __name__ == '__main__': \u4e0a\u8bed\u53e5\u5e38\u7528\u4e8e\u6a21\u5757\u4e2d\u529f\u80fd\u68c0\u6d4b, \u5176\u4e2d,\u5f53\u8fd0\u884c\u6587\u4ef6\u4e3a\u5f53\u524d\u6587\u4ef6\u65f6,__name__\u53c2\u6570\u9ed8\u8ba4\u503c\u4e3a_ main_ ;\u5f53\u8c03\u7528\u8fd0\u884c\u6587\u4ef6\u5916\u7684\u6a21\u5757\u65f6,__name__\u53c2\u6570\u9ed8\u503c\u4e3a\u6a21\u5757\u540d(\u9ed8\u8ba4\u5c31\u610f\u5473\u7740\u53ef\u4ee5\u66f4\u6539,\u4f46\u662f\u6ca1\u5fc5\u8981) \u6b64\u529f\u80fd\u4e3a\u6a21\u5757\u6d4b\u8bd5\u529f\u80fd:\u6d4b\u8bd5\u672c\u6a21\u5757\u5185\u90e8\u7684\u51fd\u6570,\u7c7b \u907f\u514d\u4e3b\u6a21\u5757\u53d8\u66f4\u7684\u526f\u4f5c\u7528:\u9876\u5c42\u4ee3\u7801,\u6ca1\u6709\u5c01\u88c5,\u4e3b\u6a21\u5757\u4f7f\u7528\u6ca1\u6709\u95ee\u9898.\u4e00\u65e6\u6709\u4e86\u65b0\u7684\u4e3b\u6a21\u5757,\u5f53\u524d\u6a21\u5757\u8981\u88ab\u5bfc\u5165,\u7531\u4e8e\u6e90\u4ee3\u7801\u6ca1\u6709\u5c01\u88c5,\u4e00\u5e76\u6267\u884c","title":"\u6a21\u5757\u8fd0\u884c"},{"location":"Python/%E6%A8%A1%E5%9D%97/#_8","text":"\u627e\u5230from\u5b50\u53e5\u4e2d\u6307\u5b9a\u7684\u6a21\u5757,\u52a0\u8f7d\u5e76\u521d\u59cb\u5316(\u4e0d\u662f\u5bfc\u5165) \u5bf9\u4e8eimport\u5b50\u53e5\u540e\u9762\u7684\u540d\u79f0 \u5148\u67e5from\u5b50\u53e5\u5bfc\u5165\u7684\u6a21\u5757\u662f\u5426\u5177\u6709\u8be5\u540d\u79f0\u7684\u5c5e\u6027 \u5982\u679c\u4e0d\u662f,\u5c1d\u8bd5\u5bfc\u5165\u8be5\u540d\u79f0\u7684\u5b50\u6a21\u5757 \u8fd8\u6ca1\u627e\u5230,\u629bImportError\u5f02\u5e38 \u8fd9\u4e2a\u540d\u79f0\u4fdd\u5b58\u5230\u672c\u5730\u540d\u8bcd\u7a7a\u95f4\u4e2d,\u5982\u679c\u7531as\u5b50\u53e5,\u5219\u4f7f\u7528as\u5b50\u53e5\u540e\u9762\u7684\u540d\u79f0","title":"\u603b\u7ed3"},{"location":"Python/%E6%A8%A1%E5%9D%97/#_9","text":"\u5c5e\u6027 \u542b\u4e49 __file__ \u5b57\u7b26\u4e32,\u6e90\u6587\u4ef6\u8def\u5f84 __cached__ \u5b57\u7b26\u4e32,\u7f16\u8bd1\u540e\u7684\u5b57\u8282\u7801\u6587\u4ef6\u8def\u5f84 __spec__ \u663e\u793a\u6a21\u5757\u89c4\u8303 __name__ \u6a21\u5757\u540d __package__ \u5f53\u6a21\u5757\u662f\u5305\u65f6,\u540c__name__ ;\u5426\u5219,\u53ef\u4ee5\u8bbe\u7f6e\u4e3a\u9876\u7ea7\u6a21\u5757\u7684\u7a7a\u5b57\u7b26\u4e32","title":"\u6a21\u5757\u7684\u5c5e\u6027"},{"location":"Python/%E6%A8%A1%E5%9D%97/#_10","text":"\u662f\u4e2a\u6587\u4ef6\u5939,\u5185\u90e8\u542b\u6709__init__.py \u6587\u4ef6(\u7ed9\u76ee\u5f55\u7528\u7684),\u6b64\u6587\u4ef6\u4e3a\u5305\u5c5e\u6027,\u6709\u4e86\u5c5e\u6027\u7684\u76ee\u5f55\u6587\u4ef6\u5939\u5c31\u662f\u5305 \u5305\u4e5f\u662fmodule\u7c7b\u578b,\u4f46\u662f\u5305\u6ca1\u6709__file__\u5c5e\u6027 new\u4e2d\u7684PythonPackage\u76ee\u5f55\u751f\u6210\u65f6\u81ea\u5e26__init__,\u8fd9\u5c31\u662f\u5305","title":"\u5305"},{"location":"Python/%E6%A8%A1%E5%9D%97/#_11","text":"\u5305\u80fd\u591f\u66f4\u597d\u7684\u7ec4\u7ec7\u6a21\u5757,\u65b9\u4fbf\u8c03\u7528(\u5305\u2192\u6a21\u5757\u2192\u7c7b\u2192\u65b9\u6cd5) \u5305\u76ee\u5f55\u4e2d__init__.py\u662f\u5728\u5305\u7b2c\u4e00\u6b21\u5bfc\u5165\u7684\u65f6\u5019\u5c31\u4f1a\u6267\u884c,\u5185\u5bb9\u53ef\u4ee5\u4e3a\u7a7a,\u4e5f\u53ef\u4ee5\u662f\u7528\u4e8e\u8be5\u5305\u521d\u59cb\u5316\u5de5\u4f5c\u7684\u4ee3\u7801,\u6700\u597d\u4e0d\u8981\u5220\u9664(\u4f4e\u7248\u672c\u4e0d\u53ef\u5220\u9664). \u5bfc\u5165\u5b50\u6a21\u5757\u4e00\u5b9a\u4f1a\u52a0\u8f7d\u7236\u6a21\u5757,\u4f46\u662f\u5bfc\u5165\u7236\u6a21\u5757\u4e0d\u4e00\u5b9a\u4f1a\u5bfc\u5165\u5b50\u6a21\u5757 \u5305\u76ee\u5f55\u4e4b\u95f4\u53ea\u80fd\u7528.\u70b9\u53f7\u4f5c\u4e3a\u5206\u9694\u7b26,\u8868\u793a\u6a21\u5757\u673a\u5668\u5b50\u6a21\u5757\u7684\u5c42\u7ea7\u5173\u7cfb \u6a21\u5757\u662f\u547d\u540d\u7a7a\u95f4,\u5176\u5185\u90e8\u7684\u9876\u7ea7\u6807\u8bc6\u7b26,\u90fd\u662f\u5b83\u7684\u5c5e\u6027,\u53ef\u4ee5\u901a\u591a\u8fc7__dict__\u6216\u8005dir(module)\u67e5\u770b. \u5305\u4e5f\u662f\u6a21\u5757,\u4f46\u6a21\u5757\u4e0d\u4e00\u5b9a\u662f\u5305,\u5305\u662f\u7279\u6b8a\u7684\u6a21\u5757,\u662f\u4e00\u79cd\u7ec4\u7ec7\u65b9\u5f0f,\u5b83\u5305\u542b__path__","title":"\u603b\u7ed3"},{"location":"Python/%E6%A8%A1%E5%9D%97/#_12","text":"\u76f8\u5bf9\u5bfc\u5165\u4e0e\u7edd\u5bf9\u5bfc\u5165\u4ec5\u9488\u5bf9\u5305\u5185\u5bfc\u5165\u800c\u8a00.\u53ca\u542b\u6709 __init__.py \u6587\u4ef6\u7684\u76ee\u5f55.","title":"\u7edd\u5bf9\u5bfc\u5165\u548c\u76f8\u5bf9\u5bfc\u5165"},{"location":"Python/%E6%A8%A1%E5%9D%97/#_13","text":"\u5728import\u8bed\u53e5\u6216from\u5bfc\u5165\u6a21\u5757,\u6a21\u5757\u540d\u79f0\u6700\u524d\u9762\u4e0d\u662f\u4ee5.\u70b9\u5f00\u5934\u7684 \u7edd\u5bf9\u5bfc\u5165\u603b\u662f\u53bb\u641c\u7d22\u6a21\u5757\u641c\u7d22\u8def\u5f84\u4e2d\u627e","title":"\u7edd\u5bf9\u5bfc\u5165"},{"location":"Python/%E6%A8%A1%E5%9D%97/#_14","text":"\u53ea\u80fd\u5728\u5305\u5185\u4f7f\u7528,\u4e14\u53ea\u80fd\u7528\u5728from\u8bed\u53e5\u4e2d \u7528 . \u70b9\u53f7,\u8868\u793a\u5f53\u524d\u76ee\u5f55\u5185.\u540c\u7ea7\u8c03\u7528 .. \u8868\u793a\u4e0a\u4e00\u7ea7\u76ee\u5f55 ... \u8868\u793a\u4e0a\u4e0a\u4e00\u7ea7 \u4e0d\u8981\u5728\u9876\u5c42\u6a21\u5757\u4e2d\u4f7f\u7528\u76f8\u5bf9\u5bfc\u5165 #\u4e3e\u4f8ba.b.c\u6a21\u5757,c\u662f\u6a21\u5757,c\u7684\u4ee3\u7801\u4e2d\u4f7f\u7528 from . import d # import a.b.d form .. import e # import a.e form . d import x # a.b.d.x form .. e import x # a.e.x \u4f7f\u7528\u76f8\u5bf9\u5bfc\u5165\u7684\u6a21\u5757\u5c31\u662f\u4e3a\u4e86\u5185\u90e8 \u4e92\u76f8\u7684\u5f15\u7528\u8d44\u6e90\u7684,\u4e0d\u662f\u4e3a\u4e86\u76f4\u63a5\u8fd0\u884c\u7684,\u5bf9\u4e8e\u5305\u6765\u8bf4,\u6b63\u786e\u7684\u4f7f\u7528\u65b9\u5f0f\u8fd8\u662f\u5728\u9876\u7ea7\u6a21\u5757\u4f7f\u7528\u8fd9\u4e9b\u5305. \u4f7f\u7528\u76f8\u5bf9\u5bfc\u5165\u5c31\u4e0d\u80fd\u5f53\u4f5c\u4e3b\u6a21\u5757\u4f7f\u7528.","title":"\u76f8\u5bf9\u5bfc\u5165"},{"location":"Python/%E6%A8%A1%E5%9D%97/#_15","text":"__all__ \u76f8\u5f53\u4e8e\u52a0\u4e00\u4e2a\u5217\u8868\u6216\u5143\u7ec4,\u5143\u7d20\u662f\u5b57\u7b26\u4e32,\u6bcf\u4e00\u4e2a\u5143\u7d20\u90fd\u662f\u4e00\u4e2a\u6a21\u5757\u5185\u7684\u53d8\u91cf\u540d,\u5217\u8868\u5185\u7684\u6570\u636e\u90fd\u53ef\u4ee5\u5728\u88ab\u8c03\u7528\u65f6\u8bbf\u95ee\u5230 \u53ea\u5f71\u54cdfrom xxx import * \u8fd9\u79cd\u8c03\u7528\u65b9\u5f0f __all__ = [ 'x' , 'y' ] \u5728\u81ea\u5b9a\u4e49\u6a21\u5757\u65f6,\u4f7f\u7528_x\u6216\u8005__y\u76f8\u5f53\u4e8e\u65f6==\u4fdd\u62a4\u53d8\u91cf==,\u9664\u975e\u5728\u8c03\u7528\u65f6\u76f4\u63a5\u5f15\u7528\u53d8\u91cf\u540d,\u5426\u5219\u4e0d\u4f1a\u88abdir()\u8c03\u7528\u51fa\u6765","title":"\u8bbf\u95ee\u63a7\u5236(\u6a21\u5757\u5185\u53d8\u91cf)"},{"location":"Python/%E6%A8%A1%E5%9D%97/#_16","text":"\u4e00. \u4f7f\u7528 from xyz import * \u5bfc\u5165 \u5982\u679c\u6a21\u5757\u6ca1\u6709 __all__ , from xyz import * \u53ea\u5bfc\u5165\u975e\u4e0b\u5212\u7ebf\u5f00\u5934\u7684\u6a21\u5757\u53d8\u91cf.\u5982\u679c\u662f\u5305,\u5b50\u6a21\u5757\u4e5f\u4e0d\u4f1a\u5bfc\u5165,\u9664\u975e\u5728 __all__ \u4e2d\u8bbe\u7f6e,\u6216 __init__.py \u4e2d\u4f7f\u7528\u76f8\u5bf9\u5bfc\u5165 \u5982\u679c\u6a21\u5757\u6709 __all__ from xyz import * \u53ea\u5bfc\u5165 __init__ \u5217\u8868\u4e2d\u6307\u5b9a\u540d\u79f0,\u54ea\u6015\u8fd9\u4e2a\u540d\u8bcd\u65f6\u4e0b\u5212\u7ebf\u5f00\u5934\u6216\u8005\u5b50\u6a21\u5757 from xyz import * \u65b9\u6cd5\u5bfc\u5165,\u4f7f\u7528\u7b80\u5355,\u4f46\u662f\u526f\u4f5c\u7528\u65f6\u6253\u5165\u5927\u91cf\u4e0d\u9700\u8981\u4f7f\u7528\u7684\u53d8\u91cf,\u751a\u81f3\u4f1a\u5bfc\u81f4\u904d\u4e86\u53d8\u91cf\u540d\u7684\u51b2\u7a81.\u800c __all__ \u53ef\u4ee5\u63a7\u5236\u88ab\u5bfc\u5165\u6a21\u5757\u5728\u8fd9\u79cd\u5bfc\u5165\u65b9\u5f0f\u4e0b\u80fd\u591f\u63d0\u4f9b\u7684\u53d8\u91cf\u540d\u79f0,\u5c31\u662f\u4e3a\u4e86\u963b\u6b62 from xyz import * \u5bfc\u5165\u8fc7\u591a\u6a21\u5757\u53d8\u91cf.\u6240\u4ee5\u7f16\u5199\u6a21\u5757\u65f6,\u5c3d\u91cf\u52a0\u5165 __all__ \u5bfc\u5165\u5305\u65f6,\u9ed8\u8ba4\u8c03\u7528 __all__=[] \u5217\u8868\u4e2d\u9ed8\u8ba4\u662f\u975e\u4e0b\u5212\u7ebf\u5f00\u5934\u7684\u53d8\u91cf,\u88ab\u5bfc\u5305\u65f6\u4f1a\u88ab\u76f4\u63a5\u8c03\u7528,\u53ef\u4ee5\u901a\u8fc7 __all__ \u65b9\u6cd5\u6765\u63a7\u5236\u5305\u4e2d\u7684\u53d8\u91cf\u540d\u7684\u7ba1\u7406.","title":"\u603b\u7ed3"},{"location":"Python/%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/","text":"[toc] \u6761\u4ef6\u5206\u652f \u00b6 if \u00b6 if else \u00b6 if elif elif else \u00b6 \u5faa\u73af \u00b6 while \u00b6 contine \u8df3\u51fa\u5f53\u524d\u5faa\u73af,\u8fdb\u884c\u4e0b\u4e00\u6b21\u5faa\u73af break \u7ed3\u675f\u5faa\u73af return \u4e5f\u4f1a\u7ed3\u675f\u5faa\u73af for \u00b6 for enumerate \u8fd4\u56de\u4e00\u4e2a\u5e26\u7d22\u5f15\u7684\u4e8c\u5143\u7ec4 lst = [ 1 , 2 , 3 , 4 , 5 ] for i in enumerate ( lst ): print ( i ) >>> ( 0 , 1 ) ( 1 , 2 ) ( 2 , 3 ) ( 3 , 4 ) ( 4 , 5 ) \u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u89e3\u6784\u6765\u8fdb\u884c\u8f93\u51fa lst = [ 1 , 2 , 3 , 4 , 5 ] for index , i in enumerate ( lst ): print ( index , i ) >>> 0 1 1 2 2 3 3 4 4 5 \u5faa\u73af else \u00b6 Python \u91cc\u9762\uff0c\u6709\u79cd\u5947\u602a\u7684\u8bed\u6cd5\uff0celse \u53ef\u4ee5\u548c while \u5faa\u73af\u6216\u8005 for \u5faa\u73af\u642d\u914d\u4f7f\u7528\u3002 while...else \u8bed\u6cd5 while \u5224\u65ad\u6761\u4ef6 : \u8bed\u53e5 1. ... else : \u8bed\u53e5 2. ... for...else \u8bed\u6cd5 for \u904d\u5386\u5bf9\u8c61 : \u8bed\u53e5 1. ... else : \u8bed\u53e5 2. ... \u5f53 while/for \u5faa\u73af\u6b63\u5e38\u6267\u884c\u5b8c\u7684\u60c5\u51b5\u4e0b\uff0c\u6267\u884c else \u8f93\u51fa\uff1b \u5982\u679c\u5f53 while/for \u5faa\u73af\u4e2d\u6267\u884c\u4e86\u8df3\u51fa\u5faa\u73af\u7684\u8bed\u53e5\uff0c\u6bd4\u5982 break**\u6216\u8005**\u62a5\u9519 \uff0c\u5c06\u4e0d\u6267\u884c else \u4ee3\u7801\u5757\u7684\u5185\u5bb9\uff1b","title":"\u6d41\u7a0b\u63a7\u5236"},{"location":"Python/%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/#_1","text":"","title":"\u6761\u4ef6\u5206\u652f"},{"location":"Python/%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/#if","text":"","title":"if"},{"location":"Python/%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/#if-else","text":"","title":"if else"},{"location":"Python/%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/#if-elif-elif-else","text":"","title":"if elif elif else"},{"location":"Python/%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/#_2","text":"","title":"\u5faa\u73af"},{"location":"Python/%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/#while","text":"contine \u8df3\u51fa\u5f53\u524d\u5faa\u73af,\u8fdb\u884c\u4e0b\u4e00\u6b21\u5faa\u73af break \u7ed3\u675f\u5faa\u73af return \u4e5f\u4f1a\u7ed3\u675f\u5faa\u73af","title":"while"},{"location":"Python/%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/#for","text":"for enumerate \u8fd4\u56de\u4e00\u4e2a\u5e26\u7d22\u5f15\u7684\u4e8c\u5143\u7ec4 lst = [ 1 , 2 , 3 , 4 , 5 ] for i in enumerate ( lst ): print ( i ) >>> ( 0 , 1 ) ( 1 , 2 ) ( 2 , 3 ) ( 3 , 4 ) ( 4 , 5 ) \u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u89e3\u6784\u6765\u8fdb\u884c\u8f93\u51fa lst = [ 1 , 2 , 3 , 4 , 5 ] for index , i in enumerate ( lst ): print ( index , i ) >>> 0 1 1 2 2 3 3 4 4 5","title":"for"},{"location":"Python/%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/#else","text":"Python \u91cc\u9762\uff0c\u6709\u79cd\u5947\u602a\u7684\u8bed\u6cd5\uff0celse \u53ef\u4ee5\u548c while \u5faa\u73af\u6216\u8005 for \u5faa\u73af\u642d\u914d\u4f7f\u7528\u3002 while...else \u8bed\u6cd5 while \u5224\u65ad\u6761\u4ef6 : \u8bed\u53e5 1. ... else : \u8bed\u53e5 2. ... for...else \u8bed\u6cd5 for \u904d\u5386\u5bf9\u8c61 : \u8bed\u53e5 1. ... else : \u8bed\u53e5 2. ... \u5f53 while/for \u5faa\u73af\u6b63\u5e38\u6267\u884c\u5b8c\u7684\u60c5\u51b5\u4e0b\uff0c\u6267\u884c else \u8f93\u51fa\uff1b \u5982\u679c\u5f53 while/for \u5faa\u73af\u4e2d\u6267\u884c\u4e86\u8df3\u51fa\u5faa\u73af\u7684\u8bed\u53e5\uff0c\u6bd4\u5982 break**\u6216\u8005**\u62a5\u9519 \uff0c\u5c06\u4e0d\u6267\u884c else \u4ee3\u7801\u5757\u7684\u5185\u5bb9\uff1b","title":"\u5faa\u73af else"},{"location":"Python/%E7%B1%BB/","text":"\u7c7b \u6982\u5ff5 \u5b9a\u4e49 \u5b9e\u4f8b\u5bf9\u8c61 \u5b9e\u4f8b\u5316 self \u5c5e\u6027 \u5b9e\u4f8b\u53d8\u91cf \u548c \u7c7b\u53d8\u91cf \u603b\u7ed3 \u65b9\u6cd5 \u7c7b\u65b9\u6cd5\u548c\u5b9e\u4f8b\u65b9\u6cd5 \u7c7b\u65b9\u6cd5 \u9759\u6001\u65b9\u6cd5 \u603b\u7ed3 \u7c7b\u7684\u7ee7\u627f \u6982\u5ff5 \u7236\u7c7b \u5b50\u7c7b \u7ee7\u627f \u67e5\u770b\u5c5e\u6027\u7684\u65b9\u6cd5 \u7ee7\u627f\u4e2d\u7684\u521d\u59cb\u5316 super()\u65b9\u6cd5 \u591a\u7ee7\u627f\u7684\u5b9e\u73b0 \u591a\u7ee7\u627f\u7684\u7f3a\u70b9 \u8bbf\u95ee\u63a7\u5236 \u79c1\u6709(private)\u5c5e\u6027 \u4fdd\u62a4\u53d8\u91cf(protected) \u516c\u5171\u65b9\u6cd5(public) \u79c1\u6709\u6210\u5458\u603b\u7ed3 isinstance\u548cissubclass\u65b9\u6cd5 isinstance(o,c) issubclass(o,c) \u5c5e\u6027\u67e5\u627e\u987a\u5e8f \u65b9\u6cd5\u7684\u91cd\u5199,\u8986\u76d6(override) \u5c5e\u6027\u88c5\u9970\u5668 \u7c7b\u7684\u7ec4\u5408 \u9b54\u672f\u65b9\u6cd5 \u67e5\u770b\u5c5e\u6027 \u603b\u7ed3 \u8865\u5145 \u6784\u9020\u51fd\u6570 \u6790\u6784\u51fd\u6570 \u7c7b \u00b6 python\u4e2d\u7684\u7c7b\u662f\u9762\u5411\u5bf9\u8c61\u7684\u603b\u8981\u7ec4\u6210. \u6982\u5ff5 \u00b6 \u7c7b,\u662f\u4e00\u7c7b\u62e5\u6709\u76f8\u540c\u5c5e\u6027\u548c\u65b9\u6cd5\u7684\u4e8b\u7269\u7684\u96c6\u5408. \u5b9a\u4e49 \u00b6 class ClassName ( BaseClass ): \u5c5e\u6027 \u65b9\u6cd5 \u5fc5\u987b\u4f7f\u7528class\u5173\u952e\u5b57\u5b9a\u4e49. \u7c7b\u540d\u89c4\u8303\u4f7f\u7528\u5927\u9a7c\u5cf0\u4f53\u547d\u540d \u5b9a\u4e49\u4e4b\u540e\u4ea7\u751f\u4e86\u4e00\u4e2a\u7c7b\u5bf9\u8c61,\u7ed1\u5b9a\u5728\u4e86ClassName\u4e0a. class MyClass : a = 100 def foo ( self ): return self . a print ( type ( MyClass )) >>> < class ' type '> \u6ce8\u610f\u8fd9\u65f6\u7684\u7c7b,\u662ftype\u7c7b\u578b. BaseClass\u53ef\u4ee5\u6ca1\u6709,Python3\u4e2d\u4e0d\u5199\u9ed8\u8ba4\u7ee7\u627fobject\u57fa\u7c7b,python2\u4e2d\u5fc5\u987b\u5199 \u5b9e\u4f8b\u5bf9\u8c61 \u00b6 \u5b9e\u4f8b\u5316 \u00b6 \u8bed\u6cd5: \u7c7b\u540d() \u7c7b\u540d\u52a0()\u5c31\u5b9e\u4f8b\u5316\u51fa\u4e86\u4e00\u4e2a\u65b0\u7684\u7c7b. class MyClass : a = 100 def foo ( self ): return self . a c1 = MyClass () c2 = MyClass () print ( c1 is c2 ) >>> False \u6ce8\u610f:\u4e24\u4e2a\u770b\u4e0a\u53bb\u5b8c\u5168\u4e00\u81f4\u7684\u4e24\u4e2a\u5b9e\u4f8b\u5bf9\u8c61,\u4e5f\u662f\u4e0d\u540c\u7684,\u5176\u5185\u5b58\u5730\u5740\u4e0d\u540c. self \u00b6 self\u5c31\u662f\u8c03\u7528\u8005,\u5c31\u662f\u5bf9\u5e94\u7684\u5b9e\u4f8b\u5bf9\u8c61. \u5c5e\u6027 \u00b6 \u7c7b\u4e2d\u5b9a\u4e49\u7684\u53d8\u91cf\u5c31\u662f\u7c7b\u7684\u5c5e\u6027. \u5b9e\u4f8b\u53d8\u91cf \u548c \u7c7b\u53d8\u91cf \u00b6 \u7c7b\u7684\u5c5e\u6027\u53ef\u5728\u7c7b\u5185\u90e8\u6216\u8005\u5916\u90e8\u66f4\u6539,\u66f4\u6539\u540e,\u540e\u7eed\u5b9a\u4e49\u7684\u7c7b\u7684\u5c5e\u6027\u4e5f\u4f1a\u88ab\u66f4\u6539 age = 3 \u662f\u7c7b\u53d8\u91cf name \u662f\u5b9e\u4f8b\u53d8\u91cf \u5b9e\u4f8b\u53d8\u91cf\u662f\u6bcf\u4e00\u4e2a\u5b9e\u4f8b\u81ea\u5df1\u7684\u53d8\u91cf; \u7c7b\u53d8\u91cf\u662f\u7c7b\u7684\u53d8\u91cf,\u662f\u7c7b\u7684\u6240\u6709\u5b9e\u4f8b\u5171\u4eab\u7684\u5c5e\u6027\u548c\u65b9\u6cd5 \u7279\u6b8a\u5c5e\u6027 \u542b\u4e49 __name__ \u7c7b\u7684\u5bf9\u8c61\u540d(\u5b9e\u4f8b\u6ca1\u6709) __class__ \u5bf9\u8c61\u7684\u7c7b\u578b(\u540ctype) __dict__ \u5bf9\u8c61\u7684\u5c5e\u6027\u5b57\u5178 __qualname__ \u7c7b\u7684\u9650\u5b9a\u540d(\u5b9e\u4f8b\u6ca1\u6709) \u603b\u7ed3 \u00b6 \u662f\u7c7b\u7684,\u4e5f\u662f\u8fd9\u4e2a\u7c7b\u6240\u6709\u5b9e\u4f8b\u7684,\u5176\u5b9e\u4f8b\u90fd\u53ef\u4ee5\u8bbf\u95ee\u5230;\u662f\u5b9e\u4f8b\u7684,\u5c31\u662f\u8fd9\u4e2a\u5b9e\u4f8b\u81ea\u5df1\u7684,\u901a\u8fc7\u7c7b\u8bbf\u95ee\u4e0d\u5230. \u7c7b\u53d8\u91cf\u662f\u4e66\u5c4b\u7c7b\u7684\u53d8\u91cf,\u8fd9\u4e2a\u7c7b\u7684\u6240\u6709\u5b9e\u4f8b\u53ef\u4ee5\u5171\u4eab\u8fd9\u4e2a\u53d8\u91cf. \u5b9e\u4f8b\u53ef\u4ee5\u52a8\u6001\u7684\u7ed9\u81ea\u5df1\u589e\u52a0\u4e00\u4e2a\u5c5e\u6027.\u6bd4\u5982:__dict__[\u53d8\u91cf\u540d]\u548c\u5b9e\u4f8b.\u53d8\u91cf\u540d\u90fd\u53ef\u4ee5\u8bbf\u95ee\u5230. \u5b9e\u4f8b\u7684\u540c\u540d\u53d8\u91cf\u4f1a\u9690\u85cf\u8fd9\u4e9b\u7c7b\u53d8\u91cf,\u6216\u8005\u8bf4\u8986\u76d6\u4e86\u8fd9\u4e2a\u7c7b\u53d8\u91cf. \u5b9e\u4f8b\u5c5e\u6027\u7684\u67e5\u627e\u987a\u5e8f \u6307\u7684\u662f\u5b9e\u4f8b\u4f7f\u7528 . \u6765\u8bbf\u95ee\u5c5e\u6027,\u4f1a\u9996\u5148\u627e\u81ea\u5df1\u7684__dict__,\u7ed9\u5982\u679c\u6ca1\u6709,\u5728\u901a\u8fc7__class__\u627e\u5230\u81ea\u5df1\u7684\u7c7b,\u518d\u53bb\u7c7b\u7684__dicr__\u4e2d\u627e \u5982\u679c\u5b9e\u4f8b\u4f7f\u7528__dict__[\u53d8\u91cf\u540d]\u8bbf\u95ee\u53d8\u91cf,\u5c06\u4e0d\u4f1a\u6309\u7167\u4e0a\u9762\u7684\u67e5\u627e\u987a\u5e8f\u627e\u53d8\u91cf,\u8fd9\u4e2a\u662f\u6307\u660e\u4f7f\u7528\u5b57\u5178\u7684key\u67e5\u627e,\u4e0d\u662f\u5c5e\u6027\u67e5\u627e \u4e00\u822c\u6765\u8bf4,\u7c7b\u53d8\u91cf\u4f7f\u7528\u5168\u5927\u5199\u6765\u547d\u540d. \u65b9\u6cd5 \u00b6 \u7c7b\u4e2d\u7684\u51fd\u6570\u5c31\u662f\u7c7b\u7684\u65b9\u6cd5 \u7c7b\u65b9\u6cd5\u548c\u5b9e\u4f8b\u65b9\u6cd5 \u00b6 \u7c7b\u65b9\u6cd5 \u00b6 @classmethod def clsmtd ( cls ): print ( xxx ) a = MyClass() a.clsmtd()\u662f\u53ef\u4ee5\u8c03\u7528\u7684, \u7b49\u540c\u4e8e a.__class__.clsmtd() \u5728\u7c7b\u5b9a\u4e49\u4e2d,\u4f7f\u7528@classmethod\u88c5\u9970\u5668\u4fee\u9970\u7684\u65b9\u6cd5 \u5fc5\u987b\u81f3\u5c11\u6709\u4e00\u4e2a\u53c2\u6570,\u4e14\u7b2c\u4e00\u4e2a\u53c2\u6570\u5c31\u7ed9\u4e86cls,cls\u6307\u8c03\u7528\u8005\u5c31\u662f\u5bf9\u8c61\u81ea\u5df1 cls\u53ef\u4ee5\u662f\u4efb\u610f\u5408\u6cd5\u540d\u79f0,\u4f46\u662f\u4e3a\u4e86\u6613\u8bfb\u6027,\u4e0d\u8981\u6539 \u901a\u8fc7cls\u53ef\u4ee5\u76f4\u63a5\u64cd\u4f5c\u7c7b\u7684\u5c5e\u6027,\u4f46\u662f\u65e0\u6cd5\u901a\u8fc7cls\u64cd\u4f5c\u7c7b\u7684\u5b9e\u4f8b \u9759\u6001\u65b9\u6cd5 \u00b6 @staticmethod def staticmtd (): print ( 'static' ) \u5728\u7c7b\u7684\u5b9a\u4e49\u4e2d,\u4f7f\u7528@staticmethod\u88c5\u9970\u5668\u4fee\u9970\u7684\u65b9\u6cd5 \u8c03\u7528\u65f6,\u4e0d\u4f1a\u9690\u5f0f\u4f20\u5165\u53c2\u6570 \u9759\u6001\u65b9\u6cd5,\u6307\u65f6\u8868\u660e\u8fd9\u4e2a\u65b9\u6cd5\u5c5e\u4e8e\u8fd9\u4e2a\u540d\u8bcd\u7a7a\u95f4,\u51fd\u6570\u5f52\u7ed3\u5728\u4e00\u8d77,\u65b9\u4fbf\u7ec4\u7ec7\u7ba1\u7406. \u7c7b\u548c\u5bf9\u8c61\u90fd\u53ef\u4ee5\u8c03\u7528,\u4e0d\u7528\u4f20\u53c2 \u603b\u7ed3 \u00b6 \u7c7b\u9664\u4e86\u666e\u901a\u65b9\u6cd5\u90fd\u53ef\u4ee5\u8c03\u7528,\u666e\u901a \u65b9\u6cd5 \u9700\u8981\u5bf9\u8c61\u7684\u5b9e\u4f8b\u4f5c\u4e3a\u7b2c\u4e00\u53c2\u6570. \u5b9e\u4f8b\u53ef\u4ee5\u8c03\u7528\u6240\u6709\u7c7b\u4e2d\u5b9a\u4e49\u7684\u65b9\u6cd5(\u5305\u62ec\u7c7b\u65b9\u6cd5,\u9759\u6001\u65b9\u6cd5),\u666e\u901a\u65b9\u6cd5\u4f20\u5165\u5b9e\u4f8b\u81ea\u8eab,\u9759\u6001\u65b9\u6cd5\u548c\u7c7b\u65b9\u6cd5\u9700\u8981\u627e\u5230\u5b9e\u4f8b\u7684\u7c7b. \u88ab@classmethod\u88c5\u9970\u5668\u88c5\u9970\u7684\u65b9\u6cd5\u662f\u7c7b\u7684\u7ed1\u5b9a\u65b9\u6cd5,\u53c2\u6570\u534f\u7a0bcls,cls\u662f\u7c7b\u672c\u8eab,\u5bf9\u8c61\u4e5f\u80fd\u8c03\u7528,\u53c2\u6570cls\u8fd8\u662f\u8fd8\u662f\u7c7b\u672c\u8eab \u88ab@staticmethod\u88c5\u9970\u5668\u88c5\u9970\u7684\u65b9\u6cd5\u5c31\u662f\u975e\u7ed1\u5b9a\u65b9\u6cd5,\u5c31\u662f\u4e00\u4e2a\u666e\u901a\u51fd\u6570 \u7c7b\u7684\u7ee7\u627f \u00b6 \u6982\u5ff5 \u00b6 \u7c7b\u7684\u7ee7\u627f\u5c31\u662f\u9762\u5411\u5bf9\u8c61\u4e09\u4e2a\u8981\u7d20\u4e4b\u4e00\u7684\u7ee7\u627f,inheritance \u5b50\u7c7b\u53ef\u4ee5\u7ee7\u627f\u7236\u7c7b\u7684\u5c5e\u6027\u53ca\u65b9\u6cd5 \u7236\u7c7b \u00b6 \u7236\u7c7b,\u4e5f\u79f0\u8d85\u7c7b\u6216\u8005\u57fa\u7c7b \u5b50\u7c7b \u00b6 \u5b50\u7c7b\u4e5f\u6210\u6d3e\u751f\u7c7b \u7ee7\u627f \u00b6 \u53c8\u53eb\u6d3e\u751f class \u5b50\u7c7b\u540d(\u57fa\u7c7b1[,\u57fa\u7c7b2,...]): \u8bed\u53e5\u5757 \u5982\u679c\u7c7b\u5b9a\u4e49\u65f6,\u6ca1\u6709\u57fa\u7c7b\u5217\u8868,\u7b49\u540c\u4e8e\u7ee7\u627f\u5b50object.\u5728Python3\u4e2d,object\u7c7b\u65f6\u6240\u6709\u5bf9\u8c61\u7684\u6839\u57fa\u7c7b. class A : pass #\u7b49\u4ef7\u4e8e class A ( object ): pass \u67e5\u770b\u5c5e\u6027\u7684\u65b9\u6cd5 \u00b6 \u5c5e\u6027\u65b9\u6cd5 \u542b\u4e49 __bases__ \u67e5\u770b\u8fd4\u56de\u7c7b\u7684\u57fa\u7c7b\u7684\u5143\u7ec4.\u662f\u7c7b\u7684\u65b9\u6cd5,\u4e0d\u4f1a\u8fd4\u56de\u7237\u7237\u7c7b mro()\u65b9\u6cd5 \u663e\u793a\u65b9\u6cd5\u67e5\u627e\u987a\u5e8f,\u8c03\u7528 __mro__ ,\u8fd4\u56de\u67e5\u627e\u987a\u5e8f\u5217\u8868,\u662f\u7c7b\u7684\u65b9\u6cd5,\u5b9e\u4f8b\u4e0d\u80fd\u7528 __subclasses__() \u7c7b\u7684\u5b50\u7c7b\u5217\u8868 \u7ee7\u627f\u4e2d\u7684\u521d\u59cb\u5316 \u00b6 super()\u65b9\u6cd5 \u00b6 super()\u53ef\u4ee5\u8bbf\u95ee\u5230\u7236\u7c7b\u7684\u5c5e\u6027 \u5b50\u7c7b\u7ee7\u627f\u7236\u7c7b\u7684\u65f6\u5019,\u6700\u597d\u52a0\u4e0a super().__init__() \u4f5c\u4e3a\u4e00\u4e2a\u597d\u4e60\u60ef,\u5982\u679c\u7236\u7c7b\u5b9a\u4e49\u4e86 __init__ \u65b9\u6cd5,\u5c31\u5e94\u8be5\u5728\u5b50\u7c7b\u7684 __init__ \u4e2d\u8c03\u7528\u5b83 \u4e00\u4e2a\u539f\u5219:\u81ea\u5df1\u7684\u79c1\u6709\u5c5e\u6027,\u5c31\u8be5\u81ea\u5df1\u7684\u65b9\u6cd5\u8bfb\u53d6\u548c\u4fee\u6539,\u4e0d\u8981\u501f\u52a9\u5176\u4ed6\u7c7b\u7684\u65b9\u6cd5,\u5373\u4f7f\u65f6\u7236\u7c7b\u6216\u8005\u6d3e\u751f\u7c7b\u7684\u65b9\u6cd5. \u591a\u7ee7\u627f\u7684\u5b9e\u73b0 \u00b6 \u589e\u52a0\u4e86\u590d\u6742\u7684\u4e8c\u4e49\u6027,\u6240\u4ee5\u8981\u786e\u5b9a\u6df1\u5ea6\u4f18\u5148\u6216\u8005\u5e7f\u5ea6\u4f18\u5148 Python\u4f7f\u7528MRO(method resolution order)\u89e3\u51b3\u641c\u7d22\u987a\u5e8f\u95ee\u9898 \u7ecf\u5178\u7b97\u6cd52.2\u4e4b\u524d,\u4ece\u5de6\u5230\u53f3,\u6df1\u5ea6\u4f18\u5148\u7b56\u7565,\u627e\u5230\u5c31\u505c\u6b62 \u65b0\u5f0f\u7c7b\u7b97\u6cd5,\u7ecf\u5178\u7b97\u6cd5\u7684\u5347\u7ea7,\u91cd\u590d\u7684\u53ea\u4fdd\u7559\u6700\u540e\u4e00\u4e2a C3\u7b97\u6cd5,\u5728\u7c7b\u88ab\u521b\u5efa\u51fa\u6765\u7684\u65f6\u5019,\u5c31\u8ba1\u7b97\u51fa\u4e00\u4e2aMRO\u6709\u5e8f\u5217\u8868.\u7528mro()\u67e5\u4e00\u4e0b\u5217\u8868,\u6309\u5217\u8868\u987a\u5e8f\u7ee7\u627f \u591a\u7ee7\u627f\u7684\u7f3a\u70b9 \u00b6 \u5f53\u7c7b\u5f88\u591a,\u7ee7\u627f\u590d\u6742 \u7684\u60c5\u51b5\u4e0b,\u7ee7\u627f\u8def\u5f84\u592a\u591a,\u5bb9\u6613\u51fa\u9519,\u89e3\u91ca\u4e0d\u6e05 Python\u662f\u89e3\u91ca\u578b,\u8bed\u6cd5\u5141\u8bb8,\u53ea\u6709\u6267\u884c\u65f6\u624d\u62a5\u9519 \u56e2\u961f\u5f00\u53d1, \u591a\u7ee7\u627f\u4f1a\u5bfc\u81f4\u4ee3\u7801\u5931\u63a7 \u8bbf\u95ee\u63a7\u5236 \u00b6 \u79c1\u6709(private)\u5c5e\u6027 \u00b6 \u53cc\u4e0b\u5212\u7ebf\u5f00\u5934 \u5b9e\u4f8b.__\u65b9\u6cd5 \u5916\u90e8\u4e0d\u53ef\u4f7f\u7528\u6b64\u65b9\u6cd5;\u5728\u5185\u90e8\u5b9a\u4e49\u4e00\u4e2a\u83b7\u53d6\u6b64\u65b9\u6cd5\u7684\u65b9\u6cd5,\u624d\u53ef\u4ee5\u4f7f\u7528 \u5916\u90e8\u65e0\u6cd5\u8bbf\u95ee,\u4f46\u662f\u7c7b\u5185\u90e8\u63a5\u53e3\u53ef\u4ee5\u8bbf\u95ee class Person : def __init__ ( self , name , age = 18 ): self . name = name self . __age = age def growup ( self , increase = 1 ): if 0 < increase < 150 : self . __age += increase def getage ( self ): return self . __age \u6b64\u65f6age\u5728\u5916\u90e8\u4e0d\u53ef\u89c1,\u4f46\u662f\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528getage\u6765\u8bbf\u95ee \u672c\u8d28:python\u901a\u8fc7\u5185\u90e8\u6539\u540d\u6765\u5b9e\u73b0,\u5c06\u5176\u6539\u540d\u4e3a _\u7c7b\u540d__\u65b9\u6cd5\u540d __age \u5b58\u5728\u4e8e\u5b9e\u4f8b\u7684\u5c5e\u6027\u5b57\u5178\u4e2d \u5982\u679c __growup \u5c5e\u4e8e\u79c1\u6709\u65b9\u6cd5,\u5b58\u653e\u5728\u7c7b\u7684\u5c5e\u6027\u5b57\u5178\u4e2d \u4fdd\u62a4\u53d8\u91cf(protected) \u00b6 \u5355\u4e0b\u5212\u7ebf\u5f00\u5934 \u5f00\u53d1\u8005\u7ea6\u5b9a ,\u5355\u4e0b\u5212\u7ebf\u4e0d\u8981\u6539 \u516c\u5171\u65b9\u6cd5(public) \u00b6 \u79c1\u6709\u6210\u5458\u603b\u7ed3 \u00b6 python\u4f7f\u7528\u4e2d,\u4f7f\u7528\u5355\u4e0b\u5212\u7ebf\u6216\u8005\u53cc\u4e0b\u5212\u7ebf\u6765\u8868\u793a\u4e00\u4e2a\u6210\u5458\u88ab\u4fdd\u62a4\u6216\u8005\u88ab\u79c1\u6709\u5316\u9690\u85cf\u8d77\u6765. \u4e0d\u8981\u4f7f\u7528\u6216\u8005\u4fee\u6539 isinstance\u548cissubclass\u65b9\u6cd5 \u00b6 isinstance(o,c) \u00b6 \u5224\u65ado\u662f\u5426\u4e3ac\u7684\u5b9e\u4f8b\u5bf9\u8c61,c\u53ef\u4e3ao\u7684\u7c7b,\u6216\u7236\u7c7b\u53ca\u7237\u7237\u7c7b print ( isinstance ( True , int )) >>> True issubclass(o,c) \u00b6 \u5224\u65ado\u662f\u5426\u4e3ac\u7684\u5b50\u7c7b print ( issubclass ( bool , int )) >>> True \u5c5e\u6027\u67e5\u627e\u987a\u5e8f \u00b6 \u5b9e\u4f8b\u7684 __dict__ \u2192\u7c7b __dict__ \u2192(\u5982\u679c\u6709\u7ee7\u627f)\u7236\u7c7b __dict__ \u8fd9\u4e9b\u5730\u65b9\u90fd\u641c\u7d22\u6ca1\u627e\u5230\u5c31\u4f1a\u629b\u5f02\u5e38,\u5148\u627e\u5230\u5c31\u7acb\u5373\u8fd4\u56de. \u65b9\u6cd5\u7684\u91cd\u5199,\u8986\u76d6(override) \u00b6 \u7c7b\u7684\u5b9e\u4f8b\u53ef\u4ee5\u901a\u8fc7\u65b9\u6cd5\u4ece\u5199\u6765\u8986\u76d6\u7236\u7c7b\u4e2d\u7684\u540c\u540d\u65b9\u6cd5. \u5c5e\u6027\u88c5\u9970\u5668 \u00b6 \u4e00\u822c\u597d\u7684\u8bbe\u8ba1:\u628a\u5b9e\u4f8b\u7684\u5c5e\u6027\u4fdd\u62a4\u8d77\u6765,\u4e0d\u8ba9\u5916\u90e8\u76f4\u63a5\u8bbf\u95ee,\u5916\u90e8\u4f7f\u7528getter\u8bfb\u53d6\u5c5e\u6027\u548csetter\u65b9\u6cd5\u8bbe\u7f6e\u5c5e\u6027. property\u88c5\u9970\u5668 \u540e\u9762\u8ddf\u51fd\u6570\u540d\u5c31\u662f\u4ee5\u540e\u7684\u5c5e\u6027\u540d.\u5b83\u5c31\u662fgetter,\u8fd9\u4e2a\u5fc5\u987b\u6709,\u6709\u4e86\u5b83\u81f3\u5c11\u662f\u53ea\u8bfb\u5c5e\u6027 \u5c06\u7c7b\u5185\u90e8\u7684\u65b9\u6cd5def()\u53d8\u6210def, setter\u88c5\u9970\u5668 \u4e0e\u5c5e\u6027\u540c\u540d,\u63a5\u6536\u4e24\u4e2a\u53c2\u6570,\u7b2c\u4e00\u4e2a\u662fself,\u7b2c\u4e8c\u662f\u5c06\u8981\u8d4b\u7684\u503c.\u6709\u4e86\u5b83,\u5c5e\u6027\u53ef\u5199 deleter\u88c5\u9970\u5668 \u53ef\u4ee5\u63a7\u5236\u662f\u5426\u5220\u9664\u5c5e\u6027,\u5f88\u5c11\u7528 property\u88c5\u9970\u5668\u5fc5\u987b\u5728\u524d,setter,deleter\u88c5\u9970\u5668\u5728\u540e \u7c7b\u7684\u7ec4\u5408 \u00b6 \u65b9\u6cd5\u91cd\u7528\u9664\u4e86\u7ee7\u627f\u53e6\u4e00\u4e2d\u65b9\u6cd5:\u7ec4\u5408 \u7ec4\u5408\u662f\u6307,\u5728\u4e00\u4e2a\u7c7b\u4e2d\u4ee5\u53e6\u5916\u4e00\u4e2a\u7c7b\u7684\u5b9e\u4f8b\u4f5c\u4e3a\u5c5e\u6027,\u79f0\u4e3a\u7ec4\u5408 \u9b54\u672f\u65b9\u6cd5 \u00b6 \u65b9\u6cd5\u540d \u4f5c\u7528 __init__ \u5728\u8c03\u7528\u7c7b\u65f6\u89e6\u53d1. __new__ \u6ca1\u6709\u8fd4\u56de\u4e00\u4e2a\u7a7a\u5bf9\u8c61\u65f6\u4e0d\u89e6\u53d1 __str__ \u5728\u6253\u5370\u7684\u65f6\u5019\u89e6\u53d1,\u5982\u679c\u6ca1\u6709\u5b9a\u4e49,\u53d6\u8c03\u7528repr\u65b9\u6cd5, __repr__ \u5bf9\u4e00\u4e2a\u5bf9\u8c61\u83b7\u53d6\u5b57\u7b26\u4e32\u8868\u8fbe,\u5982\u679crepr\u6ca1\u6709\u5b9a\u4e49,\u76f4\u63a5\u8fd4\u56deobject\u7684\u5b9a\u4e49\u5c31\u662f\u663e\u793a\u5185\u5b58\u5730\u5740\u4fe1\u606f __del__ \u5728\u5bf9\u8c61\u9500\u6bc1\u5148\u6267\u884c,\u4e0d\u7ba1del\u65b9\u6cd5\u5b9a\u4e49\u5728\u524d\u6216\u540e,\u603b\u662f\u6700\u540e\u6267\u884c __getattr__ \u5728\u5bf9\u8c61\u4f7f\u7528 . \u8c03\u7528\u5c5e\u6027,\u4e14\u6b64\u5c5e\u6027\u6ca1\u6709\u65f6\u89e6\u53d1,\u6b64\u65b9\u6cd5\u5e94\u5f53\u8fd4\u56de\uff08\u627e\u5230\u7684\uff09\u5c5e\u6027\u503c\u6216\u662f\u5f15\u53d1\u4e00\u4e2a AttributeError \u5f02\u5e38\u3002\u53bb\u540d\u5b57\u7a7a\u95f4\u5b57\u5178\u91cc\u67e5\u627e __setattr__ \u4f1a\u5728\u5bf9\u8c61\u4f7f\u7528 . \u8c03\u7528\u5c5e\u6027,\u4e14\u5c5e\u6027\u7b49\u4e8e\u5c5e\u6027\u503c\u65f6\u89e6\u53d1,==\u6b64\u65b9\u6cd5\u5728\u4e00\u4e2a\u5c5e\u6027\u88ab\u5c1d\u8bd5\u8d4b\u503c\u65f6\u88ab\u8c03\u7528\u3002==\u5bf9\u8c61.\u5c5e\u6027=\u503c\u7684\u65f6\u5019\u89e6\u53d1,\u5305\u62ecinit\u4e2d\u7684\u521d\u59cb\u5316 __call__ \u4f1a\u5728\u5bf9\u8c61\u88ab\u8c03\u7528\u65f6\u89e6\u53d1 __new__ \u4f1a\u5728 __init__ \u6267\u884c\u524d\u89e6\u53d1,new\u624d\u662f\u7b2c\u4e00\u4e2a\u6267\u884c\u7684\u51fd\u6570,\u7528\u5904\u8f83\u5c11,\u5fc5\u987b\u8fd4\u56de\u4e00\u4e2a\u7a7a\u5bf9\u8c61,\u59cb\u7ec8\u90fd\u662f\u9759\u6001\u65b9\u6cd5 __getattribute__ \u5f53\u53d1\u751f . \u8c03\u7528\u5c5e\u6027\u65f6,\u65e0\u8bba\u5c5e\u6027\u662f\u5426\u5b58\u5728\u90fd\u4f1a\u6267\u884c,\u5f53getattribute\u548cgetattr\u540c\u65f6\u5b58\u5728,\u53ea\u4f1a\u6267\u884cgetattribute,\u9664\u975egetattribute\u6267\u884c\u8fc7\u7a0b\u4e2d\u629b\u9519 __module__ \u8868\u793a\u5f53\u524d\u64cd\u4f5c\u7684\u5bf9\u8c61\u5728\u90a3\u4e2a\u6a21\u5757 __class__ \u8868\u793a\u5f53\u524d\u64cd\u4f5c\u7684\u5bf9\u8c61\u7684\u7c7b\u65f6\u4ec0\u4e48 __delattr__ \u5f53\u5220\u9664\u5c5e\u6027\u65f6\u89e6\u53d1 \u67e5\u770b\u5c5e\u6027 \u00b6 __dir__ :\u8fd4\u56de\u7c7b\u6216\u8005\u5bf9\u8c61\u7684\u6240\u6709\u6210\u5458\u540d\u79f0\u5217\u8868.dir()\u51fd\u6570\u5c31\u662f\u8c03\u7528 __dir__ ().\u5982\u679c\u63d0\u4f9b __dir__ (),\u5219\u8fd4\u56de\u5c5e\u6027\u7684\u5217\u8868,\u5426\u5219\u4f1a\u5c3d\u91cf\u4ece __dict__ \u5c5e\u6027\u4e2d\u641c\u96c6\u4fe1\u606f. dir()\u5bf9\u4e8e\u4e0d\u540c\u7c7b\u578b\u7684\u5bf9\u8c61\u5177\u6709\u4e0d\u540c\u7684\u884c\u4e3a: \u5982\u679c\u5bf9\u8c61\u662f\u6a21\u5757\u5bf9\u8c61,\u8fd4\u56de\u7684\u5217\u8868\u5305\u542b\u6a21\u5757\u7684\u5c5e\u6027\u540d. \u5982\u679c\u5bf9\u8c61\u662f\u7c7b\u578b(type)\u6216\u8005\u7c7b\u5bf9\u8c61(class),\u8fd4\u56de\u7684\u5217\u8868\u5305\u542b\u7c7b\u7684\u5c5e\u6027\u540d,\u53ca\u5b83\u7684\u57fa\u7c7b\u7684\u5c5e\u6027\u540d \u5426\u5219,\u8fd4\u56de\u5217\u8868\u5305\u542b\u5bf9\u8c61\u7684\u5c5e\u6027\u540d,\u5b83\u7684\u7c7b\u7684\u5c5e\u6027\u540d\u548c\u7c7b\u7684\u57fa\u7c7b\u7684\u5c5e\u6027\u540d. \u603b\u7ed3 \u00b6 \u7ee7\u627f\u65f6,\u516c\u6709\u7684,\u5b50\u7c7b\u548c\u5b9e\u4f8b\u90fd\u53ef\u4ee5\u968f\u610f\u8bbf\u95ee;\u79c1\u6709\u6210\u5458\u88ab\u9690\u85cf,\u5b50\u7c7b\u548c\u5b9e\u4f8b\u4e0d\u53ef\u76f4\u63a5\u8bbf\u95ee,\u5f53\u79c1\u6709\u53d8\u91cf\u6240\u5728\u7684\u7c7b\u5185\u7684\u65b9\u6cd5\u4e2d\u53ef\u4ee5\u8bbf\u95ee\u8fd9\u4e2a\u79c1\u6709\u53d8\u91cf. Python\u901a\u8fc7\u81ea\u5df1\u7684\u4e00\u5957\u5b9e\u73b0,\u5b9e\u73b0\u548c\u5176\u4ed6\u8bed\u8a00\u4e00\u6837\u7684\u9762\u5411\u5bf9\u8c61\u7684\u7ee7\u627f\u673a\u5236. \u8865\u5145 \u00b6 \u6784\u9020\u51fd\u6570 \u00b6 __new__ \u548c __init__ \u51fd\u6570,\u6307\u5728\u7c7b\u6216\u5bf9\u8c61\u521b\u5efa\u7684\u65f6\u5019\u7cfb\u7edf\u81ea\u52a8\u8c03\u7528\u6765\u5b8c\u6210\u4f20\u53c2\u7b49\u521d\u59cb\u5316\u529f\u80fd\u7684\u51fd\u6570. \u5728\u5b9e\u4f8b\u5316\u4e00\u4e2a\u5bf9\u8c61\u7684\u65f6\u5019,\u6700\u5148\u6267\u884c __new__ \u65b9\u6cd5,\u7136\u540e\u4f1a\u81ea\u52a8\u6267\u884c __init__ \u65b9\u6cd5. \u6790\u6784\u51fd\u6570 \u00b6 __delete__ ,\u6307\u5728\u7c7b\u6216\u5bf9\u8c61\u9500\u6bc1\u7684\u65f6\u5019\u7cfb\u7edf\u81ea\u52a8\u8c03\u7528\u6765\u5b8c\u6210\u6e05\u9664\u529f\u80fd\u7684\u51fd\u6570.","title":"\u7c7b"},{"location":"Python/%E7%B1%BB/#_1","text":"python\u4e2d\u7684\u7c7b\u662f\u9762\u5411\u5bf9\u8c61\u7684\u603b\u8981\u7ec4\u6210.","title":"\u7c7b"},{"location":"Python/%E7%B1%BB/#_2","text":"\u7c7b,\u662f\u4e00\u7c7b\u62e5\u6709\u76f8\u540c\u5c5e\u6027\u548c\u65b9\u6cd5\u7684\u4e8b\u7269\u7684\u96c6\u5408.","title":"\u6982\u5ff5"},{"location":"Python/%E7%B1%BB/#_3","text":"class ClassName ( BaseClass ): \u5c5e\u6027 \u65b9\u6cd5 \u5fc5\u987b\u4f7f\u7528class\u5173\u952e\u5b57\u5b9a\u4e49. \u7c7b\u540d\u89c4\u8303\u4f7f\u7528\u5927\u9a7c\u5cf0\u4f53\u547d\u540d \u5b9a\u4e49\u4e4b\u540e\u4ea7\u751f\u4e86\u4e00\u4e2a\u7c7b\u5bf9\u8c61,\u7ed1\u5b9a\u5728\u4e86ClassName\u4e0a. class MyClass : a = 100 def foo ( self ): return self . a print ( type ( MyClass )) >>> < class ' type '> \u6ce8\u610f\u8fd9\u65f6\u7684\u7c7b,\u662ftype\u7c7b\u578b. BaseClass\u53ef\u4ee5\u6ca1\u6709,Python3\u4e2d\u4e0d\u5199\u9ed8\u8ba4\u7ee7\u627fobject\u57fa\u7c7b,python2\u4e2d\u5fc5\u987b\u5199","title":"\u5b9a\u4e49"},{"location":"Python/%E7%B1%BB/#_4","text":"","title":"\u5b9e\u4f8b\u5bf9\u8c61"},{"location":"Python/%E7%B1%BB/#_5","text":"\u8bed\u6cd5: \u7c7b\u540d() \u7c7b\u540d\u52a0()\u5c31\u5b9e\u4f8b\u5316\u51fa\u4e86\u4e00\u4e2a\u65b0\u7684\u7c7b. class MyClass : a = 100 def foo ( self ): return self . a c1 = MyClass () c2 = MyClass () print ( c1 is c2 ) >>> False \u6ce8\u610f:\u4e24\u4e2a\u770b\u4e0a\u53bb\u5b8c\u5168\u4e00\u81f4\u7684\u4e24\u4e2a\u5b9e\u4f8b\u5bf9\u8c61,\u4e5f\u662f\u4e0d\u540c\u7684,\u5176\u5185\u5b58\u5730\u5740\u4e0d\u540c.","title":"\u5b9e\u4f8b\u5316"},{"location":"Python/%E7%B1%BB/#self","text":"self\u5c31\u662f\u8c03\u7528\u8005,\u5c31\u662f\u5bf9\u5e94\u7684\u5b9e\u4f8b\u5bf9\u8c61.","title":"self"},{"location":"Python/%E7%B1%BB/#_6","text":"\u7c7b\u4e2d\u5b9a\u4e49\u7684\u53d8\u91cf\u5c31\u662f\u7c7b\u7684\u5c5e\u6027.","title":"\u5c5e\u6027"},{"location":"Python/%E7%B1%BB/#_7","text":"\u7c7b\u7684\u5c5e\u6027\u53ef\u5728\u7c7b\u5185\u90e8\u6216\u8005\u5916\u90e8\u66f4\u6539,\u66f4\u6539\u540e,\u540e\u7eed\u5b9a\u4e49\u7684\u7c7b\u7684\u5c5e\u6027\u4e5f\u4f1a\u88ab\u66f4\u6539 age = 3 \u662f\u7c7b\u53d8\u91cf name \u662f\u5b9e\u4f8b\u53d8\u91cf \u5b9e\u4f8b\u53d8\u91cf\u662f\u6bcf\u4e00\u4e2a\u5b9e\u4f8b\u81ea\u5df1\u7684\u53d8\u91cf; \u7c7b\u53d8\u91cf\u662f\u7c7b\u7684\u53d8\u91cf,\u662f\u7c7b\u7684\u6240\u6709\u5b9e\u4f8b\u5171\u4eab\u7684\u5c5e\u6027\u548c\u65b9\u6cd5 \u7279\u6b8a\u5c5e\u6027 \u542b\u4e49 __name__ \u7c7b\u7684\u5bf9\u8c61\u540d(\u5b9e\u4f8b\u6ca1\u6709) __class__ \u5bf9\u8c61\u7684\u7c7b\u578b(\u540ctype) __dict__ \u5bf9\u8c61\u7684\u5c5e\u6027\u5b57\u5178 __qualname__ \u7c7b\u7684\u9650\u5b9a\u540d(\u5b9e\u4f8b\u6ca1\u6709)","title":"\u5b9e\u4f8b\u53d8\u91cf \u548c \u7c7b\u53d8\u91cf"},{"location":"Python/%E7%B1%BB/#_8","text":"\u662f\u7c7b\u7684,\u4e5f\u662f\u8fd9\u4e2a\u7c7b\u6240\u6709\u5b9e\u4f8b\u7684,\u5176\u5b9e\u4f8b\u90fd\u53ef\u4ee5\u8bbf\u95ee\u5230;\u662f\u5b9e\u4f8b\u7684,\u5c31\u662f\u8fd9\u4e2a\u5b9e\u4f8b\u81ea\u5df1\u7684,\u901a\u8fc7\u7c7b\u8bbf\u95ee\u4e0d\u5230. \u7c7b\u53d8\u91cf\u662f\u4e66\u5c4b\u7c7b\u7684\u53d8\u91cf,\u8fd9\u4e2a\u7c7b\u7684\u6240\u6709\u5b9e\u4f8b\u53ef\u4ee5\u5171\u4eab\u8fd9\u4e2a\u53d8\u91cf. \u5b9e\u4f8b\u53ef\u4ee5\u52a8\u6001\u7684\u7ed9\u81ea\u5df1\u589e\u52a0\u4e00\u4e2a\u5c5e\u6027.\u6bd4\u5982:__dict__[\u53d8\u91cf\u540d]\u548c\u5b9e\u4f8b.\u53d8\u91cf\u540d\u90fd\u53ef\u4ee5\u8bbf\u95ee\u5230. \u5b9e\u4f8b\u7684\u540c\u540d\u53d8\u91cf\u4f1a\u9690\u85cf\u8fd9\u4e9b\u7c7b\u53d8\u91cf,\u6216\u8005\u8bf4\u8986\u76d6\u4e86\u8fd9\u4e2a\u7c7b\u53d8\u91cf. \u5b9e\u4f8b\u5c5e\u6027\u7684\u67e5\u627e\u987a\u5e8f \u6307\u7684\u662f\u5b9e\u4f8b\u4f7f\u7528 . \u6765\u8bbf\u95ee\u5c5e\u6027,\u4f1a\u9996\u5148\u627e\u81ea\u5df1\u7684__dict__,\u7ed9\u5982\u679c\u6ca1\u6709,\u5728\u901a\u8fc7__class__\u627e\u5230\u81ea\u5df1\u7684\u7c7b,\u518d\u53bb\u7c7b\u7684__dicr__\u4e2d\u627e \u5982\u679c\u5b9e\u4f8b\u4f7f\u7528__dict__[\u53d8\u91cf\u540d]\u8bbf\u95ee\u53d8\u91cf,\u5c06\u4e0d\u4f1a\u6309\u7167\u4e0a\u9762\u7684\u67e5\u627e\u987a\u5e8f\u627e\u53d8\u91cf,\u8fd9\u4e2a\u662f\u6307\u660e\u4f7f\u7528\u5b57\u5178\u7684key\u67e5\u627e,\u4e0d\u662f\u5c5e\u6027\u67e5\u627e \u4e00\u822c\u6765\u8bf4,\u7c7b\u53d8\u91cf\u4f7f\u7528\u5168\u5927\u5199\u6765\u547d\u540d.","title":"\u603b\u7ed3"},{"location":"Python/%E7%B1%BB/#_9","text":"\u7c7b\u4e2d\u7684\u51fd\u6570\u5c31\u662f\u7c7b\u7684\u65b9\u6cd5","title":"\u65b9\u6cd5"},{"location":"Python/%E7%B1%BB/#_10","text":"","title":"\u7c7b\u65b9\u6cd5\u548c\u5b9e\u4f8b\u65b9\u6cd5"},{"location":"Python/%E7%B1%BB/#_11","text":"@classmethod def clsmtd ( cls ): print ( xxx ) a = MyClass() a.clsmtd()\u662f\u53ef\u4ee5\u8c03\u7528\u7684, \u7b49\u540c\u4e8e a.__class__.clsmtd() \u5728\u7c7b\u5b9a\u4e49\u4e2d,\u4f7f\u7528@classmethod\u88c5\u9970\u5668\u4fee\u9970\u7684\u65b9\u6cd5 \u5fc5\u987b\u81f3\u5c11\u6709\u4e00\u4e2a\u53c2\u6570,\u4e14\u7b2c\u4e00\u4e2a\u53c2\u6570\u5c31\u7ed9\u4e86cls,cls\u6307\u8c03\u7528\u8005\u5c31\u662f\u5bf9\u8c61\u81ea\u5df1 cls\u53ef\u4ee5\u662f\u4efb\u610f\u5408\u6cd5\u540d\u79f0,\u4f46\u662f\u4e3a\u4e86\u6613\u8bfb\u6027,\u4e0d\u8981\u6539 \u901a\u8fc7cls\u53ef\u4ee5\u76f4\u63a5\u64cd\u4f5c\u7c7b\u7684\u5c5e\u6027,\u4f46\u662f\u65e0\u6cd5\u901a\u8fc7cls\u64cd\u4f5c\u7c7b\u7684\u5b9e\u4f8b","title":"\u7c7b\u65b9\u6cd5"},{"location":"Python/%E7%B1%BB/#_12","text":"@staticmethod def staticmtd (): print ( 'static' ) \u5728\u7c7b\u7684\u5b9a\u4e49\u4e2d,\u4f7f\u7528@staticmethod\u88c5\u9970\u5668\u4fee\u9970\u7684\u65b9\u6cd5 \u8c03\u7528\u65f6,\u4e0d\u4f1a\u9690\u5f0f\u4f20\u5165\u53c2\u6570 \u9759\u6001\u65b9\u6cd5,\u6307\u65f6\u8868\u660e\u8fd9\u4e2a\u65b9\u6cd5\u5c5e\u4e8e\u8fd9\u4e2a\u540d\u8bcd\u7a7a\u95f4,\u51fd\u6570\u5f52\u7ed3\u5728\u4e00\u8d77,\u65b9\u4fbf\u7ec4\u7ec7\u7ba1\u7406. \u7c7b\u548c\u5bf9\u8c61\u90fd\u53ef\u4ee5\u8c03\u7528,\u4e0d\u7528\u4f20\u53c2","title":"\u9759\u6001\u65b9\u6cd5"},{"location":"Python/%E7%B1%BB/#_13","text":"\u7c7b\u9664\u4e86\u666e\u901a\u65b9\u6cd5\u90fd\u53ef\u4ee5\u8c03\u7528,\u666e\u901a \u65b9\u6cd5 \u9700\u8981\u5bf9\u8c61\u7684\u5b9e\u4f8b\u4f5c\u4e3a\u7b2c\u4e00\u53c2\u6570. \u5b9e\u4f8b\u53ef\u4ee5\u8c03\u7528\u6240\u6709\u7c7b\u4e2d\u5b9a\u4e49\u7684\u65b9\u6cd5(\u5305\u62ec\u7c7b\u65b9\u6cd5,\u9759\u6001\u65b9\u6cd5),\u666e\u901a\u65b9\u6cd5\u4f20\u5165\u5b9e\u4f8b\u81ea\u8eab,\u9759\u6001\u65b9\u6cd5\u548c\u7c7b\u65b9\u6cd5\u9700\u8981\u627e\u5230\u5b9e\u4f8b\u7684\u7c7b. \u88ab@classmethod\u88c5\u9970\u5668\u88c5\u9970\u7684\u65b9\u6cd5\u662f\u7c7b\u7684\u7ed1\u5b9a\u65b9\u6cd5,\u53c2\u6570\u534f\u7a0bcls,cls\u662f\u7c7b\u672c\u8eab,\u5bf9\u8c61\u4e5f\u80fd\u8c03\u7528,\u53c2\u6570cls\u8fd8\u662f\u8fd8\u662f\u7c7b\u672c\u8eab \u88ab@staticmethod\u88c5\u9970\u5668\u88c5\u9970\u7684\u65b9\u6cd5\u5c31\u662f\u975e\u7ed1\u5b9a\u65b9\u6cd5,\u5c31\u662f\u4e00\u4e2a\u666e\u901a\u51fd\u6570","title":"\u603b\u7ed3"},{"location":"Python/%E7%B1%BB/#_14","text":"","title":"\u7c7b\u7684\u7ee7\u627f"},{"location":"Python/%E7%B1%BB/#_15","text":"\u7c7b\u7684\u7ee7\u627f\u5c31\u662f\u9762\u5411\u5bf9\u8c61\u4e09\u4e2a\u8981\u7d20\u4e4b\u4e00\u7684\u7ee7\u627f,inheritance \u5b50\u7c7b\u53ef\u4ee5\u7ee7\u627f\u7236\u7c7b\u7684\u5c5e\u6027\u53ca\u65b9\u6cd5","title":"\u6982\u5ff5"},{"location":"Python/%E7%B1%BB/#_16","text":"\u7236\u7c7b,\u4e5f\u79f0\u8d85\u7c7b\u6216\u8005\u57fa\u7c7b","title":"\u7236\u7c7b"},{"location":"Python/%E7%B1%BB/#_17","text":"\u5b50\u7c7b\u4e5f\u6210\u6d3e\u751f\u7c7b","title":"\u5b50\u7c7b"},{"location":"Python/%E7%B1%BB/#_18","text":"\u53c8\u53eb\u6d3e\u751f class \u5b50\u7c7b\u540d(\u57fa\u7c7b1[,\u57fa\u7c7b2,...]): \u8bed\u53e5\u5757 \u5982\u679c\u7c7b\u5b9a\u4e49\u65f6,\u6ca1\u6709\u57fa\u7c7b\u5217\u8868,\u7b49\u540c\u4e8e\u7ee7\u627f\u5b50object.\u5728Python3\u4e2d,object\u7c7b\u65f6\u6240\u6709\u5bf9\u8c61\u7684\u6839\u57fa\u7c7b. class A : pass #\u7b49\u4ef7\u4e8e class A ( object ): pass","title":"\u7ee7\u627f"},{"location":"Python/%E7%B1%BB/#_19","text":"\u5c5e\u6027\u65b9\u6cd5 \u542b\u4e49 __bases__ \u67e5\u770b\u8fd4\u56de\u7c7b\u7684\u57fa\u7c7b\u7684\u5143\u7ec4.\u662f\u7c7b\u7684\u65b9\u6cd5,\u4e0d\u4f1a\u8fd4\u56de\u7237\u7237\u7c7b mro()\u65b9\u6cd5 \u663e\u793a\u65b9\u6cd5\u67e5\u627e\u987a\u5e8f,\u8c03\u7528 __mro__ ,\u8fd4\u56de\u67e5\u627e\u987a\u5e8f\u5217\u8868,\u662f\u7c7b\u7684\u65b9\u6cd5,\u5b9e\u4f8b\u4e0d\u80fd\u7528 __subclasses__() \u7c7b\u7684\u5b50\u7c7b\u5217\u8868","title":"\u67e5\u770b\u5c5e\u6027\u7684\u65b9\u6cd5"},{"location":"Python/%E7%B1%BB/#_20","text":"","title":"\u7ee7\u627f\u4e2d\u7684\u521d\u59cb\u5316"},{"location":"Python/%E7%B1%BB/#super","text":"super()\u53ef\u4ee5\u8bbf\u95ee\u5230\u7236\u7c7b\u7684\u5c5e\u6027 \u5b50\u7c7b\u7ee7\u627f\u7236\u7c7b\u7684\u65f6\u5019,\u6700\u597d\u52a0\u4e0a super().__init__() \u4f5c\u4e3a\u4e00\u4e2a\u597d\u4e60\u60ef,\u5982\u679c\u7236\u7c7b\u5b9a\u4e49\u4e86 __init__ \u65b9\u6cd5,\u5c31\u5e94\u8be5\u5728\u5b50\u7c7b\u7684 __init__ \u4e2d\u8c03\u7528\u5b83 \u4e00\u4e2a\u539f\u5219:\u81ea\u5df1\u7684\u79c1\u6709\u5c5e\u6027,\u5c31\u8be5\u81ea\u5df1\u7684\u65b9\u6cd5\u8bfb\u53d6\u548c\u4fee\u6539,\u4e0d\u8981\u501f\u52a9\u5176\u4ed6\u7c7b\u7684\u65b9\u6cd5,\u5373\u4f7f\u65f6\u7236\u7c7b\u6216\u8005\u6d3e\u751f\u7c7b\u7684\u65b9\u6cd5.","title":"super()\u65b9\u6cd5"},{"location":"Python/%E7%B1%BB/#_21","text":"\u589e\u52a0\u4e86\u590d\u6742\u7684\u4e8c\u4e49\u6027,\u6240\u4ee5\u8981\u786e\u5b9a\u6df1\u5ea6\u4f18\u5148\u6216\u8005\u5e7f\u5ea6\u4f18\u5148 Python\u4f7f\u7528MRO(method resolution order)\u89e3\u51b3\u641c\u7d22\u987a\u5e8f\u95ee\u9898 \u7ecf\u5178\u7b97\u6cd52.2\u4e4b\u524d,\u4ece\u5de6\u5230\u53f3,\u6df1\u5ea6\u4f18\u5148\u7b56\u7565,\u627e\u5230\u5c31\u505c\u6b62 \u65b0\u5f0f\u7c7b\u7b97\u6cd5,\u7ecf\u5178\u7b97\u6cd5\u7684\u5347\u7ea7,\u91cd\u590d\u7684\u53ea\u4fdd\u7559\u6700\u540e\u4e00\u4e2a C3\u7b97\u6cd5,\u5728\u7c7b\u88ab\u521b\u5efa\u51fa\u6765\u7684\u65f6\u5019,\u5c31\u8ba1\u7b97\u51fa\u4e00\u4e2aMRO\u6709\u5e8f\u5217\u8868.\u7528mro()\u67e5\u4e00\u4e0b\u5217\u8868,\u6309\u5217\u8868\u987a\u5e8f\u7ee7\u627f","title":"\u591a\u7ee7\u627f\u7684\u5b9e\u73b0"},{"location":"Python/%E7%B1%BB/#_22","text":"\u5f53\u7c7b\u5f88\u591a,\u7ee7\u627f\u590d\u6742 \u7684\u60c5\u51b5\u4e0b,\u7ee7\u627f\u8def\u5f84\u592a\u591a,\u5bb9\u6613\u51fa\u9519,\u89e3\u91ca\u4e0d\u6e05 Python\u662f\u89e3\u91ca\u578b,\u8bed\u6cd5\u5141\u8bb8,\u53ea\u6709\u6267\u884c\u65f6\u624d\u62a5\u9519 \u56e2\u961f\u5f00\u53d1, \u591a\u7ee7\u627f\u4f1a\u5bfc\u81f4\u4ee3\u7801\u5931\u63a7","title":"\u591a\u7ee7\u627f\u7684\u7f3a\u70b9"},{"location":"Python/%E7%B1%BB/#_23","text":"","title":"\u8bbf\u95ee\u63a7\u5236"},{"location":"Python/%E7%B1%BB/#private","text":"\u53cc\u4e0b\u5212\u7ebf\u5f00\u5934 \u5b9e\u4f8b.__\u65b9\u6cd5 \u5916\u90e8\u4e0d\u53ef\u4f7f\u7528\u6b64\u65b9\u6cd5;\u5728\u5185\u90e8\u5b9a\u4e49\u4e00\u4e2a\u83b7\u53d6\u6b64\u65b9\u6cd5\u7684\u65b9\u6cd5,\u624d\u53ef\u4ee5\u4f7f\u7528 \u5916\u90e8\u65e0\u6cd5\u8bbf\u95ee,\u4f46\u662f\u7c7b\u5185\u90e8\u63a5\u53e3\u53ef\u4ee5\u8bbf\u95ee class Person : def __init__ ( self , name , age = 18 ): self . name = name self . __age = age def growup ( self , increase = 1 ): if 0 < increase < 150 : self . __age += increase def getage ( self ): return self . __age \u6b64\u65f6age\u5728\u5916\u90e8\u4e0d\u53ef\u89c1,\u4f46\u662f\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528getage\u6765\u8bbf\u95ee \u672c\u8d28:python\u901a\u8fc7\u5185\u90e8\u6539\u540d\u6765\u5b9e\u73b0,\u5c06\u5176\u6539\u540d\u4e3a _\u7c7b\u540d__\u65b9\u6cd5\u540d __age \u5b58\u5728\u4e8e\u5b9e\u4f8b\u7684\u5c5e\u6027\u5b57\u5178\u4e2d \u5982\u679c __growup \u5c5e\u4e8e\u79c1\u6709\u65b9\u6cd5,\u5b58\u653e\u5728\u7c7b\u7684\u5c5e\u6027\u5b57\u5178\u4e2d","title":"\u79c1\u6709(private)\u5c5e\u6027"},{"location":"Python/%E7%B1%BB/#protected","text":"\u5355\u4e0b\u5212\u7ebf\u5f00\u5934 \u5f00\u53d1\u8005\u7ea6\u5b9a ,\u5355\u4e0b\u5212\u7ebf\u4e0d\u8981\u6539","title":"\u4fdd\u62a4\u53d8\u91cf(protected)"},{"location":"Python/%E7%B1%BB/#public","text":"","title":"\u516c\u5171\u65b9\u6cd5(public)"},{"location":"Python/%E7%B1%BB/#_24","text":"python\u4f7f\u7528\u4e2d,\u4f7f\u7528\u5355\u4e0b\u5212\u7ebf\u6216\u8005\u53cc\u4e0b\u5212\u7ebf\u6765\u8868\u793a\u4e00\u4e2a\u6210\u5458\u88ab\u4fdd\u62a4\u6216\u8005\u88ab\u79c1\u6709\u5316\u9690\u85cf\u8d77\u6765. \u4e0d\u8981\u4f7f\u7528\u6216\u8005\u4fee\u6539","title":"\u79c1\u6709\u6210\u5458\u603b\u7ed3"},{"location":"Python/%E7%B1%BB/#isinstanceissubclass","text":"","title":"isinstance\u548cissubclass\u65b9\u6cd5"},{"location":"Python/%E7%B1%BB/#isinstanceoc","text":"\u5224\u65ado\u662f\u5426\u4e3ac\u7684\u5b9e\u4f8b\u5bf9\u8c61,c\u53ef\u4e3ao\u7684\u7c7b,\u6216\u7236\u7c7b\u53ca\u7237\u7237\u7c7b print ( isinstance ( True , int )) >>> True","title":"isinstance(o,c)"},{"location":"Python/%E7%B1%BB/#issubclassoc","text":"\u5224\u65ado\u662f\u5426\u4e3ac\u7684\u5b50\u7c7b print ( issubclass ( bool , int )) >>> True","title":"issubclass(o,c)"},{"location":"Python/%E7%B1%BB/#_25","text":"\u5b9e\u4f8b\u7684 __dict__ \u2192\u7c7b __dict__ \u2192(\u5982\u679c\u6709\u7ee7\u627f)\u7236\u7c7b __dict__ \u8fd9\u4e9b\u5730\u65b9\u90fd\u641c\u7d22\u6ca1\u627e\u5230\u5c31\u4f1a\u629b\u5f02\u5e38,\u5148\u627e\u5230\u5c31\u7acb\u5373\u8fd4\u56de.","title":"\u5c5e\u6027\u67e5\u627e\u987a\u5e8f"},{"location":"Python/%E7%B1%BB/#override","text":"\u7c7b\u7684\u5b9e\u4f8b\u53ef\u4ee5\u901a\u8fc7\u65b9\u6cd5\u4ece\u5199\u6765\u8986\u76d6\u7236\u7c7b\u4e2d\u7684\u540c\u540d\u65b9\u6cd5.","title":"\u65b9\u6cd5\u7684\u91cd\u5199,\u8986\u76d6(override)"},{"location":"Python/%E7%B1%BB/#_26","text":"\u4e00\u822c\u597d\u7684\u8bbe\u8ba1:\u628a\u5b9e\u4f8b\u7684\u5c5e\u6027\u4fdd\u62a4\u8d77\u6765,\u4e0d\u8ba9\u5916\u90e8\u76f4\u63a5\u8bbf\u95ee,\u5916\u90e8\u4f7f\u7528getter\u8bfb\u53d6\u5c5e\u6027\u548csetter\u65b9\u6cd5\u8bbe\u7f6e\u5c5e\u6027. property\u88c5\u9970\u5668 \u540e\u9762\u8ddf\u51fd\u6570\u540d\u5c31\u662f\u4ee5\u540e\u7684\u5c5e\u6027\u540d.\u5b83\u5c31\u662fgetter,\u8fd9\u4e2a\u5fc5\u987b\u6709,\u6709\u4e86\u5b83\u81f3\u5c11\u662f\u53ea\u8bfb\u5c5e\u6027 \u5c06\u7c7b\u5185\u90e8\u7684\u65b9\u6cd5def()\u53d8\u6210def, setter\u88c5\u9970\u5668 \u4e0e\u5c5e\u6027\u540c\u540d,\u63a5\u6536\u4e24\u4e2a\u53c2\u6570,\u7b2c\u4e00\u4e2a\u662fself,\u7b2c\u4e8c\u662f\u5c06\u8981\u8d4b\u7684\u503c.\u6709\u4e86\u5b83,\u5c5e\u6027\u53ef\u5199 deleter\u88c5\u9970\u5668 \u53ef\u4ee5\u63a7\u5236\u662f\u5426\u5220\u9664\u5c5e\u6027,\u5f88\u5c11\u7528 property\u88c5\u9970\u5668\u5fc5\u987b\u5728\u524d,setter,deleter\u88c5\u9970\u5668\u5728\u540e","title":"\u5c5e\u6027\u88c5\u9970\u5668"},{"location":"Python/%E7%B1%BB/#_27","text":"\u65b9\u6cd5\u91cd\u7528\u9664\u4e86\u7ee7\u627f\u53e6\u4e00\u4e2d\u65b9\u6cd5:\u7ec4\u5408 \u7ec4\u5408\u662f\u6307,\u5728\u4e00\u4e2a\u7c7b\u4e2d\u4ee5\u53e6\u5916\u4e00\u4e2a\u7c7b\u7684\u5b9e\u4f8b\u4f5c\u4e3a\u5c5e\u6027,\u79f0\u4e3a\u7ec4\u5408","title":"\u7c7b\u7684\u7ec4\u5408"},{"location":"Python/%E7%B1%BB/#_28","text":"\u65b9\u6cd5\u540d \u4f5c\u7528 __init__ \u5728\u8c03\u7528\u7c7b\u65f6\u89e6\u53d1. __new__ \u6ca1\u6709\u8fd4\u56de\u4e00\u4e2a\u7a7a\u5bf9\u8c61\u65f6\u4e0d\u89e6\u53d1 __str__ \u5728\u6253\u5370\u7684\u65f6\u5019\u89e6\u53d1,\u5982\u679c\u6ca1\u6709\u5b9a\u4e49,\u53d6\u8c03\u7528repr\u65b9\u6cd5, __repr__ \u5bf9\u4e00\u4e2a\u5bf9\u8c61\u83b7\u53d6\u5b57\u7b26\u4e32\u8868\u8fbe,\u5982\u679crepr\u6ca1\u6709\u5b9a\u4e49,\u76f4\u63a5\u8fd4\u56deobject\u7684\u5b9a\u4e49\u5c31\u662f\u663e\u793a\u5185\u5b58\u5730\u5740\u4fe1\u606f __del__ \u5728\u5bf9\u8c61\u9500\u6bc1\u5148\u6267\u884c,\u4e0d\u7ba1del\u65b9\u6cd5\u5b9a\u4e49\u5728\u524d\u6216\u540e,\u603b\u662f\u6700\u540e\u6267\u884c __getattr__ \u5728\u5bf9\u8c61\u4f7f\u7528 . \u8c03\u7528\u5c5e\u6027,\u4e14\u6b64\u5c5e\u6027\u6ca1\u6709\u65f6\u89e6\u53d1,\u6b64\u65b9\u6cd5\u5e94\u5f53\u8fd4\u56de\uff08\u627e\u5230\u7684\uff09\u5c5e\u6027\u503c\u6216\u662f\u5f15\u53d1\u4e00\u4e2a AttributeError \u5f02\u5e38\u3002\u53bb\u540d\u5b57\u7a7a\u95f4\u5b57\u5178\u91cc\u67e5\u627e __setattr__ \u4f1a\u5728\u5bf9\u8c61\u4f7f\u7528 . \u8c03\u7528\u5c5e\u6027,\u4e14\u5c5e\u6027\u7b49\u4e8e\u5c5e\u6027\u503c\u65f6\u89e6\u53d1,==\u6b64\u65b9\u6cd5\u5728\u4e00\u4e2a\u5c5e\u6027\u88ab\u5c1d\u8bd5\u8d4b\u503c\u65f6\u88ab\u8c03\u7528\u3002==\u5bf9\u8c61.\u5c5e\u6027=\u503c\u7684\u65f6\u5019\u89e6\u53d1,\u5305\u62ecinit\u4e2d\u7684\u521d\u59cb\u5316 __call__ \u4f1a\u5728\u5bf9\u8c61\u88ab\u8c03\u7528\u65f6\u89e6\u53d1 __new__ \u4f1a\u5728 __init__ \u6267\u884c\u524d\u89e6\u53d1,new\u624d\u662f\u7b2c\u4e00\u4e2a\u6267\u884c\u7684\u51fd\u6570,\u7528\u5904\u8f83\u5c11,\u5fc5\u987b\u8fd4\u56de\u4e00\u4e2a\u7a7a\u5bf9\u8c61,\u59cb\u7ec8\u90fd\u662f\u9759\u6001\u65b9\u6cd5 __getattribute__ \u5f53\u53d1\u751f . \u8c03\u7528\u5c5e\u6027\u65f6,\u65e0\u8bba\u5c5e\u6027\u662f\u5426\u5b58\u5728\u90fd\u4f1a\u6267\u884c,\u5f53getattribute\u548cgetattr\u540c\u65f6\u5b58\u5728,\u53ea\u4f1a\u6267\u884cgetattribute,\u9664\u975egetattribute\u6267\u884c\u8fc7\u7a0b\u4e2d\u629b\u9519 __module__ \u8868\u793a\u5f53\u524d\u64cd\u4f5c\u7684\u5bf9\u8c61\u5728\u90a3\u4e2a\u6a21\u5757 __class__ \u8868\u793a\u5f53\u524d\u64cd\u4f5c\u7684\u5bf9\u8c61\u7684\u7c7b\u65f6\u4ec0\u4e48 __delattr__ \u5f53\u5220\u9664\u5c5e\u6027\u65f6\u89e6\u53d1","title":"\u9b54\u672f\u65b9\u6cd5"},{"location":"Python/%E7%B1%BB/#_29","text":"__dir__ :\u8fd4\u56de\u7c7b\u6216\u8005\u5bf9\u8c61\u7684\u6240\u6709\u6210\u5458\u540d\u79f0\u5217\u8868.dir()\u51fd\u6570\u5c31\u662f\u8c03\u7528 __dir__ ().\u5982\u679c\u63d0\u4f9b __dir__ (),\u5219\u8fd4\u56de\u5c5e\u6027\u7684\u5217\u8868,\u5426\u5219\u4f1a\u5c3d\u91cf\u4ece __dict__ \u5c5e\u6027\u4e2d\u641c\u96c6\u4fe1\u606f. dir()\u5bf9\u4e8e\u4e0d\u540c\u7c7b\u578b\u7684\u5bf9\u8c61\u5177\u6709\u4e0d\u540c\u7684\u884c\u4e3a: \u5982\u679c\u5bf9\u8c61\u662f\u6a21\u5757\u5bf9\u8c61,\u8fd4\u56de\u7684\u5217\u8868\u5305\u542b\u6a21\u5757\u7684\u5c5e\u6027\u540d. \u5982\u679c\u5bf9\u8c61\u662f\u7c7b\u578b(type)\u6216\u8005\u7c7b\u5bf9\u8c61(class),\u8fd4\u56de\u7684\u5217\u8868\u5305\u542b\u7c7b\u7684\u5c5e\u6027\u540d,\u53ca\u5b83\u7684\u57fa\u7c7b\u7684\u5c5e\u6027\u540d \u5426\u5219,\u8fd4\u56de\u5217\u8868\u5305\u542b\u5bf9\u8c61\u7684\u5c5e\u6027\u540d,\u5b83\u7684\u7c7b\u7684\u5c5e\u6027\u540d\u548c\u7c7b\u7684\u57fa\u7c7b\u7684\u5c5e\u6027\u540d.","title":"\u67e5\u770b\u5c5e\u6027"},{"location":"Python/%E7%B1%BB/#_30","text":"\u7ee7\u627f\u65f6,\u516c\u6709\u7684,\u5b50\u7c7b\u548c\u5b9e\u4f8b\u90fd\u53ef\u4ee5\u968f\u610f\u8bbf\u95ee;\u79c1\u6709\u6210\u5458\u88ab\u9690\u85cf,\u5b50\u7c7b\u548c\u5b9e\u4f8b\u4e0d\u53ef\u76f4\u63a5\u8bbf\u95ee,\u5f53\u79c1\u6709\u53d8\u91cf\u6240\u5728\u7684\u7c7b\u5185\u7684\u65b9\u6cd5\u4e2d\u53ef\u4ee5\u8bbf\u95ee\u8fd9\u4e2a\u79c1\u6709\u53d8\u91cf. Python\u901a\u8fc7\u81ea\u5df1\u7684\u4e00\u5957\u5b9e\u73b0,\u5b9e\u73b0\u548c\u5176\u4ed6\u8bed\u8a00\u4e00\u6837\u7684\u9762\u5411\u5bf9\u8c61\u7684\u7ee7\u627f\u673a\u5236.","title":"\u603b\u7ed3"},{"location":"Python/%E7%B1%BB/#_31","text":"","title":"\u8865\u5145"},{"location":"Python/%E7%B1%BB/#_32","text":"__new__ \u548c __init__ \u51fd\u6570,\u6307\u5728\u7c7b\u6216\u5bf9\u8c61\u521b\u5efa\u7684\u65f6\u5019\u7cfb\u7edf\u81ea\u52a8\u8c03\u7528\u6765\u5b8c\u6210\u4f20\u53c2\u7b49\u521d\u59cb\u5316\u529f\u80fd\u7684\u51fd\u6570. \u5728\u5b9e\u4f8b\u5316\u4e00\u4e2a\u5bf9\u8c61\u7684\u65f6\u5019,\u6700\u5148\u6267\u884c __new__ \u65b9\u6cd5,\u7136\u540e\u4f1a\u81ea\u52a8\u6267\u884c __init__ \u65b9\u6cd5.","title":"\u6784\u9020\u51fd\u6570"},{"location":"Python/%E7%B1%BB/#_33","text":"__delete__ ,\u6307\u5728\u7c7b\u6216\u5bf9\u8c61\u9500\u6bc1\u7684\u65f6\u5019\u7cfb\u7edf\u81ea\u52a8\u8c03\u7528\u6765\u5b8c\u6210\u6e05\u9664\u529f\u80fd\u7684\u51fd\u6570.","title":"\u6790\u6784\u51fd\u6570"},{"location":"Python/%E7%BA%BF%E7%A8%8B%E5%90%8C%E6%AD%A5/","text":"\u7ebf\u7a0b\u540c\u6b65 \u6982\u5ff5 Event\u4e8b\u4ef6 wait\u7684\u4f7f\u7528 Lock(\u4e92\u65a5\u9501,\u4e92\u65a5\u91cf) \u52a0\u9501,\u89e3\u9501 \u5e38\u7528\u8bed\u53e5: \u6ce8\u610f\u4e8b\u9879: \u9012\u5f52\u9501RLock(\u53ef\u91cd\u5165\u9501) Condition \u603b\u7ed3 \u4f7f\u7528\u65b9\u6cd5: Barrier\u6805\u680f(\u8def\u95f8) wait\u8d85\u65f6 semaphore\u4fe1\u53f7\u91cf \u4fe1\u53f7\u91cf\u548c\u9501 \u6570\u636e\u7ed3\u6784\u548cGIL Queue GIL\u5168\u5c40\u89e3\u91ca\u5668\u9501(Global Interpreter Lock) GIL\u51fa\u73b0\u7684\u539f\u56e0 \u89e3\u91ca \u539f\u5b50\u64cd\u4f5c: \u7ebf\u7a0b\u540c\u6b65 \u00b6 \u6982\u5ff5 \u00b6 \u7ebf\u7a0b\u540c\u6b65,\u7ebf\u7a0b\u95f4\u534f\u540c,\u901a\u8fc7\u67d0\u79cd\u6280\u672f,\u8ba9\u4e00\u4e2a\u7ebf\u7a0b\u8bbf\u95ee\u67d0\u4e9b\u6570\u636e\u65f6,\u5176\u4ed6\u7ebf\u7a0b\u4e0d\u80fd\u8bbf\u95ee\u8fd9\u4e9b\u6570\u636e,\u76f4\u5230\u8be5\u7ebf\u7a0b\u5b8c\u6210\u5bf9\u6570\u636e\u7684\u64cd\u4f5c. \u4e34\u754c\u533a(Critical Section) \u4e92\u65a5\u91cf(Mutex) \u4fe1\u53f7\u91cf(Semaphore) \u65f6\u95f4(Event) Event\u4e8b\u4ef6 \u00b6 Event\u4e8b\u4ef6,\u662f\u7ebf\u7a0b\u95f4\u901a\u4fe1\u673a\u5236\u4e2d\u6700\u7b80\u5355\u7684\u5b9e\u73b0,\u4f7f\u7528\u4e00\u4e2a\u5185\u90e8\u6807\u8bb0\u7684flag,\u901a\u8fc7flag\u7684True\u6216False\u7684\u53d8\u5316\u6765\u8fdb\u884c\u64cd\u4f5c. \u76f8\u5f53\u4e8e\u7528\u7ebf\u7a0b\u63a7\u5236\u7ebf\u7a0b. \u540d\u79f0 \u542b\u4e49 set() \u6807\u8bb0\u8bbe\u7f6e\u4e3aTrue clear() \u6807\u8bb0\u8bbe\u7f6e\u4e3aFalse is_set() \u6807\u8bb0\u662f\u5426\u4e3aTrue wait(timeout=None) \u8bbe\u7f6e\u7b49\u6807\u8bb0\u4e3aTrue\u7684\u65f6\u957f,None\u4e3a\u65e0\u9650\u7b49\u5f85.\u7b49\u5230\u8fd4\u56deTrue,\u672a\u7b49\u5230\u8d85\u65f6\u8fd4\u56deFalse,\u4e0d\u8bbe\u7f6e\u9ed8\u8ba4\u65e0\u9650\u7b49 \u603b\u7ed3 \u4f7f\u7528\u540c\u4e00\u4e2aEvent\u5bf9\u8c61\u7684\u6807\u8bb0flag \u8c01wait\u5c31\u662f\u7b49\u5230flag\u53d8\u4e3atrue,\u6216\u7b49\u5230\u8d85\u65f6\u8fd4\u56deFalse,\u4e0d\u9650\u5236\u7b49\u5f85\u4e2a\u6570 wait\u7684\u4f7f\u7528 \u00b6 Event\u7684wait\u4f18\u4e8etime.sleep,\u5b83\u4f1a\u66f4\u5feb\u7684\u5207\u6362\u5230\u5176\u4ed6\u8fdb\u7a0b,\u63d0\u9ad8\u5e76\u53d1\u6548\u7387. Lock(\u4e92\u65a5\u9501,\u4e92\u65a5\u91cf) \u00b6 \u9501,\u51e1\u662f\u5b58\u5728\u5171\u4eab\u8d44\u6e90\u4e89\u62a2\u7684\u5730\u65b9\u90fd\u53ef\u4ee5\u4f7f\u7528\u9501,\u4ece\u800c\u4fdd\u8bc1\u53ea\u6709\u4e00\u4e2a\u4f7f\u7528\u8005\u53ef\u4ee5\u5b8c\u5168\u4f7f\u7528\u8fd9\u4e2a\u8d44\u6e90. \u4e00\u65e6\u7ebf\u7a0b\u83b7\u5f97\u9501,\u5176\u4ed6\u8bd5\u56fe\u83b7\u53d6\u9501\u7684\u7ebf\u7a0b\u5c06\u88ab\u963b\u585e \u540d\u79f0 \u542b\u4e49 acquire(blocking=True,timeout=-1) \u9ed8\u8ba4\u963b\u585e,\u963b\u585e\u53ef\u4ee5\u8bbe\u7f6e\u8d85\u65f6\u65f6\u95f4.\u975e\u963b\u585e\u65f6,timeout\u7981\u6b62\u8bbe\u7f6e.\u6210\u529f\u83b7\u53d6\u9501,\u8fd4\u56deTrue,\u5426\u5219\u8fd4\u56deFalse release() \u91ca\u653e\u9501,\u53ef\u4ee5\u4ece\u4efb\u4f55\u7ebf\u7a0b\u8c03\u7528\u91ca\u653e.\u5df2\u4e0a\u9501\u7684\u9501,\u4f1a\u88ab\u91cd\u7f6e\u4e3aunlocked\u672a\u4e0a\u9501\u7684\u9501\u4e0a\u8c03\u7528,\u629bRuntimeError\u5f02\u5e38 \u52a0\u9501,\u89e3\u9501 \u00b6 \u4e00\u822c\u6765\u8bf4,\u6709\u52a0\u9501\u5c31\u9700\u8981\u89e3\u9501,\u4e00\u65e6\u52a0\u9501\u540e\u89e3\u9501\u524d,\u8fd8\u8981\u6267\u884c\u4e00\u4e9b\u4ee3\u7801,\u5c31\u53ef\u80fd\u629b\u5f02\u5e38,\u9501\u65e0\u6cd5\u91ca\u653e,\u4f46\u662f\u5f53\u524d\u7ebf\u7a0b\u5c31\u53ef\u80fd\u56e0\u4e3a\u8fd9\u4e2a\u5f02\u5e38\u88ab\u7ec8\u6b62,\u4ea7\u751f\u6b7b\u9501.\u4e00\u822c\u4e3a\u903b\u8f91\u95ee\u9898. \u5e38\u7528\u8bed\u53e5: \u00b6 \u4f7f\u7528try,,,finally\u8bed\u53e5\u4fdd\u8bc1\u9501\u7684\u91ca\u653e with\u4e0a\u4e0b\u6587\u7ba1\u7406,\u9501\u5bf9\u8c61\u652f\u6301\u4e0a\u4e0b\u6587\u7ba1\u7406 \u6ce8\u610f\u4e8b\u9879: \u00b6 \u5c11\u7528.\u4f7f\u7528\u4e86\u9501,\u591a\u7ebf\u7a0b\u8bbf\u95ee\u88ab\u9501\u7684\u8d44\u6e90\u65f6,\u5c31\u6210\u4e86\u4e32\u884c,\u8981\u4e48\u6392\u961f\u6267\u884c,\u8981\u4e48\u4e89\u62a2\u6267\u884c \u52a0\u9501\u65f6\u95f4\u8d8a\u77ed\u8d8a\u597d,\u4e0d\u9700\u8981\u5c31\u7acb\u5373\u91ca\u653e\u9501 \u4e00\u5b9a\u8981\u907f\u514d\u6b7b\u9501 \u9012\u5f52\u9501RLock(\u53ef\u91cd\u5165\u9501) \u00b6 \u9012\u5f52\u9501,\u662f\u7ebf\u7a0b\u76f8\u5173\u9501,\u4e2a\u4eba\u8ba4\u4e3a,\u9501\u7684\u662f\u4e00\u4e2a\u7ebf\u7a0b \u7ebf\u7a0bA\u53ef\u83b7\u5f97\u91cd\u590d\u9501,\u5e76\u53ef\u591a\u6b21\u6210\u529f\u83b7\u53d6,\u4e0d\u4f1a\u963b\u585e.\u6700\u540e\u8981\u5728\u7ebf\u7a0bA\u4e2d\u505a\u548cacquire\u6b21\u6570\u76f8\u540c\u7684release. \u5f53\u9501\u672a\u91ca\u653e\u5b8c,\u5176\u4ed6\u7ebf\u7a0b\u83b7\u53d6\u9501\u4f1a\u88ab\u963b\u585e,\u77e5\u9053\u5f53\u524d\u6301\u6709\u9501\u7684\u7ebf\u7a0b\u91ca\u653e\u5b8c\u9501 Condition \u00b6 \u6784\u9020\u65b9\u6cd5:Condition(lock= None),\u53ef\u4ee5\u63ba\u5165\u4e00\u4e2aLock\u6216\u8005RLock\u9501\u5bf9\u8c61,\u9ed8\u8ba4RLock \u540d\u79f0 \u542b\u4e49 acquire(*args) \u83b7\u53d6\u9501 wait() \u7b49\u5f85\u6216\u8d85\u65f6 notify(n= 1) \u5524\u9192\u4e4b\u591a\u6307\u5b9a\u6570\u76ee\u4e2a\u6570\u7684\u7b49\u5f85\u7ebf\u7a0b,\u6ca1\u6709\u7b49\u5f85\u7684\u7ebf\u7a0b\u5c31\u6ca1\u6709\u4efb\u4f55\u64cd\u4f5c notify_all() \u5524\u9192\u6240\u6709\u7b49\u5f85\u7684\u7ebf\u7a0b \u603b\u7ed3 \u00b6 Condition\u7528\u4e8e\u751f\u6210\u8005\u6d88\u8d39\u8005\u6a21\u578b\u4e2d,\u89e3\u51b3\u751f\u4ea7\u8005\u6d88\u8d39\u8005\u901f\u5ea6\u5339\u914d\u7684\u95ee\u9898. \u91c7\u7528\u901a\u77e5\u673a\u5236,\u6548\u7387\u6781\u9ad8 \u4f7f\u7528\u65b9\u6cd5: \u00b6 \u4f7f\u7528Condition,\u5fc5\u987b\u5148acquire,\u7528\u5b8c\u4e86\u8981release,\u9ed8\u8ba4\u4f7f\u7528RLock.\u6700\u597d\u7684\u65b9\u5f0f\u662f\u4f7f\u7528with\u4e0a\u4e0b\u6587 \u6d88\u8d39\u8005wait,\u7b49\u5f85\u901a\u77e5 \u751f\u4ea7\u8005\u751f\u4ea7\u597d\u6d88\u606f,\u5bf9\u6d88\u8d39\u8005\u53d1\u9001\u901a\u77e5,\u53ef\u4ee5\u4f7f\u7528notify\u6216\u8005notify_all\u65b9\u6cd5. Barrier\u6805\u680f(\u8def\u95f8) \u00b6 wait\u8d85\u65f6 \u00b6 semaphore\u4fe1\u53f7\u91cf \u00b6 \u548cLock\u5f88\u60f3,\u4fe1\u53f7\u91cf\u5bf9\u8c61\u5185\u90e8\u7ef4\u62a4\u4e00\u4e2a\u5012\u8ba1\u6570\u5668,\u6bcf\u4e00\u6b21acquire\u90fd\u4f1a\u51cf1,\u5f53acquire\u65b9\u6cd5\u53d1\u73b0\u6280\u672f\u4e3a0\u5c31\u963b\u585e\u8bf7\u6c42\u7684\u7ebf\u7a0b,\u77e5\u9053\u5176\u4ed6\u7ebf\u7a0b\u5bf9\u4fe1\u53f7\u91cfrelease\u540e,\u8ba1\u6570\u5927\u4e8e0,\u6062\u590d\u963b\u585e\u7684\u7ebf\u7a0b. \u540d\u79f0 \u542b\u4e49 Semaphore(value=1) \u6784\u9020\u65b9\u6cd5.value\u5c0f\u4e8e0,\u629bValueError\u5f02\u5e38 acquire() \u83b7\u53d6\u4fe1\u53f7\u91cf,\u8ba1\u6570\u5668\u51cf1,\u6210\u529f\u8fd4\u56deTrue release() \u91ca\u653e\u4fe1\u53f7\u91cf,\u8ba1\u6570\u5668\u52a01 \u8ba1\u6570\u5668\u6c38\u8fdc\u4e0d\u4f1a\u4f4e\u4e8e0,\u56e0\u4e3aacquire\u7684\u65f6\u5019,\u53d1\u73b0\u662f0,\u90fd\u4f1a\u88ab\u963b\u585e. from threading import Semaphore , Lock from threading import current_thread from threading import Thread import time sm = Semaphore ( 5 ) #5\u4e2a\u9a6c\u6876 def task (): sm . acquire () print ( f '{current_thread().name} work' ) time . sleep ( 1 ) sm . release () for line in range ( 20 ): t . Thread ( target = task ) t . start \u4fe1\u53f7\u91cf\u548c\u9501 \u00b6 \u9501,\u503c\u5141\u8bb8\u540c\u4e00\u4e2a\u65f6\u95f4\u4e00\u4e2a\u7ebf\u7a0b\u72ec\u5360\u8d44\u6e90,\u5b83\u662f\u7279\u6b8a\u7684\u4fe1\u53f7\u91cf,\u5373\u4fe1\u53f7\u91cf\u8ba1\u6570\u5668\u521d\u503c\u4e3a1. \u4fe1\u53f7\u91cf,\u53ef\u4ee5\u591a\u4e2a\u7ebf\u7a0b\u8bbf\u95ee\u5171\u4eab\u8d44\u6e90,\u4f46\u8fd9\u4e2a\u5171\u4eab\u8d44\u6e90\u6570\u91cf\u6709\u9650. \u6570\u636e\u7ed3\u6784\u548cGIL \u00b6 Queue \u00b6 \u6807\u51c6\u5e93queue\u6a21\u5757,\u63d0\u4f9b FIFO\u7684\u961f\u5217:\u5148\u8fdb\u5148\u51fa LIFO\u7684\u961f\u5217:\u540e\u8fdb\u5148\u51fa \u4f18\u5148\u961f\u5217:\u6839\u636e\u53c2\u6570\u5185,\u6570\u5b57\u7684\u5927\u5c0f\u8fdb\u884c\u5206\u7ea7,\u6570\u503c\u8d8a\u5c0f,\u4f18\u5148\u7ea7\u8d8a\u9ad8(\u5b57\u7b26\u4e32\u4f1a\u6709\u81ea\u5df1\u7684\u7b97\u6cd5,\u4e0d\u5efa\u8bae\u4f7f\u7528) Queue\u662f\u7ebf\u7a0b\u5b89\u5168\u7684,\u9002\u7528\u4e8e\u591a\u7ebf\u7a0b\u95f4\u5b89\u5168\u7684\u4ea4\u6362\u6570\u636e.\u5185\u90e8\u4f7f\u7528\u4e86Lock,Condition import queue q = queue . Queue () q . put ( 1 ) q . put ( 2 ) q . put ( 3 ) print ( q . get ()) #1 q = queue . LifoQueue () q . put ( 1 ) q . put ( 2 ) q . put ( 3 ) print ( q . get ()) # 3 GIL\u5168\u5c40\u89e3\u91ca\u5668\u9501(Global Interpreter Lock) \u00b6 GIL\u51fa\u73b0\u7684\u539f\u56e0 \u00b6 \u4e3a\u4e86\u9632\u6b62\u5783\u573e\u56de\u6536(gc)\u7ebf\u7a0b\u8bef\u5c06\u6b63\u5728\u4f7f\u7528\u7684\u7ebf\u7a0b\u4e2d\u7684\u6570\u636e\u56de\u6536,\u786c\u5199\u4e86\u4e2a\u5168\u5c40\u89e3\u91ca\u5668\u9501. \u89e3\u91ca \u00b6 CPython\u5728\u89e3\u91ca\u5668\u8fdb\u7a0b\u7ea7\u522b\u6709\u628a\u9501.\u53ebGIL\u5168\u5c40\u89e3\u91ca\u5668\u9501. GIL\u4fdd\u8bc1CPython\u8fdb\u7a0b\u4e2d,\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\u6267\u884c\u5b57\u8282\u7801,\u751a\u81f3\u591a\u6838CPU\u60c5\u51b5\u4e0b,\u4e5f\u4f1a\u5f53\u4e00\u4e2a\u8fdb\u7a0bA\u4e2d\u7684\u7ebf\u7a0b\u6267\u884c\u65f6,\u963b\u585e\u5176\u4ed6CPU\u4e0aA\u8fdb\u7a0b\u7684\u7ebf\u7a0b.\u76f8\u5f53\u4e8e,CPython\u4e2d\u6c38\u8fdc\u6ca1\u6709\u771f\u6b63\u5fae\u89c2\u5b9e\u9645\u610f\u4e49\u4e0a\u7684\u591a\u7ebf\u7a0b. CPython\u4e2d,IO\u5bc6\u96c6\u578b,\u4f7f\u7528\u591a\u7ebf\u7a0b;CPU\u5bc6\u96c6\u578b,\u4f7f\u7528\u591a\u7ee7\u627f,\u7ed5\u5f00GIL Ruby\u4e5f\u6709GIL,\u5982\u679c\u9ad8\u5e76\u53d1\u7684\u8bdd,\u7528erlang\u6216\u8005go \u200b Python\u4e2d\u7edd\u5927\u591a\u6570\u5185\u7f6e\u6570\u636e\u7ed3\u6784\u8bfb\u5199\u90fd\u662f\u539f\u5b50\u64cd\u4f5c.(\u5373\u4e0d\u4f1a\u88ab\u4f18\u5148\u7ea7\u66f4\u9ad8\u7684\u7ebf\u7a0b\u6253\u65ad,\u7ebf\u7a0b\u5b89\u5168) \u200b \u7531\u4e8eGIL\u5b58\u5728,Python\u7684\u5185\u7f6e\u6570\u636e\u7c7b\u578b\u5728\u591a\u7ebf\u7a0b\u7f16\u7a0b\u7684\u65f6\u5019\u5c31\u53d8\u7a0b\u4e86\u5b89\u5168\u7684\u4e86,\u4f46\u662f\u5b9e\u9645\u4e0a\u4ed6\u4eec\u672c\u8eab\u4e0d\u662f\u7ebf\u7a0b\u5b89\u5168\u7c7b\u578b. \u539f\u5b50\u64cd\u4f5c: \u00b6 \u539f\u5b50\u64cd\u4f5c\uff0c\u5c31\u662f\u4e0d\u80fd\u88ab\u66f4\u9ad8\u7b49\u7ea7\u4e2d\u65ad\u62a2\u593a\u4f18\u5148\u7684\u64cd\u4f5c\u3002\u7531\u4e8e \u64cd\u4f5c\u7cfb\u7edf \u5927\u90e8\u5206\u65f6\u95f4\u5904\u4e8e\u5f00\u4e2d\u65ad\u72b6\u6001\uff0c\u6240\u4ee5\uff0c\u4e00\u4e2a\u7a0b\u5e8f\u5728\u6267\u884c\u7684\u65f6\u5019\u53ef\u80fd\u88ab\u4f18\u5148\u7ea7\u66f4\u9ad8\u7684\u7ebf\u7a0b\u4e2d\u65ad\u3002\u800c\u6709\u4e9b\u64cd\u4f5c\u662f\u4e0d\u80fd\u88ab\u4e2d\u65ad\u7684\uff0c\u4e0d\u7136\u4f1a\u51fa\u73b0\u65e0\u6cd5\u8fd8\u539f\u7684\u540e\u679c\uff0c\u8fd9\u65f6\u5019\uff0c\u8fd9\u4e9b\u64cd\u4f5c\u5c31\u9700\u8981\u539f\u5b50\u64cd\u4f5c\u3002\u5c31\u662f\u4e0d\u80fd\u88ab\u4e2d\u65ad\u7684\u64cd\u4f5c\u3002","title":"\u7ebf\u7a0b\u540c\u6b65"},{"location":"Python/%E7%BA%BF%E7%A8%8B%E5%90%8C%E6%AD%A5/#_1","text":"","title":"\u7ebf\u7a0b\u540c\u6b65"},{"location":"Python/%E7%BA%BF%E7%A8%8B%E5%90%8C%E6%AD%A5/#_2","text":"\u7ebf\u7a0b\u540c\u6b65,\u7ebf\u7a0b\u95f4\u534f\u540c,\u901a\u8fc7\u67d0\u79cd\u6280\u672f,\u8ba9\u4e00\u4e2a\u7ebf\u7a0b\u8bbf\u95ee\u67d0\u4e9b\u6570\u636e\u65f6,\u5176\u4ed6\u7ebf\u7a0b\u4e0d\u80fd\u8bbf\u95ee\u8fd9\u4e9b\u6570\u636e,\u76f4\u5230\u8be5\u7ebf\u7a0b\u5b8c\u6210\u5bf9\u6570\u636e\u7684\u64cd\u4f5c. \u4e34\u754c\u533a(Critical Section) \u4e92\u65a5\u91cf(Mutex) \u4fe1\u53f7\u91cf(Semaphore) \u65f6\u95f4(Event)","title":"\u6982\u5ff5"},{"location":"Python/%E7%BA%BF%E7%A8%8B%E5%90%8C%E6%AD%A5/#event","text":"Event\u4e8b\u4ef6,\u662f\u7ebf\u7a0b\u95f4\u901a\u4fe1\u673a\u5236\u4e2d\u6700\u7b80\u5355\u7684\u5b9e\u73b0,\u4f7f\u7528\u4e00\u4e2a\u5185\u90e8\u6807\u8bb0\u7684flag,\u901a\u8fc7flag\u7684True\u6216False\u7684\u53d8\u5316\u6765\u8fdb\u884c\u64cd\u4f5c. \u76f8\u5f53\u4e8e\u7528\u7ebf\u7a0b\u63a7\u5236\u7ebf\u7a0b. \u540d\u79f0 \u542b\u4e49 set() \u6807\u8bb0\u8bbe\u7f6e\u4e3aTrue clear() \u6807\u8bb0\u8bbe\u7f6e\u4e3aFalse is_set() \u6807\u8bb0\u662f\u5426\u4e3aTrue wait(timeout=None) \u8bbe\u7f6e\u7b49\u6807\u8bb0\u4e3aTrue\u7684\u65f6\u957f,None\u4e3a\u65e0\u9650\u7b49\u5f85.\u7b49\u5230\u8fd4\u56deTrue,\u672a\u7b49\u5230\u8d85\u65f6\u8fd4\u56deFalse,\u4e0d\u8bbe\u7f6e\u9ed8\u8ba4\u65e0\u9650\u7b49 \u603b\u7ed3 \u4f7f\u7528\u540c\u4e00\u4e2aEvent\u5bf9\u8c61\u7684\u6807\u8bb0flag \u8c01wait\u5c31\u662f\u7b49\u5230flag\u53d8\u4e3atrue,\u6216\u7b49\u5230\u8d85\u65f6\u8fd4\u56deFalse,\u4e0d\u9650\u5236\u7b49\u5f85\u4e2a\u6570","title":"Event\u4e8b\u4ef6"},{"location":"Python/%E7%BA%BF%E7%A8%8B%E5%90%8C%E6%AD%A5/#wait","text":"Event\u7684wait\u4f18\u4e8etime.sleep,\u5b83\u4f1a\u66f4\u5feb\u7684\u5207\u6362\u5230\u5176\u4ed6\u8fdb\u7a0b,\u63d0\u9ad8\u5e76\u53d1\u6548\u7387.","title":"wait\u7684\u4f7f\u7528"},{"location":"Python/%E7%BA%BF%E7%A8%8B%E5%90%8C%E6%AD%A5/#lock","text":"\u9501,\u51e1\u662f\u5b58\u5728\u5171\u4eab\u8d44\u6e90\u4e89\u62a2\u7684\u5730\u65b9\u90fd\u53ef\u4ee5\u4f7f\u7528\u9501,\u4ece\u800c\u4fdd\u8bc1\u53ea\u6709\u4e00\u4e2a\u4f7f\u7528\u8005\u53ef\u4ee5\u5b8c\u5168\u4f7f\u7528\u8fd9\u4e2a\u8d44\u6e90. \u4e00\u65e6\u7ebf\u7a0b\u83b7\u5f97\u9501,\u5176\u4ed6\u8bd5\u56fe\u83b7\u53d6\u9501\u7684\u7ebf\u7a0b\u5c06\u88ab\u963b\u585e \u540d\u79f0 \u542b\u4e49 acquire(blocking=True,timeout=-1) \u9ed8\u8ba4\u963b\u585e,\u963b\u585e\u53ef\u4ee5\u8bbe\u7f6e\u8d85\u65f6\u65f6\u95f4.\u975e\u963b\u585e\u65f6,timeout\u7981\u6b62\u8bbe\u7f6e.\u6210\u529f\u83b7\u53d6\u9501,\u8fd4\u56deTrue,\u5426\u5219\u8fd4\u56deFalse release() \u91ca\u653e\u9501,\u53ef\u4ee5\u4ece\u4efb\u4f55\u7ebf\u7a0b\u8c03\u7528\u91ca\u653e.\u5df2\u4e0a\u9501\u7684\u9501,\u4f1a\u88ab\u91cd\u7f6e\u4e3aunlocked\u672a\u4e0a\u9501\u7684\u9501\u4e0a\u8c03\u7528,\u629bRuntimeError\u5f02\u5e38","title":"Lock(\u4e92\u65a5\u9501,\u4e92\u65a5\u91cf)"},{"location":"Python/%E7%BA%BF%E7%A8%8B%E5%90%8C%E6%AD%A5/#_3","text":"\u4e00\u822c\u6765\u8bf4,\u6709\u52a0\u9501\u5c31\u9700\u8981\u89e3\u9501,\u4e00\u65e6\u52a0\u9501\u540e\u89e3\u9501\u524d,\u8fd8\u8981\u6267\u884c\u4e00\u4e9b\u4ee3\u7801,\u5c31\u53ef\u80fd\u629b\u5f02\u5e38,\u9501\u65e0\u6cd5\u91ca\u653e,\u4f46\u662f\u5f53\u524d\u7ebf\u7a0b\u5c31\u53ef\u80fd\u56e0\u4e3a\u8fd9\u4e2a\u5f02\u5e38\u88ab\u7ec8\u6b62,\u4ea7\u751f\u6b7b\u9501.\u4e00\u822c\u4e3a\u903b\u8f91\u95ee\u9898.","title":"\u52a0\u9501,\u89e3\u9501"},{"location":"Python/%E7%BA%BF%E7%A8%8B%E5%90%8C%E6%AD%A5/#_4","text":"\u4f7f\u7528try,,,finally\u8bed\u53e5\u4fdd\u8bc1\u9501\u7684\u91ca\u653e with\u4e0a\u4e0b\u6587\u7ba1\u7406,\u9501\u5bf9\u8c61\u652f\u6301\u4e0a\u4e0b\u6587\u7ba1\u7406","title":"\u5e38\u7528\u8bed\u53e5:"},{"location":"Python/%E7%BA%BF%E7%A8%8B%E5%90%8C%E6%AD%A5/#_5","text":"\u5c11\u7528.\u4f7f\u7528\u4e86\u9501,\u591a\u7ebf\u7a0b\u8bbf\u95ee\u88ab\u9501\u7684\u8d44\u6e90\u65f6,\u5c31\u6210\u4e86\u4e32\u884c,\u8981\u4e48\u6392\u961f\u6267\u884c,\u8981\u4e48\u4e89\u62a2\u6267\u884c \u52a0\u9501\u65f6\u95f4\u8d8a\u77ed\u8d8a\u597d,\u4e0d\u9700\u8981\u5c31\u7acb\u5373\u91ca\u653e\u9501 \u4e00\u5b9a\u8981\u907f\u514d\u6b7b\u9501","title":"\u6ce8\u610f\u4e8b\u9879:"},{"location":"Python/%E7%BA%BF%E7%A8%8B%E5%90%8C%E6%AD%A5/#rlock","text":"\u9012\u5f52\u9501,\u662f\u7ebf\u7a0b\u76f8\u5173\u9501,\u4e2a\u4eba\u8ba4\u4e3a,\u9501\u7684\u662f\u4e00\u4e2a\u7ebf\u7a0b \u7ebf\u7a0bA\u53ef\u83b7\u5f97\u91cd\u590d\u9501,\u5e76\u53ef\u591a\u6b21\u6210\u529f\u83b7\u53d6,\u4e0d\u4f1a\u963b\u585e.\u6700\u540e\u8981\u5728\u7ebf\u7a0bA\u4e2d\u505a\u548cacquire\u6b21\u6570\u76f8\u540c\u7684release. \u5f53\u9501\u672a\u91ca\u653e\u5b8c,\u5176\u4ed6\u7ebf\u7a0b\u83b7\u53d6\u9501\u4f1a\u88ab\u963b\u585e,\u77e5\u9053\u5f53\u524d\u6301\u6709\u9501\u7684\u7ebf\u7a0b\u91ca\u653e\u5b8c\u9501","title":"\u9012\u5f52\u9501RLock(\u53ef\u91cd\u5165\u9501)"},{"location":"Python/%E7%BA%BF%E7%A8%8B%E5%90%8C%E6%AD%A5/#condition","text":"\u6784\u9020\u65b9\u6cd5:Condition(lock= None),\u53ef\u4ee5\u63ba\u5165\u4e00\u4e2aLock\u6216\u8005RLock\u9501\u5bf9\u8c61,\u9ed8\u8ba4RLock \u540d\u79f0 \u542b\u4e49 acquire(*args) \u83b7\u53d6\u9501 wait() \u7b49\u5f85\u6216\u8d85\u65f6 notify(n= 1) \u5524\u9192\u4e4b\u591a\u6307\u5b9a\u6570\u76ee\u4e2a\u6570\u7684\u7b49\u5f85\u7ebf\u7a0b,\u6ca1\u6709\u7b49\u5f85\u7684\u7ebf\u7a0b\u5c31\u6ca1\u6709\u4efb\u4f55\u64cd\u4f5c notify_all() \u5524\u9192\u6240\u6709\u7b49\u5f85\u7684\u7ebf\u7a0b","title":"Condition"},{"location":"Python/%E7%BA%BF%E7%A8%8B%E5%90%8C%E6%AD%A5/#_6","text":"Condition\u7528\u4e8e\u751f\u6210\u8005\u6d88\u8d39\u8005\u6a21\u578b\u4e2d,\u89e3\u51b3\u751f\u4ea7\u8005\u6d88\u8d39\u8005\u901f\u5ea6\u5339\u914d\u7684\u95ee\u9898. \u91c7\u7528\u901a\u77e5\u673a\u5236,\u6548\u7387\u6781\u9ad8","title":"\u603b\u7ed3"},{"location":"Python/%E7%BA%BF%E7%A8%8B%E5%90%8C%E6%AD%A5/#_7","text":"\u4f7f\u7528Condition,\u5fc5\u987b\u5148acquire,\u7528\u5b8c\u4e86\u8981release,\u9ed8\u8ba4\u4f7f\u7528RLock.\u6700\u597d\u7684\u65b9\u5f0f\u662f\u4f7f\u7528with\u4e0a\u4e0b\u6587 \u6d88\u8d39\u8005wait,\u7b49\u5f85\u901a\u77e5 \u751f\u4ea7\u8005\u751f\u4ea7\u597d\u6d88\u606f,\u5bf9\u6d88\u8d39\u8005\u53d1\u9001\u901a\u77e5,\u53ef\u4ee5\u4f7f\u7528notify\u6216\u8005notify_all\u65b9\u6cd5.","title":"\u4f7f\u7528\u65b9\u6cd5:"},{"location":"Python/%E7%BA%BF%E7%A8%8B%E5%90%8C%E6%AD%A5/#barrier","text":"","title":"Barrier\u6805\u680f(\u8def\u95f8)"},{"location":"Python/%E7%BA%BF%E7%A8%8B%E5%90%8C%E6%AD%A5/#wait_1","text":"","title":"wait\u8d85\u65f6"},{"location":"Python/%E7%BA%BF%E7%A8%8B%E5%90%8C%E6%AD%A5/#semaphore","text":"\u548cLock\u5f88\u60f3,\u4fe1\u53f7\u91cf\u5bf9\u8c61\u5185\u90e8\u7ef4\u62a4\u4e00\u4e2a\u5012\u8ba1\u6570\u5668,\u6bcf\u4e00\u6b21acquire\u90fd\u4f1a\u51cf1,\u5f53acquire\u65b9\u6cd5\u53d1\u73b0\u6280\u672f\u4e3a0\u5c31\u963b\u585e\u8bf7\u6c42\u7684\u7ebf\u7a0b,\u77e5\u9053\u5176\u4ed6\u7ebf\u7a0b\u5bf9\u4fe1\u53f7\u91cfrelease\u540e,\u8ba1\u6570\u5927\u4e8e0,\u6062\u590d\u963b\u585e\u7684\u7ebf\u7a0b. \u540d\u79f0 \u542b\u4e49 Semaphore(value=1) \u6784\u9020\u65b9\u6cd5.value\u5c0f\u4e8e0,\u629bValueError\u5f02\u5e38 acquire() \u83b7\u53d6\u4fe1\u53f7\u91cf,\u8ba1\u6570\u5668\u51cf1,\u6210\u529f\u8fd4\u56deTrue release() \u91ca\u653e\u4fe1\u53f7\u91cf,\u8ba1\u6570\u5668\u52a01 \u8ba1\u6570\u5668\u6c38\u8fdc\u4e0d\u4f1a\u4f4e\u4e8e0,\u56e0\u4e3aacquire\u7684\u65f6\u5019,\u53d1\u73b0\u662f0,\u90fd\u4f1a\u88ab\u963b\u585e. from threading import Semaphore , Lock from threading import current_thread from threading import Thread import time sm = Semaphore ( 5 ) #5\u4e2a\u9a6c\u6876 def task (): sm . acquire () print ( f '{current_thread().name} work' ) time . sleep ( 1 ) sm . release () for line in range ( 20 ): t . Thread ( target = task ) t . start","title":"semaphore\u4fe1\u53f7\u91cf"},{"location":"Python/%E7%BA%BF%E7%A8%8B%E5%90%8C%E6%AD%A5/#_8","text":"\u9501,\u503c\u5141\u8bb8\u540c\u4e00\u4e2a\u65f6\u95f4\u4e00\u4e2a\u7ebf\u7a0b\u72ec\u5360\u8d44\u6e90,\u5b83\u662f\u7279\u6b8a\u7684\u4fe1\u53f7\u91cf,\u5373\u4fe1\u53f7\u91cf\u8ba1\u6570\u5668\u521d\u503c\u4e3a1. \u4fe1\u53f7\u91cf,\u53ef\u4ee5\u591a\u4e2a\u7ebf\u7a0b\u8bbf\u95ee\u5171\u4eab\u8d44\u6e90,\u4f46\u8fd9\u4e2a\u5171\u4eab\u8d44\u6e90\u6570\u91cf\u6709\u9650.","title":"\u4fe1\u53f7\u91cf\u548c\u9501"},{"location":"Python/%E7%BA%BF%E7%A8%8B%E5%90%8C%E6%AD%A5/#gil","text":"","title":"\u6570\u636e\u7ed3\u6784\u548cGIL"},{"location":"Python/%E7%BA%BF%E7%A8%8B%E5%90%8C%E6%AD%A5/#queue","text":"\u6807\u51c6\u5e93queue\u6a21\u5757,\u63d0\u4f9b FIFO\u7684\u961f\u5217:\u5148\u8fdb\u5148\u51fa LIFO\u7684\u961f\u5217:\u540e\u8fdb\u5148\u51fa \u4f18\u5148\u961f\u5217:\u6839\u636e\u53c2\u6570\u5185,\u6570\u5b57\u7684\u5927\u5c0f\u8fdb\u884c\u5206\u7ea7,\u6570\u503c\u8d8a\u5c0f,\u4f18\u5148\u7ea7\u8d8a\u9ad8(\u5b57\u7b26\u4e32\u4f1a\u6709\u81ea\u5df1\u7684\u7b97\u6cd5,\u4e0d\u5efa\u8bae\u4f7f\u7528) Queue\u662f\u7ebf\u7a0b\u5b89\u5168\u7684,\u9002\u7528\u4e8e\u591a\u7ebf\u7a0b\u95f4\u5b89\u5168\u7684\u4ea4\u6362\u6570\u636e.\u5185\u90e8\u4f7f\u7528\u4e86Lock,Condition import queue q = queue . Queue () q . put ( 1 ) q . put ( 2 ) q . put ( 3 ) print ( q . get ()) #1 q = queue . LifoQueue () q . put ( 1 ) q . put ( 2 ) q . put ( 3 ) print ( q . get ()) # 3","title":"Queue"},{"location":"Python/%E7%BA%BF%E7%A8%8B%E5%90%8C%E6%AD%A5/#gilglobal-interpreter-lock","text":"","title":"GIL\u5168\u5c40\u89e3\u91ca\u5668\u9501(Global Interpreter Lock)"},{"location":"Python/%E7%BA%BF%E7%A8%8B%E5%90%8C%E6%AD%A5/#gil_1","text":"\u4e3a\u4e86\u9632\u6b62\u5783\u573e\u56de\u6536(gc)\u7ebf\u7a0b\u8bef\u5c06\u6b63\u5728\u4f7f\u7528\u7684\u7ebf\u7a0b\u4e2d\u7684\u6570\u636e\u56de\u6536,\u786c\u5199\u4e86\u4e2a\u5168\u5c40\u89e3\u91ca\u5668\u9501.","title":"GIL\u51fa\u73b0\u7684\u539f\u56e0"},{"location":"Python/%E7%BA%BF%E7%A8%8B%E5%90%8C%E6%AD%A5/#_9","text":"CPython\u5728\u89e3\u91ca\u5668\u8fdb\u7a0b\u7ea7\u522b\u6709\u628a\u9501.\u53ebGIL\u5168\u5c40\u89e3\u91ca\u5668\u9501. GIL\u4fdd\u8bc1CPython\u8fdb\u7a0b\u4e2d,\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\u6267\u884c\u5b57\u8282\u7801,\u751a\u81f3\u591a\u6838CPU\u60c5\u51b5\u4e0b,\u4e5f\u4f1a\u5f53\u4e00\u4e2a\u8fdb\u7a0bA\u4e2d\u7684\u7ebf\u7a0b\u6267\u884c\u65f6,\u963b\u585e\u5176\u4ed6CPU\u4e0aA\u8fdb\u7a0b\u7684\u7ebf\u7a0b.\u76f8\u5f53\u4e8e,CPython\u4e2d\u6c38\u8fdc\u6ca1\u6709\u771f\u6b63\u5fae\u89c2\u5b9e\u9645\u610f\u4e49\u4e0a\u7684\u591a\u7ebf\u7a0b. CPython\u4e2d,IO\u5bc6\u96c6\u578b,\u4f7f\u7528\u591a\u7ebf\u7a0b;CPU\u5bc6\u96c6\u578b,\u4f7f\u7528\u591a\u7ee7\u627f,\u7ed5\u5f00GIL Ruby\u4e5f\u6709GIL,\u5982\u679c\u9ad8\u5e76\u53d1\u7684\u8bdd,\u7528erlang\u6216\u8005go \u200b Python\u4e2d\u7edd\u5927\u591a\u6570\u5185\u7f6e\u6570\u636e\u7ed3\u6784\u8bfb\u5199\u90fd\u662f\u539f\u5b50\u64cd\u4f5c.(\u5373\u4e0d\u4f1a\u88ab\u4f18\u5148\u7ea7\u66f4\u9ad8\u7684\u7ebf\u7a0b\u6253\u65ad,\u7ebf\u7a0b\u5b89\u5168) \u200b \u7531\u4e8eGIL\u5b58\u5728,Python\u7684\u5185\u7f6e\u6570\u636e\u7c7b\u578b\u5728\u591a\u7ebf\u7a0b\u7f16\u7a0b\u7684\u65f6\u5019\u5c31\u53d8\u7a0b\u4e86\u5b89\u5168\u7684\u4e86,\u4f46\u662f\u5b9e\u9645\u4e0a\u4ed6\u4eec\u672c\u8eab\u4e0d\u662f\u7ebf\u7a0b\u5b89\u5168\u7c7b\u578b.","title":"\u89e3\u91ca"},{"location":"Python/%E7%BA%BF%E7%A8%8B%E5%90%8C%E6%AD%A5/#_10","text":"\u539f\u5b50\u64cd\u4f5c\uff0c\u5c31\u662f\u4e0d\u80fd\u88ab\u66f4\u9ad8\u7b49\u7ea7\u4e2d\u65ad\u62a2\u593a\u4f18\u5148\u7684\u64cd\u4f5c\u3002\u7531\u4e8e \u64cd\u4f5c\u7cfb\u7edf \u5927\u90e8\u5206\u65f6\u95f4\u5904\u4e8e\u5f00\u4e2d\u65ad\u72b6\u6001\uff0c\u6240\u4ee5\uff0c\u4e00\u4e2a\u7a0b\u5e8f\u5728\u6267\u884c\u7684\u65f6\u5019\u53ef\u80fd\u88ab\u4f18\u5148\u7ea7\u66f4\u9ad8\u7684\u7ebf\u7a0b\u4e2d\u65ad\u3002\u800c\u6709\u4e9b\u64cd\u4f5c\u662f\u4e0d\u80fd\u88ab\u4e2d\u65ad\u7684\uff0c\u4e0d\u7136\u4f1a\u51fa\u73b0\u65e0\u6cd5\u8fd8\u539f\u7684\u540e\u679c\uff0c\u8fd9\u65f6\u5019\uff0c\u8fd9\u4e9b\u64cd\u4f5c\u5c31\u9700\u8981\u539f\u5b50\u64cd\u4f5c\u3002\u5c31\u662f\u4e0d\u80fd\u88ab\u4e2d\u65ad\u7684\u64cd\u4f5c\u3002","title":"\u539f\u5b50\u64cd\u4f5c:"},{"location":"Python/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/","text":"\u8ba1\u7b97\u673a\u7684\u57fa\u672c\u7ec4\u6210 cpu \u63a7\u5236\u5668 \u8fd0\u7b97\u5668 \u5b58\u50a8\u5668 \u4e3b\u5b58(\u5185\u5b58) \u5916\u5b58 I/O\u8bbe\u5907 \u8f93\u5165\u8bbe\u5907 \u8f93\u51fa\u8bbe\u5907 \u5e94\u7528\u7a0b\u5e8f\u7684\u542f\u52a8 \u8865\u5145 \u591a\u6838CPU \u603b\u7ebf \u673a\u68b0\u786c\u76d8 \u5e73\u5747\u5bfb\u9053(\u78c1\u9053)\u65f6\u95f4 \u5e73\u5747\u5ef6\u8fdf\u65f6\u95f4(\u673a\u68b0\u624b\u81c2\u5bfb\u627e\u6570\u636e\u7684\u65f6\u95f4) \u5e73\u5747\u5bfb\u627e\u6570\u636e\u65f6\u95f4 \u6587\u4ef6 \u5e94\u7528\u7a0b\u5e8f \u64cd\u4f5c\u7cfb\u7edf \u8ba1\u7b97\u673a\u7684\u7ec4\u6210 \u64cd\u4f5c\u7cfb\u7edf \u7684\u542f\u52a8 \u8ba1\u7b97\u673a\u7684\u57fa\u672c\u7ec4\u6210 \u00b6 \u51af\u8bfa\u4f9d\u66fc\u4f53\u7cfb cpu \u00b6 \u63a7\u5236\u5668 \u00b6 \u63a7\u5236\u6574\u4e2a\u7535\u8111\u7684\u8fd0\u884c,\u7a0b\u5e8f\u7684\u6267\u884c \u8fd0\u7b97\u5668 \u00b6 \u7b97\u6570\u8fd0\u7b97,\u903b\u8f91\u8fd0\u7b97,\u6570\u636e\u4f20\u8f93 \u5b58\u50a8\u5668 \u00b6 \u4e3b\u5b58(\u5185\u5b58) \u00b6 \u4f18\u70b9:\u901f\u5ea6\u5feb \u7f3a\u70b9:\u5bb9\u91cf\u5c0f,\u65ad\u7535\u5373\u5931 \u5916\u5b58 \u00b6 \u4f18\u70b9:\u5bb9\u91cf\u5927,\u6c38\u4e45\u50a8\u5b58 \u7f3a\u70b9:\u901f\u5ea6\u6162 I/O\u8bbe\u5907 \u00b6 \u8f93\u5165\u8bbe\u5907 \u00b6 \u952e\u76d8,\u9f20\u6807 \u8f93\u51fa\u8bbe\u5907 \u00b6 \u8033\u673a,\u97f3\u54cd \u5e94\u7528\u7a0b\u5e8f\u7684\u542f\u52a8 \u00b6 1.ROM(read-only memory)\u901a\u7535\u542f\u52a8\u5f00\u673aBIOS(basic input/output system) 2.\u786c\u4ef6\u81ea\u68c0 3.\u786c\u76d8\u68c0\u7d22\u64cd\u4f5c\u7cfb\u7edf 4.\u542f\u52a8\u64cd\u4f5c\u7cfb\u7edf \u8865\u5145 \u00b6 \u8ba1\u7b97\u673a\u520632\u4f4d\u548c64\u4f4d,\u4f4d\u6570\u4e0d\u540c\u5bfc\u81f4 \u5b89\u88c5\u901f\u5ea6\u4e0d\u540c \u591a\u6838CPU \u00b6 \u591a\u6838cpu\u76f8\u5f53\u4e8e\u540c\u65f6\u5904\u7406\u591a\u89c1\u4e8b\u60c5 \u603b\u7ebf \u00b6 \u8fde\u63a5\u8ba1\u7b97\u673a\u786c\u4ef6 \u673a\u68b0\u786c\u76d8 \u00b6 \u5e73\u5747\u5bfb\u9053(\u78c1\u9053)\u65f6\u95f4 \u00b6 5ms \u5e73\u5747\u5ef6\u8fdf\u65f6\u95f4(\u673a\u68b0\u624b\u81c2\u5bfb\u627e\u6570\u636e\u7684\u65f6\u95f4) \u00b6 \u5e73\u5747\u503c 7200r/min 8.3ms \u5e73\u57474.15ms \u5e73\u5747\u5bfb\u627e\u6570\u636e\u65f6\u95f4 \u00b6 5+4.15=9.15ms \u6587\u4ef6 \u00b6 \u6587\u4ef6\u662f\u64cd\u4f5c\u7cfb\u7edf\u63d0\u4f9b\u7684\u865a\u62df\u6982\u5ff5,\u7528\u6765\u5b58\u50a8\u4fe1\u606f \u5e94\u7528\u7a0b\u5e8f \u00b6 \u6587\u4ef6\u7ec4\u5408\u5f62\u6210\u7684\u53ef\u4ee5\u5b9e\u73b0\u67d0\u79cd\u529f\u80fd \u64cd\u4f5c\u7cfb\u7edf \u00b6 \u4e0e\u786c\u4ef6\u4ea4\u4e92,\u628a\u5bf9\u786c\u4ef6\u7684\u64cd\u4f5c\u7b80\u5316 \u8ba1\u7b97\u673a\u7684\u7ec4\u6210 \u00b6 \u8f6f\u4ef6(\u5e94\u7528\u7a0b\u5e8f,\u64cd\u4f5c\u7cfb\u7edf) \u786c\u4ef6(cpu\u7b49) \u64cd\u4f5c\u7cfb\u7edf \u7684\u542f\u52a8 \u00b6 \u8ba1\u7b97\u673a\u5185\u90e8\u4e24\u4e2a\u5b58\u50a8\u5668 \u4e00\u4e2a\u5b58\u50a8\u5668\u5185\u6709\u4e2a\u4e34\u65f6\u64cd\u4f5c\u7cfb\u7edf (BIOS) \u4e00\u4e2a\u5b58\u50a8\u5668\u5b58\u50a8\u4e86\u4e34\u65f6\u64cd\u4f5c\u7cfb\u7edf\u8def\u5f84(\u7535\u6c60\u4f9b\u7535)","title":"\u8ba1\u7b97\u673a\u57fa\u7840"},{"location":"Python/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/#_1","text":"\u51af\u8bfa\u4f9d\u66fc\u4f53\u7cfb","title":"\u8ba1\u7b97\u673a\u7684\u57fa\u672c\u7ec4\u6210"},{"location":"Python/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/#cpu","text":"","title":"cpu"},{"location":"Python/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/#_2","text":"\u63a7\u5236\u6574\u4e2a\u7535\u8111\u7684\u8fd0\u884c,\u7a0b\u5e8f\u7684\u6267\u884c","title":"\u63a7\u5236\u5668"},{"location":"Python/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/#_3","text":"\u7b97\u6570\u8fd0\u7b97,\u903b\u8f91\u8fd0\u7b97,\u6570\u636e\u4f20\u8f93","title":"\u8fd0\u7b97\u5668"},{"location":"Python/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/#_4","text":"","title":"\u5b58\u50a8\u5668"},{"location":"Python/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/#_5","text":"\u4f18\u70b9:\u901f\u5ea6\u5feb \u7f3a\u70b9:\u5bb9\u91cf\u5c0f,\u65ad\u7535\u5373\u5931","title":"\u4e3b\u5b58(\u5185\u5b58)"},{"location":"Python/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/#_6","text":"\u4f18\u70b9:\u5bb9\u91cf\u5927,\u6c38\u4e45\u50a8\u5b58 \u7f3a\u70b9:\u901f\u5ea6\u6162","title":"\u5916\u5b58"},{"location":"Python/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/#io","text":"","title":"I/O\u8bbe\u5907"},{"location":"Python/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/#_7","text":"\u952e\u76d8,\u9f20\u6807","title":"\u8f93\u5165\u8bbe\u5907"},{"location":"Python/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/#_8","text":"\u8033\u673a,\u97f3\u54cd","title":"\u8f93\u51fa\u8bbe\u5907"},{"location":"Python/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/#_9","text":"1.ROM(read-only memory)\u901a\u7535\u542f\u52a8\u5f00\u673aBIOS(basic input/output system) 2.\u786c\u4ef6\u81ea\u68c0 3.\u786c\u76d8\u68c0\u7d22\u64cd\u4f5c\u7cfb\u7edf 4.\u542f\u52a8\u64cd\u4f5c\u7cfb\u7edf","title":"\u5e94\u7528\u7a0b\u5e8f\u7684\u542f\u52a8"},{"location":"Python/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/#_10","text":"\u8ba1\u7b97\u673a\u520632\u4f4d\u548c64\u4f4d,\u4f4d\u6570\u4e0d\u540c\u5bfc\u81f4 \u5b89\u88c5\u901f\u5ea6\u4e0d\u540c","title":"\u8865\u5145"},{"location":"Python/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/#cpu_1","text":"\u591a\u6838cpu\u76f8\u5f53\u4e8e\u540c\u65f6\u5904\u7406\u591a\u89c1\u4e8b\u60c5","title":"\u591a\u6838CPU"},{"location":"Python/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/#_11","text":"\u8fde\u63a5\u8ba1\u7b97\u673a\u786c\u4ef6","title":"\u603b\u7ebf"},{"location":"Python/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/#_12","text":"","title":"\u673a\u68b0\u786c\u76d8"},{"location":"Python/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/#_13","text":"5ms","title":"\u5e73\u5747\u5bfb\u9053(\u78c1\u9053)\u65f6\u95f4"},{"location":"Python/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/#_14","text":"\u5e73\u5747\u503c 7200r/min 8.3ms \u5e73\u57474.15ms","title":"\u5e73\u5747\u5ef6\u8fdf\u65f6\u95f4(\u673a\u68b0\u624b\u81c2\u5bfb\u627e\u6570\u636e\u7684\u65f6\u95f4)"},{"location":"Python/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/#_15","text":"5+4.15=9.15ms","title":"\u5e73\u5747\u5bfb\u627e\u6570\u636e\u65f6\u95f4"},{"location":"Python/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/#_16","text":"\u6587\u4ef6\u662f\u64cd\u4f5c\u7cfb\u7edf\u63d0\u4f9b\u7684\u865a\u62df\u6982\u5ff5,\u7528\u6765\u5b58\u50a8\u4fe1\u606f","title":"\u6587\u4ef6"},{"location":"Python/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/#_17","text":"\u6587\u4ef6\u7ec4\u5408\u5f62\u6210\u7684\u53ef\u4ee5\u5b9e\u73b0\u67d0\u79cd\u529f\u80fd","title":"\u5e94\u7528\u7a0b\u5e8f"},{"location":"Python/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/#_18","text":"\u4e0e\u786c\u4ef6\u4ea4\u4e92,\u628a\u5bf9\u786c\u4ef6\u7684\u64cd\u4f5c\u7b80\u5316","title":"\u64cd\u4f5c\u7cfb\u7edf"},{"location":"Python/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/#_19","text":"\u8f6f\u4ef6(\u5e94\u7528\u7a0b\u5e8f,\u64cd\u4f5c\u7cfb\u7edf) \u786c\u4ef6(cpu\u7b49)","title":"\u8ba1\u7b97\u673a\u7684\u7ec4\u6210"},{"location":"Python/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/#_20","text":"\u8ba1\u7b97\u673a\u5185\u90e8\u4e24\u4e2a\u5b58\u50a8\u5668 \u4e00\u4e2a\u5b58\u50a8\u5668\u5185\u6709\u4e2a\u4e34\u65f6\u64cd\u4f5c\u7cfb\u7edf (BIOS) \u4e00\u4e2a\u5b58\u50a8\u5668\u5b58\u50a8\u4e86\u4e34\u65f6\u64cd\u4f5c\u7cfb\u7edf\u8def\u5f84(\u7535\u6c60\u4f9b\u7535)","title":"\u64cd\u4f5c\u7cfb\u7edf \u7684\u542f\u52a8"},{"location":"Python/%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B/","text":"\u591a\u9053\u6280\u672f \u8fdb\u7a0b\u7684\u8c03\u5ea6 \u5148\u8fdb\u5148\u51fa\u7b97\u6cd5 \u77ed\u8fdb\u7a0b\u4f18\u5148 \u65f6\u95f4\u7247\u8f6e\u8f6c\u6cd5 \u591a\u7ea7\u53cd\u9988\u961f\u5217 \u540c\u6b65\u548c\u5f02\u6b65 \u540c\u6b65: \u5f02\u6b65: \u8fdb\u7a0b\u7684\u56de\u6536 \u5b64\u513f\u8fdb\u7a0b \u50f5\u5c38\u8fdb\u7a0b \u5e76\u53d1 \u57fa\u672c\u6982\u5ff5 \u5e76\u53d1\u548c\u5e76\u884c\u7684\u533a\u522b \u5e76\u53d1\u7684\u89e3\u51b3 1.\u961f\u5217.\u7f13\u51b2\u533a 2.\u4e89\u62a2 3.\u9884\u5904\u7406 4.\u5e76\u884c 5.\u63d0\u901f 6.\u6d88\u606f\u4e2d\u95f4\u4ef6 \u8fdb\u7a0b\u548c\u7ebf\u7a0b \u8fdb\u7a0b\u548c\u7ebf\u7a0b\u7684\u5173\u7cfb \u8fdb\u7a0b\u7ebf\u7a0b\u7684\u7406\u89e3 \u7ebf\u7a0b\u7684\u72b6\u6001 \u591a\u8fdb\u7a0b.\u591a\u7ebf\u7a0b\u7684\u9009\u62e9 1.CPU\u5bc6\u96c6\u578b 2.IO\u5bc6\u96c6\u578b \u9009\u62e9 \u751f\u4ea7\u8005\u6d88\u8d39\u8005\u6a21\u578b \u534f\u7a0b \u591a\u9053\u6280\u672f \u00b6 \u5355\u9053\u6279\u5904\u7406\u7cfb\u7edf:\u591a\u4e2a\u7a0b\u5e8f\u4e32\u884c\u4f7f\u7528CPU \u591a\u9053\u7a0b\u5e8f\u8bbe\u8ba1\u6280\u672f:\u591a\u4e2a\u7a0b\u5e8f\u540c\u65f6\u8fdb\u5165\u8ba1\u7b97\u673a\u7684\u4e3b\u5b58\u50a8\u5668\u5e76\u542f\u52a8,\u5b8f\u89c2\u4e0a\u662f\u5e76\u884c\u7684,\u591a\u9053\u7a0b\u5e8f\u5904\u5728\u8fd0\u884c\u4e2d;\u5fae\u89c2\u4e0a\u662f\u4e32\u884c\u7684,\u5404\u9053\u7a0b\u5e8f\u8f6e\u6d41\u4ea4\u66ff\u4f7f\u7528CPU.\u7a7a\u95f4\u4e0a\u7684\u590d\u7528,\u4e00\u4e2aCPU\u53ef\u4ee5\u8ba9\u591a\u4e2a\u7528\u6237\u4f7f\u7528 \u7a7a\u95f4\u4e0a\u7684\u590d\u7528:\u4e00\u4e2aCPU\u53ef\u4ee5\u63d0\u4f9b\u7ed9\u591a\u4e2a\u7528\u6237\u4f7f\u7528 \u65f6\u95f4\u4e0a\u7684\u590d\u7528:\u5207\u6362+\u4fdd\u5b58\u72b6\u6001 \u5f53CPU\u9047\u5230IO\u64cd\u4f5c[input(),print(),time.sleep()],\u4f1a\u5c06\u5f53\u524d\u6267\u884c\u7a0b\u5e8f\u7684CPU\u4f7f\u7528\u6743\u65ad\u5f00 \u4f18\u70b9:CPU\u7684\u5229\u7528\u7387\u9ad8 \u5f53\u4e00\u4e2a\u7a0b\u5e8f\u5360\u7528CPU\u65f6\u95f4\u8fc7\u957f,\u4f1a\u65ad\u5f00\u5f53\u524dCPU\u4f7f\u7528\u6743 \u7f3a\u70b9:\u7a0b\u5e8f\u7684\u6267\u884c\u6548\u7387\u964d\u4f4e \u8fdb\u7a0b\u7684\u8c03\u5ea6 \u00b6 \u5148\u8fdb\u5148\u51fa\u7b97\u6cd5 \u00b6 \u6700\u5148\u8fdb\u5165\u7684\u8fdb\u7a0b\u6700\u5148\u6267\u884c,\u4e00\u76f4\u5230\u8be5\u8fdb\u7a0b\u7ed3\u675f,\u6216\u963b\u585e\u65f6,\u91ca\u653e \u7f3a\u70b9:\u82e5\u957f\u65f6\u95f4\u5148\u8fdb\u5165,\u540e\u9762\u65e0\u6cd5\u4f7f\u7528 \u77ed\u8fdb\u7a0b\u4f18\u5148 \u00b6 \u8c01\u7528\u65f6\u77ed,\u8c01\u4f18\u5148\u6267\u884c \u7f3a\u70b9:\u957f\u65f6\u95f4\u8fdb\u7a0b\u9700\u8981\u88ab\u63a7\u5f88\u957f\u65f6\u95f4 \u65f6\u95f4\u7247\u8f6e\u8f6c\u6cd5 \u00b6 CPU\u6267\u884c\u65f6\u95f41s\u4e2d,\u52a0\u8f7dN\u4e2a\u7a0b\u5e8f,\u5c061s==\u7b49\u5206==\u672aN\u4e2a\u65f6\u95f4\u7247. \u591a\u7ea7\u53cd\u9988\u961f\u5217 \u00b6 \u5c06\u6267\u884c\u4f18\u5148\u5206\u4e3a\u591a\u5c42\u7ea7\u522b 1:\u4f18\u5148\u7ea7\u6700\u9ad8 2:\u4f18\u5148\u7ea7\u7b2c\u4e8c 3:\u4ee5\u6b64\u7c7b\u63a8 ...... \u540c\u6b65\u548c\u5f02\u6b65 \u00b6 \u6307\u7684\u662f\u63d0\u4ea4\u4efb\u52a1\u7684\u65b9\u5f0f \u540c\u6b65: \u00b6 \u53d1\u9001\u65b9\u53d1\u51fa\u6570\u636e\u540e,\u7b49\u63a5\u6536\u65b9\u56de\u54cd\u5e94\u4ee5\u540e\u624d\u53d1\u4e0b\u4e00\u4e2a\u6570\u636e\u5305\u7684\u901a\u8baf\u65b9\u5f0f \u5f02\u6b65: \u00b6 \u53d1\u9001\u65b9\u53d1\u51fa\u6570\u636e\u540e,\u4e0d\u7b49\u5f85\u63a5\u6536\u65b9\u53d1\u56de\u54cd\u5e94,\u63a5\u7740\u53d1\u9001\u4e0b\u4e2a\u6570\u636e\u5305\u7684\u901a\u8baf\u65b9\u5f0f \u540c\u6b65\u65f6\u963b\u585e\u6a21\u5f0f,\u5f02\u6b65\u662f\u975e\u963b\u585e\u6a21\u5f0f. \u6ce8\u610f:\u963b\u585e\u548c\u975e\u963b\u585e,\u540c\u6b65\u548c\u5f02\u6b65\u4e0d\u662f\u540c\u4e00\u4e2a\u6982\u5ff5! \u8fdb\u7a0b\u7684\u56de\u6536 \u00b6 \u5b64\u513f\u8fdb\u7a0b \u00b6 \u7236\u8fdb\u7a0b\u5148\u4e8e\u5b50\u8fdb\u7a0b\u7ed3\u675f,\u5219\u5b50\u8fdb\u7a0b\u6210\u4e3a\u5b64\u513f\u8fdb\u7a0b,\u5b50\u8fdb\u7a0b\u7684\u7236\u8fdb\u7a0b\u6210\u4e3ainit\u8fdb\u7a0b,\u79f0\u4e3ainit\u8fdb\u7a0b\u9886\u517b\u5b64\u513f\u8fdb\u7a0b \u50f5\u5c38\u8fdb\u7a0b \u00b6 \u5b50\u8fdb\u7a0b\u7ec8\u6b62,\u7236\u8fdb\u7a0b\u5c1a\u672a\u5bf9\u5176ID\u8fdb\u884c\u56de\u6536,\u53d8\u6210\u50f5\u5c38\u8fdb\u7a0b. \u5e76\u53d1 \u00b6 \u57fa\u672c\u6982\u5ff5 \u00b6 \u4e32\u884c:\u6392\u6210\u4e00\u961f\u4e00\u4e2a\u4e2a\u5904\u7406 \u597d\u7684\u7a0b\u5e8f\u90fd\u662f\u4e32\u5e76\u884c\u7ed3\u5408\u7684 \u5e76\u53d1\u548c\u5e76\u884c\u7684\u533a\u522b \u00b6 \u5e76\u884c,parallel \u540c\u65f6\u505a\u67d0\u4e9b\u4e8b,\u53ef\u4ee5\u4e92\u4e0d\u5e72\u6270\u7684\u540c\u4e00\u4e2a\u65f6\u523b\u505a\u591a\u4ef6\u4e8b \u5e76\u53d1, \u540c\u65f6\u4e00\u4e2a\u65f6\u523b\u6216\u67d0\u4e00\u6bb5\u65f6\u95f4\u5185,\u9700\u8981\u6709\u591a\u4ef6\u4e8b\u9700\u8981\u505a \u5e76\u884c\u53ef\u4ee5\u89e3\u51b3\u5e76\u53d1\u95ee\u9898 \u6bd4\u5982:\u5341\u8f86\u8f66\u8981\u540c\u65f6\u7ecf\u8fc7\u5355\u8f66\u9053,\u4fee\u5efa4\u8f66\u9053,\u5c31\u662f\u901a\u8fc7\u5e76\u884c\u89e3\u51b3\u5e76\u53d1\u7684\u95ee\u9898 \u5e76\u53d1\u7684\u89e3\u51b3 \u00b6 \u98df\u5802\u6253\u996d\u6a21\u578b 12\u70b9\u5f00\u996d,\u90fd\u6d8c\u5411\u98df\u5802,\u8fd9\u5c31\u662f\u5e76\u53d1.\u5982\u679c\u4eba\u7279\u522b\u591a,\u8fd9\u5c31\u65f6\u9ad8\u5e76\u53d1. 1.\u961f\u5217.\u7f13\u51b2\u533a \u00b6 \u6392\u6210==\u961f\u5217==,\u5c31\u662f\u4e00\u4e2a\u7f13\u51b2\u5730\u5e26,\u5c31\u662f==\u7f13\u51b2\u533a== \u5982\u82e5\u6709\u5973\u58eb,\u90a3\u5973\u58eb\u961f\u5c31\u662f\u4e00\u4e2a==\u4f18\u5148\u961f\u5217== 2.\u4e89\u62a2 \u00b6 \u6709\u4eba\u62a2\u8fd9\u6253\u996d,\u62a2\u5230\u4e86\u5c31\u76f8\u5f53\u4e8e\u9501\u5b9a\u7a97\u53e3,\u53ea\u662f\u4e00\u79cd==\u9501\u673a\u5236== \u662f\u4e00\u79cd\u89e3\u51b3\u9ad8\u5e76\u53d1\u7684\u89e3\u51b3\u65b9\u6848,\u4f46\u662f\u4e0d\u597d,\u56e0\u4e3a\u6709\u4eba\u957f\u65f6\u95f4\u62a2\u4e0d\u5230 \u5982\u679c\u4e89\u62a2,\u4e00\u5b9a\u8981\u6709\u9501\u673a\u5236,\u4e0d\u7136\u4e89\u5230\u4e86\u4e5f\u4f1a\u5f88\u5feb\u88ab\u522b\u4eba\u62a2\u6389 3.\u9884\u5904\u7406 \u00b6 \u63d0\u524d\u505a80%\u7684\u83dc\u9884\u5907\u7740 \u4e00\u79cd\u63d0\u524d\u52a0\u8f7d\u7528\u6237\u9700\u8981\u7684\u6570\u636e\u7684\u601d\u8def,==\u9884\u5904\u7406==\u601d\u60f3,\u7f13\u5b58\u5e38\u7528 4.\u5e76\u884c \u00b6 \u76f8\u5f53\u4e8e\u5f00\u591a\u4e2a\u7a97\u53e3\u8ba9\u4eba\u6253\u996d,\u6210\u672c\u4e0a\u5347 \u65e5\u5e38\u53ef\u4ee5\u901a\u8fc7\u8d2d\u4e70\u66f4\u591a\u670d\u52a1\u5668,\u6216\u591a\u5f00\u8fdb\u7a0b,\u8fdb\u7a0b\u5b9e\u73b0\u5e76\u884c\u5904\u7406,\u6765\u89e3\u51b3\u5e76\u53d1\u95ee\u9898 \u8fd9\u4e9b\u90fd\u662f==\u6c34\u5e73\u6269\u5c55==\u601d\u60f3 \u6ce8: \u5982\u679c\u7ebf\u7a0b\u5728\u5355CPU\u4e0a\u5904\u7406,\u5c31\u4e0d\u662f\u5e76\u884c\u4e86 \u4f46\u662f\u591a\u6570\u670d\u52a1\u5668\u90fd\u662f\u591aCPU\u7684,\u670d\u52a1\u7684\u4e0d\u662f\u5f80\u5f80\u662f\u591a\u673a\u7684,\u5206\u5e03\u7684,\u8fd9\u90fd\u662f\u5e76\u884c\u5904\u7406, 5.\u63d0\u901f \u00b6 \u63d0\u9ad8\u5355\u4e2a\u7a97\u53e3\u7684\u6253\u996d\u901f\u5ea6,\u4e5f\u662f\u89e3\u51b3\u5e76\u53d1\u7684\u65b9\u5f0f. \u63d0\u9ad8\u5355\u4e2aCPU\u6027\u80fd,\u6216\u5355\u4e2a\u670d\u52a1\u5668\u5b89\u88c5\u66f4\u591a\u7684CPU \u8fd9\u662f\u4e00\u79cd==\u5782\u76f4\u6269\u5c55==\u7684\u601d\u60f3 \u7f3a\u70b9:\u5bb9\u6613\u89e6\u5230\u6280\u672f\u5929\u82b1\u677f,\u800c\u4e14\u4ef7\u683c\u5230\u540e\u9762\u4f1a\u98d9\u5347 6.\u6d88\u606f\u4e2d\u95f4\u4ef6 \u00b6 \u76f8\u5f53\u4e8e\u7f13\u51b2,\u4f46\u662f\u5728\u7cfb\u7edf\u5916\u9762(\u7b2c\u4e09\u65b9)\u7f13\u51b2 \u8fdb\u7a0b\u548c\u7ebf\u7a0b \u00b6 \u5728\u5b9e\u73b0\u4e86\u7ebf\u7a0b\u7684\u64cd\u4f5c\u7cfb\u7edf\u4e2d,\u7ebf\u7a0b\u662f\u64cd\u4f5c\u7cfb\u7edf\u80fd\u591f\u8fdb\u884c\u8fd0\u7b97\u8c03\u5ea6\u7684\u6700\u5c0f\u5355\u4f4d.\u5b83\u88ab\u5305\u542b\u5728\u8fdb\u7a0b\u4e4b\u4e2d,\u662f\u8fdb\u7a0b\u4e2d\u7684==\u5b9e\u9645\u8fd0\u4f5c\u5355\u4f4d==.\u4e00\u4e2a\u7a0b\u5e8f\u7684\u6267\u884c\u5b9e\u4f8b\u5c31\u662f\u4e00\u4e2a\u8fdb\u7a0b. \u8fdb\u7a0b(Process)\u662f\u8ba1\u7b97\u673a\u4e2d\u7684\u7a0b\u5e8f\u5173\u4e8e\u67d0\u6570\u636e\u96c6\u5408\u4e0a\u7684\u4e00\u6b21\u8fd0\u884c\u6d3b\u52a8,\u662f==\u7cfb\u7edf\u8fdb\u884c\u8d44\u6e90\u5206\u914d==\u548c==\u8c03\u5ea6==\u7684\u57fa\u672c\u5355\u4f4d,\u662f\u64cd\u4f5c\u7cfb\u7edf\u7ed3\u6784\u7684\u57fa\u7840. \u8fdb\u7a0b\u548c\u7ebf\u7a0b\u7684\u5173\u7cfb \u00b6 \u7a0b\u5e8f\u662f\u6e90\u4ee3\u7801\u7f16\u8bd1\u540e\u7684\u6587\u4ef6,\u800c\u8fd9\u4e9b\u6587\u4ef6\u5b58\u653e\u5728\u78c1\u76d8\u4e0a,\u5f53\u7a0b\u5e8f\u88ab\u64cd\u4f5c\u7cfb\u7edf\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d,\u5c31\u662f\u8fdb\u7a0b,\u8fdb\u7a0b\u4e2d\u5b58\u653e\u7740\u6307\u4ee4\u548c\u6570\u636e(\u8d44\u6e90),\u5b83\u4e5f\u662f\u7ebf\u7a0b\u7684\u5bb9\u5668.\u8fdb\u7a0b\u5c31\u662f\u4e2a\u5927\u96c6\u5408,\u771f\u6b63\u5de5\u4f5c\u7684\u662f\u7ebf\u7a0b. Linux\u8fdb\u7a0b\u6709\u7236\u8fdb\u7a0b,\u5b50\u8fdb\u7a0b,Windows\u7684\u8fdb\u7a0b\u662f\u5e73\u7b49\u5173\u7cfb. \u7ebf\u7a0b,\u6709\u65f6\u4faf\u88ab\u79f0\u4e3a\u8f7b\u91cf\u7ea7\u8fdb\u7a0b(Lightweight Process,LWP),\u662f\u7a0b\u5e8f\u6267\u884c\u6d41\u7684\u6700\u5c0f\u5355\u5143. \u4e00\u4e2a\u6807\u51c6\u7684\u7ebf\u7a0b\u7531\u7ebf\u7a0bID,\u5f53\u524d\u6307\u4ee4\u6307\u9488(PC),\u5bc4\u5b58\u5668\u96c6\u5408\u548c\u5806\u6808\u7ec4\u6210. \u8fdb\u7a0b\u7ebf\u7a0b\u7684\u7406\u89e3 \u00b6 \u73b0\u4ee3\u64cd\u4f5c\u7cfb\u7edf\u63d0\u51fa\u8fdb\u7a0b\u7684\u6982\u5ff5, \u6bcf\u4e00\u4e2a\u8fdb\u7a0b\u90fd\u8ba4\u4e3a\u81ea\u5df1\u72ec\u5360\u6240\u6709\u7684\u8ba1\u7b97\u673a\u786c\u4ef6\u8d44\u6e90, \u8fdb\u7a0b\u5c31\u662f\u72ec\u7acb\u7684\u738b\u56fd,\u8fdb\u7a0b\u95f4\u4e0d\u53ef\u4ee5\u968f\u4fbf\u7684\u5171\u4eab\u6570\u636e \u7ebf\u7a0b\u5c31\u662f\u7701\u4efd,\u540c\u4e00\u4e2a\u8fdb\u7a0b\u5185\u7684\u7ebf\u7a0b\u53ef\u4ee5\u5171\u4eab\u8fdb\u7a0b\u7684\u8d44\u6e90,\u6bcf\u4e00\u4e2a\u7ebf\u7a0b\u62e5\u6709\u81ea\u5df1\u72ec\u7acb\u7684\u5806\u6808. \u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u6709\u4e00\u4e2a\u72ec\u7acb\u7684\u7ebf\u7a0bid,\u7528\u4ee5\u533a\u5206\u4e0d\u540c\u7684\u7ebf\u7a0b \u7ebf\u7a0b\u7684\u72b6\u6001 \u00b6 \u8fd0\u884c\u6001 \u8be5\u65f6\u523b,\u8be5\u7ebf\u7a0b\u6b63\u5728\u5360\u7528CPU \u5c31\u7eea\u6001 \u53ef\u968f\u65f6\u8f6c\u6362\u4e3a\u8fd0\u884c\u6001,\u56e0\u4e3a\u5176\u4ed6\u7ebf\u7a0b\u6b63\u5728\u8fd0\u884c\u800c\u6682\u505c,\u8be5\u7ebf\u7a0b\u4e0d\u5360\u7528CPU \u963b\u585e\u6001 \u9664\u975e\u67d0\u4e9b\u5916\u90e8\u4e8b\u60c5\u53d1\u751f,\u5426\u5219\u7ebf\u7a0b\u4e0d\u80fd\u8fd0\u884c.\u7b49\u6761\u4ef6\u6ee1\u8db3\u65f6,\u6267\u884c \u72b6\u6001 \u542b\u4e49 \u5c31\u7eea(Ready) \u7ebf\u7a0b\u80fd\u591f\u8fd0\u884c,\u4f46\u5728\u7b49\u5f85\u88ab\u8c03\u5ea6.\u53ef\u80fd\u7ebf\u7a0b\u521a\u521a\u521b\u5efa\u542f\u52a8,\u6216\u521a\u521a\u4ece\u963b\u585e\u4e2d\u6062\u590d,\u6216\u88ab\u5176\u4ed6\u7ebf\u7a0b\u62a2\u5360 \u8fd0\u884c(Running) \u7ebf\u7a0b\u6b63\u5728\u6267\u884c \u963b\u585e(Blocked) \u7ebf\u7a0b\u7b49\u5f85\u5916\u90e8\u4e8b\u4ef6\u53d1\u751f\u800c\u65e0\u6cd5\u8fd0\u884c,\u5982I/O\u64cd\u4f5c \u7ec8\u6b62(Terminated) \u7ebf\u7a0b\u5b8c\u6210,\u6216\u9000\u51fa,\u6216\u88ab\u53d6\u6d88 \u591a\u8fdb\u7a0b.\u591a\u7ebf\u7a0b\u7684\u9009\u62e9 \u00b6 1.CPU\u5bc6\u96c6\u578b \u00b6 \u591a\u8fdb\u7a0b CPython\u4e2d\u4f7f\u7528\u4e86GIL.\u591a\u7ebf\u7a0b\u7684\u65f6\u5019\u9501\u76f8\u4e92\u7ade\u4e89,\u4e14\u591a\u6838\u4f18\u52bf\u4e0d\u80fd\u53d1\u6325,Python\u591a\u8fdb\u7a0b\u6548\u7387\u66f4\u9ad8 2.IO\u5bc6\u96c6\u578b \u00b6 \u9002\u5408\u4f7f\u7528\u591a\u7ebf\u7a0b,\u53ef\u4ee5\u51cf\u5c11\u591a\u8fdb\u7a0b\u95f4IO\u7684\u5e8f\u5217\u5316\u5f00\u9500.\u4e14\u5728IO\u7b49\u5f85\u7684\u65f6\u5019,\u5207\u6362\u5230\u5176\u4ed6\u7ebf\u7a0b\u7ee7\u7eed\u6267\u884c,\u6548\u7387\u5927\u5927\u7684\u597d. \u9009\u62e9 \u00b6 \u7531\u4e8epython\u591a\u7ebf\u7a0b\u5e76\u4e0d\u662f\u5e76\u884c\u6267\u884c\uff0c\u56e0\u6b64\u8f83\u9002\u5408\u4e0eI/O\u5bc6\u96c6\u578b\u7a0b\u5e8f\uff0c\u591a\u8fdb\u7a0b\u5e76\u884c\u6267\u884c\u9002\u7528\u4e8eCPU\u5bc6\u96c6\u578b\u7a0b\u5e8f\uff1b https://www.jianshu.com/p/873de32e37dd \u751f\u4ea7\u8005\u6d88\u8d39\u8005\u6a21\u578b \u00b6 \u4e5f\u53eb\u7f13\u5b58\u4fdd\u5b9a\u95ee\u9898,\u662f\u4e00\u4e2a\u7ecf\u5178\u7684,\u591a\u8fdb\u7a0b\u540c\u6b65\u95ee\u9898. \u751f\u4ea7\u8005\u5f80\u7f13\u51b2\u53d6\u5199\u5165\u6570\u636e,\u6d88\u8d39\u8005\u4ece\u7f13\u51b2\u533a\u62ff\u53bb\u6570\u636e,\u4e24\u8005\u540c\u8fc7\u7f13\u51b2\u533a\u6765\u8fdb\u884c\u901a\u4fe1,\u8fd9\u6837\u7684\u8bdd\u751f\u4ea7\u8005\u4e0d\u5fc5\u62c5\u5fc3\u8981\u7b49\u5f85\u6d88\u8d39\u8005\u4f7f\u7528\u5b8c\u6570\u636e,\u6d88\u8d39\u8005\u4e5f\u4e0d\u7528\u62c5\u5fc3\u4e0d\u591f\u65f6\u95f4\u5904\u7406\u6240\u6709\u6570\u636e \u534f\u7a0b \u00b6 \u534f\u7a0b\u662f\u5355\u7ebf\u7a0b\u4e0b\u7684\u5e76\u53d1,\u53c8\u79f0\u5fae\u7ebf\u7a0b,\u7ea4\u7a0b,\u82f1\u6587\u540dCoroutine. \u534f\u7a0b\u662f\u4e00\u79cd\u7528\u6237\u6001\u7684\u8f7b\u91cf\u7ebf\u7a0b,\u5373\u534f\u7a0b\u662f\u7531\u7528\u6237\u7a0b\u5e8f\u81ea\u5df1\u63a7\u5236\u8c03\u5ea6. \u6ce8\u610f: Python\u7ebf\u7a0b\u662f\u5185\u6838\u7ea7\u522b,\u5373\u7531\u64cd\u4f5c\u7cfb\u7edf\u63a7\u5236\u8c03\u5ea6,\u6240\u4ee5\u5355\u7ebf\u7a0b\u9047\u5230IO\u6216\u8005\u6267\u884c\u65f6\u95f4\u8fc7\u957f\u5c31\u4f1a\u88ab\u8feb\u4ea4\u51faCPU\u6267\u884c\u6743\u9650,\u5207\u6362\u5176\u4ed6\u7ebf\u7a0b\u8fd0\u884c. \u5355\u7ebf\u7a0b\u5185\u5f00\u542f\u534f\u7a0b,\u4e00\u65e6\u9047\u5230IO,\u5c31\u4f1a\u4ece\u5e94\u7528\u7a0b\u5e8f\u7ea7\u522b(\u975e\u64cd\u4f5c\u7cfb\u7edf)\u63a7\u5236\u5207\u6362,\u4ee5\u6b64\u6765\u63d0\u5347\u6548\u7387. \u4f18\u70b9: \u534f\u7a0b\u7684\u5207\u6362\u5f00\u9500\u66f4\u5c0f,\u5c5e\u4e8e\u7a0b\u5e8f\u7ea7\u522b\u7684\u5207\u6362,\u64cd\u4f5c\u7cfb\u7edf\u611f\u89c9\u4e0d\u5230,\u6240\u4ee5\u66f4\u52a0\u8f7b\u91cf\u7ea7 \u5355\u7ebf\u7a0b\u5185\u5c31\u53ef\u4ee5\u5b9e\u73b0\u5e76\u53d1\u7684\u6548\u679c,\u6700\u5927\u9650\u5ea6\u7684\u5229\u7528CPU \u7f3a\u70b9: \u534f\u7a0b\u7684\u672c\u8d28\u662f\u5355\u7ebf\u7a0b,\u65e0\u6cd5\u5229\u7528\u591a\u6838.\u6240\u4ee5\u53ef\u4ee5\u662f\u4e00\u4e2a\u7a0b\u5e8f\u5f00\u542f\u5f00\u542f\u591a\u4e2a\u8fdb\u7a0b,\u6bcf\u4e2a\u8fdb\u7a0b\u5185\u5f00\u542f\u591a\u4e2a\u7ebf\u7a0b,\u6bcf\u4e2a\u7ebf\u7a0b\u5f00\u542f\u534f\u7a0b. \u534f\u7a0b\u662f\u5355\u4e2a\u7ebf\u7a0b,\u6240\u4ee5\u4e00\u65e6\u51fa\u73b0\u963b\u585e,\u5c31\u4f1a\u963b\u585e\u6574\u4e2a\u7ebf\u7a0b. \u4f7f\u7528gevent\u6a21\u5757","title":"\u8fdb\u7a0b\u548c\u7ebf\u7a0b"},{"location":"Python/%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B/#_1","text":"\u5355\u9053\u6279\u5904\u7406\u7cfb\u7edf:\u591a\u4e2a\u7a0b\u5e8f\u4e32\u884c\u4f7f\u7528CPU \u591a\u9053\u7a0b\u5e8f\u8bbe\u8ba1\u6280\u672f:\u591a\u4e2a\u7a0b\u5e8f\u540c\u65f6\u8fdb\u5165\u8ba1\u7b97\u673a\u7684\u4e3b\u5b58\u50a8\u5668\u5e76\u542f\u52a8,\u5b8f\u89c2\u4e0a\u662f\u5e76\u884c\u7684,\u591a\u9053\u7a0b\u5e8f\u5904\u5728\u8fd0\u884c\u4e2d;\u5fae\u89c2\u4e0a\u662f\u4e32\u884c\u7684,\u5404\u9053\u7a0b\u5e8f\u8f6e\u6d41\u4ea4\u66ff\u4f7f\u7528CPU.\u7a7a\u95f4\u4e0a\u7684\u590d\u7528,\u4e00\u4e2aCPU\u53ef\u4ee5\u8ba9\u591a\u4e2a\u7528\u6237\u4f7f\u7528 \u7a7a\u95f4\u4e0a\u7684\u590d\u7528:\u4e00\u4e2aCPU\u53ef\u4ee5\u63d0\u4f9b\u7ed9\u591a\u4e2a\u7528\u6237\u4f7f\u7528 \u65f6\u95f4\u4e0a\u7684\u590d\u7528:\u5207\u6362+\u4fdd\u5b58\u72b6\u6001 \u5f53CPU\u9047\u5230IO\u64cd\u4f5c[input(),print(),time.sleep()],\u4f1a\u5c06\u5f53\u524d\u6267\u884c\u7a0b\u5e8f\u7684CPU\u4f7f\u7528\u6743\u65ad\u5f00 \u4f18\u70b9:CPU\u7684\u5229\u7528\u7387\u9ad8 \u5f53\u4e00\u4e2a\u7a0b\u5e8f\u5360\u7528CPU\u65f6\u95f4\u8fc7\u957f,\u4f1a\u65ad\u5f00\u5f53\u524dCPU\u4f7f\u7528\u6743 \u7f3a\u70b9:\u7a0b\u5e8f\u7684\u6267\u884c\u6548\u7387\u964d\u4f4e","title":"\u591a\u9053\u6280\u672f"},{"location":"Python/%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B/#_2","text":"","title":"\u8fdb\u7a0b\u7684\u8c03\u5ea6"},{"location":"Python/%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B/#_3","text":"\u6700\u5148\u8fdb\u5165\u7684\u8fdb\u7a0b\u6700\u5148\u6267\u884c,\u4e00\u76f4\u5230\u8be5\u8fdb\u7a0b\u7ed3\u675f,\u6216\u963b\u585e\u65f6,\u91ca\u653e \u7f3a\u70b9:\u82e5\u957f\u65f6\u95f4\u5148\u8fdb\u5165,\u540e\u9762\u65e0\u6cd5\u4f7f\u7528","title":"\u5148\u8fdb\u5148\u51fa\u7b97\u6cd5"},{"location":"Python/%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B/#_4","text":"\u8c01\u7528\u65f6\u77ed,\u8c01\u4f18\u5148\u6267\u884c \u7f3a\u70b9:\u957f\u65f6\u95f4\u8fdb\u7a0b\u9700\u8981\u88ab\u63a7\u5f88\u957f\u65f6\u95f4","title":"\u77ed\u8fdb\u7a0b\u4f18\u5148"},{"location":"Python/%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B/#_5","text":"CPU\u6267\u884c\u65f6\u95f41s\u4e2d,\u52a0\u8f7dN\u4e2a\u7a0b\u5e8f,\u5c061s==\u7b49\u5206==\u672aN\u4e2a\u65f6\u95f4\u7247.","title":"\u65f6\u95f4\u7247\u8f6e\u8f6c\u6cd5"},{"location":"Python/%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B/#_6","text":"\u5c06\u6267\u884c\u4f18\u5148\u5206\u4e3a\u591a\u5c42\u7ea7\u522b 1:\u4f18\u5148\u7ea7\u6700\u9ad8 2:\u4f18\u5148\u7ea7\u7b2c\u4e8c 3:\u4ee5\u6b64\u7c7b\u63a8 ......","title":"\u591a\u7ea7\u53cd\u9988\u961f\u5217"},{"location":"Python/%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B/#_7","text":"\u6307\u7684\u662f\u63d0\u4ea4\u4efb\u52a1\u7684\u65b9\u5f0f","title":"\u540c\u6b65\u548c\u5f02\u6b65"},{"location":"Python/%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B/#_8","text":"\u53d1\u9001\u65b9\u53d1\u51fa\u6570\u636e\u540e,\u7b49\u63a5\u6536\u65b9\u56de\u54cd\u5e94\u4ee5\u540e\u624d\u53d1\u4e0b\u4e00\u4e2a\u6570\u636e\u5305\u7684\u901a\u8baf\u65b9\u5f0f","title":"\u540c\u6b65:"},{"location":"Python/%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B/#_9","text":"\u53d1\u9001\u65b9\u53d1\u51fa\u6570\u636e\u540e,\u4e0d\u7b49\u5f85\u63a5\u6536\u65b9\u53d1\u56de\u54cd\u5e94,\u63a5\u7740\u53d1\u9001\u4e0b\u4e2a\u6570\u636e\u5305\u7684\u901a\u8baf\u65b9\u5f0f \u540c\u6b65\u65f6\u963b\u585e\u6a21\u5f0f,\u5f02\u6b65\u662f\u975e\u963b\u585e\u6a21\u5f0f. \u6ce8\u610f:\u963b\u585e\u548c\u975e\u963b\u585e,\u540c\u6b65\u548c\u5f02\u6b65\u4e0d\u662f\u540c\u4e00\u4e2a\u6982\u5ff5!","title":"\u5f02\u6b65:"},{"location":"Python/%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B/#_10","text":"","title":"\u8fdb\u7a0b\u7684\u56de\u6536"},{"location":"Python/%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B/#_11","text":"\u7236\u8fdb\u7a0b\u5148\u4e8e\u5b50\u8fdb\u7a0b\u7ed3\u675f,\u5219\u5b50\u8fdb\u7a0b\u6210\u4e3a\u5b64\u513f\u8fdb\u7a0b,\u5b50\u8fdb\u7a0b\u7684\u7236\u8fdb\u7a0b\u6210\u4e3ainit\u8fdb\u7a0b,\u79f0\u4e3ainit\u8fdb\u7a0b\u9886\u517b\u5b64\u513f\u8fdb\u7a0b","title":"\u5b64\u513f\u8fdb\u7a0b"},{"location":"Python/%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B/#_12","text":"\u5b50\u8fdb\u7a0b\u7ec8\u6b62,\u7236\u8fdb\u7a0b\u5c1a\u672a\u5bf9\u5176ID\u8fdb\u884c\u56de\u6536,\u53d8\u6210\u50f5\u5c38\u8fdb\u7a0b.","title":"\u50f5\u5c38\u8fdb\u7a0b"},{"location":"Python/%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B/#_13","text":"","title":"\u5e76\u53d1"},{"location":"Python/%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B/#_14","text":"\u4e32\u884c:\u6392\u6210\u4e00\u961f\u4e00\u4e2a\u4e2a\u5904\u7406 \u597d\u7684\u7a0b\u5e8f\u90fd\u662f\u4e32\u5e76\u884c\u7ed3\u5408\u7684","title":"\u57fa\u672c\u6982\u5ff5"},{"location":"Python/%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B/#_15","text":"\u5e76\u884c,parallel \u540c\u65f6\u505a\u67d0\u4e9b\u4e8b,\u53ef\u4ee5\u4e92\u4e0d\u5e72\u6270\u7684\u540c\u4e00\u4e2a\u65f6\u523b\u505a\u591a\u4ef6\u4e8b \u5e76\u53d1, \u540c\u65f6\u4e00\u4e2a\u65f6\u523b\u6216\u67d0\u4e00\u6bb5\u65f6\u95f4\u5185,\u9700\u8981\u6709\u591a\u4ef6\u4e8b\u9700\u8981\u505a \u5e76\u884c\u53ef\u4ee5\u89e3\u51b3\u5e76\u53d1\u95ee\u9898 \u6bd4\u5982:\u5341\u8f86\u8f66\u8981\u540c\u65f6\u7ecf\u8fc7\u5355\u8f66\u9053,\u4fee\u5efa4\u8f66\u9053,\u5c31\u662f\u901a\u8fc7\u5e76\u884c\u89e3\u51b3\u5e76\u53d1\u7684\u95ee\u9898","title":"\u5e76\u53d1\u548c\u5e76\u884c\u7684\u533a\u522b"},{"location":"Python/%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B/#_16","text":"\u98df\u5802\u6253\u996d\u6a21\u578b 12\u70b9\u5f00\u996d,\u90fd\u6d8c\u5411\u98df\u5802,\u8fd9\u5c31\u662f\u5e76\u53d1.\u5982\u679c\u4eba\u7279\u522b\u591a,\u8fd9\u5c31\u65f6\u9ad8\u5e76\u53d1.","title":"\u5e76\u53d1\u7684\u89e3\u51b3"},{"location":"Python/%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B/#1","text":"\u6392\u6210==\u961f\u5217==,\u5c31\u662f\u4e00\u4e2a\u7f13\u51b2\u5730\u5e26,\u5c31\u662f==\u7f13\u51b2\u533a== \u5982\u82e5\u6709\u5973\u58eb,\u90a3\u5973\u58eb\u961f\u5c31\u662f\u4e00\u4e2a==\u4f18\u5148\u961f\u5217==","title":"1.\u961f\u5217.\u7f13\u51b2\u533a"},{"location":"Python/%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B/#2","text":"\u6709\u4eba\u62a2\u8fd9\u6253\u996d,\u62a2\u5230\u4e86\u5c31\u76f8\u5f53\u4e8e\u9501\u5b9a\u7a97\u53e3,\u53ea\u662f\u4e00\u79cd==\u9501\u673a\u5236== \u662f\u4e00\u79cd\u89e3\u51b3\u9ad8\u5e76\u53d1\u7684\u89e3\u51b3\u65b9\u6848,\u4f46\u662f\u4e0d\u597d,\u56e0\u4e3a\u6709\u4eba\u957f\u65f6\u95f4\u62a2\u4e0d\u5230 \u5982\u679c\u4e89\u62a2,\u4e00\u5b9a\u8981\u6709\u9501\u673a\u5236,\u4e0d\u7136\u4e89\u5230\u4e86\u4e5f\u4f1a\u5f88\u5feb\u88ab\u522b\u4eba\u62a2\u6389","title":"2.\u4e89\u62a2"},{"location":"Python/%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B/#3","text":"\u63d0\u524d\u505a80%\u7684\u83dc\u9884\u5907\u7740 \u4e00\u79cd\u63d0\u524d\u52a0\u8f7d\u7528\u6237\u9700\u8981\u7684\u6570\u636e\u7684\u601d\u8def,==\u9884\u5904\u7406==\u601d\u60f3,\u7f13\u5b58\u5e38\u7528","title":"3.\u9884\u5904\u7406"},{"location":"Python/%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B/#4","text":"\u76f8\u5f53\u4e8e\u5f00\u591a\u4e2a\u7a97\u53e3\u8ba9\u4eba\u6253\u996d,\u6210\u672c\u4e0a\u5347 \u65e5\u5e38\u53ef\u4ee5\u901a\u8fc7\u8d2d\u4e70\u66f4\u591a\u670d\u52a1\u5668,\u6216\u591a\u5f00\u8fdb\u7a0b,\u8fdb\u7a0b\u5b9e\u73b0\u5e76\u884c\u5904\u7406,\u6765\u89e3\u51b3\u5e76\u53d1\u95ee\u9898 \u8fd9\u4e9b\u90fd\u662f==\u6c34\u5e73\u6269\u5c55==\u601d\u60f3 \u6ce8: \u5982\u679c\u7ebf\u7a0b\u5728\u5355CPU\u4e0a\u5904\u7406,\u5c31\u4e0d\u662f\u5e76\u884c\u4e86 \u4f46\u662f\u591a\u6570\u670d\u52a1\u5668\u90fd\u662f\u591aCPU\u7684,\u670d\u52a1\u7684\u4e0d\u662f\u5f80\u5f80\u662f\u591a\u673a\u7684,\u5206\u5e03\u7684,\u8fd9\u90fd\u662f\u5e76\u884c\u5904\u7406,","title":"4.\u5e76\u884c"},{"location":"Python/%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B/#5","text":"\u63d0\u9ad8\u5355\u4e2a\u7a97\u53e3\u7684\u6253\u996d\u901f\u5ea6,\u4e5f\u662f\u89e3\u51b3\u5e76\u53d1\u7684\u65b9\u5f0f. \u63d0\u9ad8\u5355\u4e2aCPU\u6027\u80fd,\u6216\u5355\u4e2a\u670d\u52a1\u5668\u5b89\u88c5\u66f4\u591a\u7684CPU \u8fd9\u662f\u4e00\u79cd==\u5782\u76f4\u6269\u5c55==\u7684\u601d\u60f3 \u7f3a\u70b9:\u5bb9\u6613\u89e6\u5230\u6280\u672f\u5929\u82b1\u677f,\u800c\u4e14\u4ef7\u683c\u5230\u540e\u9762\u4f1a\u98d9\u5347","title":"5.\u63d0\u901f"},{"location":"Python/%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B/#6","text":"\u76f8\u5f53\u4e8e\u7f13\u51b2,\u4f46\u662f\u5728\u7cfb\u7edf\u5916\u9762(\u7b2c\u4e09\u65b9)\u7f13\u51b2","title":"6.\u6d88\u606f\u4e2d\u95f4\u4ef6"},{"location":"Python/%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B/#_17","text":"\u5728\u5b9e\u73b0\u4e86\u7ebf\u7a0b\u7684\u64cd\u4f5c\u7cfb\u7edf\u4e2d,\u7ebf\u7a0b\u662f\u64cd\u4f5c\u7cfb\u7edf\u80fd\u591f\u8fdb\u884c\u8fd0\u7b97\u8c03\u5ea6\u7684\u6700\u5c0f\u5355\u4f4d.\u5b83\u88ab\u5305\u542b\u5728\u8fdb\u7a0b\u4e4b\u4e2d,\u662f\u8fdb\u7a0b\u4e2d\u7684==\u5b9e\u9645\u8fd0\u4f5c\u5355\u4f4d==.\u4e00\u4e2a\u7a0b\u5e8f\u7684\u6267\u884c\u5b9e\u4f8b\u5c31\u662f\u4e00\u4e2a\u8fdb\u7a0b. \u8fdb\u7a0b(Process)\u662f\u8ba1\u7b97\u673a\u4e2d\u7684\u7a0b\u5e8f\u5173\u4e8e\u67d0\u6570\u636e\u96c6\u5408\u4e0a\u7684\u4e00\u6b21\u8fd0\u884c\u6d3b\u52a8,\u662f==\u7cfb\u7edf\u8fdb\u884c\u8d44\u6e90\u5206\u914d==\u548c==\u8c03\u5ea6==\u7684\u57fa\u672c\u5355\u4f4d,\u662f\u64cd\u4f5c\u7cfb\u7edf\u7ed3\u6784\u7684\u57fa\u7840.","title":"\u8fdb\u7a0b\u548c\u7ebf\u7a0b"},{"location":"Python/%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B/#_18","text":"\u7a0b\u5e8f\u662f\u6e90\u4ee3\u7801\u7f16\u8bd1\u540e\u7684\u6587\u4ef6,\u800c\u8fd9\u4e9b\u6587\u4ef6\u5b58\u653e\u5728\u78c1\u76d8\u4e0a,\u5f53\u7a0b\u5e8f\u88ab\u64cd\u4f5c\u7cfb\u7edf\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d,\u5c31\u662f\u8fdb\u7a0b,\u8fdb\u7a0b\u4e2d\u5b58\u653e\u7740\u6307\u4ee4\u548c\u6570\u636e(\u8d44\u6e90),\u5b83\u4e5f\u662f\u7ebf\u7a0b\u7684\u5bb9\u5668.\u8fdb\u7a0b\u5c31\u662f\u4e2a\u5927\u96c6\u5408,\u771f\u6b63\u5de5\u4f5c\u7684\u662f\u7ebf\u7a0b. Linux\u8fdb\u7a0b\u6709\u7236\u8fdb\u7a0b,\u5b50\u8fdb\u7a0b,Windows\u7684\u8fdb\u7a0b\u662f\u5e73\u7b49\u5173\u7cfb. \u7ebf\u7a0b,\u6709\u65f6\u4faf\u88ab\u79f0\u4e3a\u8f7b\u91cf\u7ea7\u8fdb\u7a0b(Lightweight Process,LWP),\u662f\u7a0b\u5e8f\u6267\u884c\u6d41\u7684\u6700\u5c0f\u5355\u5143. \u4e00\u4e2a\u6807\u51c6\u7684\u7ebf\u7a0b\u7531\u7ebf\u7a0bID,\u5f53\u524d\u6307\u4ee4\u6307\u9488(PC),\u5bc4\u5b58\u5668\u96c6\u5408\u548c\u5806\u6808\u7ec4\u6210.","title":"\u8fdb\u7a0b\u548c\u7ebf\u7a0b\u7684\u5173\u7cfb"},{"location":"Python/%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B/#_19","text":"\u73b0\u4ee3\u64cd\u4f5c\u7cfb\u7edf\u63d0\u51fa\u8fdb\u7a0b\u7684\u6982\u5ff5, \u6bcf\u4e00\u4e2a\u8fdb\u7a0b\u90fd\u8ba4\u4e3a\u81ea\u5df1\u72ec\u5360\u6240\u6709\u7684\u8ba1\u7b97\u673a\u786c\u4ef6\u8d44\u6e90, \u8fdb\u7a0b\u5c31\u662f\u72ec\u7acb\u7684\u738b\u56fd,\u8fdb\u7a0b\u95f4\u4e0d\u53ef\u4ee5\u968f\u4fbf\u7684\u5171\u4eab\u6570\u636e \u7ebf\u7a0b\u5c31\u662f\u7701\u4efd,\u540c\u4e00\u4e2a\u8fdb\u7a0b\u5185\u7684\u7ebf\u7a0b\u53ef\u4ee5\u5171\u4eab\u8fdb\u7a0b\u7684\u8d44\u6e90,\u6bcf\u4e00\u4e2a\u7ebf\u7a0b\u62e5\u6709\u81ea\u5df1\u72ec\u7acb\u7684\u5806\u6808. \u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u6709\u4e00\u4e2a\u72ec\u7acb\u7684\u7ebf\u7a0bid,\u7528\u4ee5\u533a\u5206\u4e0d\u540c\u7684\u7ebf\u7a0b","title":"\u8fdb\u7a0b\u7ebf\u7a0b\u7684\u7406\u89e3"},{"location":"Python/%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B/#_20","text":"\u8fd0\u884c\u6001 \u8be5\u65f6\u523b,\u8be5\u7ebf\u7a0b\u6b63\u5728\u5360\u7528CPU \u5c31\u7eea\u6001 \u53ef\u968f\u65f6\u8f6c\u6362\u4e3a\u8fd0\u884c\u6001,\u56e0\u4e3a\u5176\u4ed6\u7ebf\u7a0b\u6b63\u5728\u8fd0\u884c\u800c\u6682\u505c,\u8be5\u7ebf\u7a0b\u4e0d\u5360\u7528CPU \u963b\u585e\u6001 \u9664\u975e\u67d0\u4e9b\u5916\u90e8\u4e8b\u60c5\u53d1\u751f,\u5426\u5219\u7ebf\u7a0b\u4e0d\u80fd\u8fd0\u884c.\u7b49\u6761\u4ef6\u6ee1\u8db3\u65f6,\u6267\u884c \u72b6\u6001 \u542b\u4e49 \u5c31\u7eea(Ready) \u7ebf\u7a0b\u80fd\u591f\u8fd0\u884c,\u4f46\u5728\u7b49\u5f85\u88ab\u8c03\u5ea6.\u53ef\u80fd\u7ebf\u7a0b\u521a\u521a\u521b\u5efa\u542f\u52a8,\u6216\u521a\u521a\u4ece\u963b\u585e\u4e2d\u6062\u590d,\u6216\u88ab\u5176\u4ed6\u7ebf\u7a0b\u62a2\u5360 \u8fd0\u884c(Running) \u7ebf\u7a0b\u6b63\u5728\u6267\u884c \u963b\u585e(Blocked) \u7ebf\u7a0b\u7b49\u5f85\u5916\u90e8\u4e8b\u4ef6\u53d1\u751f\u800c\u65e0\u6cd5\u8fd0\u884c,\u5982I/O\u64cd\u4f5c \u7ec8\u6b62(Terminated) \u7ebf\u7a0b\u5b8c\u6210,\u6216\u9000\u51fa,\u6216\u88ab\u53d6\u6d88","title":"\u7ebf\u7a0b\u7684\u72b6\u6001"},{"location":"Python/%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B/#_21","text":"","title":"\u591a\u8fdb\u7a0b.\u591a\u7ebf\u7a0b\u7684\u9009\u62e9"},{"location":"Python/%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B/#1cpu","text":"\u591a\u8fdb\u7a0b CPython\u4e2d\u4f7f\u7528\u4e86GIL.\u591a\u7ebf\u7a0b\u7684\u65f6\u5019\u9501\u76f8\u4e92\u7ade\u4e89,\u4e14\u591a\u6838\u4f18\u52bf\u4e0d\u80fd\u53d1\u6325,Python\u591a\u8fdb\u7a0b\u6548\u7387\u66f4\u9ad8","title":"1.CPU\u5bc6\u96c6\u578b"},{"location":"Python/%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B/#2io","text":"\u9002\u5408\u4f7f\u7528\u591a\u7ebf\u7a0b,\u53ef\u4ee5\u51cf\u5c11\u591a\u8fdb\u7a0b\u95f4IO\u7684\u5e8f\u5217\u5316\u5f00\u9500.\u4e14\u5728IO\u7b49\u5f85\u7684\u65f6\u5019,\u5207\u6362\u5230\u5176\u4ed6\u7ebf\u7a0b\u7ee7\u7eed\u6267\u884c,\u6548\u7387\u5927\u5927\u7684\u597d.","title":"2.IO\u5bc6\u96c6\u578b"},{"location":"Python/%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B/#_22","text":"\u7531\u4e8epython\u591a\u7ebf\u7a0b\u5e76\u4e0d\u662f\u5e76\u884c\u6267\u884c\uff0c\u56e0\u6b64\u8f83\u9002\u5408\u4e0eI/O\u5bc6\u96c6\u578b\u7a0b\u5e8f\uff0c\u591a\u8fdb\u7a0b\u5e76\u884c\u6267\u884c\u9002\u7528\u4e8eCPU\u5bc6\u96c6\u578b\u7a0b\u5e8f\uff1b https://www.jianshu.com/p/873de32e37dd","title":"\u9009\u62e9"},{"location":"Python/%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B/#_23","text":"\u4e5f\u53eb\u7f13\u5b58\u4fdd\u5b9a\u95ee\u9898,\u662f\u4e00\u4e2a\u7ecf\u5178\u7684,\u591a\u8fdb\u7a0b\u540c\u6b65\u95ee\u9898. \u751f\u4ea7\u8005\u5f80\u7f13\u51b2\u53d6\u5199\u5165\u6570\u636e,\u6d88\u8d39\u8005\u4ece\u7f13\u51b2\u533a\u62ff\u53bb\u6570\u636e,\u4e24\u8005\u540c\u8fc7\u7f13\u51b2\u533a\u6765\u8fdb\u884c\u901a\u4fe1,\u8fd9\u6837\u7684\u8bdd\u751f\u4ea7\u8005\u4e0d\u5fc5\u62c5\u5fc3\u8981\u7b49\u5f85\u6d88\u8d39\u8005\u4f7f\u7528\u5b8c\u6570\u636e,\u6d88\u8d39\u8005\u4e5f\u4e0d\u7528\u62c5\u5fc3\u4e0d\u591f\u65f6\u95f4\u5904\u7406\u6240\u6709\u6570\u636e","title":"\u751f\u4ea7\u8005\u6d88\u8d39\u8005\u6a21\u578b"},{"location":"Python/%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B/#_24","text":"\u534f\u7a0b\u662f\u5355\u7ebf\u7a0b\u4e0b\u7684\u5e76\u53d1,\u53c8\u79f0\u5fae\u7ebf\u7a0b,\u7ea4\u7a0b,\u82f1\u6587\u540dCoroutine. \u534f\u7a0b\u662f\u4e00\u79cd\u7528\u6237\u6001\u7684\u8f7b\u91cf\u7ebf\u7a0b,\u5373\u534f\u7a0b\u662f\u7531\u7528\u6237\u7a0b\u5e8f\u81ea\u5df1\u63a7\u5236\u8c03\u5ea6. \u6ce8\u610f: Python\u7ebf\u7a0b\u662f\u5185\u6838\u7ea7\u522b,\u5373\u7531\u64cd\u4f5c\u7cfb\u7edf\u63a7\u5236\u8c03\u5ea6,\u6240\u4ee5\u5355\u7ebf\u7a0b\u9047\u5230IO\u6216\u8005\u6267\u884c\u65f6\u95f4\u8fc7\u957f\u5c31\u4f1a\u88ab\u8feb\u4ea4\u51faCPU\u6267\u884c\u6743\u9650,\u5207\u6362\u5176\u4ed6\u7ebf\u7a0b\u8fd0\u884c. \u5355\u7ebf\u7a0b\u5185\u5f00\u542f\u534f\u7a0b,\u4e00\u65e6\u9047\u5230IO,\u5c31\u4f1a\u4ece\u5e94\u7528\u7a0b\u5e8f\u7ea7\u522b(\u975e\u64cd\u4f5c\u7cfb\u7edf)\u63a7\u5236\u5207\u6362,\u4ee5\u6b64\u6765\u63d0\u5347\u6548\u7387. \u4f18\u70b9: \u534f\u7a0b\u7684\u5207\u6362\u5f00\u9500\u66f4\u5c0f,\u5c5e\u4e8e\u7a0b\u5e8f\u7ea7\u522b\u7684\u5207\u6362,\u64cd\u4f5c\u7cfb\u7edf\u611f\u89c9\u4e0d\u5230,\u6240\u4ee5\u66f4\u52a0\u8f7b\u91cf\u7ea7 \u5355\u7ebf\u7a0b\u5185\u5c31\u53ef\u4ee5\u5b9e\u73b0\u5e76\u53d1\u7684\u6548\u679c,\u6700\u5927\u9650\u5ea6\u7684\u5229\u7528CPU \u7f3a\u70b9: \u534f\u7a0b\u7684\u672c\u8d28\u662f\u5355\u7ebf\u7a0b,\u65e0\u6cd5\u5229\u7528\u591a\u6838.\u6240\u4ee5\u53ef\u4ee5\u662f\u4e00\u4e2a\u7a0b\u5e8f\u5f00\u542f\u5f00\u542f\u591a\u4e2a\u8fdb\u7a0b,\u6bcf\u4e2a\u8fdb\u7a0b\u5185\u5f00\u542f\u591a\u4e2a\u7ebf\u7a0b,\u6bcf\u4e2a\u7ebf\u7a0b\u5f00\u542f\u534f\u7a0b. \u534f\u7a0b\u662f\u5355\u4e2a\u7ebf\u7a0b,\u6240\u4ee5\u4e00\u65e6\u51fa\u73b0\u963b\u585e,\u5c31\u4f1a\u963b\u585e\u6574\u4e2a\u7ebf\u7a0b. \u4f7f\u7528gevent\u6a21\u5757","title":"\u534f\u7a0b"},{"location":"Python/%E9%80%92%E5%BD%92%E5%87%BD%E6%95%B0/","text":"[toc] \u51fd\u6570\u7684\u6267\u884c\u6d41\u7a0b \u00b6 \u8c03\u7528\u51fd\u6570,\u51fd\u6570\u538b\u6808,\u53c2\u6570\u538b\u6808,\u521b\u5efa\u6808\u5e27(frames),\u6267\u884c,\u5f39\u51fa \u9012\u5f52(Recursion) \u00b6 \u51fd\u6570\u76f4\u63a5\u6216\u95f4\u63a5\u8c03\u7528\u81ea\u8eab\u5c31\u662f \u9012\u5f52 \u9012\u5f52\u9700\u8981\u6709\u8fb9\u754c\u6761\u4ef6,\u9012\u5f52\u524d\u8fdb\u6bb5,\u9012\u5f52\u8fd4\u56de\u6bb5 \u9012\u5f52\u4e00\u5b9a\u8981\u6709\u4e00\u4e2a\u53ef\u4ee5\u6267\u884c\u5230\u7684\u8fb9\u754c\u6761\u4ef6 \u5f53\u8fb9\u754c\u6761\u4ef6\u4e0d\u6ee1\u8db3\u7684\u65f6\u5019,\u9012\u5f52\u524d\u8fdb \u5f53\u8fb9\u754c\u6807\u95f4\u6ee1\u8db3\u7684\u65f6\u5019,\u9012\u5f52\u8fd4\u56de \u8981\u6c42 \u00b6 \u9012\u5f52\u4e00\u5b9a\u8981\u6709\u9000\u51fa\u6761\u4ef6 \u9012\u5f52\u8c03\u7528\u6df1\u5ea6\u4e0d\u5b9c\u8fc7\u6df1 , Python\u5bf9\u9012\u5f52\u8c03\u7528\u6df1\u5ea6\u505a\u4e86\u9650\u5236,\u4ee5\u4fdd\u62a4\u89e3\u91ca\u5668 \u8d85\u8fc7\u9012\u5f52\u6df1\u5ea6\u9650\u5236,\u62a5RecursionError:maxinum recursion depth exceeded \u8d85\u51fa\u6700\u5927\u6df1\u5ea6 \u663e\u793a\u9ed8\u8ba4\u6700\u5927\u6df1\u5ea6 import sys print ( sys . getrecursionlimit ()) \u66f4\u6539\u9ed8\u8ba4\u6700\u5927\u6df1\u5ea6 import sys sys . setrecursionlimit ( 2000 ) \u95f4\u63a5\u9012\u5f52 \u00b6 fn1 \u8c03 fn2; fn2 \u8c03 fn1 \u9012\u5f52\u603b\u7ed3 \u00b6 \u9012\u5f52\u76f8\u5bf9\u8fd0\u884c\u6548\u7387\u4f4e,\u6bcf\u6b21\u8c03\u7528\u51fd\u6570\u90fd\u8981\u5f00\u8f9f\u6808\u5e27 \u9012\u5f52\u6709\u6df1\u5ea6\u9650\u5236,\u9012\u5f52\u5c42\u6b21\u592a\u6df1,\u53cd\u590d\u538b\u6808,\u5f88\u5feb\u5c31\u4f1a\u6808\u5185\u5b58\u6ea2\u51fa \u6709\u9650\u6b21\u6570\u9012\u5f52,\u53ef\u4ee5\u4f7f\u7528\u9012\u5f52\u8c03\u7528, \u7edd\u5927\u591a\u6570\u9012\u5f52,\u90fd\u53ef\u4ee5\u8f6c\u6362\u6210\u5faa\u73af \u5373\u4f7f\u9012\u5f52\u4ee3\u7801\u5f88\u7b80\u6d01, \u80fd\u4e0d\u7528\u5219\u4e0d\u7528 \u4f2a\u9012\u5f52 \u00b6 \u5f53get()\u5728\u6700\u540e,\u5c31\u662f\u4f2a\u9012\u5f52,\u53ef\u7528\u5faa\u73af\u4ee3\u66ff \u6ce8\u610f \u00b6 python\u4e2d\u6700\u5927\u7684\u9012\u5f52\u6df1\u5ea6\u5b98\u65b9\u9ed8\u8ba41000,\u6839\u636e\u673a\u5668\u4e0d\u540c\u6d4b\u8bd5\u5927\u6982998,997\u5de6\u53f3 python\u4e2d\u6ca1\u6709\u5c3e\u9012\u5f52\u4f18\u5316 \u5c3e\u9012\u5f52 \u00b6 \u5982\u679c\u4e00\u4e2a\u51fd\u6570\u4e2d\u6240\u6709\u9012\u5f52\u5f62\u5f0f\u7684\u8c03\u7528\u90fd\u51fa\u73b0\u5728\u51fd\u6570\u7684\u672b\u5c3e\uff0c\u6211\u4eec\u79f0\u8fd9\u4e2a\u9012\u5f52\u51fd\u6570\u662f\u5c3e\u9012\u5f52\u7684\u3002\u5f53\u9012\u5f52\u8c03\u7528\u662f\u6574\u4e2a\u51fd\u6570\u4f53\u4e2d\u6700\u540e\u6267\u884c\u7684\u8bed\u53e5\u4e14\u5b83\u7684\u8fd4\u56de\u503c\u4e0d\u5c5e\u4e8e\u8868\u8fbe\u5f0f\u7684\u4e00\u90e8\u5206\u65f6\uff0c\u8fd9\u4e2a\u9012\u5f52\u8c03\u7528\u5c31\u662f\u5c3e\u9012\u5f52\u3002\u5c3e\u9012\u5f52\u51fd\u6570\u7684\u7279\u70b9\u662f\u5728\u56de\u5f52\u8fc7\u7a0b\u4e2d\u4e0d\u7528\u505a\u4efb\u4f55\u64cd\u4f5c\uff0c\u8fd9\u4e2a\u7279\u6027\u5f88\u91cd\u8981\uff0c\u56e0\u4e3a\u5927\u591a\u6570\u73b0\u4ee3\u7684\u7f16\u8bd1\u5668\u4f1a\u5229\u7528\u8fd9\u79cd\u7279\u70b9\u81ea\u52a8\u751f\u6210\u4f18\u5316\u7684\u4ee3\u7801\u3002 Python\u4e2d\u6ca1\u6709\u5c3e\u9012\u5f52\u4f18\u5316","title":"\u9012\u5f52\u51fd\u6570"},{"location":"Python/%E9%80%92%E5%BD%92%E5%87%BD%E6%95%B0/#_1","text":"\u8c03\u7528\u51fd\u6570,\u51fd\u6570\u538b\u6808,\u53c2\u6570\u538b\u6808,\u521b\u5efa\u6808\u5e27(frames),\u6267\u884c,\u5f39\u51fa","title":"\u51fd\u6570\u7684\u6267\u884c\u6d41\u7a0b"},{"location":"Python/%E9%80%92%E5%BD%92%E5%87%BD%E6%95%B0/#recursion","text":"\u51fd\u6570\u76f4\u63a5\u6216\u95f4\u63a5\u8c03\u7528\u81ea\u8eab\u5c31\u662f \u9012\u5f52 \u9012\u5f52\u9700\u8981\u6709\u8fb9\u754c\u6761\u4ef6,\u9012\u5f52\u524d\u8fdb\u6bb5,\u9012\u5f52\u8fd4\u56de\u6bb5 \u9012\u5f52\u4e00\u5b9a\u8981\u6709\u4e00\u4e2a\u53ef\u4ee5\u6267\u884c\u5230\u7684\u8fb9\u754c\u6761\u4ef6 \u5f53\u8fb9\u754c\u6761\u4ef6\u4e0d\u6ee1\u8db3\u7684\u65f6\u5019,\u9012\u5f52\u524d\u8fdb \u5f53\u8fb9\u754c\u6807\u95f4\u6ee1\u8db3\u7684\u65f6\u5019,\u9012\u5f52\u8fd4\u56de","title":"\u9012\u5f52(Recursion)"},{"location":"Python/%E9%80%92%E5%BD%92%E5%87%BD%E6%95%B0/#_2","text":"\u9012\u5f52\u4e00\u5b9a\u8981\u6709\u9000\u51fa\u6761\u4ef6 \u9012\u5f52\u8c03\u7528\u6df1\u5ea6\u4e0d\u5b9c\u8fc7\u6df1 , Python\u5bf9\u9012\u5f52\u8c03\u7528\u6df1\u5ea6\u505a\u4e86\u9650\u5236,\u4ee5\u4fdd\u62a4\u89e3\u91ca\u5668 \u8d85\u8fc7\u9012\u5f52\u6df1\u5ea6\u9650\u5236,\u62a5RecursionError:maxinum recursion depth exceeded \u8d85\u51fa\u6700\u5927\u6df1\u5ea6 \u663e\u793a\u9ed8\u8ba4\u6700\u5927\u6df1\u5ea6 import sys print ( sys . getrecursionlimit ()) \u66f4\u6539\u9ed8\u8ba4\u6700\u5927\u6df1\u5ea6 import sys sys . setrecursionlimit ( 2000 )","title":"\u8981\u6c42"},{"location":"Python/%E9%80%92%E5%BD%92%E5%87%BD%E6%95%B0/#_3","text":"fn1 \u8c03 fn2; fn2 \u8c03 fn1","title":"\u95f4\u63a5\u9012\u5f52"},{"location":"Python/%E9%80%92%E5%BD%92%E5%87%BD%E6%95%B0/#_4","text":"\u9012\u5f52\u76f8\u5bf9\u8fd0\u884c\u6548\u7387\u4f4e,\u6bcf\u6b21\u8c03\u7528\u51fd\u6570\u90fd\u8981\u5f00\u8f9f\u6808\u5e27 \u9012\u5f52\u6709\u6df1\u5ea6\u9650\u5236,\u9012\u5f52\u5c42\u6b21\u592a\u6df1,\u53cd\u590d\u538b\u6808,\u5f88\u5feb\u5c31\u4f1a\u6808\u5185\u5b58\u6ea2\u51fa \u6709\u9650\u6b21\u6570\u9012\u5f52,\u53ef\u4ee5\u4f7f\u7528\u9012\u5f52\u8c03\u7528, \u7edd\u5927\u591a\u6570\u9012\u5f52,\u90fd\u53ef\u4ee5\u8f6c\u6362\u6210\u5faa\u73af \u5373\u4f7f\u9012\u5f52\u4ee3\u7801\u5f88\u7b80\u6d01, \u80fd\u4e0d\u7528\u5219\u4e0d\u7528","title":"\u9012\u5f52\u603b\u7ed3"},{"location":"Python/%E9%80%92%E5%BD%92%E5%87%BD%E6%95%B0/#_5","text":"\u5f53get()\u5728\u6700\u540e,\u5c31\u662f\u4f2a\u9012\u5f52,\u53ef\u7528\u5faa\u73af\u4ee3\u66ff","title":"\u4f2a\u9012\u5f52"},{"location":"Python/%E9%80%92%E5%BD%92%E5%87%BD%E6%95%B0/#_6","text":"python\u4e2d\u6700\u5927\u7684\u9012\u5f52\u6df1\u5ea6\u5b98\u65b9\u9ed8\u8ba41000,\u6839\u636e\u673a\u5668\u4e0d\u540c\u6d4b\u8bd5\u5927\u6982998,997\u5de6\u53f3 python\u4e2d\u6ca1\u6709\u5c3e\u9012\u5f52\u4f18\u5316","title":"\u6ce8\u610f"},{"location":"Python/%E9%80%92%E5%BD%92%E5%87%BD%E6%95%B0/#_7","text":"\u5982\u679c\u4e00\u4e2a\u51fd\u6570\u4e2d\u6240\u6709\u9012\u5f52\u5f62\u5f0f\u7684\u8c03\u7528\u90fd\u51fa\u73b0\u5728\u51fd\u6570\u7684\u672b\u5c3e\uff0c\u6211\u4eec\u79f0\u8fd9\u4e2a\u9012\u5f52\u51fd\u6570\u662f\u5c3e\u9012\u5f52\u7684\u3002\u5f53\u9012\u5f52\u8c03\u7528\u662f\u6574\u4e2a\u51fd\u6570\u4f53\u4e2d\u6700\u540e\u6267\u884c\u7684\u8bed\u53e5\u4e14\u5b83\u7684\u8fd4\u56de\u503c\u4e0d\u5c5e\u4e8e\u8868\u8fbe\u5f0f\u7684\u4e00\u90e8\u5206\u65f6\uff0c\u8fd9\u4e2a\u9012\u5f52\u8c03\u7528\u5c31\u662f\u5c3e\u9012\u5f52\u3002\u5c3e\u9012\u5f52\u51fd\u6570\u7684\u7279\u70b9\u662f\u5728\u56de\u5f52\u8fc7\u7a0b\u4e2d\u4e0d\u7528\u505a\u4efb\u4f55\u64cd\u4f5c\uff0c\u8fd9\u4e2a\u7279\u6027\u5f88\u91cd\u8981\uff0c\u56e0\u4e3a\u5927\u591a\u6570\u73b0\u4ee3\u7684\u7f16\u8bd1\u5668\u4f1a\u5229\u7528\u8fd9\u79cd\u7279\u70b9\u81ea\u52a8\u751f\u6210\u4f18\u5316\u7684\u4ee3\u7801\u3002 Python\u4e2d\u6ca1\u6709\u5c3e\u9012\u5f52\u4f18\u5316","title":"\u5c3e\u9012\u5f52"},{"location":"Python/%E9%9B%86%E5%90%88/","text":"\u96c6\u5408set \u5b9a\u4e49 \u96c6\u5408\u65b9\u6cd5 \u53bb\u91cd \u96c6\u5408\u7684\u8fd0\u7b97 \u5e76\u96c6 A|B \u4ea4\u96c6 A&B \u5dee\u96c6 A-B = A - A&B \u5bf9\u79f0\u5dee\u96c6 A^B = (A - B) | (B -A) \u5b50\u96c6,\u771f\u5b50\u96c6,\u4ea4\u96c6 \u96c6\u5408set \u00b6 \u53ef\u53d8\u6570\u636e\u7c7b\u578b \u65e0\u5e8f,\u4e0d\u53ef\u91cd\u590d \u4e0d\u652f\u6301\u7d22\u5f15\u53d6\u503c \u975e\u7ebf\u6027\u7ed3\u6784,\u5185\u90e8\u4f7f\u7528hash\u503c\u4f5c\u4e3akey,\u65f6\u95f4\u590d\u6742\u5ea6\u53ef\u4ee5\u505a\u5230O(1),\u67e5\u8be2\u65f6\u95f4\u548c\u6570\u636e\u89c4\u6a21\u65e0\u5173 \u5b9a\u4e49 \u00b6 s1 = set(iterable) \u53ef\u8fed\u4ee3\u5355\u4e00\u503c \u6216\u7a7a\u96c6\u5408 s2 = {} {}\u4e2d\u4e0d\u53ef\u653e\u5165\u4e0d\u53efhash\u5bf9\u8c61 basket = { 'apple' , 'orange' , 'apple' , 'pear' , 'orange' , 'banana' } >>> print ( basket ) # \u8fd9\u91cc\u6f14\u793a\u7684\u662f\u53bb\u91cd\u529f\u80fd { 'orange' , 'banana' , 'pear' , 'apple' } >>> 'orange' in basket # \u5feb\u901f\u5224\u65ad\u5143\u7d20\u662f\u5426\u5728\u96c6\u5408\u5185 True >>> 'crabgrass' in basket False \u96c6\u5408\u65b9\u6cd5 \u00b6 \u65b9\u6cd5 \u63cf\u8ff0 add() \u4e3a\u96c6\u5408\u6dfb\u52a0\u5143\u7d20 clear() \u79fb\u9664\u96c6\u5408\u4e2d\u7684\u6240\u6709\u5143\u7d20 copy() \u62f7\u8d1d\u4e00\u4e2a\u96c6\u5408 difference() \u8fd4\u56de\u591a\u4e2a\u96c6\u5408\u7684\u5dee\u96c6 \u7b49\u4e8e - discard() \u5220\u9664\u96c6\u5408\u4e2d\u6307\u5b9a\u7684\u5143\u7d20 intersection() \u8fd4\u56de\u96c6\u5408\u7684\u4ea4\u96c6 \u7b49\u4e8e & issubset() \u5224\u65ad\u6307\u5b9a\u96c6\u5408\u662f\u5426\u4e3a\u8be5\u65b9\u6cd5\u53c2\u6570\u96c6\u5408\u7684\u5b50\u96c6\u3002 issuperset() \u5224\u65ad\u8be5\u65b9\u6cd5\u7684\u53c2\u6570\u96c6\u5408\u662f\u5426\u4e3a\u6307\u5b9a\u96c6\u5408\u7684\u5b50\u96c6 pop() \u968f\u673a\u79fb\u9664\u5143\u7d20 remove() \u79fb\u9664\u6307\u5b9a\u5143\u7d20 \u53bb\u91cd \u00b6 \u6574\u578b\u5728set\u4e2d\u65e0\u8bba\u5728\u5143\u7ec4\u6216\u76f4\u63a5\u5728set\u4e2d,\u91cd\u590d\u4f1a\u88ab\u53bb\u6389 \u540c\u7c7b\u578b\u540chash\u503c\u4f1a\u88ab\u53bb\u91cd \u96c6\u5408\u7684\u8fd0\u7b97 \u00b6 \u5e76\u96c6 A|B \u00b6 set.union(*others) \u8fd4\u56de\u4e24\u4e2a\u96c6\u5408\u7684\u5e76\u96c6,\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u96c6\u5408 \u652f\u6301 |= \u4ea4\u96c6 A&B \u00b6 set.intersection(*others) \u8fd4\u56de\u548c\u591a\u4e2a\u96c6\u5408\u7684\u4ea4\u96c6 ,\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u96c6\u5408 \u652f\u6301 &= \u5dee\u96c6 A-B = A - A&B \u00b6 set.difference(*others) \u8fd4\u56de\u548c\u591a\u4e2a\u96c6\u5408\u7684\u5dee\u96c6,\u751f\u6210\u96c6\u5408 -\u7b49\u540c\u4e8edifference difference_update(*others) \u83b7\u53d6\u548c\u591a\u4e2a\u96c6\u5408\u7684\u5dee\u96c6\u5e76\u5c31\u5730\u4fee\u6539 \u652f\u6301 -= \u5bf9\u79f0\u5dee\u96c6 A^B = (A - B) | (B -A) \u00b6 set.symmetric_difference(other) \u8fd4\u56de\u4e00\u4e2a\u96c6\u5408\u4e0e\u53e6\u4e00\u4e2a\u96c6\u5408\u7684\u5dee\u96c6,\u751f\u6210\u65b0\u96c6\u5408 set.symmetric_difference_update(other) \u83b7\u53d6\u548c\u53e6\u4e00\u4e2a\u96c6\u5408\u7684\u5dee\u96c6\u5e76\u5c31\u5730\u4fee\u6539 \u652f\u6301^= \u5b50\u96c6,\u771f\u5b50\u96c6,\u4ea4\u96c6 \u00b6 <= \u5224\u65ad\u5b50\u96c6 < \u5224\u65ad\u771f\u5b50\u96c6 set.isdisjoint(other) \u5224\u65ad\u6709\u65e0\u4ea4\u96c6,\u6ca1\u6709\u4ea4\u96c6,\u8fd4\u56deTrue","title":"\u96c6\u5408"},{"location":"Python/%E9%9B%86%E5%90%88/#set","text":"\u53ef\u53d8\u6570\u636e\u7c7b\u578b \u65e0\u5e8f,\u4e0d\u53ef\u91cd\u590d \u4e0d\u652f\u6301\u7d22\u5f15\u53d6\u503c \u975e\u7ebf\u6027\u7ed3\u6784,\u5185\u90e8\u4f7f\u7528hash\u503c\u4f5c\u4e3akey,\u65f6\u95f4\u590d\u6742\u5ea6\u53ef\u4ee5\u505a\u5230O(1),\u67e5\u8be2\u65f6\u95f4\u548c\u6570\u636e\u89c4\u6a21\u65e0\u5173","title":"\u96c6\u5408set"},{"location":"Python/%E9%9B%86%E5%90%88/#_1","text":"s1 = set(iterable) \u53ef\u8fed\u4ee3\u5355\u4e00\u503c \u6216\u7a7a\u96c6\u5408 s2 = {} {}\u4e2d\u4e0d\u53ef\u653e\u5165\u4e0d\u53efhash\u5bf9\u8c61 basket = { 'apple' , 'orange' , 'apple' , 'pear' , 'orange' , 'banana' } >>> print ( basket ) # \u8fd9\u91cc\u6f14\u793a\u7684\u662f\u53bb\u91cd\u529f\u80fd { 'orange' , 'banana' , 'pear' , 'apple' } >>> 'orange' in basket # \u5feb\u901f\u5224\u65ad\u5143\u7d20\u662f\u5426\u5728\u96c6\u5408\u5185 True >>> 'crabgrass' in basket False","title":"\u5b9a\u4e49"},{"location":"Python/%E9%9B%86%E5%90%88/#_2","text":"\u65b9\u6cd5 \u63cf\u8ff0 add() \u4e3a\u96c6\u5408\u6dfb\u52a0\u5143\u7d20 clear() \u79fb\u9664\u96c6\u5408\u4e2d\u7684\u6240\u6709\u5143\u7d20 copy() \u62f7\u8d1d\u4e00\u4e2a\u96c6\u5408 difference() \u8fd4\u56de\u591a\u4e2a\u96c6\u5408\u7684\u5dee\u96c6 \u7b49\u4e8e - discard() \u5220\u9664\u96c6\u5408\u4e2d\u6307\u5b9a\u7684\u5143\u7d20 intersection() \u8fd4\u56de\u96c6\u5408\u7684\u4ea4\u96c6 \u7b49\u4e8e & issubset() \u5224\u65ad\u6307\u5b9a\u96c6\u5408\u662f\u5426\u4e3a\u8be5\u65b9\u6cd5\u53c2\u6570\u96c6\u5408\u7684\u5b50\u96c6\u3002 issuperset() \u5224\u65ad\u8be5\u65b9\u6cd5\u7684\u53c2\u6570\u96c6\u5408\u662f\u5426\u4e3a\u6307\u5b9a\u96c6\u5408\u7684\u5b50\u96c6 pop() \u968f\u673a\u79fb\u9664\u5143\u7d20 remove() \u79fb\u9664\u6307\u5b9a\u5143\u7d20","title":"\u96c6\u5408\u65b9\u6cd5"},{"location":"Python/%E9%9B%86%E5%90%88/#_3","text":"\u6574\u578b\u5728set\u4e2d\u65e0\u8bba\u5728\u5143\u7ec4\u6216\u76f4\u63a5\u5728set\u4e2d,\u91cd\u590d\u4f1a\u88ab\u53bb\u6389 \u540c\u7c7b\u578b\u540chash\u503c\u4f1a\u88ab\u53bb\u91cd","title":"\u53bb\u91cd"},{"location":"Python/%E9%9B%86%E5%90%88/#_4","text":"","title":"\u96c6\u5408\u7684\u8fd0\u7b97"},{"location":"Python/%E9%9B%86%E5%90%88/#ab","text":"set.union(*others) \u8fd4\u56de\u4e24\u4e2a\u96c6\u5408\u7684\u5e76\u96c6,\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u96c6\u5408 \u652f\u6301 |=","title":"\u5e76\u96c6  A|B"},{"location":"Python/%E9%9B%86%E5%90%88/#ab_1","text":"set.intersection(*others) \u8fd4\u56de\u548c\u591a\u4e2a\u96c6\u5408\u7684\u4ea4\u96c6 ,\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u96c6\u5408 \u652f\u6301 &=","title":"\u4ea4\u96c6  A&amp;B"},{"location":"Python/%E9%9B%86%E5%90%88/#a-b-a-ab","text":"set.difference(*others) \u8fd4\u56de\u548c\u591a\u4e2a\u96c6\u5408\u7684\u5dee\u96c6,\u751f\u6210\u96c6\u5408 -\u7b49\u540c\u4e8edifference difference_update(*others) \u83b7\u53d6\u548c\u591a\u4e2a\u96c6\u5408\u7684\u5dee\u96c6\u5e76\u5c31\u5730\u4fee\u6539 \u652f\u6301 -=","title":"\u5dee\u96c6  A-B     =    A - A&amp;B"},{"location":"Python/%E9%9B%86%E5%90%88/#ab-a-b-b-a","text":"set.symmetric_difference(other) \u8fd4\u56de\u4e00\u4e2a\u96c6\u5408\u4e0e\u53e6\u4e00\u4e2a\u96c6\u5408\u7684\u5dee\u96c6,\u751f\u6210\u65b0\u96c6\u5408 set.symmetric_difference_update(other) \u83b7\u53d6\u548c\u53e6\u4e00\u4e2a\u96c6\u5408\u7684\u5dee\u96c6\u5e76\u5c31\u5730\u4fee\u6539 \u652f\u6301^=","title":"\u5bf9\u79f0\u5dee\u96c6 A^B   =  (A - B) | (B -A)"},{"location":"Python/%E9%9B%86%E5%90%88/#_5","text":"<= \u5224\u65ad\u5b50\u96c6 < \u5224\u65ad\u771f\u5b50\u96c6 set.isdisjoint(other) \u5224\u65ad\u6709\u65e0\u4ea4\u96c6,\u6ca1\u6709\u4ea4\u96c6,\u8fd4\u56deTrue","title":"\u5b50\u96c6,\u771f\u5b50\u96c6,\u4ea4\u96c6"},{"location":"Python/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/","text":"\u9762\u5411\u5bf9\u8c61OOP \u601d\u60f3 \u9762\u5411\u5bf9\u8c61\u4e09\u8981\u7d20 1.\u5c01\u88c5 2.\u7ee7\u627f 3.\u591a\u6001 \u7ee7\u627f \u5c01\u88c5 \u65b9\u6cd5\u7ed1\u5b9a(bound method) \u591a\u6001 \u5b9e\u73b0: \u9e2d\u5b50\u7c7b\u578b \u5bf9\u8c61\u7684\u9500\u6bc1 \u65b9\u6cd5\u91cd\u8f7d(overload) \u53cd\u5c04 \u5355\u4f8b\u6a21\u5f0f \u9762\u5411\u5bf9\u8c61OOP \u00b6 \u9762\u5411\u5bf9\u8c61,oop(Object Oriented Programming) \u601d\u60f3 \u00b6 Python\u4e2d,\u4e00\u5207\u7686\u5bf9\u8c61 \u5bf9\u8c61\u662f\u5bf9\u6570\u636e\u548c\u64cd\u4f5c\u7684\u5c01\u88c5 \u5bf9\u8c61\u662f\u72ec\u7acb\u7684,\u4f46\u662f\u5bf9\u8c61\u4e4b\u95f4\u53ef\u4ee5\u76f8\u4e92\u4f7f\u7528 \u76ee\u524dOOP(Object Oriented Programming)\u662f\u6700\u63a5\u8fd1\u4eba\u7c7b\u8ba4\u77e5\u7684\u7f16\u7a0b\u8303\u5f0f. \u9762\u5411\u5bf9\u8c61\u4e09\u8981\u7d20 \u00b6 1.\u5c01\u88c5 \u00b6 \u7ec4\u88c5:\u5c06\u6570\u636e\u548c\u64cd\u4f5c\u7ec4\u88c5\u5230\u4e00\u8d77 \u9690\u85cf\u6570\u636e:\u5bf9\u5916\u53ea\u66b4\u9732\u4e00\u4e9b\u63a5\u53e3,\u901a\u8fc7\u63a5\u53e3\u8bbf\u95ee\u5bf9\u8c61. 2.\u7ee7\u627f \u00b6 \u591a\u91cd\u590d,\u7ee7\u627f\u6765\u7684\u5c31\u4e0d\u7528\u81ea\u5df1\u5199 \u591a\u7ee7\u627f\u5c11\u4fee\u6539,OCP(Open-closed Principle),\u4f7f\u7528\u7ee7\u627f\u6765\u6539\u53d8,\u6765\u4f53\u73b0\u4e2a\u6027 3.\u591a\u6001 \u00b6 \u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u6700\u7075\u6d3b\u7684\u5730\u65b9,\u52a8\u6001\u7ed1\u5b9a \u591a\u6001\u4e5f\u79f0\u591a\u6001\u6027 \u76ee\u7684:\u7edf\u4e00\u5b50\u7c7b\u7f16\u5199\u89c4\u8303,\u4e3a\u4e86\u8ba9\u4f7f\u7528\u8005\u66f4\u52a0\u65b9\u4fbf\u8c03\u7528\u529f\u80fd\u7684\u65b9\u6cd5. \u7ee7\u627f \u00b6 \u7ee7\u627f\u5373\u7c7b\u7684\u7ee7\u627f,\u901a\u8fc7\u5b50\u7c7b \u7ee7\u627f\u7236\u7c7b\u7684\u65b9\u5f0f\u6765\u83b7\u53d6\u7236\u7c7b\u7684\u5c5e\u6027\u53ca\u65b9\u6cd5. \u5c01\u88c5 \u00b6 \u9762\u5411\u5bf9\u8c61\u7684\u4e09\u8981\u7d20\u4e4b\u4e00,\u5c01\u88c5Encapsulation \u5c01\u88c5 \u5c06\u6570\u636e\u548c\u64cd\u4f5c\u7ec4\u7ec7\u5230\u7c7b\u4e2d,\u53ca\u5c5e\u6027\u548c\u65b9\u6cd5. \u5c06\u6570\u636e\u9690\u85cf\u8d77\u6765,\u7ed9\u4f7f\u7528\u8005\u63d0\u4f9b\u64cd\u4f5c.\u662f\u7528\u8005\u901a\u8fc7\u64cd\u4f5c\u5c31\u53ef\u4ee5\u83b7\u53d6\u6216\u8005\u4fee\u6539\u6570\u636e,getter ,setter \u901a\u8fc7\u8bbf\u95ee\u63a7\u5236,\u66b4\u9732\u9002\u5f53\u7684\u6570\u636e\u548c\u64cd\u4f5c\u7ed9\u7528\u6237. \u65b9\u6cd5\u7ed1\u5b9a(bound method) \u00b6 \u7c7b\u5185\u90e8\u7684\u65b9\u6cd5\u4e3b\u8981\u662f\u7ed9\u5bf9\u8c61\u7528\u7684 1.\u7c7b\u8c03\u7528\u7c7b\u5185\u90e8\u7684\u51fd\u6570,\u8be5\u51fd\u6570\u53ea\u662f\u4e00\u4e2a\u666e\u901a\u7684\u51fd\u6570. \u666e\u901a\u51fd\u6570\u9700\u8981\u63a5\u6536\u51e0\u4e2a\u53c2\u6570\u5c31\u8981\u4f20\u5165\u51e0\u4e2a\u53c2\u6570. 2.\u5bf9\u8c61\u8c03\u7528\u7c7b\u5185\u90e8\u65b9\u6cd5:\u79f0\u4e4b\u4e3a\u65b9\u6cd5\u7ed1\u5b9a \u4e0d\u540c\u7684\u5bf9\u8c61\u8c03\u7528\u7c7b\u5185\u90e8\u65b9\u6cd5,\u4f1a\u4ea7\u751f\u4e0d\u540c\u7684\u5bf9\u8c61\u7684\u65b9\u6cd5\u7ed1\u5b9a,\u5bf9\u8c61\u7684\u7ed1\u5b9a\u65b9\u6cd5,\u662f\u7531\u5bf9\u8c61\u6765\u8c03\u7528.\u4f46\u5176\u65b9\u6cd5\u529f\u80fd\u90fd\u662f\u4e00\u81f4\u7684. class Student : school = 'oldboy' def __init__ ( self , name , age , sex ): self . name = name self . age = age self . sex = sex , def learn ( self ): pass def eat ( self ): pass stu1 = Student ( 'james' , 15 , 'male' ) stu2 = Student ( 'james' , 15 , 'male' ) print ( stu1 . __dict__ ) print ( Student . learn ) print ( stu1 . learn ) print ( stu2 . learn ) >>> { 'name' : 'james' , 'age' : 15 , 'sex' : ( 'male' ,)} >>>< function Student . learn at 0x0000021246682598 > >>>< bound method Student . learn of < __main__ . Student object at 0x000002125D67C710 >> >>>< bound method Student . learn of < __main__ . Student object at 0x000002125D67C550 >> \u7c7b\u540d\u5fc5\u987b\u4f7f\u7528\u9a7c\u5cf0\u4f53\u6765\u547d\u540d \u5728\u5b9a\u4e49\u7c7b\u53d1\u751f\u7684\u4e8b\u60c5: \u751f\u6210\u4e00\u4e2a\u540d\u79f0\u7a7a\u95f4(\u7c7b\u7684\u5b57\u5178) \u628a\u7c7b\u4e2d\u6240\u6709\u540d\u5b57,\u653e\u5165\u7c7b\u7684\u5b57\u5178\u4e2d \u4f7f\u7528 __dict__ \u65b9\u6cd5\u67e5\u770b \u6ce8\u610f:\u7c7b\u5728\u5b9a\u4e49\u9636\u6bb5\u5c31\u5df2\u7ecf\u4ea7\u751f\u597d\u4e86\u540d\u79f0\u7a7a\u95f4,\u6267\u884cPython\u6587\u4ef6\u65f6\u4f1a\u6267\u884c\u7c7b\u5185\u90e8\u7684\u4ee3\u7801. \u8c03\u7528\u7c7b\u53d1\u751f\u7684\u4e8b\u60c5: \u9996\u5148\u4ea7\u751f\u4e00\u4e2a\u7a7a\u7684\u5bf9\u8c61,\u4ea7\u751f\u540d\u79f0\u7a7a\u95f4 \u81ea\u52a8\u89e6\u53d1 __init__ \u628a\u5bf9\u8c61\u672c\u8eab\u4ee5\u53ca\u62ec\u53f7\u5185\u7684\u53c2\u6570\u4e00\u5e76\u4f20\u7ed9 __init__ \u51fd\u6570 \u5bf9\u8c61\u4e0e\u7c7b\u7684\u67e5\u627e\u987a\u5e8f: \u5bf9\u8c61 . \u5c5e\u6027,\u82e5\u5bf9\u8c61\u672c\u8eab\u6709,\u5219\u4f18\u5148\u67e5\u627e\u5bf9\u8c61\u81ea\u5df1\u7684 \u82e5\u5bf9\u8c61\u672c\u8eab\u6ca1\u6709,\u5219\u53d6\u7c7b\u91cc\u9762\u627e \u82e5\u7c7b\u6ca1\u6709,\u62a5\u9519 \u591a\u6001 \u00b6 \u5b9e\u73b0: \u00b6 \u7ee7\u627f \u62bd\u8c61\u7c7b(abc\u6a21\u5757)abc\u6a21\u5757\u5f3a\u5236\u5b50\u7c7b\u6309\u7167\u7236\u7c7b\u5185\u5c5e\u6027\u5b9a\u4e49,\u4e5f\u53ef\u6d3e\u751f\u65b0\u7684\u5c5e\u6027\u548c\u65b9\u6cd5 \u9e2d\u5b50\u7c7b\u578b \u00b6 \u4f7f\u7528\u4ee3\u7801\u5916\u90e8\u89c4\u8303\u6765\u5b9a\u4e49\u4ee3\u7801\u5f62\u5f0f -\u7ee7\u627f:\u8026\u5408\u6027\u592a\u9ad8,\u7a0b\u5e8f\u7684\u53ef\u6269\u5c55\u6027\u5dee -\u9e2d\u5b50\u7c7b\u578b:\u8026\u5408\u5ea6\u4f4e,\u7a0b\u5e8f\u7684\u53ef\u6269\u5c55\u6027\u5f3a \u5bf9\u8c61\u7684\u9500\u6bc1 \u00b6 \u7c7b\u4e2d\u53ef\u4ee5\u5b9a\u4e49 __del__ \u65b9\u6cd5,\u79f0\u4e3a\u6790\u6784\u51fd\u6570(\u65b9\u6cd5). \u4f5c\u7528:\u9500\u6bc1\u7c7b\u7684\u5b9e\u4f8b\u7684\u8c03\u7528,\u4ee5\u91ca\u653e\u4e13\u7528\u5185\u5b58 \u65b9\u6cd5\u91cd\u8f7d(overload) \u00b6 \u91cd\u8f7d\u5c31\u662f\u540c\u4e00\u4e2a\u65b9\u6cd5\u540d,\u4f46\u662f\u53c2\u6570\u6570\u91cf.\u7c7b\u578b\u4e0d\u4e00\u6837,\u5c31\u662f\u540c\u4e00\u4e2a\u65b9\u6cd5\u7684\u91cd\u8f7d. Python\u6ca1\u6709\u91cd\u8f7d,\u56e0\u4e3aPython\u652f\u6301\u53ef\u53d8\u5f62\u53c2,\u53c2\u6570\u7684\u6570\u636e\u7c7b\u578b\u4e5f\u65e0\u6cd5\u56fa\u5b9a,\u6240\u4ee5\u6ca1\u5fc5\u8981. \u53cd\u5c04 \u00b6 \u53cd\u5c04\u672c\u8d28\u65f6\u901a\u8fc7\u5b57\u7b26\u4e32\u6765\u5224\u65ad\u6216\u64cd\u4f5c\u7c7b\u6216\u8005\u5b9e\u4f8b\u7684\u5c5e\u6027 hasattr(obj,str) \u5224\u65ad\u5b57\u7b26\u4e32\u662f\u5426\u662f\u5426\u4e3a\u7c7b\u6216\u5b9e\u4f8b\u7684\u5c5e\u6027 getattr(obj,str,default) \u5728\u7c7b\u6216\u5b9e\u4f8b\u4e2d\u53d6'\u5b57\u7b26\u4e32'\u5c5e\u6027,\u6709\u5219\u8fd4\u56de\u5bf9\u5e94\u503c,\u65e0\u5219\u8fd4\u56de\u7f3a\u7701\u503c,\u82e5\u6ca1\u8bbe\u5b9a\u7f3a\u7701\u503c,\u629b\u9519 setattr(obj,str,value) \u8bbe\u7f6e\u7c7b\u6216\u5b9e\u4f8b\u4e2d\u7684'\u5b57\u7b26\u4e32'\u5c5e\u6027,\u6709\u5219\u66f4\u6539,\u65e0\u5219\u6dfb\u52a0 delattr(obj,name) \u5220\u9664\u7c7b\u6216\u5b9e\u4f8b\u4e2d\u7684'\u5b57\u7b26\u4e32''\u5c5e\u6027,\u6709\u5219\u5220\u9664,\u65e0\u5219\u62a5\u9519 class People : school = 'DHU' def __init__ ( self , name , age ): self . name = name self . age = age ag = People ( 'agsol' , 18 ) print ( hasattr ( ag , 'name' )) setattr ( People , 'major' , 'computer' ) print ( hasattr ( People , 'major' )) print ( getattr ( People , 'school' )) delattr ( People , 'school' ) print ( hasattr ( People , 'school' )) >>> True >>> True >>> DHU >>> False >>> True \u5355\u4f8b\u6a21\u5f0f \u00b6 \u4e3a\u4e86\u8282\u7701\u5185\u5b58\u7a7a\u95f4,\u9632\u6b62\u6bcf\u6b21(\u6bcf\u6b21\u5b9e\u4f8b\u5316\u7684\u76ee\u7684\u4ee5\u4ea7\u751f\u76f8\u540c\u529f\u80fd\u7684\u5bf9\u8c61)\u5bf9\u7c7b\u8fdb\u884c\u5b9e\u4f8b\u5316\u90fd\u4f1a\u4ea7\u751f\u4e00\u4e2a\u65b0\u7684\u5185\u5b58\u7a7a\u95f4 \u76f8\u5f53\u4e8e\u5728\u7c7b\u7684\u5185\u90e8\u52a0\u4e00\u4e2a\u4e2d\u95f4\u53d8\u91cf\u63a5\u6536\u8fd9\u4e2a\u5b9e\u4f8b\u5316\u5bf9\u8c61,\u6bcf\u6b21\u90fd\u76f4\u63a5\u4f7f\u7528\u5b9e\u4f8b\u5316\u5bf9\u8c61\u6765\u8c03\u7528\u65b9\u6cd5. #__new__\u6765\u5b9e\u73b0\u5355\u4f8b class Singleton1 ( object ): def __new__ ( cls , * args , ** kwargs ): if not hasattr ( cls , '_instance' ): obj = super ( Singleton1 , cls ) cls . _instance = obj . __new__ ( cls , * args , ** kwargs ) return cls . _instance class MyClass1 ( Singleton1 ): def __init__ ( self ): self . a = 1 #,\u7c7b\u7684\u7ed1\u5b9a\u65b9\u6cd5 class Singleton3 : _instance = None @classmethod def singleton ( cls , * args , ** kwargs ): if not cls . _instance : obj = cls ( * args , ** kwargs ) cls . _instance = obj return cls . _instance #\u5171\u4eab\u5c5e\u6027 class Singleton2 ( object ): _state = {} def __new__ ( cls , * args , ** kwargs ): obj = super ( Singleton2 , cls ) . __new__ ( cls , * args , ** kwargs ) obj . __dict__ = cls . _state return obj class MyClass2 ( Singleton2 ): def __init__ ( self ): self . a = 1 #\u88c5\u9970\u5668 def singleton ( cls , * args , ** kwargs ): instance = {} def getinstance (): if cls not in instance : instance [ cls ] = cls ( * args , ** kwargs ) return instance [ cls ] return getinstance @singleton class MyClass ( object ): def __init__ ( self ): self . a = 1","title":"\u9762\u5411\u5bf9\u8c61"},{"location":"Python/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#oop","text":"\u9762\u5411\u5bf9\u8c61,oop(Object Oriented Programming)","title":"\u9762\u5411\u5bf9\u8c61OOP"},{"location":"Python/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#_1","text":"Python\u4e2d,\u4e00\u5207\u7686\u5bf9\u8c61 \u5bf9\u8c61\u662f\u5bf9\u6570\u636e\u548c\u64cd\u4f5c\u7684\u5c01\u88c5 \u5bf9\u8c61\u662f\u72ec\u7acb\u7684,\u4f46\u662f\u5bf9\u8c61\u4e4b\u95f4\u53ef\u4ee5\u76f8\u4e92\u4f7f\u7528 \u76ee\u524dOOP(Object Oriented Programming)\u662f\u6700\u63a5\u8fd1\u4eba\u7c7b\u8ba4\u77e5\u7684\u7f16\u7a0b\u8303\u5f0f.","title":"\u601d\u60f3"},{"location":"Python/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#_2","text":"","title":"\u9762\u5411\u5bf9\u8c61\u4e09\u8981\u7d20"},{"location":"Python/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#1","text":"\u7ec4\u88c5:\u5c06\u6570\u636e\u548c\u64cd\u4f5c\u7ec4\u88c5\u5230\u4e00\u8d77 \u9690\u85cf\u6570\u636e:\u5bf9\u5916\u53ea\u66b4\u9732\u4e00\u4e9b\u63a5\u53e3,\u901a\u8fc7\u63a5\u53e3\u8bbf\u95ee\u5bf9\u8c61.","title":"1.\u5c01\u88c5"},{"location":"Python/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#2","text":"\u591a\u91cd\u590d,\u7ee7\u627f\u6765\u7684\u5c31\u4e0d\u7528\u81ea\u5df1\u5199 \u591a\u7ee7\u627f\u5c11\u4fee\u6539,OCP(Open-closed Principle),\u4f7f\u7528\u7ee7\u627f\u6765\u6539\u53d8,\u6765\u4f53\u73b0\u4e2a\u6027","title":"2.\u7ee7\u627f"},{"location":"Python/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#3","text":"\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u6700\u7075\u6d3b\u7684\u5730\u65b9,\u52a8\u6001\u7ed1\u5b9a \u591a\u6001\u4e5f\u79f0\u591a\u6001\u6027 \u76ee\u7684:\u7edf\u4e00\u5b50\u7c7b\u7f16\u5199\u89c4\u8303,\u4e3a\u4e86\u8ba9\u4f7f\u7528\u8005\u66f4\u52a0\u65b9\u4fbf\u8c03\u7528\u529f\u80fd\u7684\u65b9\u6cd5.","title":"3.\u591a\u6001"},{"location":"Python/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#_3","text":"\u7ee7\u627f\u5373\u7c7b\u7684\u7ee7\u627f,\u901a\u8fc7\u5b50\u7c7b \u7ee7\u627f\u7236\u7c7b\u7684\u65b9\u5f0f\u6765\u83b7\u53d6\u7236\u7c7b\u7684\u5c5e\u6027\u53ca\u65b9\u6cd5.","title":"\u7ee7\u627f"},{"location":"Python/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#_4","text":"\u9762\u5411\u5bf9\u8c61\u7684\u4e09\u8981\u7d20\u4e4b\u4e00,\u5c01\u88c5Encapsulation \u5c01\u88c5 \u5c06\u6570\u636e\u548c\u64cd\u4f5c\u7ec4\u7ec7\u5230\u7c7b\u4e2d,\u53ca\u5c5e\u6027\u548c\u65b9\u6cd5. \u5c06\u6570\u636e\u9690\u85cf\u8d77\u6765,\u7ed9\u4f7f\u7528\u8005\u63d0\u4f9b\u64cd\u4f5c.\u662f\u7528\u8005\u901a\u8fc7\u64cd\u4f5c\u5c31\u53ef\u4ee5\u83b7\u53d6\u6216\u8005\u4fee\u6539\u6570\u636e,getter ,setter \u901a\u8fc7\u8bbf\u95ee\u63a7\u5236,\u66b4\u9732\u9002\u5f53\u7684\u6570\u636e\u548c\u64cd\u4f5c\u7ed9\u7528\u6237.","title":"\u5c01\u88c5"},{"location":"Python/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#bound-method","text":"\u7c7b\u5185\u90e8\u7684\u65b9\u6cd5\u4e3b\u8981\u662f\u7ed9\u5bf9\u8c61\u7528\u7684 1.\u7c7b\u8c03\u7528\u7c7b\u5185\u90e8\u7684\u51fd\u6570,\u8be5\u51fd\u6570\u53ea\u662f\u4e00\u4e2a\u666e\u901a\u7684\u51fd\u6570. \u666e\u901a\u51fd\u6570\u9700\u8981\u63a5\u6536\u51e0\u4e2a\u53c2\u6570\u5c31\u8981\u4f20\u5165\u51e0\u4e2a\u53c2\u6570. 2.\u5bf9\u8c61\u8c03\u7528\u7c7b\u5185\u90e8\u65b9\u6cd5:\u79f0\u4e4b\u4e3a\u65b9\u6cd5\u7ed1\u5b9a \u4e0d\u540c\u7684\u5bf9\u8c61\u8c03\u7528\u7c7b\u5185\u90e8\u65b9\u6cd5,\u4f1a\u4ea7\u751f\u4e0d\u540c\u7684\u5bf9\u8c61\u7684\u65b9\u6cd5\u7ed1\u5b9a,\u5bf9\u8c61\u7684\u7ed1\u5b9a\u65b9\u6cd5,\u662f\u7531\u5bf9\u8c61\u6765\u8c03\u7528.\u4f46\u5176\u65b9\u6cd5\u529f\u80fd\u90fd\u662f\u4e00\u81f4\u7684. class Student : school = 'oldboy' def __init__ ( self , name , age , sex ): self . name = name self . age = age self . sex = sex , def learn ( self ): pass def eat ( self ): pass stu1 = Student ( 'james' , 15 , 'male' ) stu2 = Student ( 'james' , 15 , 'male' ) print ( stu1 . __dict__ ) print ( Student . learn ) print ( stu1 . learn ) print ( stu2 . learn ) >>> { 'name' : 'james' , 'age' : 15 , 'sex' : ( 'male' ,)} >>>< function Student . learn at 0x0000021246682598 > >>>< bound method Student . learn of < __main__ . Student object at 0x000002125D67C710 >> >>>< bound method Student . learn of < __main__ . Student object at 0x000002125D67C550 >> \u7c7b\u540d\u5fc5\u987b\u4f7f\u7528\u9a7c\u5cf0\u4f53\u6765\u547d\u540d \u5728\u5b9a\u4e49\u7c7b\u53d1\u751f\u7684\u4e8b\u60c5: \u751f\u6210\u4e00\u4e2a\u540d\u79f0\u7a7a\u95f4(\u7c7b\u7684\u5b57\u5178) \u628a\u7c7b\u4e2d\u6240\u6709\u540d\u5b57,\u653e\u5165\u7c7b\u7684\u5b57\u5178\u4e2d \u4f7f\u7528 __dict__ \u65b9\u6cd5\u67e5\u770b \u6ce8\u610f:\u7c7b\u5728\u5b9a\u4e49\u9636\u6bb5\u5c31\u5df2\u7ecf\u4ea7\u751f\u597d\u4e86\u540d\u79f0\u7a7a\u95f4,\u6267\u884cPython\u6587\u4ef6\u65f6\u4f1a\u6267\u884c\u7c7b\u5185\u90e8\u7684\u4ee3\u7801. \u8c03\u7528\u7c7b\u53d1\u751f\u7684\u4e8b\u60c5: \u9996\u5148\u4ea7\u751f\u4e00\u4e2a\u7a7a\u7684\u5bf9\u8c61,\u4ea7\u751f\u540d\u79f0\u7a7a\u95f4 \u81ea\u52a8\u89e6\u53d1 __init__ \u628a\u5bf9\u8c61\u672c\u8eab\u4ee5\u53ca\u62ec\u53f7\u5185\u7684\u53c2\u6570\u4e00\u5e76\u4f20\u7ed9 __init__ \u51fd\u6570 \u5bf9\u8c61\u4e0e\u7c7b\u7684\u67e5\u627e\u987a\u5e8f: \u5bf9\u8c61 . \u5c5e\u6027,\u82e5\u5bf9\u8c61\u672c\u8eab\u6709,\u5219\u4f18\u5148\u67e5\u627e\u5bf9\u8c61\u81ea\u5df1\u7684 \u82e5\u5bf9\u8c61\u672c\u8eab\u6ca1\u6709,\u5219\u53d6\u7c7b\u91cc\u9762\u627e \u82e5\u7c7b\u6ca1\u6709,\u62a5\u9519","title":"\u65b9\u6cd5\u7ed1\u5b9a(bound method)"},{"location":"Python/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#_5","text":"","title":"\u591a\u6001"},{"location":"Python/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#_6","text":"\u7ee7\u627f \u62bd\u8c61\u7c7b(abc\u6a21\u5757)abc\u6a21\u5757\u5f3a\u5236\u5b50\u7c7b\u6309\u7167\u7236\u7c7b\u5185\u5c5e\u6027\u5b9a\u4e49,\u4e5f\u53ef\u6d3e\u751f\u65b0\u7684\u5c5e\u6027\u548c\u65b9\u6cd5","title":"\u5b9e\u73b0:"},{"location":"Python/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#_7","text":"\u4f7f\u7528\u4ee3\u7801\u5916\u90e8\u89c4\u8303\u6765\u5b9a\u4e49\u4ee3\u7801\u5f62\u5f0f -\u7ee7\u627f:\u8026\u5408\u6027\u592a\u9ad8,\u7a0b\u5e8f\u7684\u53ef\u6269\u5c55\u6027\u5dee -\u9e2d\u5b50\u7c7b\u578b:\u8026\u5408\u5ea6\u4f4e,\u7a0b\u5e8f\u7684\u53ef\u6269\u5c55\u6027\u5f3a","title":"\u9e2d\u5b50\u7c7b\u578b"},{"location":"Python/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#_8","text":"\u7c7b\u4e2d\u53ef\u4ee5\u5b9a\u4e49 __del__ \u65b9\u6cd5,\u79f0\u4e3a\u6790\u6784\u51fd\u6570(\u65b9\u6cd5). \u4f5c\u7528:\u9500\u6bc1\u7c7b\u7684\u5b9e\u4f8b\u7684\u8c03\u7528,\u4ee5\u91ca\u653e\u4e13\u7528\u5185\u5b58","title":"\u5bf9\u8c61\u7684\u9500\u6bc1"},{"location":"Python/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#overload","text":"\u91cd\u8f7d\u5c31\u662f\u540c\u4e00\u4e2a\u65b9\u6cd5\u540d,\u4f46\u662f\u53c2\u6570\u6570\u91cf.\u7c7b\u578b\u4e0d\u4e00\u6837,\u5c31\u662f\u540c\u4e00\u4e2a\u65b9\u6cd5\u7684\u91cd\u8f7d. Python\u6ca1\u6709\u91cd\u8f7d,\u56e0\u4e3aPython\u652f\u6301\u53ef\u53d8\u5f62\u53c2,\u53c2\u6570\u7684\u6570\u636e\u7c7b\u578b\u4e5f\u65e0\u6cd5\u56fa\u5b9a,\u6240\u4ee5\u6ca1\u5fc5\u8981.","title":"\u65b9\u6cd5\u91cd\u8f7d(overload)"},{"location":"Python/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#_9","text":"\u53cd\u5c04\u672c\u8d28\u65f6\u901a\u8fc7\u5b57\u7b26\u4e32\u6765\u5224\u65ad\u6216\u64cd\u4f5c\u7c7b\u6216\u8005\u5b9e\u4f8b\u7684\u5c5e\u6027 hasattr(obj,str) \u5224\u65ad\u5b57\u7b26\u4e32\u662f\u5426\u662f\u5426\u4e3a\u7c7b\u6216\u5b9e\u4f8b\u7684\u5c5e\u6027 getattr(obj,str,default) \u5728\u7c7b\u6216\u5b9e\u4f8b\u4e2d\u53d6'\u5b57\u7b26\u4e32'\u5c5e\u6027,\u6709\u5219\u8fd4\u56de\u5bf9\u5e94\u503c,\u65e0\u5219\u8fd4\u56de\u7f3a\u7701\u503c,\u82e5\u6ca1\u8bbe\u5b9a\u7f3a\u7701\u503c,\u629b\u9519 setattr(obj,str,value) \u8bbe\u7f6e\u7c7b\u6216\u5b9e\u4f8b\u4e2d\u7684'\u5b57\u7b26\u4e32'\u5c5e\u6027,\u6709\u5219\u66f4\u6539,\u65e0\u5219\u6dfb\u52a0 delattr(obj,name) \u5220\u9664\u7c7b\u6216\u5b9e\u4f8b\u4e2d\u7684'\u5b57\u7b26\u4e32''\u5c5e\u6027,\u6709\u5219\u5220\u9664,\u65e0\u5219\u62a5\u9519 class People : school = 'DHU' def __init__ ( self , name , age ): self . name = name self . age = age ag = People ( 'agsol' , 18 ) print ( hasattr ( ag , 'name' )) setattr ( People , 'major' , 'computer' ) print ( hasattr ( People , 'major' )) print ( getattr ( People , 'school' )) delattr ( People , 'school' ) print ( hasattr ( People , 'school' )) >>> True >>> True >>> DHU >>> False >>> True","title":"\u53cd\u5c04"},{"location":"Python/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#_10","text":"\u4e3a\u4e86\u8282\u7701\u5185\u5b58\u7a7a\u95f4,\u9632\u6b62\u6bcf\u6b21(\u6bcf\u6b21\u5b9e\u4f8b\u5316\u7684\u76ee\u7684\u4ee5\u4ea7\u751f\u76f8\u540c\u529f\u80fd\u7684\u5bf9\u8c61)\u5bf9\u7c7b\u8fdb\u884c\u5b9e\u4f8b\u5316\u90fd\u4f1a\u4ea7\u751f\u4e00\u4e2a\u65b0\u7684\u5185\u5b58\u7a7a\u95f4 \u76f8\u5f53\u4e8e\u5728\u7c7b\u7684\u5185\u90e8\u52a0\u4e00\u4e2a\u4e2d\u95f4\u53d8\u91cf\u63a5\u6536\u8fd9\u4e2a\u5b9e\u4f8b\u5316\u5bf9\u8c61,\u6bcf\u6b21\u90fd\u76f4\u63a5\u4f7f\u7528\u5b9e\u4f8b\u5316\u5bf9\u8c61\u6765\u8c03\u7528\u65b9\u6cd5. #__new__\u6765\u5b9e\u73b0\u5355\u4f8b class Singleton1 ( object ): def __new__ ( cls , * args , ** kwargs ): if not hasattr ( cls , '_instance' ): obj = super ( Singleton1 , cls ) cls . _instance = obj . __new__ ( cls , * args , ** kwargs ) return cls . _instance class MyClass1 ( Singleton1 ): def __init__ ( self ): self . a = 1 #,\u7c7b\u7684\u7ed1\u5b9a\u65b9\u6cd5 class Singleton3 : _instance = None @classmethod def singleton ( cls , * args , ** kwargs ): if not cls . _instance : obj = cls ( * args , ** kwargs ) cls . _instance = obj return cls . _instance #\u5171\u4eab\u5c5e\u6027 class Singleton2 ( object ): _state = {} def __new__ ( cls , * args , ** kwargs ): obj = super ( Singleton2 , cls ) . __new__ ( cls , * args , ** kwargs ) obj . __dict__ = cls . _state return obj class MyClass2 ( Singleton2 ): def __init__ ( self ): self . a = 1 #\u88c5\u9970\u5668 def singleton ( cls , * args , ** kwargs ): instance = {} def getinstance (): if cls not in instance : instance [ cls ] = cls ( * args , ** kwargs ) return instance [ cls ] return getinstance @singleton class MyClass ( object ): def __init__ ( self ): self . a = 1","title":"\u5355\u4f8b\u6a21\u5f0f"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%91/","text":"\u6811 \u00b6 \u5b9a\u4e49 \u00b6 \u666e\u901a\u5b9a\u4e49 \u00b6 \u7531\u6709\u9650\u4e2a\u7ed3\u70b9\u7ec4\u6210\u7684\u5177\u6709\u5c42\u7ea7\u5173\u7cfb\u7684\u96c6\u5408. \u6bcf\u4e2a\u8282\u70b9\u5177\u6709\u96f6\u4e2a\u6216\u591a\u4e2a\u5b50\u8282\u70b9. \u975e\u7ebf\u6027\u7ed3\u6784,\u6bcf\u4e2a\u5143\u7d20\u6709\u591a\u4e2a\u524d\u9a71\u548c\u540e\u7ee7.(\u5e7f\u4e49\u5b9a\u4e49) \u6811\u662fn\u4e2a\u5143\u7d20\u7684\u96c6\u5408 n = 0 \u65f6,\u79f0\u4e3a\u7a7a\u6811 \u6811\u4e2d\u53ea\u6709\u4e00\u4e2a\u6ca1\u6709\u524d\u9a71\u7684\u8282\u70b9,\u79f0\u4e3a\u6811\u7684\u6839Root \u6811\u4e2d\u9664\u4e86\u6839\u8282\u70b9\u5916,\u5176\u4f59\u5143\u7d20\u53ea\u80fd\u6709\u4e00\u4e2a\u524d\u9a71,\u53ef\u4ee5\u6709\u591a\u4e2a \u62160\u4e2a\u540e\u7ee7.(\u4e25\u683c\u5b9a\u4e49) \u9012\u5f52\u5b9a\u4e49 \u00b6 \u6811\uff08Tree\uff09\u662fn\uff08n>=0\uff09\u4e2a\u7ed3\u70b9\u7684\u6709\u9650\u96c6\u3002n=0\u65f6\u79f0\u4e3a\u7a7a\u6811 \u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u7279\u5b9a\u7684\u79f0\u4e3a\u6839\uff08root\uff09\u7684\u7ed3\u70b9\uff1b \u5f53n>1\u65f6\uff0c\u5176\u4f59\u7ed3\u70b9\u53ef\u5206\u4e3am(m>0)\u4e2a\u4e92\u8865\u4ea4\u4e92\u7684\u6709\u9650\u96c6T1\u3001T2...Tm\uff0c\u5176\u4e2d\u6bcf\u4e00\u4e2a\u96c6\u5408\u672c\u8eab\u53c8\u662f\u4e00\u68f5\u6811\uff0c\u5e76\u79f0\u4e3a\u6839\u7684\u5b50\u6811(SubTree)\u3002 \u6982\u5ff5 \u00b6 \u7ed3\u70b9 \u00b6 \u6811\u4e2d\u7684\u5143\u7d20 \u7ed3\u70b9\u7684\u5ea6degree \u00b6 \u7ed3\u70b9\u62e5\u6709\u7684\u5b50\u6811\u7684\u6570\u76ee\u79f0\u4e3a\u5ea6.\u8bb0\u4f5cd(v) \u53f6\u5b50\u7ed3\u70b9 \u00b6 \u5ea6\u4e3a0\u7684\u7ed3\u70b9,\u79f0\u4e3a\u53f6\u5b50\u7ed3\u70b9leaf,\u7ec8\u7aef\u7ed3\u70b9(terminal node),\u672b\u7aef\u7ed3\u70b9 \u5206\u652f\u7ed3\u70b9(branch node) \u00b6 \u5ea6\u4e0d\u4e3a0\u7684\u7ed3\u70b9,\u79f0\u4e3a\u975e\u7ec8\u7aef\u7ed3\u70b9\u6216\u5206\u652f\u7ed3\u70b9 \u5206\u652f \u00b6 \u7ed3\u70b9\u4e4b\u95f4\u7684\u5173\u7cfb \u5185\u90e8\u7ed3\u70b9 \u00b6 \u9664\u6839\u8282\u70b9\u610f\u5916\u7684\u5206\u652f\u7ed3\u70b9,\u4e5f\u4e0d\u5305\u62ec\u53f6\u5b50\u7ed3\u70b9 \u6811\u7684\u5ea6 \u00b6 \u6811\u7684\u5ea6\u662f\u6811\u5185\u5404\u7ed3\u70b9\u7684\u5ea6\u7684\u6700\u5927\u503c. \u6811\u7684\u5c42level \u00b6 \u89c4\u5b9a\u6839\u4e3a\u7b2c\u4e00\u5c42,\u5b83\u7684\u5b69\u5b50\u4e3a\u7b2c\u4e8c\u5c42,\u4f9d\u6b21\u7c7b\u63a8,\u8bb0\u4f5cL(v),\u5b50\u8282\u70b9\u6bd4\u7236\u7ed3\u70b9\u7684\u5c42\u591a1 \u6811\u7684\u6df1\u5ea6depth \u00b6 \u6811\u7684\u6df1\u5ea6\uff08Depth\uff09\u6216\u9ad8\u5ea6\u662f\u6811\u4e2d\u7ed3\u70b9\u7684\u6700\u5927\u5c42\u6b21\u3002 \u8def\u5f84 \u00b6 \u5bf9\u4e8e\u4e00\u68f5\u5b50\u6811\u4e2d\u7684\u4efb\u610f\u4e24\u4e2a\u4e0d\u540c\u7684\u7ed3\u70b9\uff0c\u5982\u679c\u4ece\u4e00\u4e2a\u7ed3\u70b9\u51fa\u53d1\uff0c\u6309\u5c42\u6b21\u81ea\u4e0a\u800c\u4e0b\u6cbf\u7740\u4e00\u4e2a\u4e2a\u6811\u679d\u80fd\u5230\u8fbe\u53e6\u4e00\u7ed3\u70b9\uff0c\u79f0\u5b83\u4eec\u4e4b\u95f4\u5b58\u5728\u7740\u4e00\u6761\u8def\u5f84\u3002\u6ce8\u610f:\u53ea\u80fd\u4e0a\u4e0b\u627e,\u4e0d\u53ef\u4ee5\u627e\u5230\u5144\u5f1f\u7ed3\u70b9\u53bb.\u5373,\u753b\u51fa\u6765\u7684\u7ebf\u4e0d\u53ef\u4ee5\u5f80\u56de\u62d0. \u53ef\u7528\u8def\u5f84\u6240\u7ecf\u8fc7\u7684\u7ed3\u70b9\u5e8f\u5217\u8868\u793a\u8def\u5f84, \u8def\u5f84\u957f\u5ea6 \u00b6 \u8def\u5f84\u7684\u957f\u5ea6\u7b49\u4e8e\u8def\u5f84\u4e0a\u7684\u7ed3\u70b9\u4e2a\u6570\u51cf1. \u68ee\u6797 \u00b6 m(m>=0) \u8bfe\u4e0d\u76f8\u4ea4\u7684\u6811\u7684\u96c6\u5408. \u7ed3\u70b9\u95f4\u7684\u5173\u7cfb \u00b6 \u5b69\u5b50\u7ed3\u70b9 \u00b6 \u4e5f\u53eb\u513f\u5b50(child)\u7ed3\u70b9:\u7ed3\u70b9\u7684\u5b50\u6811\u7684\u6839\u7ed3\u70b9\u5c31\u662f\u8be5\u7ed3\u70b9\u7684\u5b69\u5b50\u7ed3\u70b9 \u53cc\u4eb2\u7ed3\u70b9 \u00b6 \u4e5f\u53eb\u7236(parent)\u7ed3\u70b9:\u4e00\u4e2a\u7ed3\u70b9\u662f\u5b83\u5404\u4e2a\u6811\u7684\u6839\u8282\u70b9\u7684\u53cc\u4eb2\u7ed3\u70b9 \u5144\u5f1f\u7ed3\u70b9 \u00b6 sibling\u7ed3\u70b9:\u5177\u6709\u76f8\u540c\u53cc\u4eb2\u7ed3\u70b9\u7684\u7ed3\u70b9 \u7956\u5148\u7ed3\u70b9 \u00b6 \u4ece\u6839\u7ed3\u70b9\u5230\u8be5\u7ed3\u70b9\u6240\u7ecf\u5386\u7684\u5206\u652f\u4e0a\u7684\u6240\u6709\u7ed3\u70b9.\u5373\u5176\u7236,\u7237\u7237,\u592a\u7237\u7237,\u8001\u7956\u7ed3\u70b9 \u5b50\u5b59\u7ed3\u70b9 \u00b6 \u7ed3\u70b9\u7684\u6240\u6709\u6811\u4e0a\u7684\u7ed3\u70b9\u90fd\u6210\u4e3a\u8be5\u7ed3\u70b9\u7684\u5b50\u5b59\u554a\u7ed3\u70b9.\u5373\u513f\u5b50,\u5b59\u5b50,\u91cd\u5b59\u5b50 \u6811\u7684\u5206\u7c7b \u00b6 \u6709\u5e8f\u6811 \u00b6 \u7ed3\u70b9\u7684\u5b50\u6811\u662f\u6709\u987a\u5e8f\u7684,(\u5144\u5f1f\u7684\u5927\u5c0f,\u5148\u540e\u6709\u6b21\u5e8f),\u4e0d\u80fd\u4ea4\u6362 \u65e0\u5e8f\u6811 \u00b6 \u7ed3\u70b9\u7684\u5b50\u6811\u662f\u65e0\u5e8f\u7684,\u53ef\u4ea4\u6362\u7684 \u6811\u7684\u7279\u70b9 \u00b6 \u5fc5\u987b\u6709\u552f\u4e00\u7684\u6839 \u5b50\u6811\u4e0d\u76f8\u4ea4 \u9664\u4e86\u6839\u4ee5\u5916,\u6bcf\u4e2a\u5143\u7d20\u53ea\u80fd\u6709\u4e00\u4e2a\u524d\u9a71,\u53ef\u4ee5\u67090\u6216\u591a\u4e2a\u540e\u7ee7 \u6839\u8282\u70b9\u6ca1\u6709\u7236\u8282\u70b9(\u524d\u9a71),\u53f6\u5b50\u7ed3\u70b9\u6ca1\u6709\u5b50\u8282\u70b9(\u540e\u7ee7) vi\u662fvj\u7684\u7236\u7ed3\u70b9,\u5219L(vi) = L(vj) -1,\u4e5f\u5c31\u662f\u8bf4\u7236\u7ed3\u70b9\u6bd4\u5b50\u7ed3\u70b9\u5c42\u6b21\u5c0f1 \u6811\u7684\u5b58\u50a8 \u00b6 \u94fe\u8868\u5b58\u50a8 \u4e8c\u53c9\u6811 \u00b6 \u5b9a\u4e49 \u00b6 \u6bcf\u4e2a\u7ed3\u70b9\u5bf9\u591a\u6709\u4e24\u8bfe\u5b50\u6811\u7684\u6811. \u5373\u4e8c\u53c9\u6811\u4e0d\u5b58\u5728\u5ea6\u6570\u5927\u4e8e2\u7684\u7ed3\u70b9. \u7279\u6027 \u00b6 \u4e8c\u53c9\u6811\u662f\u6709\u5e8f\u6811,\u5176\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\u662f\u987a\u5e8f\u7684,\u4e0d\u80fd\u4ea4\u6362\u987a\u5e8f \u5373\u4f7f\u67d0\u4e2a\u7ed3\u70b9\u53ea\u6709\u4e00\u68f5\u5b50\u6811,\u4e5f\u8981\u786e\u5b9a\u5176\u662f\u5de6\u5b50\u6811\u8fd8\u662f\u53f3\u5b50\u6811 \u6027\u8d28 \u00b6 \u5728\u4e8c\u53c9\u6811\u7684\u7b2ci\u5c42\u4e0a\u6700\u591a\u67092^(i-1) \u4e2a\u7ed3\u70b9. \u6df1\u5ea6\u4e3ak\u7684\u4e8c\u53c9\u6811,\u6700\u591a\u67092^k-1\u4e2a\u7ed3\u70b9 \u5bf9\u4e8e\u4efb\u610f\u4e8c\u53c9\u6811T,\u5982\u679c\u5176\u7ec8\u7aef\u7ed3\u70b9\u6570\u4f4dn0,\u5ea6\u6570\u4f4d2\u7684\u7ed3\u70b9\u6570\u4e3an2,\u5219n0=n2+1 \u6362\u53e5\u8bdd\u8bf4,\u53f6\u5b50\u8282\u70b9\u6570-1 = \u5ea6\u6570\u4e3a2\u7684\u7ed3\u70b9\u6570 \u8bc1\u660e : \u603b\u7ed3\u70b9\u6570 : n = n0 + n1 + n2 // n0\u4e3a\u5ea6\u6570\u4e3a0 ( \u53f6\u5b50\u7ed3\u70b9 ) \u7684\u603b\u7ed3\u70b9\u6570 , n1\u4e3a\u5ea6\u6570\u4e3a1\u7684\u603b\u7ed3\u70b9\u6570 , \u603b\u5206\u652f\u6570 : n0 * 0 + n1 * 1 + n2 * 2 \u603b\u5206\u652f\u6570\u8fd8\u7b49\u4e8e : n - 1 // \u56e0\u4e3a\u9664\u4e86\u6839\u7ed3\u70b9 , \u6bcf\u4e2a\u7ed3\u70b9\u90fd\u6709\u4e00\u4e2a\u7236\u7ed3\u70b9 \u5219 : 2 * n2 + n1 = n0 + n1 + n2 - 1 \u53ef\u5f97 : n0 = n2 + 1 \u9ad8\u5ea6\u4e3ak\u7684\u4e8c\u53c9\u6811,\u6700\u5c11\u6709k\u4e2a\u7ed3\u70b9 \u542b\u6709n(n>=1)\u4e2a\u7ed3\u70b9\u7684\u4e8c\u53c9\u6811,\u6700\u9ad8\u9ad8\u5ea6\u4e3an \u542b\u6709n(n>=1)\u4e2a\u7ed3\u70b9\u7684\u4e8c\u53c9\u6811,\u9ad8\u5ea6\u6700\u5c0f\u4e3amath.ceil(log2(n+1)) 2^x=n+1 \u4e94\u79cd\u57fa\u672c\u5f62\u6001 \u00b6 \u7a7a\u4e8c\u53c9\u6811 \u53ea\u6709\u4e00\u4e2a\u6839\u8282\u70b9 \u6839\u8282\u70b9\u53ea\u6709\u5de6\u5b50\u6811 \u6839\u8282\u70b9\u53ea\u6709\u53f3\u5b50\u6811 \u6839\u8282\u70b9\u53f3\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811 \u659c\u6811 \u00b6 \u5de6\u659c\u6811 \u00b6 \u6240\u6709\u7ed3\u70b9\u90fd\u53ea\u6709\u5de6\u5b50\u6811 \u53f3\u659c\u6811 \u00b6 \u6240\u6709\u7ed3\u70b9\u90fd\u53ea\u6709\u53f3\u5b50\u6811 \u6ee1\u4e8c\u53c9\u6811 \u00b6 \u5b9a\u4e49 \u00b6 \u4e00\u8bfe\u4e8c\u53c9\u6811\u7684\u6240\u6709\u5206\u652f\u7ed3\u70b9\u90fd\u5b58\u5728\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811,\u5e76\u4e14\u6240\u6709\u53f6\u5b50\u7ed3\u70b9\u53ea\u5b58\u5728\u6700\u4e0b\u9762\u4e00\u5c42. \u7279\u6027 \u00b6 \u540c\u6837\u6df1\u5ea6\u7684\u4e8c\u53c9\u6811\u4e2d,\u6ee1\u4e8c\u53c9\u6811\u7ed3\u70b9\u6700\u591a k\u4e3a\u6df1\u5ea6(1<=k<=n),\u5219\u7ed3\u70b9\u603b\u6570\u4e3a2^k-1 \u5b8c\u5168\u4e8c\u53c9\u6811 \u00b6 \u5b9a\u4e49 \u00b6 \u82e5\u4e8c\u53c9\u6811\u7684\u6df1\u5ea6\u4e3ak,\u4e8c\u53c9\u6811\u7684\u5c42\u6570\u4ece1\u5230k-1\u5c42\u7684\u6240\u6709\u7ed3\u70b9\u90fd\u8fbe\u5230\u4e86\u6700\u5927\u4e2a\u6570,\u7b2ck\u5c42\u7684\u6240\u6709\u7ed3\u70b9\u90fd\u96c6\u4e2d\u5728\u6700\u5de6\u8fb9,\u8fd9\u5c31\u662f\u5b8c\u5168\u4e8c\u53c9\u6811. \u4e0e\u6ee1\u4e8c\u53c9\u6811\u7684\u5173\u7cfb \u00b6 \u5b8c\u5168\u4e8c\u53c9\u6811\u662f\u7531\u6ee1\u4e8c\u53c9\u6811\u800c\u5f15\u51fa\u6765\u7684\u3002\u5bf9\u4e8e\u6df1\u5ea6\u4e3aK\u7684\uff0c\u6709n\u4e2a\u7ed3\u70b9\u7684\u4e8c\u53c9\u6811\uff0c\u5f53\u4e14\u4ec5\u5f53\u5176\u6bcf\u4e00\u4e2a\u7ed3\u70b9\u90fd\u4e0e\u6df1\u5ea6\u4e3aK\u7684\u6ee1\u4e8c\u53c9\u6811\u4e2d\u7f16\u53f7\u4ece1\u81f3n\u7684\u7ed3\u70b9\u4e00\u4e00\u5bf9\u5e94\u65f6\u79f0\u4e4b\u4e3a\u5b8c\u5168\u4e8c\u53c9\u6811\u3002 \u6ee1\u4e8c\u53c9\u6811\u4e00\u5b9a\u662f\u5b8c\u5168\u4e8c\u53c9\u6811,\u4f46\u5b8c\u5168\u4e8c\u53c9\u6811\u4e0d\u4e00\u5b9a\u662f\u6ee1\u4e8c\u53c9\u6811. k\u4e3a\u6df1\u5ea6(1<=k<=n),\u5219\u7ed3\u70b9\u603b\u6570\u6700\u5927\u503c\u4e3a2^k-1,\u5f53\u8fbe\u5230\u6700\u5927\u503c\u7684\u65f6\u5019\u5c31\u662f\u6ee1\u4e8c\u53c9\u6811. \u6309\u5c42\u5e8f\u7f16\u53f7 \u00b6 \u6027\u8d28 \u00b6 \u5177\u6709n\u4e2a\u7ed3\u70b9\u7684==\u5b8c\u5168\u4e8c\u53c9\u6811==\u7684\u6df1\u5ea6\u4e3aint(log2n)+1\u6216\u8005math.ceil(log2(n+1)) \u6709\u4e00\u9897n\u4e2a\u7ed3\u70b9\u7684\u5b8c\u5168\u4e8c\u53c9\u6811(\u4e0a\u56fe),\u7ed3\u70b9\u6309\u5c42\u5e8f\u7f16\u53f7 \u5982\u679ci=1,\u5219\u7ed3\u70b9i\u662f\u4e8c\u53c9\u6811\u7684\u6839\u65e0\u7236\u7ed3\u70b9 \u5982\u679ci>1,\u5219\u5176\u7236\u7ed3\u70b9\u662fint(i/2),\u5411\u4e0b\u53d6\u6574,\u5373\u5b50\u8282\u70b9\u7f16\u53f7\u9664\u4ee52\u5c31\u5f97\u5230\u7236\u7ed3\u70b9\u7684\u7f16\u53f7. \u7236\u7ed3\u70b9\u662fi,\u5176\u5de6\u5b50\u7ed3\u70b9\u4e3a2i,\u53f3\u5b50\u8282\u70b9\u4e3a2i+1 \u82e52i>n,\u5219\u7ed3\u70b9i\u65e0\u5de6\u5b69\u5b50,\u5373\u7ed3\u70b9i\u4e3a\u53f6\u5b50\u7ed3\u70b9, \u82e52i+1>n,\u5219\u7ed3\u70b9i\u65e0\u53f3\u5b69\u5b50,\u6ce8\u610f\u8fd9\u91cc\u65e0\u6cd5\u8bf4\u660e\u7ed3\u70b9i\u662f\u5426\u6709\u5de6\u5b69\u5b50 \u5de6\u8282\u70b9\u4e00\u5b9a\u4e3a\u5076\u6570,\u53f3\u7ed3\u70b9\u4e00\u5b9a\u4e3a\u5947\u6570,\u6839\u8282\u70b9\u4e3a1","title":"\u6811"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%91/#_1","text":"","title":"\u6811"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%91/#_2","text":"","title":"\u5b9a\u4e49"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%91/#_3","text":"\u7531\u6709\u9650\u4e2a\u7ed3\u70b9\u7ec4\u6210\u7684\u5177\u6709\u5c42\u7ea7\u5173\u7cfb\u7684\u96c6\u5408. \u6bcf\u4e2a\u8282\u70b9\u5177\u6709\u96f6\u4e2a\u6216\u591a\u4e2a\u5b50\u8282\u70b9. \u975e\u7ebf\u6027\u7ed3\u6784,\u6bcf\u4e2a\u5143\u7d20\u6709\u591a\u4e2a\u524d\u9a71\u548c\u540e\u7ee7.(\u5e7f\u4e49\u5b9a\u4e49) \u6811\u662fn\u4e2a\u5143\u7d20\u7684\u96c6\u5408 n = 0 \u65f6,\u79f0\u4e3a\u7a7a\u6811 \u6811\u4e2d\u53ea\u6709\u4e00\u4e2a\u6ca1\u6709\u524d\u9a71\u7684\u8282\u70b9,\u79f0\u4e3a\u6811\u7684\u6839Root \u6811\u4e2d\u9664\u4e86\u6839\u8282\u70b9\u5916,\u5176\u4f59\u5143\u7d20\u53ea\u80fd\u6709\u4e00\u4e2a\u524d\u9a71,\u53ef\u4ee5\u6709\u591a\u4e2a \u62160\u4e2a\u540e\u7ee7.(\u4e25\u683c\u5b9a\u4e49)","title":"\u666e\u901a\u5b9a\u4e49"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%91/#_4","text":"\u6811\uff08Tree\uff09\u662fn\uff08n>=0\uff09\u4e2a\u7ed3\u70b9\u7684\u6709\u9650\u96c6\u3002n=0\u65f6\u79f0\u4e3a\u7a7a\u6811 \u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u7279\u5b9a\u7684\u79f0\u4e3a\u6839\uff08root\uff09\u7684\u7ed3\u70b9\uff1b \u5f53n>1\u65f6\uff0c\u5176\u4f59\u7ed3\u70b9\u53ef\u5206\u4e3am(m>0)\u4e2a\u4e92\u8865\u4ea4\u4e92\u7684\u6709\u9650\u96c6T1\u3001T2...Tm\uff0c\u5176\u4e2d\u6bcf\u4e00\u4e2a\u96c6\u5408\u672c\u8eab\u53c8\u662f\u4e00\u68f5\u6811\uff0c\u5e76\u79f0\u4e3a\u6839\u7684\u5b50\u6811(SubTree)\u3002","title":"\u9012\u5f52\u5b9a\u4e49"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%91/#_5","text":"","title":"\u6982\u5ff5"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%91/#_6","text":"\u6811\u4e2d\u7684\u5143\u7d20","title":"\u7ed3\u70b9"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%91/#degree","text":"\u7ed3\u70b9\u62e5\u6709\u7684\u5b50\u6811\u7684\u6570\u76ee\u79f0\u4e3a\u5ea6.\u8bb0\u4f5cd(v)","title":"\u7ed3\u70b9\u7684\u5ea6degree"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%91/#_7","text":"\u5ea6\u4e3a0\u7684\u7ed3\u70b9,\u79f0\u4e3a\u53f6\u5b50\u7ed3\u70b9leaf,\u7ec8\u7aef\u7ed3\u70b9(terminal node),\u672b\u7aef\u7ed3\u70b9","title":"\u53f6\u5b50\u7ed3\u70b9"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%91/#branch-node","text":"\u5ea6\u4e0d\u4e3a0\u7684\u7ed3\u70b9,\u79f0\u4e3a\u975e\u7ec8\u7aef\u7ed3\u70b9\u6216\u5206\u652f\u7ed3\u70b9","title":"\u5206\u652f\u7ed3\u70b9(branch node)"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%91/#_8","text":"\u7ed3\u70b9\u4e4b\u95f4\u7684\u5173\u7cfb","title":"\u5206\u652f"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%91/#_9","text":"\u9664\u6839\u8282\u70b9\u610f\u5916\u7684\u5206\u652f\u7ed3\u70b9,\u4e5f\u4e0d\u5305\u62ec\u53f6\u5b50\u7ed3\u70b9","title":"\u5185\u90e8\u7ed3\u70b9"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%91/#_10","text":"\u6811\u7684\u5ea6\u662f\u6811\u5185\u5404\u7ed3\u70b9\u7684\u5ea6\u7684\u6700\u5927\u503c.","title":"\u6811\u7684\u5ea6"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%91/#level","text":"\u89c4\u5b9a\u6839\u4e3a\u7b2c\u4e00\u5c42,\u5b83\u7684\u5b69\u5b50\u4e3a\u7b2c\u4e8c\u5c42,\u4f9d\u6b21\u7c7b\u63a8,\u8bb0\u4f5cL(v),\u5b50\u8282\u70b9\u6bd4\u7236\u7ed3\u70b9\u7684\u5c42\u591a1","title":"\u6811\u7684\u5c42level"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%91/#depth","text":"\u6811\u7684\u6df1\u5ea6\uff08Depth\uff09\u6216\u9ad8\u5ea6\u662f\u6811\u4e2d\u7ed3\u70b9\u7684\u6700\u5927\u5c42\u6b21\u3002","title":"\u6811\u7684\u6df1\u5ea6depth"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%91/#_11","text":"\u5bf9\u4e8e\u4e00\u68f5\u5b50\u6811\u4e2d\u7684\u4efb\u610f\u4e24\u4e2a\u4e0d\u540c\u7684\u7ed3\u70b9\uff0c\u5982\u679c\u4ece\u4e00\u4e2a\u7ed3\u70b9\u51fa\u53d1\uff0c\u6309\u5c42\u6b21\u81ea\u4e0a\u800c\u4e0b\u6cbf\u7740\u4e00\u4e2a\u4e2a\u6811\u679d\u80fd\u5230\u8fbe\u53e6\u4e00\u7ed3\u70b9\uff0c\u79f0\u5b83\u4eec\u4e4b\u95f4\u5b58\u5728\u7740\u4e00\u6761\u8def\u5f84\u3002\u6ce8\u610f:\u53ea\u80fd\u4e0a\u4e0b\u627e,\u4e0d\u53ef\u4ee5\u627e\u5230\u5144\u5f1f\u7ed3\u70b9\u53bb.\u5373,\u753b\u51fa\u6765\u7684\u7ebf\u4e0d\u53ef\u4ee5\u5f80\u56de\u62d0. \u53ef\u7528\u8def\u5f84\u6240\u7ecf\u8fc7\u7684\u7ed3\u70b9\u5e8f\u5217\u8868\u793a\u8def\u5f84,","title":"\u8def\u5f84"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%91/#_12","text":"\u8def\u5f84\u7684\u957f\u5ea6\u7b49\u4e8e\u8def\u5f84\u4e0a\u7684\u7ed3\u70b9\u4e2a\u6570\u51cf1.","title":"\u8def\u5f84\u957f\u5ea6"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%91/#_13","text":"m(m>=0) \u8bfe\u4e0d\u76f8\u4ea4\u7684\u6811\u7684\u96c6\u5408.","title":"\u68ee\u6797"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%91/#_14","text":"","title":"\u7ed3\u70b9\u95f4\u7684\u5173\u7cfb"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%91/#_15","text":"\u4e5f\u53eb\u513f\u5b50(child)\u7ed3\u70b9:\u7ed3\u70b9\u7684\u5b50\u6811\u7684\u6839\u7ed3\u70b9\u5c31\u662f\u8be5\u7ed3\u70b9\u7684\u5b69\u5b50\u7ed3\u70b9","title":"\u5b69\u5b50\u7ed3\u70b9"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%91/#_16","text":"\u4e5f\u53eb\u7236(parent)\u7ed3\u70b9:\u4e00\u4e2a\u7ed3\u70b9\u662f\u5b83\u5404\u4e2a\u6811\u7684\u6839\u8282\u70b9\u7684\u53cc\u4eb2\u7ed3\u70b9","title":"\u53cc\u4eb2\u7ed3\u70b9"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%91/#_17","text":"sibling\u7ed3\u70b9:\u5177\u6709\u76f8\u540c\u53cc\u4eb2\u7ed3\u70b9\u7684\u7ed3\u70b9","title":"\u5144\u5f1f\u7ed3\u70b9"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%91/#_18","text":"\u4ece\u6839\u7ed3\u70b9\u5230\u8be5\u7ed3\u70b9\u6240\u7ecf\u5386\u7684\u5206\u652f\u4e0a\u7684\u6240\u6709\u7ed3\u70b9.\u5373\u5176\u7236,\u7237\u7237,\u592a\u7237\u7237,\u8001\u7956\u7ed3\u70b9","title":"\u7956\u5148\u7ed3\u70b9"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%91/#_19","text":"\u7ed3\u70b9\u7684\u6240\u6709\u6811\u4e0a\u7684\u7ed3\u70b9\u90fd\u6210\u4e3a\u8be5\u7ed3\u70b9\u7684\u5b50\u5b59\u554a\u7ed3\u70b9.\u5373\u513f\u5b50,\u5b59\u5b50,\u91cd\u5b59\u5b50","title":"\u5b50\u5b59\u7ed3\u70b9"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%91/#_20","text":"","title":"\u6811\u7684\u5206\u7c7b"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%91/#_21","text":"\u7ed3\u70b9\u7684\u5b50\u6811\u662f\u6709\u987a\u5e8f\u7684,(\u5144\u5f1f\u7684\u5927\u5c0f,\u5148\u540e\u6709\u6b21\u5e8f),\u4e0d\u80fd\u4ea4\u6362","title":"\u6709\u5e8f\u6811"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%91/#_22","text":"\u7ed3\u70b9\u7684\u5b50\u6811\u662f\u65e0\u5e8f\u7684,\u53ef\u4ea4\u6362\u7684","title":"\u65e0\u5e8f\u6811"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%91/#_23","text":"\u5fc5\u987b\u6709\u552f\u4e00\u7684\u6839 \u5b50\u6811\u4e0d\u76f8\u4ea4 \u9664\u4e86\u6839\u4ee5\u5916,\u6bcf\u4e2a\u5143\u7d20\u53ea\u80fd\u6709\u4e00\u4e2a\u524d\u9a71,\u53ef\u4ee5\u67090\u6216\u591a\u4e2a\u540e\u7ee7 \u6839\u8282\u70b9\u6ca1\u6709\u7236\u8282\u70b9(\u524d\u9a71),\u53f6\u5b50\u7ed3\u70b9\u6ca1\u6709\u5b50\u8282\u70b9(\u540e\u7ee7) vi\u662fvj\u7684\u7236\u7ed3\u70b9,\u5219L(vi) = L(vj) -1,\u4e5f\u5c31\u662f\u8bf4\u7236\u7ed3\u70b9\u6bd4\u5b50\u7ed3\u70b9\u5c42\u6b21\u5c0f1","title":"\u6811\u7684\u7279\u70b9"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%91/#_24","text":"\u94fe\u8868\u5b58\u50a8","title":"\u6811\u7684\u5b58\u50a8"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%91/#_25","text":"","title":"\u4e8c\u53c9\u6811"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%91/#_26","text":"\u6bcf\u4e2a\u7ed3\u70b9\u5bf9\u591a\u6709\u4e24\u8bfe\u5b50\u6811\u7684\u6811. \u5373\u4e8c\u53c9\u6811\u4e0d\u5b58\u5728\u5ea6\u6570\u5927\u4e8e2\u7684\u7ed3\u70b9.","title":"\u5b9a\u4e49"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%91/#_27","text":"\u4e8c\u53c9\u6811\u662f\u6709\u5e8f\u6811,\u5176\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\u662f\u987a\u5e8f\u7684,\u4e0d\u80fd\u4ea4\u6362\u987a\u5e8f \u5373\u4f7f\u67d0\u4e2a\u7ed3\u70b9\u53ea\u6709\u4e00\u68f5\u5b50\u6811,\u4e5f\u8981\u786e\u5b9a\u5176\u662f\u5de6\u5b50\u6811\u8fd8\u662f\u53f3\u5b50\u6811","title":"\u7279\u6027"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%91/#_28","text":"\u5728\u4e8c\u53c9\u6811\u7684\u7b2ci\u5c42\u4e0a\u6700\u591a\u67092^(i-1) \u4e2a\u7ed3\u70b9. \u6df1\u5ea6\u4e3ak\u7684\u4e8c\u53c9\u6811,\u6700\u591a\u67092^k-1\u4e2a\u7ed3\u70b9 \u5bf9\u4e8e\u4efb\u610f\u4e8c\u53c9\u6811T,\u5982\u679c\u5176\u7ec8\u7aef\u7ed3\u70b9\u6570\u4f4dn0,\u5ea6\u6570\u4f4d2\u7684\u7ed3\u70b9\u6570\u4e3an2,\u5219n0=n2+1 \u6362\u53e5\u8bdd\u8bf4,\u53f6\u5b50\u8282\u70b9\u6570-1 = \u5ea6\u6570\u4e3a2\u7684\u7ed3\u70b9\u6570 \u8bc1\u660e : \u603b\u7ed3\u70b9\u6570 : n = n0 + n1 + n2 // n0\u4e3a\u5ea6\u6570\u4e3a0 ( \u53f6\u5b50\u7ed3\u70b9 ) \u7684\u603b\u7ed3\u70b9\u6570 , n1\u4e3a\u5ea6\u6570\u4e3a1\u7684\u603b\u7ed3\u70b9\u6570 , \u603b\u5206\u652f\u6570 : n0 * 0 + n1 * 1 + n2 * 2 \u603b\u5206\u652f\u6570\u8fd8\u7b49\u4e8e : n - 1 // \u56e0\u4e3a\u9664\u4e86\u6839\u7ed3\u70b9 , \u6bcf\u4e2a\u7ed3\u70b9\u90fd\u6709\u4e00\u4e2a\u7236\u7ed3\u70b9 \u5219 : 2 * n2 + n1 = n0 + n1 + n2 - 1 \u53ef\u5f97 : n0 = n2 + 1 \u9ad8\u5ea6\u4e3ak\u7684\u4e8c\u53c9\u6811,\u6700\u5c11\u6709k\u4e2a\u7ed3\u70b9 \u542b\u6709n(n>=1)\u4e2a\u7ed3\u70b9\u7684\u4e8c\u53c9\u6811,\u6700\u9ad8\u9ad8\u5ea6\u4e3an \u542b\u6709n(n>=1)\u4e2a\u7ed3\u70b9\u7684\u4e8c\u53c9\u6811,\u9ad8\u5ea6\u6700\u5c0f\u4e3amath.ceil(log2(n+1)) 2^x=n+1","title":"\u6027\u8d28"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%91/#_29","text":"\u7a7a\u4e8c\u53c9\u6811 \u53ea\u6709\u4e00\u4e2a\u6839\u8282\u70b9 \u6839\u8282\u70b9\u53ea\u6709\u5de6\u5b50\u6811 \u6839\u8282\u70b9\u53ea\u6709\u53f3\u5b50\u6811 \u6839\u8282\u70b9\u53f3\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811","title":"\u4e94\u79cd\u57fa\u672c\u5f62\u6001"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%91/#_30","text":"","title":"\u659c\u6811"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%91/#_31","text":"\u6240\u6709\u7ed3\u70b9\u90fd\u53ea\u6709\u5de6\u5b50\u6811","title":"\u5de6\u659c\u6811"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%91/#_32","text":"\u6240\u6709\u7ed3\u70b9\u90fd\u53ea\u6709\u53f3\u5b50\u6811","title":"\u53f3\u659c\u6811"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%91/#_33","text":"","title":"\u6ee1\u4e8c\u53c9\u6811"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%91/#_34","text":"\u4e00\u8bfe\u4e8c\u53c9\u6811\u7684\u6240\u6709\u5206\u652f\u7ed3\u70b9\u90fd\u5b58\u5728\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811,\u5e76\u4e14\u6240\u6709\u53f6\u5b50\u7ed3\u70b9\u53ea\u5b58\u5728\u6700\u4e0b\u9762\u4e00\u5c42.","title":"\u5b9a\u4e49"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%91/#_35","text":"\u540c\u6837\u6df1\u5ea6\u7684\u4e8c\u53c9\u6811\u4e2d,\u6ee1\u4e8c\u53c9\u6811\u7ed3\u70b9\u6700\u591a k\u4e3a\u6df1\u5ea6(1<=k<=n),\u5219\u7ed3\u70b9\u603b\u6570\u4e3a2^k-1","title":"\u7279\u6027"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%91/#_36","text":"","title":"\u5b8c\u5168\u4e8c\u53c9\u6811"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%91/#_37","text":"\u82e5\u4e8c\u53c9\u6811\u7684\u6df1\u5ea6\u4e3ak,\u4e8c\u53c9\u6811\u7684\u5c42\u6570\u4ece1\u5230k-1\u5c42\u7684\u6240\u6709\u7ed3\u70b9\u90fd\u8fbe\u5230\u4e86\u6700\u5927\u4e2a\u6570,\u7b2ck\u5c42\u7684\u6240\u6709\u7ed3\u70b9\u90fd\u96c6\u4e2d\u5728\u6700\u5de6\u8fb9,\u8fd9\u5c31\u662f\u5b8c\u5168\u4e8c\u53c9\u6811.","title":"\u5b9a\u4e49"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%91/#_38","text":"\u5b8c\u5168\u4e8c\u53c9\u6811\u662f\u7531\u6ee1\u4e8c\u53c9\u6811\u800c\u5f15\u51fa\u6765\u7684\u3002\u5bf9\u4e8e\u6df1\u5ea6\u4e3aK\u7684\uff0c\u6709n\u4e2a\u7ed3\u70b9\u7684\u4e8c\u53c9\u6811\uff0c\u5f53\u4e14\u4ec5\u5f53\u5176\u6bcf\u4e00\u4e2a\u7ed3\u70b9\u90fd\u4e0e\u6df1\u5ea6\u4e3aK\u7684\u6ee1\u4e8c\u53c9\u6811\u4e2d\u7f16\u53f7\u4ece1\u81f3n\u7684\u7ed3\u70b9\u4e00\u4e00\u5bf9\u5e94\u65f6\u79f0\u4e4b\u4e3a\u5b8c\u5168\u4e8c\u53c9\u6811\u3002 \u6ee1\u4e8c\u53c9\u6811\u4e00\u5b9a\u662f\u5b8c\u5168\u4e8c\u53c9\u6811,\u4f46\u5b8c\u5168\u4e8c\u53c9\u6811\u4e0d\u4e00\u5b9a\u662f\u6ee1\u4e8c\u53c9\u6811. k\u4e3a\u6df1\u5ea6(1<=k<=n),\u5219\u7ed3\u70b9\u603b\u6570\u6700\u5927\u503c\u4e3a2^k-1,\u5f53\u8fbe\u5230\u6700\u5927\u503c\u7684\u65f6\u5019\u5c31\u662f\u6ee1\u4e8c\u53c9\u6811.","title":"\u4e0e\u6ee1\u4e8c\u53c9\u6811\u7684\u5173\u7cfb"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%91/#_39","text":"","title":"\u6309\u5c42\u5e8f\u7f16\u53f7"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%91/#_40","text":"\u5177\u6709n\u4e2a\u7ed3\u70b9\u7684==\u5b8c\u5168\u4e8c\u53c9\u6811==\u7684\u6df1\u5ea6\u4e3aint(log2n)+1\u6216\u8005math.ceil(log2(n+1)) \u6709\u4e00\u9897n\u4e2a\u7ed3\u70b9\u7684\u5b8c\u5168\u4e8c\u53c9\u6811(\u4e0a\u56fe),\u7ed3\u70b9\u6309\u5c42\u5e8f\u7f16\u53f7 \u5982\u679ci=1,\u5219\u7ed3\u70b9i\u662f\u4e8c\u53c9\u6811\u7684\u6839\u65e0\u7236\u7ed3\u70b9 \u5982\u679ci>1,\u5219\u5176\u7236\u7ed3\u70b9\u662fint(i/2),\u5411\u4e0b\u53d6\u6574,\u5373\u5b50\u8282\u70b9\u7f16\u53f7\u9664\u4ee52\u5c31\u5f97\u5230\u7236\u7ed3\u70b9\u7684\u7f16\u53f7. \u7236\u7ed3\u70b9\u662fi,\u5176\u5de6\u5b50\u7ed3\u70b9\u4e3a2i,\u53f3\u5b50\u8282\u70b9\u4e3a2i+1 \u82e52i>n,\u5219\u7ed3\u70b9i\u65e0\u5de6\u5b69\u5b50,\u5373\u7ed3\u70b9i\u4e3a\u53f6\u5b50\u7ed3\u70b9, \u82e52i+1>n,\u5219\u7ed3\u70b9i\u65e0\u53f3\u5b69\u5b50,\u6ce8\u610f\u8fd9\u91cc\u65e0\u6cd5\u8bf4\u660e\u7ed3\u70b9i\u662f\u5426\u6709\u5de6\u5b69\u5b50 \u5de6\u8282\u70b9\u4e00\u5b9a\u4e3a\u5076\u6570,\u53f3\u7ed3\u70b9\u4e00\u5b9a\u4e3a\u5947\u6570,\u6839\u8282\u70b9\u4e3a1","title":"\u6027\u8d28"},{"location":"%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/Dns%E8%AF%A6%E8%A7%A3/","text":"Dns\u57df\u540d\u89e3\u6790\u8fc7\u7a0b DNS\u662f\u4ec0\u4e48 DNS\u67b6\u6784 \u5728\u6d4f\u89c8\u5668\u8f93\u5165url\u6309\u4e0b\u56de\u8f66\u7684\u6574\u4e2a\u8fc7\u7a0b \u5927\u65b9\u5411\u5206\u4e3a\u4e09\u4e2a\u8fc7\u7a0b \u4f46\u662fdns\u89e3\u6790\u7684\u8fc7\u7a0b\u53c8\u53ef\u5206\u4e3a\u4e0b\u9762\u516d\u4e2a\u8fc7\u7a0b\uff0c\u5177\u4f53\u770b\u4e0b\u56fe Dns\u57df\u540d\u89e3\u6790\u8fc7\u7a0b \u00b6 DNS\u662f\u4ec0\u4e48 \u00b6 dns\u5168\u79f0Domain Name System\uff0c\u53c8\u79f0\u57df\u540d\u7cfb\u7edf\uff0c\u662f\u4e92\u8054\u7f51\u7684\u4e00\u9879\u670d\u52a1\uff0c \u4e3b\u8981\u5728dns\u670d\u52a1\u5668\u4e2d\u4fdd\u5b58\u7740\u57df\u540d\u548cip\u5730\u5740\u7684\u5bf9\u5e94\u5173\u7cfb\uff0c\u4e3a\u4eba\u4eec\u63d0\u4f9b\u57df\u540d\u89e3\u6790\u670d\u52a1\u3002 \u5168\u7403\u4e00\u5171\u670913\u53f0\u6839dns\u670d\u52a1\u5668\uff0c\u7f8e\u56fd10\u53f0\uff0c\u6b27\u6d322\u53f0\uff0c\u5206\u5e03\u5728\u82f1\u56fd\u548c\u745e\u5178\uff0c \u4e9a\u6d321\u53f0\uff0c\u5728\u65e5\u672c\u3002 DNS\u67b6\u6784 \u00b6 \u670d\u52a1\u5668\u7684\u5305\u542b\u5173\u7cfb\u662f\uff1a\u5177\u4f53\u5982\u4e0b\u56fe \u6839DNS\u670d\u52a1\u5668 > \u9876\u7ea7DNS\u670d\u52a1\u5668 > \u6743\u5a01DNS\u670d\u52a1\u5668 > \u4e8c\u7ea7\u57df\u540d\u7684DNS\u670d\u52a1\u5668 \u6839DNS\u670d\u52a1\u5668\u3000\u3000\uff1a\u638c\u63e1\u7740\u6240\u6709\u9876\u7ea7dns\u7684ip\u548c\u57df\u540d\u7684\u5bf9\u5e94\u5173\u7cfb \u9876\u7ea7DNS\u670d\u52a1\u5668\u3000\uff1a\u638c\u63e1\u7740\u6743\u5a01dns\u7684ip\u548c\u57df\u540d\u7684\u5bf9\u5e94\u5173\u7cfb eg: .com .cn .org \u6743\u5a01DNS\u670d\u52a1\u5668\u3000\uff1a\u638c\u63e1\u7740\u4e8c\u7ea7\u57df\u540ddns\u670d\u52a1\u5668\u7684ip\u548c\u57df\u540d\u7684\u5bf9\u5e94\u5173\u7cfb eg: baidu.com\u3000\u3000sina.com \u4e8c\u7ea7\u57df\u540d\u7684DNS\u670d\u52a1\u5668 \uff1a\u638c\u63e1\u7740\u4f60\u8981\u8bbf\u95ee\u7684\u57df\u540d\u548cip\u7684\u5bf9\u5e94\u5173\u7cfb eg: www.baidu.com \u3000\u3000new.sina.com \u5728\u6d4f\u89c8\u5668\u8f93\u5165url\u6309\u4e0b\u56de\u8f66\u7684\u6574\u4e2a\u8fc7\u7a0b \u00b6 \u5927\u65b9\u5411\u5206\u4e3a\u4e09\u4e2a\u8fc7\u7a0b \u00b6 1.\u628a\u8f93\u5165\u7684url\u57df\u540d\u901a\u8fc7dns\u89e3\u6790\u6210ip\u5730\u5740 2.\u6d4f\u89c8\u5668\u5411ip\u53d1\u9001\u8bf7\u6c42\u4fe1\u606f(\u5305\u62ec\u8bf7\u6c42\u5934Request Headers\u548c\u8bf7\u6c42\u4f53Request Body) 3.\u670d\u52a1\u5668\u5411\u6d4f\u89c8\u5668\u56de\u5e94\u4e00\u4e2a\u54cd\u5e94\u4fe1\u606f(\u5305\u62ec\u54cd\u5e94\u5934Response Headers\u548c\u54cd\u5e94\u4f53Response Body) \u4f46\u662fdns\u89e3\u6790\u7684\u8fc7\u7a0b\u53c8\u53ef\u5206\u4e3a\u4e0b\u9762\u516d\u4e2a\u8fc7\u7a0b\uff0c\u5177\u4f53\u770b\u4e0b\u56fe \u00b6 1.\u5148\u5411\u672c\u5730dns\u7f13\u5b58\u67e5\u770b\u6709\u6ca1\u6709\u8be5\u57df\u540d\u5bf9\u5e94\u7684ip\u5730\u5740\uff0c\u6709\u76f4\u63a5\u8df3\u51fa\uff0c\u6ca1\u6709\u63a5\u7740\u5f80\u4e0b 2.\u5411\u6839dns\u670d\u52a1\u5668\u8be2\u95ee\u57df\u540d\u5bf9\u5e94\u7684ip\u5730\u5740(\u6839dns\u670d\u52a1\u5668\u4f1a\u8ba9\u4ed6\u53bb\u67e5\u8be2\u9876\u7ea7dns\u670d\u52a1\u5668) 3.\u5411\u9876\u7ea7dns\u670d\u52a1\u5668\u8be2\u95ee\u57df\u540d\u5bf9\u5e94\u7684ip\u5730\u5740(\u9876\u7ea7dns\u670d\u52a1\u5668\u4f1a\u8ba9\u4ed6\u53bb\u67e5\u8be2\u6743\u5a01dns\u670d\u52a1\u5668) 4.\u5411\u6743\u5a01dns\u670d\u52a1\u5668\u8be2\u95ee\u57df\u540d\u5bf9\u5e94\u7684ip\u5730\u5740(\u6743\u5a01dns\u670d\u52a1\u5668\u4f1a\u8ba9\u4ed6\u53bb\u67e5\u8be2\u4e8c\u7ea7dns\u670d\u52a1\u5668) 5.\u5411\u4e8c\u7ea7dns\u670d\u52a1\u5668\u8be2\u95ee\u57df\u540d\u5bf9\u5e94\u7684ip\u5730\u5740(\u4e8c\u7ea7dns\u670d\u52a1\u5668\u4f1a\u8fd4\u56de\u5bf9\u5e94\u7684ip\u5730\u5740) 6.\u63a5\u6536\u5230ip\u5730\u5740\u540e\uff0c\u4f1a\u5148\u628aip\u548c\u57df\u540d\u5bf9\u5e94\u5173\u7cfb\u4fdd\u5b58\u5230\u672c\u5730dns\u7f13\u5b58\uff0c\u4ee5\u4fbf\u4e0b\u6b21\u65b9\u4fbf\u8bbf\u95ee","title":"Dns\u8be6\u89e3"},{"location":"%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/Dns%E8%AF%A6%E8%A7%A3/#dns","text":"","title":"Dns\u57df\u540d\u89e3\u6790\u8fc7\u7a0b"},{"location":"%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/Dns%E8%AF%A6%E8%A7%A3/#dns_1","text":"dns\u5168\u79f0Domain Name System\uff0c\u53c8\u79f0\u57df\u540d\u7cfb\u7edf\uff0c\u662f\u4e92\u8054\u7f51\u7684\u4e00\u9879\u670d\u52a1\uff0c \u4e3b\u8981\u5728dns\u670d\u52a1\u5668\u4e2d\u4fdd\u5b58\u7740\u57df\u540d\u548cip\u5730\u5740\u7684\u5bf9\u5e94\u5173\u7cfb\uff0c\u4e3a\u4eba\u4eec\u63d0\u4f9b\u57df\u540d\u89e3\u6790\u670d\u52a1\u3002 \u5168\u7403\u4e00\u5171\u670913\u53f0\u6839dns\u670d\u52a1\u5668\uff0c\u7f8e\u56fd10\u53f0\uff0c\u6b27\u6d322\u53f0\uff0c\u5206\u5e03\u5728\u82f1\u56fd\u548c\u745e\u5178\uff0c \u4e9a\u6d321\u53f0\uff0c\u5728\u65e5\u672c\u3002","title":"DNS\u662f\u4ec0\u4e48"},{"location":"%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/Dns%E8%AF%A6%E8%A7%A3/#dns_2","text":"\u670d\u52a1\u5668\u7684\u5305\u542b\u5173\u7cfb\u662f\uff1a\u5177\u4f53\u5982\u4e0b\u56fe \u6839DNS\u670d\u52a1\u5668 > \u9876\u7ea7DNS\u670d\u52a1\u5668 > \u6743\u5a01DNS\u670d\u52a1\u5668 > \u4e8c\u7ea7\u57df\u540d\u7684DNS\u670d\u52a1\u5668 \u6839DNS\u670d\u52a1\u5668\u3000\u3000\uff1a\u638c\u63e1\u7740\u6240\u6709\u9876\u7ea7dns\u7684ip\u548c\u57df\u540d\u7684\u5bf9\u5e94\u5173\u7cfb \u9876\u7ea7DNS\u670d\u52a1\u5668\u3000\uff1a\u638c\u63e1\u7740\u6743\u5a01dns\u7684ip\u548c\u57df\u540d\u7684\u5bf9\u5e94\u5173\u7cfb eg: .com .cn .org \u6743\u5a01DNS\u670d\u52a1\u5668\u3000\uff1a\u638c\u63e1\u7740\u4e8c\u7ea7\u57df\u540ddns\u670d\u52a1\u5668\u7684ip\u548c\u57df\u540d\u7684\u5bf9\u5e94\u5173\u7cfb eg: baidu.com\u3000\u3000sina.com \u4e8c\u7ea7\u57df\u540d\u7684DNS\u670d\u52a1\u5668 \uff1a\u638c\u63e1\u7740\u4f60\u8981\u8bbf\u95ee\u7684\u57df\u540d\u548cip\u7684\u5bf9\u5e94\u5173\u7cfb eg: www.baidu.com \u3000\u3000new.sina.com","title":"DNS\u67b6\u6784"},{"location":"%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/Dns%E8%AF%A6%E8%A7%A3/#url","text":"","title":"\u5728\u6d4f\u89c8\u5668\u8f93\u5165url\u6309\u4e0b\u56de\u8f66\u7684\u6574\u4e2a\u8fc7\u7a0b"},{"location":"%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/Dns%E8%AF%A6%E8%A7%A3/#_1","text":"1.\u628a\u8f93\u5165\u7684url\u57df\u540d\u901a\u8fc7dns\u89e3\u6790\u6210ip\u5730\u5740 2.\u6d4f\u89c8\u5668\u5411ip\u53d1\u9001\u8bf7\u6c42\u4fe1\u606f(\u5305\u62ec\u8bf7\u6c42\u5934Request Headers\u548c\u8bf7\u6c42\u4f53Request Body) 3.\u670d\u52a1\u5668\u5411\u6d4f\u89c8\u5668\u56de\u5e94\u4e00\u4e2a\u54cd\u5e94\u4fe1\u606f(\u5305\u62ec\u54cd\u5e94\u5934Response Headers\u548c\u54cd\u5e94\u4f53Response Body)","title":"\u5927\u65b9\u5411\u5206\u4e3a\u4e09\u4e2a\u8fc7\u7a0b"},{"location":"%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/Dns%E8%AF%A6%E8%A7%A3/#dns_3","text":"1.\u5148\u5411\u672c\u5730dns\u7f13\u5b58\u67e5\u770b\u6709\u6ca1\u6709\u8be5\u57df\u540d\u5bf9\u5e94\u7684ip\u5730\u5740\uff0c\u6709\u76f4\u63a5\u8df3\u51fa\uff0c\u6ca1\u6709\u63a5\u7740\u5f80\u4e0b 2.\u5411\u6839dns\u670d\u52a1\u5668\u8be2\u95ee\u57df\u540d\u5bf9\u5e94\u7684ip\u5730\u5740(\u6839dns\u670d\u52a1\u5668\u4f1a\u8ba9\u4ed6\u53bb\u67e5\u8be2\u9876\u7ea7dns\u670d\u52a1\u5668) 3.\u5411\u9876\u7ea7dns\u670d\u52a1\u5668\u8be2\u95ee\u57df\u540d\u5bf9\u5e94\u7684ip\u5730\u5740(\u9876\u7ea7dns\u670d\u52a1\u5668\u4f1a\u8ba9\u4ed6\u53bb\u67e5\u8be2\u6743\u5a01dns\u670d\u52a1\u5668) 4.\u5411\u6743\u5a01dns\u670d\u52a1\u5668\u8be2\u95ee\u57df\u540d\u5bf9\u5e94\u7684ip\u5730\u5740(\u6743\u5a01dns\u670d\u52a1\u5668\u4f1a\u8ba9\u4ed6\u53bb\u67e5\u8be2\u4e8c\u7ea7dns\u670d\u52a1\u5668) 5.\u5411\u4e8c\u7ea7dns\u670d\u52a1\u5668\u8be2\u95ee\u57df\u540d\u5bf9\u5e94\u7684ip\u5730\u5740(\u4e8c\u7ea7dns\u670d\u52a1\u5668\u4f1a\u8fd4\u56de\u5bf9\u5e94\u7684ip\u5730\u5740) 6.\u63a5\u6536\u5230ip\u5730\u5740\u540e\uff0c\u4f1a\u5148\u628aip\u548c\u57df\u540d\u5bf9\u5e94\u5173\u7cfb\u4fdd\u5b58\u5230\u672c\u5730dns\u7f13\u5b58\uff0c\u4ee5\u4fbf\u4e0b\u6b21\u65b9\u4fbf\u8bbf\u95ee","title":"\u4f46\u662fdns\u89e3\u6790\u7684\u8fc7\u7a0b\u53c8\u53ef\u5206\u4e3a\u4e0b\u9762\u516d\u4e2a\u8fc7\u7a0b\uff0c\u5177\u4f53\u770b\u4e0b\u56fe"},{"location":"%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/http%E5%8D%8F%E8%AE%AE/","text":"http \u7b80\u4ecb \u5de5\u4f5c\u539f\u7406 \u7279\u6027 HTTP\u72b6\u6001\u7801 http\u548chttps \u533a\u522b http2\u4e0ehttp1\u7684\u533a\u522b http \u00b6 \u7b80\u4ecb \u00b6 \u8d85\u6587\u672c\u4f20\u8f93\u534f\u8bae\uff08\u82f1\u6587\uff1a**H**yper**T**ext **T**ransfer **P**rotocol\uff0c\u7f29\u5199\uff1aHTTP\uff09\u662f\u4e00\u79cd\u7528\u4e8e\u5206\u5e03\u5f0f\u3001\u534f\u4f5c\u5f0f\u548c\u8d85\u5a92\u4f53\u4fe1\u606f\u7cfb\u7edf\u7684\u5e94\u7528\u5c42\u534f\u8bae\u3002HTTP\u662f\u4e07\u7ef4\u7f51\u7684\u6570\u636e\u901a\u4fe1\u7684\u57fa\u7840\u3002 \u5de5\u4f5c\u539f\u7406 \u00b6 **http\u534f\u8bae\u662f\u57fa\u4e8eTCP/IP\u534f\u8bae\u4e4b\u4e0a\u7684\u5e94\u7528\u5c42\u534f\u8bae\u3002**\u800cTCP/IP\u662f\u4f20\u8f93\u5c42\u534f\u8bae http\u662f\u57fa\u4e8e\u8bf7\u6c42-\u54cd\u5e94\u7684\u6a21\u5f0f\u5904\u7406,HTTP\u534f\u8bae\u89c4\u5b9a,\u8bf7\u6c42\u4ece\u5ba2\u6237\u7aef\u53d1\u51fa,\u6700\u540e\u670d\u52a1\u5668\u7aef\u54cd\u5e94\u8be5\u8bf7\u6c42\u5e76 \u8fd4\u56de\u3002\u6362\u53e5\u8bdd\u8bf4,\u80af\u5b9a\u662f\u5148\u4ece\u5ba2\u6237\u7aef\u5f00\u59cb\u5efa\u7acb\u901a\u4fe1\u7684,\u670d\u52a1\u5668\u7aef\u5728\u6ca1\u6709 \u63a5\u6536\u5230\u8bf7\u6c42\u4e4b\u524d\u4e0d\u4f1a\u53d1\u9001\u54cd\u5e94 \u7279\u6027 \u00b6 \u57fa\u4e8e\u8bf7\u6c42\u54cd\u5e94 \u65e0\u72b6\u6001 \u65e0\u8fde\u63a5 HTTP\u72b6\u6001\u7801 \u00b6 \u6240\u6709HTTP\u54cd\u5e94\u7684\u7b2c\u4e00\u884c\u90fd\u662f\u72b6\u6001\u884c\uff0c\u4f9d\u6b21\u662f\u5f53\u524dHTTP\u7248\u672c\u53f7\uff0c3\u4f4d\u6570\u5b57\u7ec4\u6210\u7684\u72b6\u6001\u4ee3\u7801\uff0c\u4ee5\u53ca\u63cf\u8ff0\u72b6\u6001\u7684\u77ed\u8bed\uff0c\u5f7c\u6b64\u7531\u7a7a\u683c\u5206\u9694\u3002 \u72b6\u6001\u4ee3\u7801\u7684\u7b2c\u4e00\u4e2a\u6570\u5b57\u4ee3\u8868\u5f53\u524d\u54cd\u5e94\u7684\u7c7b\u578b\uff1a 1xx\u6d88\u606f\u2014\u2014\u8bf7\u6c42\u5df2\u88ab\u670d\u52a1\u5668\u63a5\u6536\uff0c\u7ee7\u7eed\u5904\u7406 2xx\u6210\u529f\u2014\u2014\u8bf7\u6c42\u5df2\u6210\u529f\u88ab\u670d\u52a1\u5668\u63a5\u6536\u3001\u7406\u89e3\u3001\u5e76\u63a5\u53d7 3xx\u91cd\u5b9a\u5411\u2014\u2014\u9700\u8981\u540e\u7eed\u64cd\u4f5c\u624d\u80fd\u5b8c\u6210\u8fd9\u4e00\u8bf7\u6c42 4xx\u8bf7\u6c42\u9519\u8bef\u2014\u2014\u8bf7\u6c42\u542b\u6709\u8bcd\u6cd5\u9519\u8bef\u6216\u8005\u65e0\u6cd5\u88ab\u6267\u884c 5xx\u670d\u52a1\u5668\u9519\u8bef\u2014\u2014\u670d\u52a1\u5668\u5728\u5904\u7406\u67d0\u4e2a\u6b63\u786e\u8bf7\u6c42\u65f6\u53d1\u751f\u9519\u8bef http\u548chttps \u00b6 HTTPS \uff08\u5168\u79f0\uff1aHyper Text Transfer Protocol over SecureSocket Layer\uff09\uff0c\u662f\u4ee5\u5b89\u5168\u4e3a\u76ee\u6807\u7684 HTTP \u901a\u9053\uff0c\u5728HTTP\u7684\u57fa\u7840\u4e0a\u901a\u8fc7\u4f20\u8f93\u52a0\u5bc6\u548c \u8eab\u4efd\u8ba4\u8bc1 \u4fdd\u8bc1\u4e86\u4f20\u8f93\u8fc7\u7a0b\u7684\u5b89\u5168\u6027 [1] \u3002HTTPS \u5728HTTP \u7684\u57fa\u7840\u4e0b\u52a0\u5165 SSL \u5c42\uff0cHTTPS \u7684\u5b89\u5168\u57fa\u7840\u662f SSL\uff0c\u56e0\u6b64\u52a0\u5bc6\u7684\u8be6\u7ec6\u5185\u5bb9\u5c31\u9700\u8981 SSL\u3002 HTTPS \u5b58\u5728\u4e0d\u540c\u4e8e HTTP \u7684\u9ed8\u8ba4\u7aef\u53e3\u53ca\u4e00\u4e2a\u52a0\u5bc6/\u8eab\u4efd\u9a8c\u8bc1\u5c42\uff08\u5728 HTTP\u4e0e TCP \u4e4b\u95f4\uff09\u3002 \u533a\u522b \u00b6 ''' HTTP\u534f\u8bae\u4f20\u8f93\u7684\u6570\u636e\u90fd\u662f\u672a\u52a0\u5bc6\u7684\uff0c\u4e5f\u5c31\u662f\u660e\u6587\u7684\uff0c\u56e0\u6b64\u4f7f\u7528HTTP\u534f\u8bae\u4f20\u8f93\u9690\u79c1\u4fe1\u606f\u975e\u5e38\u4e0d\u5b89 \u5168\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u8fd9\u4e9b\u9690\u79c1\u6570\u636e\u80fd\u52a0\u5bc6\u4f20\u8f93\uff0c\u4e8e\u662f\u7f51\u666f\u516c\u53f8\u8bbe\u8ba1\u4e86SSL\uff08Secure Sockets Layer\uff09\u534f\u8bae\u7528\u4e8e \u5bf9HTTP\u534f\u8bae\u4f20\u8f93\u7684\u6570\u636e\u8fdb\u884c\u52a0\u5bc6\uff0c\u4ece\u800c\u5c31\u8bde\u751f\u4e86HTTPS\u3002\u7b80\u5355\u6765\u8bf4\uff0cHTTPS\u534f\u8bae\u662f\u7531SSL+HTTP\u534f \u8bae\u6784\u5efa\u7684\u53ef\u8fdb\u884c\u52a0\u5bc6\u4f20\u8f93\u3001\u8eab\u4efd\u8ba4\u8bc1\u7684\u7f51\u7edc\u534f\u8bae\uff0c\u8981\u6bd4http\u534f\u8bae\u5b89\u5168\u3002 HTTPS\u548cHTTP\u7684\u533a\u522b\u4e3b\u8981\u5982\u4e0b\uff1a 1\u3001https\u534f\u8bae\u9700\u8981\u5230ca\u7533\u8bf7\u8bc1\u4e66\uff0c\u4e00\u822c\u514d\u8d39\u8bc1\u4e66\u8f83\u5c11\uff0c\u56e0\u800c\u9700\u8981\u4e00\u5b9a\u8d39\u7528\u3002 2\u3001http\u662f\u8d85\u6587\u672c\u4f20\u8f93\u534f\u8bae\uff0c\u4fe1\u606f\u662f\u660e\u6587\u4f20\u8f93\uff0chttps\u5219\u662f\u5177\u6709\u5b89\u5168\u6027\u7684ssl\u52a0\u5bc6\u4f20\u8f93\u534f\u8bae\u3002 3\u3001http\u548chttps\u4f7f\u7528\u7684\u662f\u5b8c\u5168\u4e0d\u540c\u7684\u8fde\u63a5\u65b9\u5f0f\uff0c\u7528\u7684\u7aef\u53e3\u4e5f\u4e0d\u4e00\u6837\uff0c\u524d\u8005\u662f80\uff0c\u540e\u8005\u662f443\u3002 4\u3001http\u7684\u8fde\u63a5\u5f88\u7b80\u5355\uff0c\u662f\u65e0\u72b6\u6001\u7684\uff1bHTTPS\u534f\u8bae\u662f\u7531SSL+HTTP\u534f\u8bae\u6784\u5efa\u7684\u53ef\u8fdb\u884c\u52a0\u5bc6\u4f20\u8f93\u3001 \u8eab\u4efd\u8ba4\u8bc1\u7684\u7f51\u7edc\u534f\u8bae\uff0c\u6bd4http\u534f\u8bae\u5b89\u5168\u3002 ''' http2\u4e0ehttp1\u7684\u533a\u522b \u00b6 HTTP/2\u91c7\u7528\u4e8c\u8fdb\u5236\u683c\u5f0f\u800c\u975e\u6587\u672c\u683c\u5f0f HTTP/2\u662f\u5b8c\u5168\u591a\u8def\u590d\u7528\u7684\uff0c\u800c\u975e\u6709\u5e8f\u5e76\u963b\u585e\u7684\u2014\u2014\u53ea\u9700\u4e00\u4e2a\u8fde\u63a5\u5373\u53ef\u5b9e\u73b0\u5e76\u884c \u4f7f\u7528\u62a5\u5934\u538b\u7f29\uff0cHTTP/2\u964d\u4f4e\u4e86\u5f00\u9500 HTTP/2\u8ba9\u670d\u52a1\u5668\u53ef\u4ee5\u5c06\u54cd\u5e94\u4e3b\u52a8\u201c\u63a8\u9001\u201d\u5230\u5ba2\u6237\u7aef\u7f13\u5b58\u4e2d","title":"http\u534f\u8bae"},{"location":"%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/http%E5%8D%8F%E8%AE%AE/#http","text":"","title":"http"},{"location":"%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/http%E5%8D%8F%E8%AE%AE/#_1","text":"\u8d85\u6587\u672c\u4f20\u8f93\u534f\u8bae\uff08\u82f1\u6587\uff1a**H**yper**T**ext **T**ransfer **P**rotocol\uff0c\u7f29\u5199\uff1aHTTP\uff09\u662f\u4e00\u79cd\u7528\u4e8e\u5206\u5e03\u5f0f\u3001\u534f\u4f5c\u5f0f\u548c\u8d85\u5a92\u4f53\u4fe1\u606f\u7cfb\u7edf\u7684\u5e94\u7528\u5c42\u534f\u8bae\u3002HTTP\u662f\u4e07\u7ef4\u7f51\u7684\u6570\u636e\u901a\u4fe1\u7684\u57fa\u7840\u3002","title":"\u7b80\u4ecb"},{"location":"%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/http%E5%8D%8F%E8%AE%AE/#_2","text":"**http\u534f\u8bae\u662f\u57fa\u4e8eTCP/IP\u534f\u8bae\u4e4b\u4e0a\u7684\u5e94\u7528\u5c42\u534f\u8bae\u3002**\u800cTCP/IP\u662f\u4f20\u8f93\u5c42\u534f\u8bae http\u662f\u57fa\u4e8e\u8bf7\u6c42-\u54cd\u5e94\u7684\u6a21\u5f0f\u5904\u7406,HTTP\u534f\u8bae\u89c4\u5b9a,\u8bf7\u6c42\u4ece\u5ba2\u6237\u7aef\u53d1\u51fa,\u6700\u540e\u670d\u52a1\u5668\u7aef\u54cd\u5e94\u8be5\u8bf7\u6c42\u5e76 \u8fd4\u56de\u3002\u6362\u53e5\u8bdd\u8bf4,\u80af\u5b9a\u662f\u5148\u4ece\u5ba2\u6237\u7aef\u5f00\u59cb\u5efa\u7acb\u901a\u4fe1\u7684,\u670d\u52a1\u5668\u7aef\u5728\u6ca1\u6709 \u63a5\u6536\u5230\u8bf7\u6c42\u4e4b\u524d\u4e0d\u4f1a\u53d1\u9001\u54cd\u5e94","title":"\u5de5\u4f5c\u539f\u7406"},{"location":"%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/http%E5%8D%8F%E8%AE%AE/#_3","text":"\u57fa\u4e8e\u8bf7\u6c42\u54cd\u5e94 \u65e0\u72b6\u6001 \u65e0\u8fde\u63a5","title":"\u7279\u6027"},{"location":"%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/http%E5%8D%8F%E8%AE%AE/#http_1","text":"\u6240\u6709HTTP\u54cd\u5e94\u7684\u7b2c\u4e00\u884c\u90fd\u662f\u72b6\u6001\u884c\uff0c\u4f9d\u6b21\u662f\u5f53\u524dHTTP\u7248\u672c\u53f7\uff0c3\u4f4d\u6570\u5b57\u7ec4\u6210\u7684\u72b6\u6001\u4ee3\u7801\uff0c\u4ee5\u53ca\u63cf\u8ff0\u72b6\u6001\u7684\u77ed\u8bed\uff0c\u5f7c\u6b64\u7531\u7a7a\u683c\u5206\u9694\u3002 \u72b6\u6001\u4ee3\u7801\u7684\u7b2c\u4e00\u4e2a\u6570\u5b57\u4ee3\u8868\u5f53\u524d\u54cd\u5e94\u7684\u7c7b\u578b\uff1a 1xx\u6d88\u606f\u2014\u2014\u8bf7\u6c42\u5df2\u88ab\u670d\u52a1\u5668\u63a5\u6536\uff0c\u7ee7\u7eed\u5904\u7406 2xx\u6210\u529f\u2014\u2014\u8bf7\u6c42\u5df2\u6210\u529f\u88ab\u670d\u52a1\u5668\u63a5\u6536\u3001\u7406\u89e3\u3001\u5e76\u63a5\u53d7 3xx\u91cd\u5b9a\u5411\u2014\u2014\u9700\u8981\u540e\u7eed\u64cd\u4f5c\u624d\u80fd\u5b8c\u6210\u8fd9\u4e00\u8bf7\u6c42 4xx\u8bf7\u6c42\u9519\u8bef\u2014\u2014\u8bf7\u6c42\u542b\u6709\u8bcd\u6cd5\u9519\u8bef\u6216\u8005\u65e0\u6cd5\u88ab\u6267\u884c 5xx\u670d\u52a1\u5668\u9519\u8bef\u2014\u2014\u670d\u52a1\u5668\u5728\u5904\u7406\u67d0\u4e2a\u6b63\u786e\u8bf7\u6c42\u65f6\u53d1\u751f\u9519\u8bef","title":"HTTP\u72b6\u6001\u7801"},{"location":"%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/http%E5%8D%8F%E8%AE%AE/#httphttps","text":"HTTPS \uff08\u5168\u79f0\uff1aHyper Text Transfer Protocol over SecureSocket Layer\uff09\uff0c\u662f\u4ee5\u5b89\u5168\u4e3a\u76ee\u6807\u7684 HTTP \u901a\u9053\uff0c\u5728HTTP\u7684\u57fa\u7840\u4e0a\u901a\u8fc7\u4f20\u8f93\u52a0\u5bc6\u548c \u8eab\u4efd\u8ba4\u8bc1 \u4fdd\u8bc1\u4e86\u4f20\u8f93\u8fc7\u7a0b\u7684\u5b89\u5168\u6027 [1] \u3002HTTPS \u5728HTTP \u7684\u57fa\u7840\u4e0b\u52a0\u5165 SSL \u5c42\uff0cHTTPS \u7684\u5b89\u5168\u57fa\u7840\u662f SSL\uff0c\u56e0\u6b64\u52a0\u5bc6\u7684\u8be6\u7ec6\u5185\u5bb9\u5c31\u9700\u8981 SSL\u3002 HTTPS \u5b58\u5728\u4e0d\u540c\u4e8e HTTP \u7684\u9ed8\u8ba4\u7aef\u53e3\u53ca\u4e00\u4e2a\u52a0\u5bc6/\u8eab\u4efd\u9a8c\u8bc1\u5c42\uff08\u5728 HTTP\u4e0e TCP \u4e4b\u95f4\uff09\u3002","title":"http\u548chttps"},{"location":"%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/http%E5%8D%8F%E8%AE%AE/#_4","text":"''' HTTP\u534f\u8bae\u4f20\u8f93\u7684\u6570\u636e\u90fd\u662f\u672a\u52a0\u5bc6\u7684\uff0c\u4e5f\u5c31\u662f\u660e\u6587\u7684\uff0c\u56e0\u6b64\u4f7f\u7528HTTP\u534f\u8bae\u4f20\u8f93\u9690\u79c1\u4fe1\u606f\u975e\u5e38\u4e0d\u5b89 \u5168\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u8fd9\u4e9b\u9690\u79c1\u6570\u636e\u80fd\u52a0\u5bc6\u4f20\u8f93\uff0c\u4e8e\u662f\u7f51\u666f\u516c\u53f8\u8bbe\u8ba1\u4e86SSL\uff08Secure Sockets Layer\uff09\u534f\u8bae\u7528\u4e8e \u5bf9HTTP\u534f\u8bae\u4f20\u8f93\u7684\u6570\u636e\u8fdb\u884c\u52a0\u5bc6\uff0c\u4ece\u800c\u5c31\u8bde\u751f\u4e86HTTPS\u3002\u7b80\u5355\u6765\u8bf4\uff0cHTTPS\u534f\u8bae\u662f\u7531SSL+HTTP\u534f \u8bae\u6784\u5efa\u7684\u53ef\u8fdb\u884c\u52a0\u5bc6\u4f20\u8f93\u3001\u8eab\u4efd\u8ba4\u8bc1\u7684\u7f51\u7edc\u534f\u8bae\uff0c\u8981\u6bd4http\u534f\u8bae\u5b89\u5168\u3002 HTTPS\u548cHTTP\u7684\u533a\u522b\u4e3b\u8981\u5982\u4e0b\uff1a 1\u3001https\u534f\u8bae\u9700\u8981\u5230ca\u7533\u8bf7\u8bc1\u4e66\uff0c\u4e00\u822c\u514d\u8d39\u8bc1\u4e66\u8f83\u5c11\uff0c\u56e0\u800c\u9700\u8981\u4e00\u5b9a\u8d39\u7528\u3002 2\u3001http\u662f\u8d85\u6587\u672c\u4f20\u8f93\u534f\u8bae\uff0c\u4fe1\u606f\u662f\u660e\u6587\u4f20\u8f93\uff0chttps\u5219\u662f\u5177\u6709\u5b89\u5168\u6027\u7684ssl\u52a0\u5bc6\u4f20\u8f93\u534f\u8bae\u3002 3\u3001http\u548chttps\u4f7f\u7528\u7684\u662f\u5b8c\u5168\u4e0d\u540c\u7684\u8fde\u63a5\u65b9\u5f0f\uff0c\u7528\u7684\u7aef\u53e3\u4e5f\u4e0d\u4e00\u6837\uff0c\u524d\u8005\u662f80\uff0c\u540e\u8005\u662f443\u3002 4\u3001http\u7684\u8fde\u63a5\u5f88\u7b80\u5355\uff0c\u662f\u65e0\u72b6\u6001\u7684\uff1bHTTPS\u534f\u8bae\u662f\u7531SSL+HTTP\u534f\u8bae\u6784\u5efa\u7684\u53ef\u8fdb\u884c\u52a0\u5bc6\u4f20\u8f93\u3001 \u8eab\u4efd\u8ba4\u8bc1\u7684\u7f51\u7edc\u534f\u8bae\uff0c\u6bd4http\u534f\u8bae\u5b89\u5168\u3002 '''","title":"\u533a\u522b"},{"location":"%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/http%E5%8D%8F%E8%AE%AE/#http2http1","text":"HTTP/2\u91c7\u7528\u4e8c\u8fdb\u5236\u683c\u5f0f\u800c\u975e\u6587\u672c\u683c\u5f0f HTTP/2\u662f\u5b8c\u5168\u591a\u8def\u590d\u7528\u7684\uff0c\u800c\u975e\u6709\u5e8f\u5e76\u963b\u585e\u7684\u2014\u2014\u53ea\u9700\u4e00\u4e2a\u8fde\u63a5\u5373\u53ef\u5b9e\u73b0\u5e76\u884c \u4f7f\u7528\u62a5\u5934\u538b\u7f29\uff0cHTTP/2\u964d\u4f4e\u4e86\u5f00\u9500 HTTP/2\u8ba9\u670d\u52a1\u5668\u53ef\u4ee5\u5c06\u54cd\u5e94\u4e3b\u52a8\u201c\u63a8\u9001\u201d\u5230\u5ba2\u6237\u7aef\u7f13\u5b58\u4e2d","title":"http2\u4e0ehttp1\u7684\u533a\u522b"},{"location":"%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/%E7%BD%91%E7%BB%9C%E6%A8%A1%E5%9E%8B/","text":"\u7f51\u7edc\u6a21\u578b\u5206\u5c42 OSI(open system Interconnection)\u4e03\u5c42\u6a21\u578b\u7ed3\u6784 \u4e09\u79cd\u901a\u8baf\u6a21\u5f0f \u5355\u64adunicast \u591a\u64ad(\u7ec4\u64ad)multicast \u5e7f\u64adbroadcast LAN\u7ec4\u6210 \u786c\u4ef6 Coaxial\u540c\u8f74\u7535\u7f06 Twisted-Pair \u53cc\u7ede\u7ebf Fiber-Optic \u5149\u7ea4\u6a21\u5757 Unshielded(UTP)\u975e\u5c4f\u853d\u5f0f: STP\u751f\u6210\u6811\u534f\u8bae wlan tcp/ip\u534f\u8bae \u5206\u5c42 TCP\u7279\u6027 \u4e09\u6b21\u63e1\u624b\u548c\u56db\u6b21\u6325\u624b \u4e09\u6b21\u63e1\u624b \u56db\u6b21\u6325\u624b \u7f51\u7edc\u6a21\u578b\u5206\u5c42 \u00b6 OSI(open system Interconnection)\u4e03\u5c42\u6a21\u578b\u7ed3\u6784 \u00b6 \u7269\u7406\u5c42:bit\u4f4d \u771f\u5b9e\u4e16\u754c\u4e2d\u7684\u8fde\u63a5,\u53cc\u7ede\u7ebf,\u5149\u7ea4,\u65e0\u7ebf\u7b49\u65b9\u5f0f. \u4e8c\u8fdb\u5236\u4f20\u8f93,\u53d1\u9001\u9ad8\u4f4e\u7535\u5e73,\u5355\u4f4d:\u6bd4\u7279,\u53ea\u770b010101 \u4e3a\u542f\u52a8,\u7ef4\u62a4\u4ee5\u53ca\u5173\u95ed\u7269\u7406\u94fe\u8def\u5b9a\u4e49\u4e86\u7535\u6c14\u89c4\u8303,\u673a\u68b0\u89c4\u8303\u548c\u529f\u80fd\u89c4\u8303. \u6570\u636e\u94fe\u8def\u5c42:frame\u5e27 \u8bbf\u95ee\u4ecb\u8d28,\u5b9a\u4e49\u4e86\u7269\u7406\u5730\u5740 \u7269\u7406\u5730\u5740,\u53c8\u53ebMAC\u5730\u5740,\u5168\u79f0Media Access Control \u5b9a\u4e49\u5982\u4f55\u683c\u5f0f\u5316\u6570\u636e\u4e00\u8fb9\u8fdb\u884c\u4f20\u8f93\u4ee5\u53ca\u5982\u4f55\u63a7\u5236\u5bf9\u7f51\u7edc\u7684\u8bbf\u95ee \u652f\u6301\u9519\u8bef\u68c0\u6d4b \u5b9e\u73b0\u540c\u4e00\u7f51\u6bb5\u5185\u7684\u94fe\u8def\u5c42\u901a\u8baf(\u4e00\u822c\u901a\u8fc7\u4ea4\u6362\u673a) \u6570\u636e\u5e27(frame)\u4e0e\u6bd4\u7279\u4e4b\u95f4\u7684\u8f6c\u6362 \u7f51\u7edc\u5c42:packet\u5305,\u62a5\u6587 \u6570\u636e\u4f20\u8f93,\u5b9a\u4e49\u4e86\u903b\u8f91\u5730\u5740(IP\u5730\u5740) \u5b9a\u4e49\u4e86\u8def\u7531,\u786e\u5b9a\u8def\u7531\u6570\u636e\u5305 \u9009\u62e9\u4f20\u9012\u6570\u636e\u7684\u6700\u4f73\u8def\u5f84(\u8def\u7531), \u8def\u7531\u5c31\u662f\u9009\u62e9\u8def\u5f84 \u652f\u6301\u903b\u8f91\u5bfb\u5740\u548c\u8def\u5f84\u9009\u62e9 IP\u5730\u5740,\u7528\u4e8e\u552f\u4e00\u6807\u8bc6\u8ba1\u7b97\u673a\u7f51\u8def\u5730\u5740.\u70b9\u5206\u56db\u6bb5\u5341\u8fdb\u5236IPV4/6\u7684IP\u5730\u5740 \u4f20\u8f93\u5c42:segment\u6bb5 TCP/UDP\u534f\u8bae,\u90fd\u662f\u57fa\u4e8e\u7aef\u53e3\u5de5\u4f5c\u7684.\u5de5\u4f5c\u5728\u4f20\u8f93\u5c42 \u7aef\u53e3\u53f7:\u8868\u793a\u7535\u8111\u4e0a\u67d0\u4e00\u8f6f\u4ef6 \u7aef\u53e3\u53f7\u8303\u56f4:0,65535 \u6ce8\u610f: \u64cd\u4f5c\u7cfb\u7edf\u4e2d,0~1023\u7684\u7aef\u53e3\u90fd\u88ab\u7ba1\u7406\u5458\u4f7f\u7528 \u5c3d\u91cf\u4f7f\u75288000\u4ee5\u540e\u7684\u7aef\u53e3\u53f7 \u5ba2\u6237\u7aef\u7aef\u53e3\u4e00\u822c\u968f\u673a\u4e0d\u56fa\u5b9a,\u670d\u52a1\u7aef\u7aef\u53e3\u56fa\u5b9a \u5f00\u53d1\u4e2d\u5e38\u7528\u7aef\u53e3\u53f7: \u200b mysql:3306 \u200b mongodb:27017 \u200b Django:8000 \u200b Tomcat:8080 \u200b Flask:5000 \u200b Redis:6379 \u200b http\u670d\u52a1\u7aef\u4f7f\u752880\u63a5\u53e3 \u200b https\u670d\u52a1\u7aef\u4f7f\u7528443\u63a5\u53e3 \u200b ssh\u670d\u52a1\u7aef\u53e3\u4f7f\u752822\u63a5\u53e3 \u200b ftp\u670d\u52a1\u7aef\u53e3\u4f7f\u752821\u63a5\u53e3 \u200b smtp\u670d\u52a1\u7aef\u53e3\u4f7f\u752825\u63a5\u53e3 \u200b pop\u670d\u52a1\u7aef\u53e3\u4f7f\u7528110\u63a5\u53e3 \u4f20\u8f93\u95ee\u9898:\u5b9e\u73b0\u7ec8\u7aef\u5bf9\u7ec8\u7aef\u7684\u901a\u8baf \u7528\u4e8e\u8fc7\u8def\u7531\u5668\u7684\u8de8\u7f51\u6bb5\u901a\u8baf \u786e\u4fdd\u6570\u636e\u4f20\u8f93\u7684\u53ef\u9760\u6027,\u53ef\u8c03\u63a7\u4f20\u8f93\u901f\u5ea6\u6765\u4fdd\u8bc1\u4f20\u8f93 \u5efa\u7acb.\u7ef4\u62a4\u548c\u7ec8\u6b62\u865a\u62df\u7535\u8def \u901a\u8fc7\u9519\u8bef\u68c0\u6d4b\u548c\u6062\u590d,,\u5177\u6709\u4e22\u5305\u7ea0\u9519,\u6062\u590d\u529f\u80fd \u4fe1\u606f\u6d41\u63a7\u5236\u6765\u4fdd\u969c\u53ef\u9760\u6027 \u4f1a\u8bdd\u5c42 :\u7f51\u6bb5 message \u4e3b\u673a\u95f4\u901a\u4fe1 \u5efa\u7acb,\u7ba1\u7406\u548c\u7ec8\u6b62\u5728\u5e94\u7528\u7a0b\u5e8f\u4e4b\u95f4\u7684\u4f1a\u8bdd \u8868\u793a\u5c42 \u6570\u636e\u8868\u793a \u786e\u4fdd\u63a5\u6536\u7cfb\u7edf\u53ef\u4ee5\u8bfb\u51fa\u8be5\u6570\u636e \u683c\u5f0f\u5316\u6570\u636e,utf-8,unicode\u7b49\u5728\u8868\u793a\u5c42 \u6784\u5efa\u6570\u636e \u534f\u5546\u7528\u4e8e\u5e94\u7528\u5c42\u7684\u6570\u636e\u4f20\u8f93\u8bed\u6cd5 \u63d0\u4f9b\u52a0\u5bc6, \u5e94\u7528\u5c42 \u8fdb\u7a0b\u5728\u5e94\u7528\u5c42 http/ftp \u7f51\u7edc\u8fdb\u7a0b\u8bbf\u95ee\u5e94\u7528\u5c42 \u4e3a\u5e94\u7528\u7a0b\u5e8f\u8fdb\u7a0b(\u6bd4\u5982:\u7535\u5b50\u90ae\u4ef6,\u6587\u4ef6\u4f20\u8f93\u548c\u7ec8\u7aef\u4eff\u771f)\u63d0\u4f9b\u7f51\u8def\u670d\u52a1 \u63d0\u4f9b\u7528\u6237\u8eab\u4efd\u9a8c\u8bc1 \u4e09\u79cd\u901a\u8baf\u6a21\u5f0f \u00b6 \u5355\u64adunicast \u00b6 \u4ee5\u4e00\u4e2a\u4e3b\u673a\u4f4d\u76ee\u6807\u53d1\u9001\u4fe1\u606f,\u5176\u4ed6\u4e3b\u673a\u4e5f\u53ef\u80fd\u4f1a\u6536\u5230,\u4f46\u662f\u5176\u4ed6\u4e3b\u673a\u4e0d\u5173\u5fc3\u6b64\u6570\u636e \u591a\u64ad(\u7ec4\u64ad)multicast \u00b6 \u76ee\u6807\u662f\u4e00\u90e8\u5206\u4e3b\u673a \u5e7f\u64adbroadcast \u00b6 \u76ee\u6807\u662f\u6240\u6709\u4e3b\u673a(\u6709\u4e00\u5b9a\u8303\u56f4\u5185\u7684\u6240\u6709) \u80fd\u7528\u7ec4\u64ad\u5c31\u522b\u7528\u5e7f\u64ad,\u5e7f\u64ad\u4f1a\u5e72\u6270\u7528\u6237,\u5e7f\u64ad\u98ce\u66b4 \u4e0d\u80fd\u8de8\u5c40\u57df\u7f51\u901a\u8baf LAN\u7ec4\u6210 \u00b6 \u786c\u4ef6 \u00b6 Coaxial\u540c\u8f74\u7535\u7f06 \u00b6 10Base2 \u6700\u592710M,\u4e24\u4e2a\u7aef\u53e3\u95f4\u6700\u5927\u4f20\u8f93\u4e3e\u4f8b\u4e3a200M,(\u5b9e\u9645\u4e3a185\u7c73) 10Base5 \u6700\u592710M,\u4e24\u4e2a\u7aef\u53e3\u95f4\u6700\u5927\u4f20\u8f93\u4e3e\u4f8b\u4e3a500M(\u4e2d\u95f4\u6709\u4e2a\u6bd4\u8f83\u7c97,\u5927\u62c7\u54e5\u90a3\u4e48\u7c97\u7684\u82af,\u592a\u786c,\u5f2f\u4e0d\u52a8) Twisted-Pair \u53cc\u7ede\u7ebf \u00b6 10BaseT \u57fa\u5e26\u4f20\u8f93,T\u8868\u793a\u53cc\u7ede\u7ebf,\u6700\u9ad8\u53ef\u4ee5\u8fbe\u523010G\u4f20\u8f93\u901f\u5ea6 \u53cc\u7ede\u4e3a\u4e86\u62b5\u6d88\u7535\u78c1\u5e72\u6270 \u6700\u5927\u4f20\u8f93\u8ddd\u79bb100\u7c73 \u57fa\u5e26:\u4f20\u8f93\u6570\u5b57\u4fe1\u53f7 \u5bbd\u5e26:\u4f20\u6a21\u62df\u4fe1\u53f7 \u5206\u7c7b: \u200b Unshielded(UTP)\u975e\u5c4f\u853d\u5f0f: \u200b Shielded(STP)\u5c4f\u853d\u5f0f:\u6210\u672c\u9ad8 Fiber-Optic \u5149\u7ea4\u6a21\u5757 \u00b6 \u91cc\u9762\u662f\u4e24\u6839\u73bb\u7483\u7ea4\u7ef4 \u670d\u52a1\u5668\u63a5\u53e3\u9700\u8981\u6539\u6210\u4e13\u7528\u7684\u5149\u7ea4\u6a21\u5757 Unshielded(UTP)\u975e\u5c4f\u853d\u5f0f: \u00b6 \u200b 1\u6a59\u767d/2\u6a59/3\u7eff\u767d/4\u84dd/5\u84dd\u767d/6\u7eff/7\u68d5\u767d/8\u68d5 \u200b RJ-45 \u5c31\u662f\u6c34\u6676\u5934\u5b50 12\u53d1\u9001\u6570\u636e,36\u63a5\u6536\u6570\u636e \u63a5\u6536\u4e0e\u53d1\u9001\u7ebf\u5e8f\u76f8\u540c,\u79f0\u4e3a\u76f4\u8fde\u7ebf,\u76f8\u53cd,\u79f0\u4e4b\u4e3a\u4ea4\u53c9\u7ebf \u5e38\u7528\u76f4\u8fde\u7ebf,\u56e0\u4e3a\u73b0\u4ee3\u7f51\u5361\u5f88\u667a\u80fd 100M\u5b9e\u9645\u7528\u523012/36\u4e24\u7ec4\u7ebf 1000M\u5b9e\u9645\u7528\u523012/36/78\u4e24\u7ec4\u7ebf T568A: \u4e0eT568A 13,26\u5bf9\u8c03 T568B: 1\u6a59\u767d/2\u6a59/3\u7eff\u767d/4\u84dd/5\u84dd\u767d/6\u7eff/7\u68d5\u767d/8\u68d5 \u96c6\u7ebf\u5668 hub \u4ea4\u6362\u673a switch \u8def\u7531\u5668 router 1000BASE-T GBIC \u5149\u7535\u8f6c\u6362\u63a5\u53e3 \u53ef\u8fbe\u52301000m\u901f\u5ea6 \u200b `\u662fGiga Bitrate Interface Converter\u7f29\u5199,\u662f\u5c06\u5343\u5146\u4f4d\u7535\u4fe1\u53f7\u8f6c\u6362\u4f4d\u5e7f\u4fe1\u597d\u7684\u63a5\u53e3\u8bbe\u5907 STP\u751f\u6210\u6811\u534f\u8bae \u00b6 \u9632\u6b62\u751f\u6210\u56de\u73af wlan \u00b6 \u5305\u62ecwifi(\u4e16\u754c) \u548cwapi(\u4e2d\u56fd\u7528) tcp/ip\u534f\u8bae \u00b6 \u662f\u4e00\u4e2aprotocol stack \u534f\u8bae\u6808 \u5305\u62ecTCP,IP,UDP,ICMP,RIP,TELENT,FTP,SMTP,ARP\u7b49\u8bb8\u591a\u534f\u8bae \u5206\u5c42 \u00b6 tcp/ip\u4e94\u5c42\u5806\u6808 \u5e94\u7528\u5c42(\u5bf9\u5e94osi\u4e2d\u7684\u5e94\u7528\u5c42,\u8868\u793a\u5c42,\u4f1a\u8bdd\u5c42) \u4f20\u8f93\u5c42 \u7f51\u7edc\u5c42 \u6570\u636e\u94fe\u8def\u5c42 \u7269\u7406\u5c42 TCP\u7279\u6027 \u00b6 \u5de5\u4f5c\u5728\u4f20\u8f93\u5c42 \u9762\u5411\u8fde\u63a5\u534f\u8bae \u5168\u53cc\u5de5\u534f\u8bae \u534a\u5173\u95ed,(\u65ad\u5f00\u8fde\u63a5\u65f6\u9700\u8981\u53cc\u65b9\u540c\u610f) \u9519\u8bef\u68c0\u67e5 \u5c06\u6570\u636e\u6253\u5305\u6210\u6bb5,\u6392\u5e8f \u786e\u8ba4\u673a\u5236 \u6570\u636e\u6062\u590d,\u91cd\u4f20 \u6d41\u91cf\u63a7\u5236,\u6ed1\u52a8\u7a97\u53e3 \u62e5\u585e\u63a7\u5236,\u6162\u542f\u52a8\u548c\u62e5\u585e\u907f\u514d\u7b97\u6cd5 AB\u95f4\u901a\u4fe1 A\u5411B\u53d1\u9001\u5e8f\u53f72\u7684\u5305,B\u8fd4\u56deA\u5e8f\u53f7100\u7684\u5305\u548c2+1\u7684\u786e\u8ba4\u53f7 A\u63a5\u6536\u5b8c\u6bd5\u518d\u5411B\u53d1\u9001\u5e8f\u53f7\u4e3a3\u7684\u5305\u548c100+1\u7684\u786e\u8ba4\u53f7 \u4e09\u6b21\u63e1\u624b\u548c\u56db\u6b21\u6325\u624b \u00b6 \u5f53\u5e94\u7528\u7a0b\u5e8f\u60f3\u901a\u8fc7TCP\u534f\u8bae\u5b9e\u73b0\u8fdc\u7a0b\u901a\u4fe1\u65f6\uff0c\u5f7c\u6b64\u4e4b\u95f4\u5fc5\u987b\u5148\u5efa\u7acb\u201c\u53cc\u5411\u201d\u901a\u4fe1\u901a\u9053\uff0c\u57fa\u4e8e\u8be5\u53cc\u5411\u901a\u9053\u5b9e\u73b0\u6570\u636e\u7684\u8fdc\u7a0b\u4ea4\u4e92\uff0c\u8be5\u53cc\u5411\u901a\u9053\u76f4\u9053\u4efb\u610f\u4e00\u65b9\u4e3b\u52a8\u65ad\u5f00\u624d\u4f1a\u5931\u6548 \u4e09\u6b21\u63e1\u624b \u00b6 \u9996\u5148\u670d\u52a1\u7aef\u548c\u5ba2\u6237\u7aef\u90fd\u5904\u4e8eclose\u72b6\u6001\uff0c\u670d\u52a1\u7aef\u8fdb\u7a0b\u5148\u521b\u5efa\u4f20\u8f93\u63a7\u5236\u5757tcp\uff0c\u670d\u52a1\u7aef\u5c31\u8fdb\u5165listen\u72b6\u6001\uff0c\u76d1\u542c\u5ba2\u670d\u7aef\u53d1\u9001\u7684\u8bf7\u6c42\uff1b \u5ba2\u6237\u7aef\u4e3b\u52a8\u60f3\u8981\u548c\u670d\u52a1\u7aef\u5efa\u7acb\u8fde\u63a5\uff0c\u521b\u4f20\u8f93\u63a7\u5236\u5757tcp\uff0c\u5411\u670d\u52a1\u7aef\u53d1\u9001\u8bf7\u6c42\uff0c\u5373\u80fd\u5426\u5efa\u7acb\u5ba2\u6237\u7aef\u5411\u670d\u52a1\u7aef\u7684\u901a\u9053\uff0c\u7136\u540e\u5ba2\u6237\u7aef\u5c31\u8fdb\u5165\u4e86SYN-SENT(\u540c\u6b65\u5df2\u53d1\u9001)\u72b6\u6001\uff1b \u670d\u52a1\u7aef\u63a5\u53d7\u5230\u5ba2\u670d\u7aef\u7684\u8bf7\u6c42\u540e\uff0c\u540c\u610f\u5ba2\u6237\u7aef\u5efa\u7acb\u901a\u9053\u7684\u8bf7\u6c42\uff0c\u5e76\u8bf7\u6c42\u5efa\u7acb\u670d\u52a1\u7aef\u5411\u5ba2\u670d\u7aef\u7684\u901a\u9053\uff0c\u670d\u52a1\u7aef\u5c06\u56de\u590d\u4fe1\u606f\u548c\u8bf7\u6c42\u4e00\u6b21\u53d1\u9001\u7ed9\u5ba2\u6237\u7aef\uff0c\u7136\u540e\u670d\u52a1\u7aef\u5c31\u8fdb\u4e86SYN-RCVD(\u540c\u6b65\u5df2\u63a5\u53d7)\u72b6\u6001\uff1b \u5ba2\u6237\u7aef\u63a5\u6536\u5230\u670d\u52a1\u7aef\u7684\u56de\u590d\u548c\u8bf7\u6c42\u540e\uff0c\u5ba2\u6237\u7aef\u5411\u670d\u52a1\u7aef\u7684\u901a\u9053\u5c31\u5efa\u7acb\u4e86\uff0c\u5e76\u5904\u7406\u8bf7\u6c42\uff0c\u56de\u590d\u540c\u610f\u5efa\u7acb\u670d\u52a1\u7aef\u5411\u5ba2\u670d\u7aef\u7684\u901a\u9053\uff0c\u7136\u540e\u5ba2\u670d\u7aef\u5c31\u8fdb\u5165\u4e86ESTABLISHED(\u5df2\u5efa\u7acb\u8fde\u63a5)\u72b6\u6001\uff1b \u670d\u52a1\u7aef\u63a5\u6536\u5230\u5ba2\u670d\u7aef\u7684\u56de\u590d\u540e\uff0c\u670d\u52a1\u7aef\u5411\u5ba2\u670d\u7aef\u7684\u901a\u9053\u5c31\u5efa\u7acb\u4e86\uff0c\u6b64\u65f6\u53cc\u5411\u7ba1\u9053\u90fd\u5df2\u5efa\u7acb\uff0c\u670d\u52a1\u7aef\u8fdb\u5165ESTABLISHED(\u5df2\u5efa\u7acb\u8fde\u63a5)\u72b6\u6001\uff0c\u7136\u540e\u53cc\u65b9\u5c31\u53ef\u4ee5\u8fdb\u884c\u8fdc\u7a0b\u901a\u4fe1\u4e86\u3002 \u56db\u6b21\u6325\u624b \u00b6 \u5ba2\u670d\u7aef\u548c\u670d\u52a1\u7aef\u90fd\u5904\u4e8eESTABLISHED\u72b6\u6001\uff0c\u53cc\u65b9\u6b63\u5e38\u901a\u4fe1\uff1b \u5ba2\u6237\u7aef\u4e3b\u52a8\u60f3\u8981\u65ad\u5f00\u8fde\u63a5\uff0c\u5411\u670d\u52a1\u7aef\u53d1\u9001\u8fde\u63a5\u91ca\u653e\u62a5\u6587\uff0c\u6b64\u65f6\u5ba2\u670d\u7aef\u5c31\u4e0d\u5728\u5411\u670d\u52a1\u7aef\u53d1\u9001\u6570\u636e\u4e86\uff0c\u7136\u540e\u5ba2\u6237\u7aef\u5c31\u8fdb\u53bb\u4e86FIN-WAIT-1\u72b6\u6001\uff1b \u670d\u52a1\u7aef\u6536\u5230\u8fde\u63a5\u91ca\u653e\u8bf7\u6c42\u540e\uff0c\u540c\u610f\u8bf7\u6c42\uff0c\u6b64\u65f6\u670d\u52a1\u7aef\u5c31\u8fdb\u5165\u4e86CLOSE-WAIT(\u5173\u95ed\u7b49\u5f85)\u72b6\u6001\uff0c\u5e76\u53d1\u51fa\u786e\u8ba4\u62a5\u6587\uff0c\u7136\u540e\u5ba2\u670d\u7aef\u5411\u670d\u52a1\u7aef\u7684\u901a\u9053\u5c31\u65ad\u5f00\u4e86\uff0c\u8fd9\u65f6\u5019\u5c31\u5904\u4e8e\u534a\u8fde\u63a5\u72b6\u6001\uff08\u53ea\u5269\u4e0b\u670d\u52a1\u7aef\u5411\u5ba2\u670d\u7aef\u7684\u901a\u9053\uff09\uff0c\u4f46\u662f\u670d\u52a1\u7aef\u53ef\u80fd\u8fd8\u6709\u672a\u53d1\u9001\u5b8c\u7684\u6570\u636e\uff1b \u5ba2\u670d\u7aef\u63a5\u6536\u5230\u670d\u52a1\u7aef\u7684\u786e\u8ba4\u8bf7\u6c42\uff0c\u8fdb\u5165FIN-WAIT-2\u72b6\u6001\uff0c\u7b49\u5f85\u670d\u52a1\u7aef\u53d1\u9001\u8fde\u63a5\u91ca\u653e\u8bf7\u6c42\uff1b \uff08\u6570\u636e\u4f20\u8f93\u3002\u3002\u3002\uff09 \u670d\u52a1\u7aef\u5728\u6700\u540e\u7684\u6570\u636e\u53d1\u9001\u5b8c\u6210\u540e\uff0c\u4f1a\u5411\u5ba2\u670d\u7aef\u53d1\u9001\u8fde\u63a5\u91ca\u653e\u8bf7\u6c42\uff0c\u6b64\u65f6\u670d\u52a1\u7aef\u8fdb\u5165LAST-ACK(\u6700\u540e\u786e\u8ba4)\u72b6\u6001\uff0c\u7b49\u5f85\u5ba2\u670d\u7aef\u7684\u6700\u540e\u786e\u8ba4\uff1b \u5ba2\u670d\u7aef\u63a5\u6536\u5230\u670d\u52a1\u7aef\u7684\u8fde\u63a5\u91ca\u653e\u8bf7\u6c42\u540e\uff0c\u5fc5\u987b\u8fd4\u56de\u786e\u8ba4\u4fe1\u606f\uff0c\u6b64\u65f6\u5ba2\u6237\u7aef\u8fdb\u5165TIME-WIAT(\u65f6\u95f4\u7b49\u5f85)\u72b6\u6001\uff0c\u4f46\u6b64\u65f6tcp\u8fde\u63a5\u8fd8\u6ca1\u6709\u91ca\u653e\uff0c\u9700\u8981\u7b49\u5f852\u4e2a\u6700\u957f\u62a5\u6587\u6bb5\u5bff\u547d\u7684\u65f6\u95f4\u540e\uff0c\u64a4\u9500tcp\u63a7\u5236\u5757\uff0c\u8fdb\u5165CLOSE\u72b6\u6001\uff1b \u670d\u52a1\u7aef\u63a5\u6536\u5230\u5ba2\u6237\u7aef\u7684\u786e\u8ba4\u4fe1\u606f\u540e\uff0c\u7acb\u5373\u8fdb\u5165CLOSE\u72b6\u6001\uff0c\u64a4\u9500tcp\uff0c\u7ed3\u675f\u8fde\u63a5\u3002","title":"\u7f51\u7edc\u6a21\u578b"},{"location":"%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/%E7%BD%91%E7%BB%9C%E6%A8%A1%E5%9E%8B/#_1","text":"","title":"\u7f51\u7edc\u6a21\u578b\u5206\u5c42"},{"location":"%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/%E7%BD%91%E7%BB%9C%E6%A8%A1%E5%9E%8B/#osiopen-system-interconnection","text":"\u7269\u7406\u5c42:bit\u4f4d \u771f\u5b9e\u4e16\u754c\u4e2d\u7684\u8fde\u63a5,\u53cc\u7ede\u7ebf,\u5149\u7ea4,\u65e0\u7ebf\u7b49\u65b9\u5f0f. \u4e8c\u8fdb\u5236\u4f20\u8f93,\u53d1\u9001\u9ad8\u4f4e\u7535\u5e73,\u5355\u4f4d:\u6bd4\u7279,\u53ea\u770b010101 \u4e3a\u542f\u52a8,\u7ef4\u62a4\u4ee5\u53ca\u5173\u95ed\u7269\u7406\u94fe\u8def\u5b9a\u4e49\u4e86\u7535\u6c14\u89c4\u8303,\u673a\u68b0\u89c4\u8303\u548c\u529f\u80fd\u89c4\u8303. \u6570\u636e\u94fe\u8def\u5c42:frame\u5e27 \u8bbf\u95ee\u4ecb\u8d28,\u5b9a\u4e49\u4e86\u7269\u7406\u5730\u5740 \u7269\u7406\u5730\u5740,\u53c8\u53ebMAC\u5730\u5740,\u5168\u79f0Media Access Control \u5b9a\u4e49\u5982\u4f55\u683c\u5f0f\u5316\u6570\u636e\u4e00\u8fb9\u8fdb\u884c\u4f20\u8f93\u4ee5\u53ca\u5982\u4f55\u63a7\u5236\u5bf9\u7f51\u7edc\u7684\u8bbf\u95ee \u652f\u6301\u9519\u8bef\u68c0\u6d4b \u5b9e\u73b0\u540c\u4e00\u7f51\u6bb5\u5185\u7684\u94fe\u8def\u5c42\u901a\u8baf(\u4e00\u822c\u901a\u8fc7\u4ea4\u6362\u673a) \u6570\u636e\u5e27(frame)\u4e0e\u6bd4\u7279\u4e4b\u95f4\u7684\u8f6c\u6362 \u7f51\u7edc\u5c42:packet\u5305,\u62a5\u6587 \u6570\u636e\u4f20\u8f93,\u5b9a\u4e49\u4e86\u903b\u8f91\u5730\u5740(IP\u5730\u5740) \u5b9a\u4e49\u4e86\u8def\u7531,\u786e\u5b9a\u8def\u7531\u6570\u636e\u5305 \u9009\u62e9\u4f20\u9012\u6570\u636e\u7684\u6700\u4f73\u8def\u5f84(\u8def\u7531), \u8def\u7531\u5c31\u662f\u9009\u62e9\u8def\u5f84 \u652f\u6301\u903b\u8f91\u5bfb\u5740\u548c\u8def\u5f84\u9009\u62e9 IP\u5730\u5740,\u7528\u4e8e\u552f\u4e00\u6807\u8bc6\u8ba1\u7b97\u673a\u7f51\u8def\u5730\u5740.\u70b9\u5206\u56db\u6bb5\u5341\u8fdb\u5236IPV4/6\u7684IP\u5730\u5740 \u4f20\u8f93\u5c42:segment\u6bb5 TCP/UDP\u534f\u8bae,\u90fd\u662f\u57fa\u4e8e\u7aef\u53e3\u5de5\u4f5c\u7684.\u5de5\u4f5c\u5728\u4f20\u8f93\u5c42 \u7aef\u53e3\u53f7:\u8868\u793a\u7535\u8111\u4e0a\u67d0\u4e00\u8f6f\u4ef6 \u7aef\u53e3\u53f7\u8303\u56f4:0,65535 \u6ce8\u610f: \u64cd\u4f5c\u7cfb\u7edf\u4e2d,0~1023\u7684\u7aef\u53e3\u90fd\u88ab\u7ba1\u7406\u5458\u4f7f\u7528 \u5c3d\u91cf\u4f7f\u75288000\u4ee5\u540e\u7684\u7aef\u53e3\u53f7 \u5ba2\u6237\u7aef\u7aef\u53e3\u4e00\u822c\u968f\u673a\u4e0d\u56fa\u5b9a,\u670d\u52a1\u7aef\u7aef\u53e3\u56fa\u5b9a \u5f00\u53d1\u4e2d\u5e38\u7528\u7aef\u53e3\u53f7: \u200b mysql:3306 \u200b mongodb:27017 \u200b Django:8000 \u200b Tomcat:8080 \u200b Flask:5000 \u200b Redis:6379 \u200b http\u670d\u52a1\u7aef\u4f7f\u752880\u63a5\u53e3 \u200b https\u670d\u52a1\u7aef\u4f7f\u7528443\u63a5\u53e3 \u200b ssh\u670d\u52a1\u7aef\u53e3\u4f7f\u752822\u63a5\u53e3 \u200b ftp\u670d\u52a1\u7aef\u53e3\u4f7f\u752821\u63a5\u53e3 \u200b smtp\u670d\u52a1\u7aef\u53e3\u4f7f\u752825\u63a5\u53e3 \u200b pop\u670d\u52a1\u7aef\u53e3\u4f7f\u7528110\u63a5\u53e3 \u4f20\u8f93\u95ee\u9898:\u5b9e\u73b0\u7ec8\u7aef\u5bf9\u7ec8\u7aef\u7684\u901a\u8baf \u7528\u4e8e\u8fc7\u8def\u7531\u5668\u7684\u8de8\u7f51\u6bb5\u901a\u8baf \u786e\u4fdd\u6570\u636e\u4f20\u8f93\u7684\u53ef\u9760\u6027,\u53ef\u8c03\u63a7\u4f20\u8f93\u901f\u5ea6\u6765\u4fdd\u8bc1\u4f20\u8f93 \u5efa\u7acb.\u7ef4\u62a4\u548c\u7ec8\u6b62\u865a\u62df\u7535\u8def \u901a\u8fc7\u9519\u8bef\u68c0\u6d4b\u548c\u6062\u590d,,\u5177\u6709\u4e22\u5305\u7ea0\u9519,\u6062\u590d\u529f\u80fd \u4fe1\u606f\u6d41\u63a7\u5236\u6765\u4fdd\u969c\u53ef\u9760\u6027 \u4f1a\u8bdd\u5c42 :\u7f51\u6bb5 message \u4e3b\u673a\u95f4\u901a\u4fe1 \u5efa\u7acb,\u7ba1\u7406\u548c\u7ec8\u6b62\u5728\u5e94\u7528\u7a0b\u5e8f\u4e4b\u95f4\u7684\u4f1a\u8bdd \u8868\u793a\u5c42 \u6570\u636e\u8868\u793a \u786e\u4fdd\u63a5\u6536\u7cfb\u7edf\u53ef\u4ee5\u8bfb\u51fa\u8be5\u6570\u636e \u683c\u5f0f\u5316\u6570\u636e,utf-8,unicode\u7b49\u5728\u8868\u793a\u5c42 \u6784\u5efa\u6570\u636e \u534f\u5546\u7528\u4e8e\u5e94\u7528\u5c42\u7684\u6570\u636e\u4f20\u8f93\u8bed\u6cd5 \u63d0\u4f9b\u52a0\u5bc6, \u5e94\u7528\u5c42 \u8fdb\u7a0b\u5728\u5e94\u7528\u5c42 http/ftp \u7f51\u7edc\u8fdb\u7a0b\u8bbf\u95ee\u5e94\u7528\u5c42 \u4e3a\u5e94\u7528\u7a0b\u5e8f\u8fdb\u7a0b(\u6bd4\u5982:\u7535\u5b50\u90ae\u4ef6,\u6587\u4ef6\u4f20\u8f93\u548c\u7ec8\u7aef\u4eff\u771f)\u63d0\u4f9b\u7f51\u8def\u670d\u52a1 \u63d0\u4f9b\u7528\u6237\u8eab\u4efd\u9a8c\u8bc1","title":"OSI(open system Interconnection)\u4e03\u5c42\u6a21\u578b\u7ed3\u6784"},{"location":"%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/%E7%BD%91%E7%BB%9C%E6%A8%A1%E5%9E%8B/#_2","text":"","title":"\u4e09\u79cd\u901a\u8baf\u6a21\u5f0f"},{"location":"%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/%E7%BD%91%E7%BB%9C%E6%A8%A1%E5%9E%8B/#unicast","text":"\u4ee5\u4e00\u4e2a\u4e3b\u673a\u4f4d\u76ee\u6807\u53d1\u9001\u4fe1\u606f,\u5176\u4ed6\u4e3b\u673a\u4e5f\u53ef\u80fd\u4f1a\u6536\u5230,\u4f46\u662f\u5176\u4ed6\u4e3b\u673a\u4e0d\u5173\u5fc3\u6b64\u6570\u636e","title":"\u5355\u64adunicast"},{"location":"%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/%E7%BD%91%E7%BB%9C%E6%A8%A1%E5%9E%8B/#multicast","text":"\u76ee\u6807\u662f\u4e00\u90e8\u5206\u4e3b\u673a","title":"\u591a\u64ad(\u7ec4\u64ad)multicast"},{"location":"%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/%E7%BD%91%E7%BB%9C%E6%A8%A1%E5%9E%8B/#broadcast","text":"\u76ee\u6807\u662f\u6240\u6709\u4e3b\u673a(\u6709\u4e00\u5b9a\u8303\u56f4\u5185\u7684\u6240\u6709) \u80fd\u7528\u7ec4\u64ad\u5c31\u522b\u7528\u5e7f\u64ad,\u5e7f\u64ad\u4f1a\u5e72\u6270\u7528\u6237,\u5e7f\u64ad\u98ce\u66b4 \u4e0d\u80fd\u8de8\u5c40\u57df\u7f51\u901a\u8baf","title":"\u5e7f\u64adbroadcast"},{"location":"%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/%E7%BD%91%E7%BB%9C%E6%A8%A1%E5%9E%8B/#lan","text":"","title":"LAN\u7ec4\u6210"},{"location":"%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/%E7%BD%91%E7%BB%9C%E6%A8%A1%E5%9E%8B/#_3","text":"","title":"\u786c\u4ef6"},{"location":"%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/%E7%BD%91%E7%BB%9C%E6%A8%A1%E5%9E%8B/#coaxial","text":"10Base2 \u6700\u592710M,\u4e24\u4e2a\u7aef\u53e3\u95f4\u6700\u5927\u4f20\u8f93\u4e3e\u4f8b\u4e3a200M,(\u5b9e\u9645\u4e3a185\u7c73) 10Base5 \u6700\u592710M,\u4e24\u4e2a\u7aef\u53e3\u95f4\u6700\u5927\u4f20\u8f93\u4e3e\u4f8b\u4e3a500M(\u4e2d\u95f4\u6709\u4e2a\u6bd4\u8f83\u7c97,\u5927\u62c7\u54e5\u90a3\u4e48\u7c97\u7684\u82af,\u592a\u786c,\u5f2f\u4e0d\u52a8)","title":"Coaxial\u540c\u8f74\u7535\u7f06"},{"location":"%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/%E7%BD%91%E7%BB%9C%E6%A8%A1%E5%9E%8B/#twisted-pair","text":"10BaseT \u57fa\u5e26\u4f20\u8f93,T\u8868\u793a\u53cc\u7ede\u7ebf,\u6700\u9ad8\u53ef\u4ee5\u8fbe\u523010G\u4f20\u8f93\u901f\u5ea6 \u53cc\u7ede\u4e3a\u4e86\u62b5\u6d88\u7535\u78c1\u5e72\u6270 \u6700\u5927\u4f20\u8f93\u8ddd\u79bb100\u7c73 \u57fa\u5e26:\u4f20\u8f93\u6570\u5b57\u4fe1\u53f7 \u5bbd\u5e26:\u4f20\u6a21\u62df\u4fe1\u53f7 \u5206\u7c7b: \u200b Unshielded(UTP)\u975e\u5c4f\u853d\u5f0f: \u200b Shielded(STP)\u5c4f\u853d\u5f0f:\u6210\u672c\u9ad8","title":"Twisted-Pair \u53cc\u7ede\u7ebf"},{"location":"%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/%E7%BD%91%E7%BB%9C%E6%A8%A1%E5%9E%8B/#fiber-optic","text":"\u91cc\u9762\u662f\u4e24\u6839\u73bb\u7483\u7ea4\u7ef4 \u670d\u52a1\u5668\u63a5\u53e3\u9700\u8981\u6539\u6210\u4e13\u7528\u7684\u5149\u7ea4\u6a21\u5757","title":"Fiber-Optic \u5149\u7ea4\u6a21\u5757"},{"location":"%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/%E7%BD%91%E7%BB%9C%E6%A8%A1%E5%9E%8B/#unshieldedutp","text":"\u200b 1\u6a59\u767d/2\u6a59/3\u7eff\u767d/4\u84dd/5\u84dd\u767d/6\u7eff/7\u68d5\u767d/8\u68d5 \u200b RJ-45 \u5c31\u662f\u6c34\u6676\u5934\u5b50 12\u53d1\u9001\u6570\u636e,36\u63a5\u6536\u6570\u636e \u63a5\u6536\u4e0e\u53d1\u9001\u7ebf\u5e8f\u76f8\u540c,\u79f0\u4e3a\u76f4\u8fde\u7ebf,\u76f8\u53cd,\u79f0\u4e4b\u4e3a\u4ea4\u53c9\u7ebf \u5e38\u7528\u76f4\u8fde\u7ebf,\u56e0\u4e3a\u73b0\u4ee3\u7f51\u5361\u5f88\u667a\u80fd 100M\u5b9e\u9645\u7528\u523012/36\u4e24\u7ec4\u7ebf 1000M\u5b9e\u9645\u7528\u523012/36/78\u4e24\u7ec4\u7ebf T568A: \u4e0eT568A 13,26\u5bf9\u8c03 T568B: 1\u6a59\u767d/2\u6a59/3\u7eff\u767d/4\u84dd/5\u84dd\u767d/6\u7eff/7\u68d5\u767d/8\u68d5 \u96c6\u7ebf\u5668 hub \u4ea4\u6362\u673a switch \u8def\u7531\u5668 router 1000BASE-T GBIC \u5149\u7535\u8f6c\u6362\u63a5\u53e3 \u53ef\u8fbe\u52301000m\u901f\u5ea6 \u200b `\u662fGiga Bitrate Interface Converter\u7f29\u5199,\u662f\u5c06\u5343\u5146\u4f4d\u7535\u4fe1\u53f7\u8f6c\u6362\u4f4d\u5e7f\u4fe1\u597d\u7684\u63a5\u53e3\u8bbe\u5907","title":"Unshielded(UTP)\u975e\u5c4f\u853d\u5f0f:"},{"location":"%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/%E7%BD%91%E7%BB%9C%E6%A8%A1%E5%9E%8B/#stp","text":"\u9632\u6b62\u751f\u6210\u56de\u73af","title":"STP\u751f\u6210\u6811\u534f\u8bae"},{"location":"%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/%E7%BD%91%E7%BB%9C%E6%A8%A1%E5%9E%8B/#wlan","text":"\u5305\u62ecwifi(\u4e16\u754c) \u548cwapi(\u4e2d\u56fd\u7528)","title":"wlan"},{"location":"%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/%E7%BD%91%E7%BB%9C%E6%A8%A1%E5%9E%8B/#tcpip","text":"\u662f\u4e00\u4e2aprotocol stack \u534f\u8bae\u6808 \u5305\u62ecTCP,IP,UDP,ICMP,RIP,TELENT,FTP,SMTP,ARP\u7b49\u8bb8\u591a\u534f\u8bae","title":"tcp/ip\u534f\u8bae"},{"location":"%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/%E7%BD%91%E7%BB%9C%E6%A8%A1%E5%9E%8B/#_4","text":"tcp/ip\u4e94\u5c42\u5806\u6808 \u5e94\u7528\u5c42(\u5bf9\u5e94osi\u4e2d\u7684\u5e94\u7528\u5c42,\u8868\u793a\u5c42,\u4f1a\u8bdd\u5c42) \u4f20\u8f93\u5c42 \u7f51\u7edc\u5c42 \u6570\u636e\u94fe\u8def\u5c42 \u7269\u7406\u5c42","title":"\u5206\u5c42"},{"location":"%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/%E7%BD%91%E7%BB%9C%E6%A8%A1%E5%9E%8B/#tcp","text":"\u5de5\u4f5c\u5728\u4f20\u8f93\u5c42 \u9762\u5411\u8fde\u63a5\u534f\u8bae \u5168\u53cc\u5de5\u534f\u8bae \u534a\u5173\u95ed,(\u65ad\u5f00\u8fde\u63a5\u65f6\u9700\u8981\u53cc\u65b9\u540c\u610f) \u9519\u8bef\u68c0\u67e5 \u5c06\u6570\u636e\u6253\u5305\u6210\u6bb5,\u6392\u5e8f \u786e\u8ba4\u673a\u5236 \u6570\u636e\u6062\u590d,\u91cd\u4f20 \u6d41\u91cf\u63a7\u5236,\u6ed1\u52a8\u7a97\u53e3 \u62e5\u585e\u63a7\u5236,\u6162\u542f\u52a8\u548c\u62e5\u585e\u907f\u514d\u7b97\u6cd5 AB\u95f4\u901a\u4fe1 A\u5411B\u53d1\u9001\u5e8f\u53f72\u7684\u5305,B\u8fd4\u56deA\u5e8f\u53f7100\u7684\u5305\u548c2+1\u7684\u786e\u8ba4\u53f7 A\u63a5\u6536\u5b8c\u6bd5\u518d\u5411B\u53d1\u9001\u5e8f\u53f7\u4e3a3\u7684\u5305\u548c100+1\u7684\u786e\u8ba4\u53f7","title":"TCP\u7279\u6027"},{"location":"%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/%E7%BD%91%E7%BB%9C%E6%A8%A1%E5%9E%8B/#_5","text":"\u5f53\u5e94\u7528\u7a0b\u5e8f\u60f3\u901a\u8fc7TCP\u534f\u8bae\u5b9e\u73b0\u8fdc\u7a0b\u901a\u4fe1\u65f6\uff0c\u5f7c\u6b64\u4e4b\u95f4\u5fc5\u987b\u5148\u5efa\u7acb\u201c\u53cc\u5411\u201d\u901a\u4fe1\u901a\u9053\uff0c\u57fa\u4e8e\u8be5\u53cc\u5411\u901a\u9053\u5b9e\u73b0\u6570\u636e\u7684\u8fdc\u7a0b\u4ea4\u4e92\uff0c\u8be5\u53cc\u5411\u901a\u9053\u76f4\u9053\u4efb\u610f\u4e00\u65b9\u4e3b\u52a8\u65ad\u5f00\u624d\u4f1a\u5931\u6548","title":"\u4e09\u6b21\u63e1\u624b\u548c\u56db\u6b21\u6325\u624b"},{"location":"%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/%E7%BD%91%E7%BB%9C%E6%A8%A1%E5%9E%8B/#_6","text":"\u9996\u5148\u670d\u52a1\u7aef\u548c\u5ba2\u6237\u7aef\u90fd\u5904\u4e8eclose\u72b6\u6001\uff0c\u670d\u52a1\u7aef\u8fdb\u7a0b\u5148\u521b\u5efa\u4f20\u8f93\u63a7\u5236\u5757tcp\uff0c\u670d\u52a1\u7aef\u5c31\u8fdb\u5165listen\u72b6\u6001\uff0c\u76d1\u542c\u5ba2\u670d\u7aef\u53d1\u9001\u7684\u8bf7\u6c42\uff1b \u5ba2\u6237\u7aef\u4e3b\u52a8\u60f3\u8981\u548c\u670d\u52a1\u7aef\u5efa\u7acb\u8fde\u63a5\uff0c\u521b\u4f20\u8f93\u63a7\u5236\u5757tcp\uff0c\u5411\u670d\u52a1\u7aef\u53d1\u9001\u8bf7\u6c42\uff0c\u5373\u80fd\u5426\u5efa\u7acb\u5ba2\u6237\u7aef\u5411\u670d\u52a1\u7aef\u7684\u901a\u9053\uff0c\u7136\u540e\u5ba2\u6237\u7aef\u5c31\u8fdb\u5165\u4e86SYN-SENT(\u540c\u6b65\u5df2\u53d1\u9001)\u72b6\u6001\uff1b \u670d\u52a1\u7aef\u63a5\u53d7\u5230\u5ba2\u670d\u7aef\u7684\u8bf7\u6c42\u540e\uff0c\u540c\u610f\u5ba2\u6237\u7aef\u5efa\u7acb\u901a\u9053\u7684\u8bf7\u6c42\uff0c\u5e76\u8bf7\u6c42\u5efa\u7acb\u670d\u52a1\u7aef\u5411\u5ba2\u670d\u7aef\u7684\u901a\u9053\uff0c\u670d\u52a1\u7aef\u5c06\u56de\u590d\u4fe1\u606f\u548c\u8bf7\u6c42\u4e00\u6b21\u53d1\u9001\u7ed9\u5ba2\u6237\u7aef\uff0c\u7136\u540e\u670d\u52a1\u7aef\u5c31\u8fdb\u4e86SYN-RCVD(\u540c\u6b65\u5df2\u63a5\u53d7)\u72b6\u6001\uff1b \u5ba2\u6237\u7aef\u63a5\u6536\u5230\u670d\u52a1\u7aef\u7684\u56de\u590d\u548c\u8bf7\u6c42\u540e\uff0c\u5ba2\u6237\u7aef\u5411\u670d\u52a1\u7aef\u7684\u901a\u9053\u5c31\u5efa\u7acb\u4e86\uff0c\u5e76\u5904\u7406\u8bf7\u6c42\uff0c\u56de\u590d\u540c\u610f\u5efa\u7acb\u670d\u52a1\u7aef\u5411\u5ba2\u670d\u7aef\u7684\u901a\u9053\uff0c\u7136\u540e\u5ba2\u670d\u7aef\u5c31\u8fdb\u5165\u4e86ESTABLISHED(\u5df2\u5efa\u7acb\u8fde\u63a5)\u72b6\u6001\uff1b \u670d\u52a1\u7aef\u63a5\u6536\u5230\u5ba2\u670d\u7aef\u7684\u56de\u590d\u540e\uff0c\u670d\u52a1\u7aef\u5411\u5ba2\u670d\u7aef\u7684\u901a\u9053\u5c31\u5efa\u7acb\u4e86\uff0c\u6b64\u65f6\u53cc\u5411\u7ba1\u9053\u90fd\u5df2\u5efa\u7acb\uff0c\u670d\u52a1\u7aef\u8fdb\u5165ESTABLISHED(\u5df2\u5efa\u7acb\u8fde\u63a5)\u72b6\u6001\uff0c\u7136\u540e\u53cc\u65b9\u5c31\u53ef\u4ee5\u8fdb\u884c\u8fdc\u7a0b\u901a\u4fe1\u4e86\u3002","title":"\u4e09\u6b21\u63e1\u624b"},{"location":"%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/%E7%BD%91%E7%BB%9C%E6%A8%A1%E5%9E%8B/#_7","text":"\u5ba2\u670d\u7aef\u548c\u670d\u52a1\u7aef\u90fd\u5904\u4e8eESTABLISHED\u72b6\u6001\uff0c\u53cc\u65b9\u6b63\u5e38\u901a\u4fe1\uff1b \u5ba2\u6237\u7aef\u4e3b\u52a8\u60f3\u8981\u65ad\u5f00\u8fde\u63a5\uff0c\u5411\u670d\u52a1\u7aef\u53d1\u9001\u8fde\u63a5\u91ca\u653e\u62a5\u6587\uff0c\u6b64\u65f6\u5ba2\u670d\u7aef\u5c31\u4e0d\u5728\u5411\u670d\u52a1\u7aef\u53d1\u9001\u6570\u636e\u4e86\uff0c\u7136\u540e\u5ba2\u6237\u7aef\u5c31\u8fdb\u53bb\u4e86FIN-WAIT-1\u72b6\u6001\uff1b \u670d\u52a1\u7aef\u6536\u5230\u8fde\u63a5\u91ca\u653e\u8bf7\u6c42\u540e\uff0c\u540c\u610f\u8bf7\u6c42\uff0c\u6b64\u65f6\u670d\u52a1\u7aef\u5c31\u8fdb\u5165\u4e86CLOSE-WAIT(\u5173\u95ed\u7b49\u5f85)\u72b6\u6001\uff0c\u5e76\u53d1\u51fa\u786e\u8ba4\u62a5\u6587\uff0c\u7136\u540e\u5ba2\u670d\u7aef\u5411\u670d\u52a1\u7aef\u7684\u901a\u9053\u5c31\u65ad\u5f00\u4e86\uff0c\u8fd9\u65f6\u5019\u5c31\u5904\u4e8e\u534a\u8fde\u63a5\u72b6\u6001\uff08\u53ea\u5269\u4e0b\u670d\u52a1\u7aef\u5411\u5ba2\u670d\u7aef\u7684\u901a\u9053\uff09\uff0c\u4f46\u662f\u670d\u52a1\u7aef\u53ef\u80fd\u8fd8\u6709\u672a\u53d1\u9001\u5b8c\u7684\u6570\u636e\uff1b \u5ba2\u670d\u7aef\u63a5\u6536\u5230\u670d\u52a1\u7aef\u7684\u786e\u8ba4\u8bf7\u6c42\uff0c\u8fdb\u5165FIN-WAIT-2\u72b6\u6001\uff0c\u7b49\u5f85\u670d\u52a1\u7aef\u53d1\u9001\u8fde\u63a5\u91ca\u653e\u8bf7\u6c42\uff1b \uff08\u6570\u636e\u4f20\u8f93\u3002\u3002\u3002\uff09 \u670d\u52a1\u7aef\u5728\u6700\u540e\u7684\u6570\u636e\u53d1\u9001\u5b8c\u6210\u540e\uff0c\u4f1a\u5411\u5ba2\u670d\u7aef\u53d1\u9001\u8fde\u63a5\u91ca\u653e\u8bf7\u6c42\uff0c\u6b64\u65f6\u670d\u52a1\u7aef\u8fdb\u5165LAST-ACK(\u6700\u540e\u786e\u8ba4)\u72b6\u6001\uff0c\u7b49\u5f85\u5ba2\u670d\u7aef\u7684\u6700\u540e\u786e\u8ba4\uff1b \u5ba2\u670d\u7aef\u63a5\u6536\u5230\u670d\u52a1\u7aef\u7684\u8fde\u63a5\u91ca\u653e\u8bf7\u6c42\u540e\uff0c\u5fc5\u987b\u8fd4\u56de\u786e\u8ba4\u4fe1\u606f\uff0c\u6b64\u65f6\u5ba2\u6237\u7aef\u8fdb\u5165TIME-WIAT(\u65f6\u95f4\u7b49\u5f85)\u72b6\u6001\uff0c\u4f46\u6b64\u65f6tcp\u8fde\u63a5\u8fd8\u6ca1\u6709\u91ca\u653e\uff0c\u9700\u8981\u7b49\u5f852\u4e2a\u6700\u957f\u62a5\u6587\u6bb5\u5bff\u547d\u7684\u65f6\u95f4\u540e\uff0c\u64a4\u9500tcp\u63a7\u5236\u5757\uff0c\u8fdb\u5165CLOSE\u72b6\u6001\uff1b \u670d\u52a1\u7aef\u63a5\u6536\u5230\u5ba2\u6237\u7aef\u7684\u786e\u8ba4\u4fe1\u606f\u540e\uff0c\u7acb\u5373\u8fdb\u5165CLOSE\u72b6\u6001\uff0c\u64a4\u9500tcp\uff0c\u7ed3\u675f\u8fde\u63a5\u3002","title":"\u56db\u6b21\u6325\u624b"},{"location":"%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/","text":"\u7f51\u7edc\u7f16\u7a0b C/S\u67b6\u6784 B/S\u67b6\u6784: TCP\u534f\u8bae TCP\u670d\u52a1\u7aef\u7f16\u7a0b TCP\u5ba2\u6237\u7aef\u7f16\u7a0b \u4e09\u6b21\u63e1\u624b \u5982\u679c\u7b2c\u4e09\u6b21\u63e1\u624b\u4e22\u5931\u4e86\uff0c\u5ba2\u6237\u7aef\u670d\u52a1\u7aef\u4f1a\u5982\u4f55\u5904\u7406\uff1f \u56db\u6b21\u6325\u624b UDP\u534f\u8bae UDP\u670d\u52a1\u7aef\u7f16\u7a0b UDP\u5ba2\u6237\u7aef\u7f16\u7a0b \u5fc3\u8df3\u673a\u5236 UDP\u534f\u8bae\u7684\u5e94\u7528 \u534f\u8bae\u65cf \u5168\u53cc\u5de5 \u534a\u53cc\u5de5 \u5355\u5de5 \u8f6e\u8be2 \u957f\u8f6e\u8be2 \u7f51\u7edc\u7f16\u7a0b \u00b6 C/S\u67b6\u6784 \u00b6 Client:\u5ba2\u6237\u7aef Server:\u670d\u52a1\u7aef \u4f18\u70b9:\u8f6f\u4ef6\u4f7f\u7528\u7a33\u5b9a,\u5e76\u4e14\u53ef\u4ee5\u8282\u7701\u7f51\u7edc\u8d44\u6e90. \u7f3a\u70b9: \u82e5\u7528\u6237\u60f3\u5728\u540c\u4e00\u4e2a\u8bbe\u5907\u4e0a\u4f7f\u7528\u591a\u4e2a\u8f6f\u4ef6,\u5fc5\u987b\u4e0b\u8f7d\u591a\u4e2a\u5ba2\u6237\u7aef \u8f6f\u4ef6\u7684\u6bcf\u4e00\u6b21\u66f4\u65b0,\u5ba2\u6237\u70b9\u90fd\u5fc5\u987b\u91cd\u65b0\u4e0b\u8f7d\u66f4\u65b0 C/S\u67b6\u6784\u7684\u8f6f\u4ef6: \u200b PC:QQ,Pycharm \u200b \u624b\u673a\u7aef:\u5fae\u4fe1,\u5403\u9e21 B/S\u67b6\u6784: \u00b6 Browser:\u6d4f\u89c8\u5668 Server:\u670d\u52a1\u7aef \u4f18\u70b9: \u6d4f\u89c8\u5668\u5145\u5f53\u5ba2\u6237\u7aef,\u65e0\u9700\u7528\u6237\u4e0b\u8f7d\u591a\u4e2a\u8f6f\u4ef6,\u4e5f\u65e0\u9700\u7528\u6237\u4e0b\u8f7d\u66f4\u65b0\u8f6f\u4ef6\u7248\u672c \u76f4\u63a5\u5728\u7f51\u9875\u4e0a\u8bbf\u95ee\u9700\u8981\u4f7f\u7528\u7684\u8f6f\u4ef6 \u7f3a\u70b9: \u6d88\u8017\u7f51\u7edc\u8d44\u6e90\u8fc7\u5927,\u5f53\u7f51\u8def\u4e0d\u7a33\u5b9a\u65f6,\u8f6f\u4ef6\u7684\u4f7f\u7528\u4e5f\u4e0d\u7a33\u5b9a. TCP\u534f\u8bae \u00b6 TCP\u662f\u4e00\u4e2a\u6d41\u5f0f\u534f\u8bae TCP\u670d\u52a1\u7aef\u7f16\u7a0b \u00b6 \u6b65\u9aa4: \u521b\u5efasocket\u5bf9\u8c61 \u7ed1\u5b9aIP\u5730\u5740address\u548c\u7aef\u53e3port.bind()\u65b9\u6cd5IPV4\u5730\u5740\u4e3a\u4e00\u4e2a\u4e8c\u5143\u7ec4('IP\u5730\u5740\u5b57\u7b26\u4e32;,port) \u5f00\u59cb\u76d1\u542c,\u5c06\u5728\u6307\u5b9a\u7684IP\u7684\u7aef\u53e3\u4e0a\u76d1\u542c,listen()\u65b9\u6cd5 \u83b7\u53d6\u7528\u4e8e\u4f20\u8f93\u7684socket\u5bf9\u8c61 socket.accept() \u2192 (socket object,address info) accept\u65b9\u6cd5\u9ed8\u8ba4==\u963b\u585e==\u7b49\u5f85\u5ba2\u6237\u7aef\u5efa\u7acb\u8fde\u63a5,\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684socket\u5bf9\u8c61\u548c\u5ba2\u6237\u7aef\u5730\u5740\u7684\u4e8c\u5143\u7ec4 \u5730\u5740\u662f\u8fdc\u7a0b\u5ba2\u6237\u7aef\u7684\u5730\u5740,IPv4\u4e2d\u4ed6\u662f\u4e00\u4e2a\u4e8c\u5143\u7ec4(clientaddr,port) \u63a5\u6536\u6570\u636e:recv(bufsize[,flags])\u4f7f\u7528\u7f13\u51b2\u533a\u63a5\u6536\u6570\u636e \u53d1\u9001\u6570\u636e:send(bytes)\u53d1\u9001\u6570\u636e TCP\u5ba2\u6237\u7aef\u7f16\u7a0b \u00b6 \u6b65\u9aa4: \u521b\u5efasocket\u5bf9\u8c61 \u8fde\u63a5\u5230\u8fdc\u7aef\u670d\u52a1\u7aef\u7684IP\u548cport,connect()\u65b9\u6cd5 \u4f20\u8f93\u6570\u636e \u4f7f\u7528send,recv\u65b9\u6cd5\u53d1\u9001,\u63a5\u6536\u6570\u636e \u5173\u95ed\u8fde\u63a5,\u91ca\u653e\u8d44\u6e90 \u4e09\u6b21\u63e1\u624b \u00b6 seq\u8868\u793a\u5e8f\u5217\u53f7,ack\u662f\u786e\u8ba4\u53f7,SYN\u4e3a\u540c\u6b65\u4f4d \u4e09\u6b21\u63e1\u624b\u5efa\u8fde\u63a5 \u7b2c\u4e00\u6b21\u63e1\u624b\uff1a\u5ba2\u6237\u7aef\u4e3b\u673aA\u53d1\u9001\u4f4d\u7801\u4e3asyn\uff1d1\uff0c\u968f\u673a\u4ea7\u751fseq number=x\u7684\u6570\u636e\u5305\u5230\u670d\u52a1\u5668\uff0c\u5ba2\u6237\u7aef\u8fdb\u5165SYN_SEND\u72b6\u6001\uff0c\u7b49\u5f85\u670d\u52a1\u5668\u7684\u786e\u8ba4\uff1b\u4e3b\u673aB\u7531SYN=1\u77e5\u9053A\u8981\u6c42\u5efa\u7acb\u8fde\u63a5\u3002 \u7b2c\u4e8c\u6b21\u63e1\u624b\uff1a\u4e3b\u673aB\u6536\u5230\u8bf7\u6c42\u540e\u8981\u786e\u8ba4\u8fde\u63a5\u4fe1\u606f\uff0c\u5411A\u53d1\u9001ack number(\u4e3b\u673aA\u7684seq+1)\u3001syn=1\u3001ack=1\uff0c\u968f\u673a\u4ea7\u751fseq=y\u7684\u5305\uff0c\u6b64\u65f6\u670d\u52a1\u5668\u8fdb\u5165SYN_RECV\u72b6\u6001\u3002 \u7b2c\u4e09\u6b21\u63e1\u624b\uff1a\u4e3b\u673aA\u6536\u5230\u540e\u68c0\u67e5ack number\u662f\u5426\u6b63\u786e\uff0c\u5373\u7b2c\u4e00\u6b21\u53d1\u9001\u7684seq number+1\uff0c\u4ee5\u53ca\u4f4d\u7801ack\u662f\u5426\u4e3a1\uff0c\u82e5\u6b63\u786e\uff0c\u4e3b\u673aA\u4f1a\u518d\u53d1\u9001ack number(\u4e3b\u673aB\u7684seq+1)\u3001ack=1\uff0c\u4e3b\u673aB\u6536\u5230\u540e\u786e\u8ba4seq\u503c\u4e0eack=1\u5219\u8fde\u63a5\u5efa\u7acb\u6210\u529f\u3002\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u7aef\u90fd\u8fdb\u5165ESTABLISHED\u72b6\u6001\u3002 \u5982\u679c\u7b2c\u4e09\u6b21\u63e1\u624b\u4e22\u5931\u4e86\uff0c\u5ba2\u6237\u7aef\u670d\u52a1\u7aef\u4f1a\u5982\u4f55\u5904\u7406\uff1f \u00b6 \u670d\u52a1\u7aef\uff1a \u8be5TCP\u8fde\u63a5\u7684\u72b6\u6001\u4e3aSYN_RECV,\u5e76\u4e14\u4f1a\u6839\u636eTCP\u7684\u8d85\u65f6\u91cd\u4f20\u673a\u5236\uff0c\u4f1a\u7b49\u5f853\u79d2\u30016\u79d2\u300112\u79d2\u540e\u91cd\u65b0\u53d1\u9001SYN+ACK\u5305\uff0c\u4ee5\u4fbfClient\u91cd\u65b0\u53d1\u9001ACK\u5305\u3002\u800cServer\u91cd\u53d1SYN+ACK\u5305\u7684\u6b21\u6570\uff0c\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e/proc/sys/net/ipv4/tcp_synack_retries\u4fee\u6539\uff0c\u9ed8\u8ba4\u503c\u4e3a5\u3002\u5982\u679c\u91cd\u53d1\u6307\u5b9a\u6b21\u6570\u4e4b\u540e\uff0c\u4ecd\u7136\u672a\u6536\u5230\u5ba2\u6237\u7aef\u7684ACK\u5e94\u7b54\uff0c\u90a3\u4e48\u4e00\u6bb5\u65f6\u95f4\u540e\uff0c\u670d\u52a1\u7aef\u81ea\u52a8\u5173\u95ed\u8fd9\u4e2a\u8fde\u63a5\u3002 \u5ba2\u6237\u7aef\uff1a \u5ba2\u6237\u7aef\u5728\u63a5\u6536\u5230SYN+ACK\u5305\uff0c\u5b83\u7684TCP\u8fde\u63a5\u72b6\u6001\u5c31\u4e3aESTABLISHED\uff08\u5df2\u8fde\u63a5\uff09\uff0c\u8868\u793a\u8be5\u8fde\u63a5\u5df2\u7ecf\u5efa\u7acb\u3002\u90a3\u4e48\u5982\u679c\u7b2c\u4e09\u6b21\u63e1\u624b\u4e2d\u7684ACK\u5305\u4e22\u5931\u7684\u60c5\u51b5\u4e0b\uff0c\u5ba2\u6237\u7aef\u5411\u670d\u52a1\u7aef\u53d1\u9001\u6570\u636e\uff0c\u670d\u52a1\u7aef\u5c06\u4ee5RST\u5305(reset\u91cd\u7f6e)\u54cd\u5e94\uff0c\u624d\u80fd\u611f\u77e5\u5230\u670d\u52a1\u7aef\u7684\u9519\u8bef\u3002 \u56db\u6b21\u6325\u624b \u00b6 \u7b2c\u4e00\u6b21\u6325\u624b\uff1a\u4e3b\u673aA\uff08\u53ef\u4ee5\u662f\u5ba2\u6237\u7aef\uff0c\u4e5f\u53ef\u4ee5\u662f\u670d\u52a1\u5668\u7aef\uff09\uff0c\u8bbe\u7f6eSequence Number\u548cAcknowledgment Number\uff0c\u5411\u4e3b\u673aB\u53d1\u9001\u4e00\u4e2aFIN\u62a5\u6587\u6bb5\uff1b\u6b64\u65f6\uff0c\u4e3b\u673aA\u8fdb\u5165FIN_WAIT_1\u72b6\u6001\uff1b\u8fd9\u8868\u793a\u4e3b\u673aA\u6ca1\u6709\u6570\u636e\u8981\u53d1\u9001\u7ed9\u4e3b\u673aB\u4e86\u3002 \u7b2c\u4e8c\u6b21\u6325\u624b\uff1a\u4e3b\u673aB\u6536\u5230\u4e86\u4e3b\u673aA\u53d1\u9001\u7684FIN\u62a5\u6587\u6bb5\uff0c\u5411\u4e3b\u673aA\u56de\u4e00\u4e2aACK\u62a5\u6587\u6bb5\uff0cAcknowledgment Number\u4e3aSequence Number\u52a01\uff0c\u4e3b\u673a1\u8fdb\u5165FIN_WAIT_2\u72b6\u6001\uff1b\u4e3b\u673a2\u544a\u8bc9\u4e3b\u673aA\uff0c\u6211\u4e5f\u6ca1\u6709\u6570\u636e\u8981\u53d1\u9001\u4e86\uff0c\u53ef\u4ee5\u8fdb\u884c\u5173\u95ed\u8fde\u63a5\u4e86\u3002 \u7b2c\u4e09\u6b21\u6325\u624b\uff1a\u4e3b\u673aB\u5411\u4e3b\u673aA\u53d1\u9001FIN\u62a5\u6587\u6bb5\uff0c\u8bf7\u6c42\u5173\u95ed\u8fde\u63a5\uff0c\u540c\u65f6\u4e3b\u673aB\u8fdb\u5165CLOSE_WAIT\u72b6\u6001\u3002 \u7b2c\u56db\u6b21\u6325\u624b\uff1a\u4e3b\u673aA\u6536\u5230\u4e3b\u673aB\u53d1\u9001\u7684FIN\u62a5\u6587\u6bb5\uff0c\u5411\u4e3b\u673aB\u53d1\u9001ACK\u62a5\u6587\u6bb5\uff0c\u7136\u540e\u4e3b\u673aA\u8fdb\u5165TIME_WAIT\u72b6\u6001\uff1b\u4e3b\u673aB\u6536\u5230\u4e3b\u673aA\u7684ACK\u62a5\u6587\u6bb5\u4ee5\u540e\uff0c\u5c31\u5173\u95ed\u8fde\u63a5\uff1b\u6b64\u65f6\uff0c\u4e3b\u673aA\u7b49\u5f852MSL\u540e\u4f9d\u7136\u6ca1\u6709\u6536\u5230\u56de\u590d\uff0c\u5219\u8bc1\u660e\u4e3b\u673aB\u5df2\u6b63\u5e38\u5173\u95ed\uff0c\u90a3\u597d\uff0c\u4e3b\u673aA\u4e5f\u53ef\u4ee5\u5173\u95ed\u8fde\u63a5\u4e86\u3002 UDP\u534f\u8bae \u00b6 UDP\u662f\u4e00\u79cd\u6570\u636e\u62a5\u4f20\u8f93\u534f\u8bae. \u4e0d\u9700\u8981\u5efa\u7acb\u53cc\u5411\u7ba1\u9053. \u4e0d\u4f1a\u7c98\u5305 \u5ba2\u6237\u7aef\u7ed9\u670d\u52a1\u7aef\u53d1\u9001\u6570\u636e,\u4e0d\u9700\u8981\u7b49\u5f85\u670d\u52a1\u7aef\u8fd4\u56de\u63a5\u6536\u6210\u529f. \u6570\u636e\u5bb9\u6613\u4e22\u5931,\u6570\u636e\u4e0d\u5b89\u5168. \u4f20\u8f93\u901f\u5ea6\u5feb -TCP:\u5c31\u597d\u6bd4\u5728\u6253\u7535\u8bdd -UDP:\u5c31\u597d\u6bd4\u5728\u53d1\u77ed\u4fe1 UDP\u670d\u52a1\u7aef\u7f16\u7a0b \u00b6 \u6b65\u9aa4: \u521b\u5efasocket\u5bf9\u8c61,socket.SOCK_DGRAM \u7ed1\u5b9aIP\u548cport,bind()\u65b9\u6cd5 \u4f20\u8f93\u6570\u636e \u63a5\u6536\u6570\u636e,socket.recvfrom(bufsize[,flags]),\u83b7\u5f97\u4e00\u4e2a\u4e8c\u5143\u7ec4(string,address) \u53d1\u9001\u6570\u636e,socket.sendto(string,address)\u53d1\u7ed9\u67d0\u5730\u5740\u67d0\u4fe1\u606f \u91ca\u653e\u8d44\u6e90 UDP\u5ba2\u6237\u7aef\u7f16\u7a0b \u00b6 \u6b65\u9aa4: \u521b\u5efasocket\u5bf9\u8c61.socket.SOCK_DGRAM \u53d1\u9001\u6570\u636e,socket.sendto(string,address)\u53d1\u9001\u7ed9\u67d0\u5730\u5740\u67d0\u4fe1\u606f \u63a5\u6536\u6570\u636e,socket.recvfrom(bufsize[,flags]),\u83b7\u5f97\u4e00\u4e2a\u4e8c\u5143\u7ec4(string,address) \u91ca\u653e\u8d44\u6e90 \u5fc3\u8df3\u673a\u5236 \u00b6 \u52a0\u4e00\u4e2aack\u673a\u5236\u548c\u5fc3\u8df3heartbeat.\u5fc3\u8df3,\u5c31\u662f\u4e00\u7aef\u5b9a\u65f6\u53d1\u9001\u7ed9\u53e6\u4e00\u7aef \u7684\u4fe1\u606f,\u4e00\u822c\u6bcf\u6b21\u6570\u636e\u8d8a\u5c11\u8d8a\u597d,\u5fc3\u8df3\u65f6\u95f4\u95f4\u9694\u81ea\u5df1\u8bbe\u5b9a.ack\u5373\u54cd\u5e94,\u4e00\u7aef\u6536\u5230\u53e6\u4e00\u7aef\u7684\u6d88\u606f\u540e\u8fd4\u56de\u7684\u4fe1\u606f. \u4e00\u822c\u6765\u8bf4\u662f\u5ba2\u6237\u7aef\u5b9a\u65f6\u53d1\u5f80\u670d\u52a1\u7aef\u7684,\u670d\u52a1\u7aef\u5e76\u4e0d\u9700\u8981ack\u56de\u590d\u5ba2\u6237\u7aef,\u53ea\u8981\u8bb0\u5f55\u8be5\u5ba2\u6237\u7aef\u8fd8\u6216\u8005\u5c31\u597d \u670d\u52a1\u7aef\u5f80\u5ba2\u6237\u7aef\u53d1\u4e00\u822c\u7528\u7684\u8f83\u5c11 \u4e5f\u53ef\u4ee5\u53cc\u5411\u53d1\u9001\u5fc3\u8df3,\u7528\u7684\u66f4\u5c11. UDP\u534f\u8bae\u7684\u5e94\u7528 \u00b6 UDP\u662f\u65e0\u8fde\u63a5\u534f\u8bae,\u57fa\u4e8e\u4e00\u4e0b\u5047\u8bbe\u65f6\u4f7f\u7528:\u7f51\u7edc\u8db3\u591f\u597d,\u6d88\u606f\u4e0d\u4f1a\u4e22\u5305,\u5305\u4e0d\u4f1a\u4e71\u5e8f \u4e00\u822c\u5e94\u7528\u4e8e \u89c6\u9891,\u97f3\u9891\u4f20\u8f93,,\u4e22\u70b9\u5305\u95ee\u9898\u4e0d\u5927,\u53ef\u4ee5\u901a\u8fc7\u91cd\u65b0\u53d1\u9001\u6765\u89e3\u51b3 dns\u534f\u8bae,\u6570\u636e\u5185\u5bb9\u5c0f,\u4e00\u4e2a\u5305\u5c31\u80fd\u5b8c\u6210,\u4e0d\u5b58\u5728\u4e71\u5e8f,\u4e22\u5305,\u91cd\u65b0\u89e3\u6790 \u4e00\u822c\u6765\u8bf4,UPD\u6027\u80fd\u4f18\u4e8eTCP,\u4f46\u662f\u53ef\u9760\u6027\u8981\u6c42\u9ad8\u7684\u573a\u5408\u8981\u9009\u62e9\u4f7f\u7528TCP\u534f\u8bae. \u534f\u8bae\u65cf \u00b6 AF\u8868\u793aaddress family ,\u7528\u6237socket()\u7b2c\u4e00\u4e2a\u53c2\u6570 \u540d\u79f0 \u542b\u4e49 AF_INET IPV4 AF_INET6 IPV6 AF_UNIX Unix Domain Socket,windows\u6ca1\u6709 \u5168\u53cc\u5de5 \u00b6 \u6307\u53ef\u4ee5\u540c\u65f6\u8fdb\u884c\u6570\u636e\u7684\u53cc\u5411\u4f20\u8f93,a\u2192b,b\u2192a\u662f\u77ac\u65f6\u540c\u6b65\u7684. \u53cc\u9053\u9a6c\u8def \u534a\u53cc\u5de5 \u00b6 \u5728\u4e00\u6bb5\u65f6\u95f4\u5185\u53ea\u6709\u4e00\u4e2a\u52a8\u4f5c\u53d1\u751f,\u5373ab\u53ef\u4ee5\u4e92\u4f20\u6570\u636e,\u4f46\u662f\u540c\u65f6\u53ea\u80fd\u6709\u4e00\u65b9\u53d1\u9001, \u4e00\u6761\u53cc\u5411\u7a84\u9a6c\u8def \u5355\u5de5 \u00b6 \u53ea\u5141\u8bb8a\u5411b\u53d1\u9001\u6570\u636e.\u800cb\u4e0d\u80fd\u5411a\u53d1\u9001. \u5355\u884c\u9053 \u8f6e\u8be2 \u00b6 \u5b9a\u4e49\uff1a\u5176\u5b9e\u5c31\u662f\u666e\u901a\u7684\u8f6e\u8be2\u3002\u6307\u5728\u7279\u5b9a\u7684\u7684\u65f6\u95f4\u95f4\u9694\uff08\u5982\u6bcf1\u79d2\uff09\uff0c\u7531\u6d4f\u89c8\u5668\u5bf9\u670d\u52a1\u5668\u53d1\u51faHTTP request\uff0c\u7136\u540e\u7531\u670d\u52a1\u5668\u8fd4\u56de\u6700\u65b0\u7684\u6570\u636e\u7ed9\u5ba2\u6237\u7aef\u7684\u6d4f\u89c8\u5668\u3002 \u5e94\u7528\u573a\u666f\uff1a\u4f20\u7edf\u7684web\u901a\u4fe1\u6a21\u5f0f\u3002\u540e\u53f0\u5904\u7406\u6570\u636e\uff0c\u9700\u8981\u4e00\u5b9a\u65f6\u95f4\uff0c\u524d\u7aef\u60f3\u8981\u77e5\u9053\u540e\u7aef\u7684\u5904\u7406\u7ed3\u679c\uff0c\u5c31\u8981\u4e0d\u5b9a\u65f6\u7684\u5411\u540e\u7aef\u53d1\u51fa\u8bf7\u6c42\u4ee5\u83b7\u5f97\u6700\u65b0\u60c5\u51b5\u3002 \u4f18\u70b9\uff1a\u524d\u540e\u7aef\u7a0b\u5e8f\u7f16\u5199\u6bd4\u8f83\u5bb9\u6613\u3002 \u7f3a\u70b9\uff1a\u8bf7\u6c42\u4e2d\u6709\u5927\u534a\u662f\u65e0\u7528\uff0c\u96be\u4e8e\u7ef4\u62a4\uff0c\u6d6a\u8d39\u5e26\u5bbd\u548c\u670d\u52a1\u5668\u8d44\u6e90\uff1b\u54cd\u5e94\u7684\u7ed3\u679c\u6ca1\u6709\u987a\u5e8f\uff08\u56e0\u4e3a\u662f\u5f02\u6b65\u8bf7\u6c42\uff0c\u5f53\u53d1\u9001\u7684\u8bf7\u6c42\u6ca1\u6709\u8fd4\u56de\u7ed3\u679c\u7684\u65f6\u5019\uff0c\u540e\u9762\u7684\u8bf7\u6c42\u53c8\u88ab\u53d1\u9001\u3002\u800c\u6b64\u65f6\u5982\u679c\u540e\u9762\u7684\u8bf7\u6c42\u6bd4\u524d\u9762\u7684\u8bf7 \u6c42\u8981\u5148\u8fd4\u56de\u7ed3\u679c\uff0c\u90a3\u4e48\u5f53\u524d\u9762\u7684\u8bf7\u6c42\u8fd4\u56de\u7ed3\u679c\u6570\u636e\u65f6\u5df2\u7ecf\u662f\u8fc7\u65f6\u65e0\u6548\u7684\u6570\u636e\u4e86\uff09\u3002 \u5b9e\u4f8b\uff1a\u9002\u4e8e\u5c0f\u578b\u5e94\u7528\u3002 \"\"\" \u8ba9\u5ba2\u6237\u7aef\u6d4f\u89c8\u5668\u5b9a\u65f6\u671d\u670d\u52a1\u7aef\u53d1\u9001\u8bf7\u6c42\u6570\u636e\u7684\u8bf7\u6c42(\u6bd4\u5982\u6bcf\u96945s\u4e00\u6b21) \u4e0d\u8db3\u4e4b\u5904 \u6d88\u606f\u5ef6\u8fdf\u660e\u663e \u6d88\u8017\u8d44\u6e90 \"\"\" \u957f\u8f6e\u8be2 \u00b6 \u5b9a\u4e49\uff1a\u5ba2\u6237\u7aef\u5411\u670d\u52a1\u5668\u53d1\u9001Ajax\u8bf7\u6c42\uff0c\u670d\u52a1\u5668\u63a5\u5230\u8bf7\u6c42\u540ehold\u4f4f\u8fde\u63a5\uff0c\u3002\u8bf7\u6c42\u5404\u81ea\u961f\u5217\u4e2d\u7684\u6570\u636e\uff0c\u5982\u679c\u6ca1\u6709\u6570\u636e\u5219\u4f1a\u963b\u585e\u4f46\u662f\u4e0d\u4f1a\u4e00\u76f4\u963b\u585e,\u5229\u7528timeout\u53c2\u6570\u52a0\u5f02\u5e38\u5904\u7406\u7684\u5f62\u5f0f\u6700\u591a\u963b\u585e30s\u4e4b\u540e\u8fd4\u56de\uff0c\u6d4f\u89c8\u5668\u5224\u65ad\u662f\u5426\u6709\u6570\u636e\uff0c\u6ca1\u6709\u5219\u7ee7\u7eed\u53d1\u9001.\u76f4\u5230\u6709\u65b0\u6d88\u606f\u624d\u8fd4\u56de\u54cd\u5e94\u4fe1\u606f\u5e76\u5173\u95ed\u8fde\u63a5\uff0c\u5ba2\u6237\u7aef\u5904\u7406\u5b8c\u54cd\u5e94\u4fe1\u606f\u540e\u518d\u5411\u670d\u52a1\u5668\u53d1\u9001\u65b0\u7684\u8bf7\u6c42 \u4f18\u70b9\uff1a\u5728\u65e0\u6d88\u606f\u7684\u60c5\u51b5\u4e0b\u4e0d\u4f1a\u9891\u7e41\u7684\u8bf7\u6c42\uff0c\u8017\u8d39\u8d44\u6e90\u5c0f\u3002 \u7f3a\u70b9\uff1a\u670d\u52a1\u5668hold\u8fde\u63a5\u4f1a\u6d88\u8017\u8d44\u6e90\uff0c\u8fd4\u56de\u6570\u636e\u987a\u5e8f\u65e0\u4fdd\u8bc1\uff0c\u96be\u4e8e\u7ba1\u7406\u7ef4\u62a4\u3002 \u5b9e\u4f8b\uff1aWebQQ\u3001Hi\u7f51\u9875\u7248\u3001Facebook IM\u3002 \"\"\" \u670d\u52a1\u7aef\u7ed9\u6bcf\u4e00\u4e2a\u7b2c\u4e00\u6b21\u6765\u94fe\u63a5\u7684\u5ba2\u6237\u7aef\u6d4f\u89c8\u5668\u521b\u5efa\u4e00\u4e2a\u961f\u5217\uff0c\u4e4b\u540e\u5ba2\u6237\u7aef\u6d4f\u89c8\u5668\u901a\u8fc7ajax\u671d\u5404\u81ea\u7684\u961f\u5217\u7d22\u8981\u6570\u636e\uff0c\u5982\u679c\u6ca1\u6709\u6570\u636e\u4f1a\u963b\u585e\u4f46\u662f\u4e0d\u4f1a\u4e00\u76f4\u963b\u585e(pending)\uff0c\u7528\u4e86timeout\u52a0\u5f02\u5e38\u5904\u7406\u7ecf\u8fc730s\u81ea\u52a8\u56de\u53bb\u7136\u540e\u518d\u6b21\u53d1\u8bf7\u6c42 \u73b0\u5bf9\u4e8e\u8f6e\u8be2 \u6d88\u606f\u6ca1\u6709\u5ef6\u8fdf \u8d44\u6e90\u635f\u8017\u8f83\u5c0f \"\"\"","title":"\u7f51\u7edc\u7f16\u7a0b"},{"location":"%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/#_1","text":"","title":"\u7f51\u7edc\u7f16\u7a0b"},{"location":"%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/#cs","text":"Client:\u5ba2\u6237\u7aef Server:\u670d\u52a1\u7aef \u4f18\u70b9:\u8f6f\u4ef6\u4f7f\u7528\u7a33\u5b9a,\u5e76\u4e14\u53ef\u4ee5\u8282\u7701\u7f51\u7edc\u8d44\u6e90. \u7f3a\u70b9: \u82e5\u7528\u6237\u60f3\u5728\u540c\u4e00\u4e2a\u8bbe\u5907\u4e0a\u4f7f\u7528\u591a\u4e2a\u8f6f\u4ef6,\u5fc5\u987b\u4e0b\u8f7d\u591a\u4e2a\u5ba2\u6237\u7aef \u8f6f\u4ef6\u7684\u6bcf\u4e00\u6b21\u66f4\u65b0,\u5ba2\u6237\u70b9\u90fd\u5fc5\u987b\u91cd\u65b0\u4e0b\u8f7d\u66f4\u65b0 C/S\u67b6\u6784\u7684\u8f6f\u4ef6: \u200b PC:QQ,Pycharm \u200b \u624b\u673a\u7aef:\u5fae\u4fe1,\u5403\u9e21","title":"C/S\u67b6\u6784"},{"location":"%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/#bs","text":"Browser:\u6d4f\u89c8\u5668 Server:\u670d\u52a1\u7aef \u4f18\u70b9: \u6d4f\u89c8\u5668\u5145\u5f53\u5ba2\u6237\u7aef,\u65e0\u9700\u7528\u6237\u4e0b\u8f7d\u591a\u4e2a\u8f6f\u4ef6,\u4e5f\u65e0\u9700\u7528\u6237\u4e0b\u8f7d\u66f4\u65b0\u8f6f\u4ef6\u7248\u672c \u76f4\u63a5\u5728\u7f51\u9875\u4e0a\u8bbf\u95ee\u9700\u8981\u4f7f\u7528\u7684\u8f6f\u4ef6 \u7f3a\u70b9: \u6d88\u8017\u7f51\u7edc\u8d44\u6e90\u8fc7\u5927,\u5f53\u7f51\u8def\u4e0d\u7a33\u5b9a\u65f6,\u8f6f\u4ef6\u7684\u4f7f\u7528\u4e5f\u4e0d\u7a33\u5b9a.","title":"B/S\u67b6\u6784:"},{"location":"%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/#tcp","text":"TCP\u662f\u4e00\u4e2a\u6d41\u5f0f\u534f\u8bae","title":"TCP\u534f\u8bae"},{"location":"%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/#tcp_1","text":"\u6b65\u9aa4: \u521b\u5efasocket\u5bf9\u8c61 \u7ed1\u5b9aIP\u5730\u5740address\u548c\u7aef\u53e3port.bind()\u65b9\u6cd5IPV4\u5730\u5740\u4e3a\u4e00\u4e2a\u4e8c\u5143\u7ec4('IP\u5730\u5740\u5b57\u7b26\u4e32;,port) \u5f00\u59cb\u76d1\u542c,\u5c06\u5728\u6307\u5b9a\u7684IP\u7684\u7aef\u53e3\u4e0a\u76d1\u542c,listen()\u65b9\u6cd5 \u83b7\u53d6\u7528\u4e8e\u4f20\u8f93\u7684socket\u5bf9\u8c61 socket.accept() \u2192 (socket object,address info) accept\u65b9\u6cd5\u9ed8\u8ba4==\u963b\u585e==\u7b49\u5f85\u5ba2\u6237\u7aef\u5efa\u7acb\u8fde\u63a5,\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684socket\u5bf9\u8c61\u548c\u5ba2\u6237\u7aef\u5730\u5740\u7684\u4e8c\u5143\u7ec4 \u5730\u5740\u662f\u8fdc\u7a0b\u5ba2\u6237\u7aef\u7684\u5730\u5740,IPv4\u4e2d\u4ed6\u662f\u4e00\u4e2a\u4e8c\u5143\u7ec4(clientaddr,port) \u63a5\u6536\u6570\u636e:recv(bufsize[,flags])\u4f7f\u7528\u7f13\u51b2\u533a\u63a5\u6536\u6570\u636e \u53d1\u9001\u6570\u636e:send(bytes)\u53d1\u9001\u6570\u636e","title":"TCP\u670d\u52a1\u7aef\u7f16\u7a0b"},{"location":"%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/#tcp_2","text":"\u6b65\u9aa4: \u521b\u5efasocket\u5bf9\u8c61 \u8fde\u63a5\u5230\u8fdc\u7aef\u670d\u52a1\u7aef\u7684IP\u548cport,connect()\u65b9\u6cd5 \u4f20\u8f93\u6570\u636e \u4f7f\u7528send,recv\u65b9\u6cd5\u53d1\u9001,\u63a5\u6536\u6570\u636e \u5173\u95ed\u8fde\u63a5,\u91ca\u653e\u8d44\u6e90","title":"TCP\u5ba2\u6237\u7aef\u7f16\u7a0b"},{"location":"%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/#_2","text":"seq\u8868\u793a\u5e8f\u5217\u53f7,ack\u662f\u786e\u8ba4\u53f7,SYN\u4e3a\u540c\u6b65\u4f4d \u4e09\u6b21\u63e1\u624b\u5efa\u8fde\u63a5 \u7b2c\u4e00\u6b21\u63e1\u624b\uff1a\u5ba2\u6237\u7aef\u4e3b\u673aA\u53d1\u9001\u4f4d\u7801\u4e3asyn\uff1d1\uff0c\u968f\u673a\u4ea7\u751fseq number=x\u7684\u6570\u636e\u5305\u5230\u670d\u52a1\u5668\uff0c\u5ba2\u6237\u7aef\u8fdb\u5165SYN_SEND\u72b6\u6001\uff0c\u7b49\u5f85\u670d\u52a1\u5668\u7684\u786e\u8ba4\uff1b\u4e3b\u673aB\u7531SYN=1\u77e5\u9053A\u8981\u6c42\u5efa\u7acb\u8fde\u63a5\u3002 \u7b2c\u4e8c\u6b21\u63e1\u624b\uff1a\u4e3b\u673aB\u6536\u5230\u8bf7\u6c42\u540e\u8981\u786e\u8ba4\u8fde\u63a5\u4fe1\u606f\uff0c\u5411A\u53d1\u9001ack number(\u4e3b\u673aA\u7684seq+1)\u3001syn=1\u3001ack=1\uff0c\u968f\u673a\u4ea7\u751fseq=y\u7684\u5305\uff0c\u6b64\u65f6\u670d\u52a1\u5668\u8fdb\u5165SYN_RECV\u72b6\u6001\u3002 \u7b2c\u4e09\u6b21\u63e1\u624b\uff1a\u4e3b\u673aA\u6536\u5230\u540e\u68c0\u67e5ack number\u662f\u5426\u6b63\u786e\uff0c\u5373\u7b2c\u4e00\u6b21\u53d1\u9001\u7684seq number+1\uff0c\u4ee5\u53ca\u4f4d\u7801ack\u662f\u5426\u4e3a1\uff0c\u82e5\u6b63\u786e\uff0c\u4e3b\u673aA\u4f1a\u518d\u53d1\u9001ack number(\u4e3b\u673aB\u7684seq+1)\u3001ack=1\uff0c\u4e3b\u673aB\u6536\u5230\u540e\u786e\u8ba4seq\u503c\u4e0eack=1\u5219\u8fde\u63a5\u5efa\u7acb\u6210\u529f\u3002\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u7aef\u90fd\u8fdb\u5165ESTABLISHED\u72b6\u6001\u3002","title":"\u4e09\u6b21\u63e1\u624b"},{"location":"%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/#_3","text":"\u670d\u52a1\u7aef\uff1a \u8be5TCP\u8fde\u63a5\u7684\u72b6\u6001\u4e3aSYN_RECV,\u5e76\u4e14\u4f1a\u6839\u636eTCP\u7684\u8d85\u65f6\u91cd\u4f20\u673a\u5236\uff0c\u4f1a\u7b49\u5f853\u79d2\u30016\u79d2\u300112\u79d2\u540e\u91cd\u65b0\u53d1\u9001SYN+ACK\u5305\uff0c\u4ee5\u4fbfClient\u91cd\u65b0\u53d1\u9001ACK\u5305\u3002\u800cServer\u91cd\u53d1SYN+ACK\u5305\u7684\u6b21\u6570\uff0c\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e/proc/sys/net/ipv4/tcp_synack_retries\u4fee\u6539\uff0c\u9ed8\u8ba4\u503c\u4e3a5\u3002\u5982\u679c\u91cd\u53d1\u6307\u5b9a\u6b21\u6570\u4e4b\u540e\uff0c\u4ecd\u7136\u672a\u6536\u5230\u5ba2\u6237\u7aef\u7684ACK\u5e94\u7b54\uff0c\u90a3\u4e48\u4e00\u6bb5\u65f6\u95f4\u540e\uff0c\u670d\u52a1\u7aef\u81ea\u52a8\u5173\u95ed\u8fd9\u4e2a\u8fde\u63a5\u3002 \u5ba2\u6237\u7aef\uff1a \u5ba2\u6237\u7aef\u5728\u63a5\u6536\u5230SYN+ACK\u5305\uff0c\u5b83\u7684TCP\u8fde\u63a5\u72b6\u6001\u5c31\u4e3aESTABLISHED\uff08\u5df2\u8fde\u63a5\uff09\uff0c\u8868\u793a\u8be5\u8fde\u63a5\u5df2\u7ecf\u5efa\u7acb\u3002\u90a3\u4e48\u5982\u679c\u7b2c\u4e09\u6b21\u63e1\u624b\u4e2d\u7684ACK\u5305\u4e22\u5931\u7684\u60c5\u51b5\u4e0b\uff0c\u5ba2\u6237\u7aef\u5411\u670d\u52a1\u7aef\u53d1\u9001\u6570\u636e\uff0c\u670d\u52a1\u7aef\u5c06\u4ee5RST\u5305(reset\u91cd\u7f6e)\u54cd\u5e94\uff0c\u624d\u80fd\u611f\u77e5\u5230\u670d\u52a1\u7aef\u7684\u9519\u8bef\u3002","title":"\u5982\u679c\u7b2c\u4e09\u6b21\u63e1\u624b\u4e22\u5931\u4e86\uff0c\u5ba2\u6237\u7aef\u670d\u52a1\u7aef\u4f1a\u5982\u4f55\u5904\u7406\uff1f"},{"location":"%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/#_4","text":"\u7b2c\u4e00\u6b21\u6325\u624b\uff1a\u4e3b\u673aA\uff08\u53ef\u4ee5\u662f\u5ba2\u6237\u7aef\uff0c\u4e5f\u53ef\u4ee5\u662f\u670d\u52a1\u5668\u7aef\uff09\uff0c\u8bbe\u7f6eSequence Number\u548cAcknowledgment Number\uff0c\u5411\u4e3b\u673aB\u53d1\u9001\u4e00\u4e2aFIN\u62a5\u6587\u6bb5\uff1b\u6b64\u65f6\uff0c\u4e3b\u673aA\u8fdb\u5165FIN_WAIT_1\u72b6\u6001\uff1b\u8fd9\u8868\u793a\u4e3b\u673aA\u6ca1\u6709\u6570\u636e\u8981\u53d1\u9001\u7ed9\u4e3b\u673aB\u4e86\u3002 \u7b2c\u4e8c\u6b21\u6325\u624b\uff1a\u4e3b\u673aB\u6536\u5230\u4e86\u4e3b\u673aA\u53d1\u9001\u7684FIN\u62a5\u6587\u6bb5\uff0c\u5411\u4e3b\u673aA\u56de\u4e00\u4e2aACK\u62a5\u6587\u6bb5\uff0cAcknowledgment Number\u4e3aSequence Number\u52a01\uff0c\u4e3b\u673a1\u8fdb\u5165FIN_WAIT_2\u72b6\u6001\uff1b\u4e3b\u673a2\u544a\u8bc9\u4e3b\u673aA\uff0c\u6211\u4e5f\u6ca1\u6709\u6570\u636e\u8981\u53d1\u9001\u4e86\uff0c\u53ef\u4ee5\u8fdb\u884c\u5173\u95ed\u8fde\u63a5\u4e86\u3002 \u7b2c\u4e09\u6b21\u6325\u624b\uff1a\u4e3b\u673aB\u5411\u4e3b\u673aA\u53d1\u9001FIN\u62a5\u6587\u6bb5\uff0c\u8bf7\u6c42\u5173\u95ed\u8fde\u63a5\uff0c\u540c\u65f6\u4e3b\u673aB\u8fdb\u5165CLOSE_WAIT\u72b6\u6001\u3002 \u7b2c\u56db\u6b21\u6325\u624b\uff1a\u4e3b\u673aA\u6536\u5230\u4e3b\u673aB\u53d1\u9001\u7684FIN\u62a5\u6587\u6bb5\uff0c\u5411\u4e3b\u673aB\u53d1\u9001ACK\u62a5\u6587\u6bb5\uff0c\u7136\u540e\u4e3b\u673aA\u8fdb\u5165TIME_WAIT\u72b6\u6001\uff1b\u4e3b\u673aB\u6536\u5230\u4e3b\u673aA\u7684ACK\u62a5\u6587\u6bb5\u4ee5\u540e\uff0c\u5c31\u5173\u95ed\u8fde\u63a5\uff1b\u6b64\u65f6\uff0c\u4e3b\u673aA\u7b49\u5f852MSL\u540e\u4f9d\u7136\u6ca1\u6709\u6536\u5230\u56de\u590d\uff0c\u5219\u8bc1\u660e\u4e3b\u673aB\u5df2\u6b63\u5e38\u5173\u95ed\uff0c\u90a3\u597d\uff0c\u4e3b\u673aA\u4e5f\u53ef\u4ee5\u5173\u95ed\u8fde\u63a5\u4e86\u3002","title":"\u56db\u6b21\u6325\u624b"},{"location":"%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/#udp","text":"UDP\u662f\u4e00\u79cd\u6570\u636e\u62a5\u4f20\u8f93\u534f\u8bae. \u4e0d\u9700\u8981\u5efa\u7acb\u53cc\u5411\u7ba1\u9053. \u4e0d\u4f1a\u7c98\u5305 \u5ba2\u6237\u7aef\u7ed9\u670d\u52a1\u7aef\u53d1\u9001\u6570\u636e,\u4e0d\u9700\u8981\u7b49\u5f85\u670d\u52a1\u7aef\u8fd4\u56de\u63a5\u6536\u6210\u529f. \u6570\u636e\u5bb9\u6613\u4e22\u5931,\u6570\u636e\u4e0d\u5b89\u5168. \u4f20\u8f93\u901f\u5ea6\u5feb -TCP:\u5c31\u597d\u6bd4\u5728\u6253\u7535\u8bdd -UDP:\u5c31\u597d\u6bd4\u5728\u53d1\u77ed\u4fe1","title":"UDP\u534f\u8bae"},{"location":"%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/#udp_1","text":"\u6b65\u9aa4: \u521b\u5efasocket\u5bf9\u8c61,socket.SOCK_DGRAM \u7ed1\u5b9aIP\u548cport,bind()\u65b9\u6cd5 \u4f20\u8f93\u6570\u636e \u63a5\u6536\u6570\u636e,socket.recvfrom(bufsize[,flags]),\u83b7\u5f97\u4e00\u4e2a\u4e8c\u5143\u7ec4(string,address) \u53d1\u9001\u6570\u636e,socket.sendto(string,address)\u53d1\u7ed9\u67d0\u5730\u5740\u67d0\u4fe1\u606f \u91ca\u653e\u8d44\u6e90","title":"UDP\u670d\u52a1\u7aef\u7f16\u7a0b"},{"location":"%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/#udp_2","text":"\u6b65\u9aa4: \u521b\u5efasocket\u5bf9\u8c61.socket.SOCK_DGRAM \u53d1\u9001\u6570\u636e,socket.sendto(string,address)\u53d1\u9001\u7ed9\u67d0\u5730\u5740\u67d0\u4fe1\u606f \u63a5\u6536\u6570\u636e,socket.recvfrom(bufsize[,flags]),\u83b7\u5f97\u4e00\u4e2a\u4e8c\u5143\u7ec4(string,address) \u91ca\u653e\u8d44\u6e90","title":"UDP\u5ba2\u6237\u7aef\u7f16\u7a0b"},{"location":"%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/#_5","text":"\u52a0\u4e00\u4e2aack\u673a\u5236\u548c\u5fc3\u8df3heartbeat.\u5fc3\u8df3,\u5c31\u662f\u4e00\u7aef\u5b9a\u65f6\u53d1\u9001\u7ed9\u53e6\u4e00\u7aef \u7684\u4fe1\u606f,\u4e00\u822c\u6bcf\u6b21\u6570\u636e\u8d8a\u5c11\u8d8a\u597d,\u5fc3\u8df3\u65f6\u95f4\u95f4\u9694\u81ea\u5df1\u8bbe\u5b9a.ack\u5373\u54cd\u5e94,\u4e00\u7aef\u6536\u5230\u53e6\u4e00\u7aef\u7684\u6d88\u606f\u540e\u8fd4\u56de\u7684\u4fe1\u606f. \u4e00\u822c\u6765\u8bf4\u662f\u5ba2\u6237\u7aef\u5b9a\u65f6\u53d1\u5f80\u670d\u52a1\u7aef\u7684,\u670d\u52a1\u7aef\u5e76\u4e0d\u9700\u8981ack\u56de\u590d\u5ba2\u6237\u7aef,\u53ea\u8981\u8bb0\u5f55\u8be5\u5ba2\u6237\u7aef\u8fd8\u6216\u8005\u5c31\u597d \u670d\u52a1\u7aef\u5f80\u5ba2\u6237\u7aef\u53d1\u4e00\u822c\u7528\u7684\u8f83\u5c11 \u4e5f\u53ef\u4ee5\u53cc\u5411\u53d1\u9001\u5fc3\u8df3,\u7528\u7684\u66f4\u5c11.","title":"\u5fc3\u8df3\u673a\u5236"},{"location":"%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/#udp_3","text":"UDP\u662f\u65e0\u8fde\u63a5\u534f\u8bae,\u57fa\u4e8e\u4e00\u4e0b\u5047\u8bbe\u65f6\u4f7f\u7528:\u7f51\u7edc\u8db3\u591f\u597d,\u6d88\u606f\u4e0d\u4f1a\u4e22\u5305,\u5305\u4e0d\u4f1a\u4e71\u5e8f \u4e00\u822c\u5e94\u7528\u4e8e \u89c6\u9891,\u97f3\u9891\u4f20\u8f93,,\u4e22\u70b9\u5305\u95ee\u9898\u4e0d\u5927,\u53ef\u4ee5\u901a\u8fc7\u91cd\u65b0\u53d1\u9001\u6765\u89e3\u51b3 dns\u534f\u8bae,\u6570\u636e\u5185\u5bb9\u5c0f,\u4e00\u4e2a\u5305\u5c31\u80fd\u5b8c\u6210,\u4e0d\u5b58\u5728\u4e71\u5e8f,\u4e22\u5305,\u91cd\u65b0\u89e3\u6790 \u4e00\u822c\u6765\u8bf4,UPD\u6027\u80fd\u4f18\u4e8eTCP,\u4f46\u662f\u53ef\u9760\u6027\u8981\u6c42\u9ad8\u7684\u573a\u5408\u8981\u9009\u62e9\u4f7f\u7528TCP\u534f\u8bae.","title":"UDP\u534f\u8bae\u7684\u5e94\u7528"},{"location":"%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/#_6","text":"AF\u8868\u793aaddress family ,\u7528\u6237socket()\u7b2c\u4e00\u4e2a\u53c2\u6570 \u540d\u79f0 \u542b\u4e49 AF_INET IPV4 AF_INET6 IPV6 AF_UNIX Unix Domain Socket,windows\u6ca1\u6709","title":"\u534f\u8bae\u65cf"},{"location":"%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/#_7","text":"\u6307\u53ef\u4ee5\u540c\u65f6\u8fdb\u884c\u6570\u636e\u7684\u53cc\u5411\u4f20\u8f93,a\u2192b,b\u2192a\u662f\u77ac\u65f6\u540c\u6b65\u7684. \u53cc\u9053\u9a6c\u8def","title":"\u5168\u53cc\u5de5"},{"location":"%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/#_8","text":"\u5728\u4e00\u6bb5\u65f6\u95f4\u5185\u53ea\u6709\u4e00\u4e2a\u52a8\u4f5c\u53d1\u751f,\u5373ab\u53ef\u4ee5\u4e92\u4f20\u6570\u636e,\u4f46\u662f\u540c\u65f6\u53ea\u80fd\u6709\u4e00\u65b9\u53d1\u9001, \u4e00\u6761\u53cc\u5411\u7a84\u9a6c\u8def","title":"\u534a\u53cc\u5de5"},{"location":"%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/#_9","text":"\u53ea\u5141\u8bb8a\u5411b\u53d1\u9001\u6570\u636e.\u800cb\u4e0d\u80fd\u5411a\u53d1\u9001. \u5355\u884c\u9053","title":"\u5355\u5de5"},{"location":"%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/#_10","text":"\u5b9a\u4e49\uff1a\u5176\u5b9e\u5c31\u662f\u666e\u901a\u7684\u8f6e\u8be2\u3002\u6307\u5728\u7279\u5b9a\u7684\u7684\u65f6\u95f4\u95f4\u9694\uff08\u5982\u6bcf1\u79d2\uff09\uff0c\u7531\u6d4f\u89c8\u5668\u5bf9\u670d\u52a1\u5668\u53d1\u51faHTTP request\uff0c\u7136\u540e\u7531\u670d\u52a1\u5668\u8fd4\u56de\u6700\u65b0\u7684\u6570\u636e\u7ed9\u5ba2\u6237\u7aef\u7684\u6d4f\u89c8\u5668\u3002 \u5e94\u7528\u573a\u666f\uff1a\u4f20\u7edf\u7684web\u901a\u4fe1\u6a21\u5f0f\u3002\u540e\u53f0\u5904\u7406\u6570\u636e\uff0c\u9700\u8981\u4e00\u5b9a\u65f6\u95f4\uff0c\u524d\u7aef\u60f3\u8981\u77e5\u9053\u540e\u7aef\u7684\u5904\u7406\u7ed3\u679c\uff0c\u5c31\u8981\u4e0d\u5b9a\u65f6\u7684\u5411\u540e\u7aef\u53d1\u51fa\u8bf7\u6c42\u4ee5\u83b7\u5f97\u6700\u65b0\u60c5\u51b5\u3002 \u4f18\u70b9\uff1a\u524d\u540e\u7aef\u7a0b\u5e8f\u7f16\u5199\u6bd4\u8f83\u5bb9\u6613\u3002 \u7f3a\u70b9\uff1a\u8bf7\u6c42\u4e2d\u6709\u5927\u534a\u662f\u65e0\u7528\uff0c\u96be\u4e8e\u7ef4\u62a4\uff0c\u6d6a\u8d39\u5e26\u5bbd\u548c\u670d\u52a1\u5668\u8d44\u6e90\uff1b\u54cd\u5e94\u7684\u7ed3\u679c\u6ca1\u6709\u987a\u5e8f\uff08\u56e0\u4e3a\u662f\u5f02\u6b65\u8bf7\u6c42\uff0c\u5f53\u53d1\u9001\u7684\u8bf7\u6c42\u6ca1\u6709\u8fd4\u56de\u7ed3\u679c\u7684\u65f6\u5019\uff0c\u540e\u9762\u7684\u8bf7\u6c42\u53c8\u88ab\u53d1\u9001\u3002\u800c\u6b64\u65f6\u5982\u679c\u540e\u9762\u7684\u8bf7\u6c42\u6bd4\u524d\u9762\u7684\u8bf7 \u6c42\u8981\u5148\u8fd4\u56de\u7ed3\u679c\uff0c\u90a3\u4e48\u5f53\u524d\u9762\u7684\u8bf7\u6c42\u8fd4\u56de\u7ed3\u679c\u6570\u636e\u65f6\u5df2\u7ecf\u662f\u8fc7\u65f6\u65e0\u6548\u7684\u6570\u636e\u4e86\uff09\u3002 \u5b9e\u4f8b\uff1a\u9002\u4e8e\u5c0f\u578b\u5e94\u7528\u3002 \"\"\" \u8ba9\u5ba2\u6237\u7aef\u6d4f\u89c8\u5668\u5b9a\u65f6\u671d\u670d\u52a1\u7aef\u53d1\u9001\u8bf7\u6c42\u6570\u636e\u7684\u8bf7\u6c42(\u6bd4\u5982\u6bcf\u96945s\u4e00\u6b21) \u4e0d\u8db3\u4e4b\u5904 \u6d88\u606f\u5ef6\u8fdf\u660e\u663e \u6d88\u8017\u8d44\u6e90 \"\"\"","title":"\u8f6e\u8be2"},{"location":"%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/#_11","text":"\u5b9a\u4e49\uff1a\u5ba2\u6237\u7aef\u5411\u670d\u52a1\u5668\u53d1\u9001Ajax\u8bf7\u6c42\uff0c\u670d\u52a1\u5668\u63a5\u5230\u8bf7\u6c42\u540ehold\u4f4f\u8fde\u63a5\uff0c\u3002\u8bf7\u6c42\u5404\u81ea\u961f\u5217\u4e2d\u7684\u6570\u636e\uff0c\u5982\u679c\u6ca1\u6709\u6570\u636e\u5219\u4f1a\u963b\u585e\u4f46\u662f\u4e0d\u4f1a\u4e00\u76f4\u963b\u585e,\u5229\u7528timeout\u53c2\u6570\u52a0\u5f02\u5e38\u5904\u7406\u7684\u5f62\u5f0f\u6700\u591a\u963b\u585e30s\u4e4b\u540e\u8fd4\u56de\uff0c\u6d4f\u89c8\u5668\u5224\u65ad\u662f\u5426\u6709\u6570\u636e\uff0c\u6ca1\u6709\u5219\u7ee7\u7eed\u53d1\u9001.\u76f4\u5230\u6709\u65b0\u6d88\u606f\u624d\u8fd4\u56de\u54cd\u5e94\u4fe1\u606f\u5e76\u5173\u95ed\u8fde\u63a5\uff0c\u5ba2\u6237\u7aef\u5904\u7406\u5b8c\u54cd\u5e94\u4fe1\u606f\u540e\u518d\u5411\u670d\u52a1\u5668\u53d1\u9001\u65b0\u7684\u8bf7\u6c42 \u4f18\u70b9\uff1a\u5728\u65e0\u6d88\u606f\u7684\u60c5\u51b5\u4e0b\u4e0d\u4f1a\u9891\u7e41\u7684\u8bf7\u6c42\uff0c\u8017\u8d39\u8d44\u6e90\u5c0f\u3002 \u7f3a\u70b9\uff1a\u670d\u52a1\u5668hold\u8fde\u63a5\u4f1a\u6d88\u8017\u8d44\u6e90\uff0c\u8fd4\u56de\u6570\u636e\u987a\u5e8f\u65e0\u4fdd\u8bc1\uff0c\u96be\u4e8e\u7ba1\u7406\u7ef4\u62a4\u3002 \u5b9e\u4f8b\uff1aWebQQ\u3001Hi\u7f51\u9875\u7248\u3001Facebook IM\u3002 \"\"\" \u670d\u52a1\u7aef\u7ed9\u6bcf\u4e00\u4e2a\u7b2c\u4e00\u6b21\u6765\u94fe\u63a5\u7684\u5ba2\u6237\u7aef\u6d4f\u89c8\u5668\u521b\u5efa\u4e00\u4e2a\u961f\u5217\uff0c\u4e4b\u540e\u5ba2\u6237\u7aef\u6d4f\u89c8\u5668\u901a\u8fc7ajax\u671d\u5404\u81ea\u7684\u961f\u5217\u7d22\u8981\u6570\u636e\uff0c\u5982\u679c\u6ca1\u6709\u6570\u636e\u4f1a\u963b\u585e\u4f46\u662f\u4e0d\u4f1a\u4e00\u76f4\u963b\u585e(pending)\uff0c\u7528\u4e86timeout\u52a0\u5f02\u5e38\u5904\u7406\u7ecf\u8fc730s\u81ea\u52a8\u56de\u53bb\u7136\u540e\u518d\u6b21\u53d1\u8bf7\u6c42 \u73b0\u5bf9\u4e8e\u8f6e\u8be2 \u6d88\u606f\u6ca1\u6709\u5ef6\u8fdf \u8d44\u6e90\u635f\u8017\u8f83\u5c0f \"\"\"","title":"\u957f\u8f6e\u8be2"}]}